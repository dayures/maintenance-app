import { r as react, G as propTypes$5, aN as shallowEqual_1, aO as warning_1$1, J as classCallCheck$3, K as createClass$2, L as possibleConstructorReturn$3, N as inherits$3, R as getPrototypeOf$1, aP as objectWithoutProperties$2, Q as simpleAssign, Z as _extends$3, aQ as reactDom, aR as keycode, aS as TransitionGroup, aT as toArray, aU as toConsumableArray, aV as _ctx, aW as _iterCall, aX as _isArrayIter, aY as _anObject, aZ as _toLength, a_ as core_getIteratorMethod, a$ as _wks, b0 as _aFunction, b1 as _cof, b2 as _html, b3 as _domCreate, b4 as _global, b5 as _isObject, b6 as _hide, b7 as _core, b8 as _objectDp, b9 as _descriptors, ba as _setToStringTag, bb as _iterDetect, bc as _classof, bd as _export, be as _library, bf as getDefaultExportFromCjs, bg as commonjsGlobal, P as PropTypes$2, bh as _Object$assign, bi as _default$15, bj as _default$16, bk as _default$17, bl as _default$18, bm as _Object$getPrototypeOf, bn as _default$19, W as keys$5, bo as lodash_throttle, X as _typeof$6, bp as defineProperty$7, bq as flex, br as flexboxIE, bs as flexboxOld, bt as gradient, bu as sizing, bv as transition, bw as calc, bx as flex$1, by as flexboxIE$1, bz as flexboxOld$1, bA as gradient$1, bB as sizing$1, bC as transition$1, bD as calc$1, bE as createPrefixer, bF as createPrefixer$1, bG as lodash_merge, bH as slicedToArray, bI as _default$1a, p as log, O as Observable, D as classes, bJ as _Symbol$1, bK as ReplaySubject, bL as _Object$keys, bM as getFirstDateOfWeek, bN as is53WeekISOYear, bO as _default$1b, bP as Subject_2, bQ as debounce, bR as timer_1, bS as _default$1c } from './index-44839b1a.js';

var Dialog$4 = {};

var reactEventListener_cjs$1 = {};

function _classCallCheck$5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var classCallCheck$2 = _classCallCheck$5;

function _defineProperties$1(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass$3(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties$1(Constructor, staticProps);
  return Constructor;
}

var createClass$1 = _createClass$3;

function _typeof2$5(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2$5 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2$5 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2$5(obj); }

function _typeof$5(obj) {
  if (typeof Symbol === "function" && _typeof2$5(Symbol.iterator) === "symbol") {
    _typeof_1$1 = _typeof$5 = function _typeof(obj) {
      return _typeof2$5(obj);
    };
  } else {
    _typeof_1$1 = _typeof$5 = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2$5(obj);
    };
  }

  return _typeof$5(obj);
}

var _typeof_1$1 = _typeof$5;

function _assertThisInitialized$1(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var assertThisInitialized$3 = _assertThisInitialized$1;

var _typeof$4 = _typeof_1$1;

var assertThisInitialized$2 = assertThisInitialized$3;

function _possibleConstructorReturn$5(self, call) {
  if (call && (_typeof$4(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized$2(self);
}

var possibleConstructorReturn$2 = _possibleConstructorReturn$5;

function _inherits$5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var inherits$2 = _inherits$5;

function _objectWithoutProperties$3(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties$1 = _objectWithoutProperties$3;

function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var defineProperty$6 = _defineProperty$1;

var defineProperty$5 = defineProperty$6;

function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty$5(target, key, source[key]);
    });
  }

  return target;
}

var objectSpread = _objectSpread$1;

Object.defineProperty(reactEventListener_cjs$1, '__esModule', { value: true });

function _interopDefault$1 (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _classCallCheck$4 = _interopDefault$1(classCallCheck$2);
var _createClass$2 = _interopDefault$1(createClass$1);
var _possibleConstructorReturn$4 = _interopDefault$1(possibleConstructorReturn$2);
var _inherits$4 = _interopDefault$1(inherits$2);
var _typeof$3 = _interopDefault$1(_typeof_1$1);
var _objectWithoutProperties$2 = _interopDefault$1(objectWithoutProperties$1);
var _objectSpread = _interopDefault$1(objectSpread);
var React$1 = _interopDefault$1(react);
var PropTypes$1 = _interopDefault$1(propTypes$5.exports);
var shallowEqual$2 = _interopDefault$1(shallowEqual_1);
var warning$2 = _interopDefault$1(warning_1$1);

function defineProperty$4(object, property, attr) {
  return Object.defineProperty(object, property, attr);
} // Passive options
// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js


var passiveOption$1 = function () {
  var cache = null;
  return function () {
    if (cache !== null) {
      return cache;
    }

    var supportsPassiveOption = false;

    try {
      window.addEventListener('test', null, defineProperty$4({}, 'passive', {
        get: function get() {
          supportsPassiveOption = true;
        }
      }));
    } catch (err) {//
    }

    cache = supportsPassiveOption;
    return supportsPassiveOption;
  }();
}();

var defaultEventOptions$1 = {
  capture: false,
  passive: false
};

function mergeDefaultEventOptions$1(options) {
  return _objectSpread({}, defaultEventOptions$1, options);
}

function getEventListenerArgs$1(eventName, callback, options) {
  var args = [eventName, callback];
  args.push(passiveOption$1 ? options : options.capture);
  return args;
}

function on$1(target, eventName, callback, options) {
  // eslint-disable-next-line prefer-spread
  target.addEventListener.apply(target, getEventListenerArgs$1(eventName, callback, options));
}

function off$1(target, eventName, callback, options) {
  // eslint-disable-next-line prefer-spread
  target.removeEventListener.apply(target, getEventListenerArgs$1(eventName, callback, options));
}

function forEachListener$1(props, iteratee) {
  props.children;
      props.target;
      var eventProps = _objectWithoutProperties$2(props, ["children", "target"]);

  Object.keys(eventProps).forEach(function (name) {
    if (name.substring(0, 2) !== 'on') {
      return;
    }

    var prop = eventProps[name];

    var type = _typeof$3(prop);

    var isObject = type === 'object';
    var isFunction = type === 'function';

    if (!isObject && !isFunction) {
      return;
    }

    var capture = name.substr(-7).toLowerCase() === 'capture';
    var eventName = name.substring(2).toLowerCase();
    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;

    if (isObject) {
      iteratee(eventName, prop.handler, prop.options);
    } else {
      iteratee(eventName, prop, mergeDefaultEventOptions$1({
        capture: capture
      }));
    }
  });
}

function withOptions$1(handler, options) {
  warning$2(options, 'react-event-listener: should be specified options in withOptions.') ;
  return {
    handler: handler,
    options: mergeDefaultEventOptions$1(options)
  };
}

var EventListener$1 =
/*#__PURE__*/
function (_React$Component) {
  _inherits$4(EventListener, _React$Component);

  function EventListener() {
    _classCallCheck$4(this, EventListener);

    return _possibleConstructorReturn$4(this, (EventListener.__proto__ || Object.getPrototypeOf(EventListener)).apply(this, arguments));
  }

  _createClass$2(EventListener, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.addListeners();
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !shallowEqual$2(this.props, nextProps);
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate() {
      this.removeListeners();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.addListeners();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.removeListeners();
    }
  }, {
    key: "addListeners",
    value: function addListeners() {
      this.applyListeners(on$1);
    }
  }, {
    key: "removeListeners",
    value: function removeListeners() {
      this.applyListeners(off$1);
    }
  }, {
    key: "applyListeners",
    value: function applyListeners(onOrOff) {
      var target = this.props.target;

      if (target) {
        var element = target;

        if (typeof target === 'string') {
          element = window[target];
        }

        forEachListener$1(this.props, onOrOff.bind(null, element));
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children || null;
    }
  }]);

  return EventListener;
}(React$1.Component);

EventListener$1.propTypes = {
  /**
   * You can provide a single child too.
   */
  children: PropTypes$1.node,

  /**
   * The DOM target to listen to.
   */
  target: PropTypes$1.oneOfType([PropTypes$1.object, PropTypes$1.string]).isRequired
} ;

reactEventListener_cjs$1.withOptions = withOptions$1;
reactEventListener_cjs$1.default = EventListener$1;

var transitions$1 = {};

Object.defineProperty(transitions$1, "__esModule", {
  value: true
});
transitions$1.default = {

  easeOutFunction: 'cubic-bezier(0.23, 1, 0.32, 1)',
  easeInOutFunction: 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',

  easeOut: function easeOut(duration, property, delay, easeFunction) {
    easeFunction = easeFunction || this.easeOutFunction;

    if (property && Object.prototype.toString.call(property) === '[object Array]') {
      var transitions = '';
      for (var i = 0; i < property.length; i++) {
        if (transitions) transitions += ',';
        transitions += this.create(duration, property[i], delay, easeFunction);
      }

      return transitions;
    } else {
      return this.create(duration, property, delay, easeFunction);
    }
  },
  create: function create(duration, property, delay, easeFunction) {
    duration = duration || '450ms';
    property = property || 'all';
    delay = delay || '0ms';
    easeFunction = easeFunction || 'linear';

    return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;
  }
};

var Overlay$3 = {};

var AutoLockScrolling$3 = {};

Object.defineProperty(AutoLockScrolling$3, "__esModule", {
  value: true
});

var _getPrototypeOf$25 = getPrototypeOf$1.exports;

var _getPrototypeOf2$23 = _interopRequireDefault$4y(_getPrototypeOf$25);

var _classCallCheck2$26 = classCallCheck$3;

var _classCallCheck3$26 = _interopRequireDefault$4y(_classCallCheck2$26);

var _createClass2$25 = createClass$2;

var _createClass3$25 = _interopRequireDefault$4y(_createClass2$25);

var _possibleConstructorReturn2$23 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$23 = _interopRequireDefault$4y(_possibleConstructorReturn2$23);

var _inherits2$23 = inherits$3;

var _inherits3$23 = _interopRequireDefault$4y(_inherits2$23);

var _react$3l = react;

var _propTypes$2n = propTypes$5.exports;

var _propTypes2$2n = _interopRequireDefault$4y(_propTypes$2n);

function _interopRequireDefault$4y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var originalBodyOverflow$1 = null;
var lockingCounter$1 = 0;

var AutoLockScrolling$2 = function (_Component) {
  (0, _inherits3$23.default)(AutoLockScrolling, _Component);

  function AutoLockScrolling() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$26.default)(this, AutoLockScrolling);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$23.default)(this, (_ref = AutoLockScrolling.__proto__ || (0, _getPrototypeOf2$23.default)(AutoLockScrolling)).call.apply(_ref, [this].concat(args))), _this), _this.locked = false, _temp), (0, _possibleConstructorReturn3$23.default)(_this, _ret);
  }

  (0, _createClass3$25.default)(AutoLockScrolling, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.lock === true) {
        this.preventScrolling();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.lock !== nextProps.lock) {
        if (nextProps.lock) {
          this.preventScrolling();
        } else {
          this.allowScrolling();
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.allowScrolling();
    }

    // force to only lock/unlock once

  }, {
    key: 'preventScrolling',
    value: function preventScrolling() {
      if (this.locked === true) {
        return;
      }

      lockingCounter$1 = lockingCounter$1 + 1;
      this.locked = true;

      // only lock the first time the component is mounted.
      if (lockingCounter$1 === 1) {
        var body = document.getElementsByTagName('body')[0];
        originalBodyOverflow$1 = body.style.overflow;
        body.style.overflow = 'hidden';
      }
    }
  }, {
    key: 'allowScrolling',
    value: function allowScrolling() {
      if (this.locked === true) {
        lockingCounter$1 = lockingCounter$1 - 1;
        this.locked = false;
      }

      if (lockingCounter$1 === 0 && originalBodyOverflow$1 !== null) {
        var body = document.getElementsByTagName('body')[0];
        body.style.overflow = originalBodyOverflow$1 || '';
        originalBodyOverflow$1 = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return AutoLockScrolling;
}(_react$3l.Component);

AutoLockScrolling$2.propTypes = {
  lock: _propTypes2$2n.default.bool.isRequired
} ;
AutoLockScrolling$3.default = AutoLockScrolling$2;

Object.defineProperty(Overlay$3, "__esModule", {
  value: true
});

var _extends2$1I = _extends$3;

var _extends3$1I = _interopRequireDefault$4x(_extends2$1I);

var _objectWithoutProperties2$1G = objectWithoutProperties$2;

var _objectWithoutProperties3$1G = _interopRequireDefault$4x(_objectWithoutProperties2$1G);

var _getPrototypeOf$24 = getPrototypeOf$1.exports;

var _getPrototypeOf2$22 = _interopRequireDefault$4x(_getPrototypeOf$24);

var _classCallCheck2$25 = classCallCheck$3;

var _classCallCheck3$25 = _interopRequireDefault$4x(_classCallCheck2$25);

var _createClass2$24 = createClass$2;

var _createClass3$24 = _interopRequireDefault$4x(_createClass2$24);

var _possibleConstructorReturn2$22 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$22 = _interopRequireDefault$4x(_possibleConstructorReturn2$22);

var _inherits2$22 = inherits$3;

var _inherits3$22 = _interopRequireDefault$4x(_inherits2$22);

var _simpleAssign$1Z = simpleAssign;

var _simpleAssign2$1Z = _interopRequireDefault$4x(_simpleAssign$1Z);

var _react$3k = react;

var _react2$3c = _interopRequireDefault$4x(_react$3k);

var _propTypes$2m = propTypes$5.exports;

var _propTypes2$2m = _interopRequireDefault$4x(_propTypes$2m);

var _transitions$X = transitions$1;

var _transitions2$X = _interopRequireDefault$4x(_transitions$X);

var _AutoLockScrolling$1 = AutoLockScrolling$3;

var _AutoLockScrolling2$1 = _interopRequireDefault$4x(_AutoLockScrolling$1);

function _interopRequireDefault$4x(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1n(props, context) {
  var overlay = context.muiTheme.overlay;


  var style = {
    root: {
      position: 'fixed',
      height: '100%',
      width: '100%',
      top: 0,
      left: '-100%',
      opacity: 0,
      backgroundColor: overlay.backgroundColor,
      WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // Remove mobile color flashing (deprecated)

      // Two ways to promote overlay to its own render layer
      willChange: 'opacity',
      transform: 'translateZ(0)',

      transition: props.transitionEnabled && _transitions2$X.default.easeOut('0ms', 'left', '400ms') + ', ' + _transitions2$X.default.easeOut('400ms', 'opacity')
    }
  };

  if (props.show) {
    (0, _simpleAssign2$1Z.default)(style.root, {
      left: 0,
      opacity: 1,
      transition: _transitions2$X.default.easeOut('0ms', 'left') + ', ' + _transitions2$X.default.easeOut('400ms', 'opacity')
    });
  }

  return style;
}

var Overlay$2 = function (_Component) {
  (0, _inherits3$22.default)(Overlay, _Component);

  function Overlay() {
    (0, _classCallCheck3$25.default)(this, Overlay);
    return (0, _possibleConstructorReturn3$22.default)(this, (Overlay.__proto__ || (0, _getPrototypeOf2$22.default)(Overlay)).apply(this, arguments));
  }

  (0, _createClass3$24.default)(Overlay, [{
    key: 'setOpacity',
    value: function setOpacity(opacity) {
      this.refs.overlay.style.opacity = opacity;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          autoLockScrolling = _props.autoLockScrolling,
          show = _props.show,
          style = _props.style;
          _props.transitionEnabled;
          var other = (0, _objectWithoutProperties3$1G.default)(_props, ['autoLockScrolling', 'show', 'style', 'transitionEnabled']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1n(this.props, this.context);

      return _react2$3c.default.createElement(
        'div',
        (0, _extends3$1I.default)({}, other, { ref: 'overlay', style: prepareStyles((0, _simpleAssign2$1Z.default)(styles.root, style)) }),
        autoLockScrolling && _react2$3c.default.createElement(_AutoLockScrolling2$1.default, { lock: show })
      );
    }
  }]);
  return Overlay;
}(_react$3k.Component);

Overlay$2.defaultProps = {
  autoLockScrolling: true,
  style: {},
  transitionEnabled: true
};
Overlay$2.contextTypes = {
  muiTheme: _propTypes2$2m.default.object.isRequired
};
Overlay$2.propTypes = {
  autoLockScrolling: _propTypes2$2m.default.bool,
  show: _propTypes2$2m.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2m.default.object,
  transitionEnabled: _propTypes2$2m.default.bool
} ;
Overlay$3.default = Overlay$2;

var RenderToLayer$3 = {};

var dom$1 = {};

Object.defineProperty(dom$1, "__esModule", {
  value: true
});
dom$1.default = {
  isDescendant: function isDescendant(parent, child) {
    var node = child.parentNode;

    while (node !== null) {
      if (node === parent) return true;
      node = node.parentNode;
    }

    return false;
  },
  offset: function offset(el) {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top + document.body.scrollTop,
      left: rect.left + document.body.scrollLeft
    };
  }
};

Object.defineProperty(RenderToLayer$3, "__esModule", {
  value: true
});

var _getPrototypeOf$23 = getPrototypeOf$1.exports;

var _getPrototypeOf2$21 = _interopRequireDefault$4w(_getPrototypeOf$23);

var _classCallCheck2$24 = classCallCheck$3;

var _classCallCheck3$24 = _interopRequireDefault$4w(_classCallCheck2$24);

var _createClass2$23 = createClass$2;

var _createClass3$23 = _interopRequireDefault$4w(_createClass2$23);

var _possibleConstructorReturn2$21 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$21 = _interopRequireDefault$4w(_possibleConstructorReturn2$21);

var _inherits2$21 = inherits$3;

var _inherits3$21 = _interopRequireDefault$4w(_inherits2$21);

var _react$3j = react;

var _propTypes$2l = propTypes$5.exports;

var _propTypes2$2l = _interopRequireDefault$4w(_propTypes$2l);

var _reactDom$w = reactDom;

var _dom$3 = dom$1;

var _dom2$3 = _interopRequireDefault$4w(_dom$3);

function _interopRequireDefault$4w(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// heavily inspired by https://github.com/Khan/react-components/blob/master/js/layered-component-mixin.jsx
var RenderToLayer$2 = function (_Component) {
  (0, _inherits3$21.default)(RenderToLayer, _Component);

  function RenderToLayer() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$24.default)(this, RenderToLayer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$21.default)(this, (_ref = RenderToLayer.__proto__ || (0, _getPrototypeOf2$21.default)(RenderToLayer)).call.apply(_ref, [this].concat(args))), _this), _this.onClickAway = function (event) {
      if (event.defaultPrevented) {
        return;
      }

      if (!_this.props.componentClickAway) {
        return;
      }

      if (!_this.props.open) {
        return;
      }

      var el = _this.layer;
      if (event.target !== el && event.target === window || document.documentElement.contains(event.target) && !_dom2$3.default.isDescendant(el, event.target)) {
        _this.props.componentClickAway(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$21.default)(_this, _ret);
  }

  (0, _createClass3$23.default)(RenderToLayer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.renderLayer();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.renderLayer();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unrenderLayer();
    }
  }, {
    key: 'getLayer',
    value: function getLayer() {
      return this.layer;
    }
  }, {
    key: 'unrenderLayer',
    value: function unrenderLayer() {
      if (!this.layer) {
        return;
      }

      if (this.props.useLayerForClickAway) {
        this.layer.style.position = 'relative';
        this.layer.removeEventListener('touchstart', this.onClickAway);
        this.layer.removeEventListener('click', this.onClickAway);
      } else {
        window.removeEventListener('touchstart', this.onClickAway);
        window.removeEventListener('click', this.onClickAway);
      }

      (0, _reactDom$w.unmountComponentAtNode)(this.layer);
      document.body.removeChild(this.layer);
      this.layer = null;
    }

    /**
     * By calling this method in componentDidMount() and
     * componentDidUpdate(), you're effectively creating a "wormhole" that
     * funnels React's hierarchical updates through to a DOM node on an
     * entirely different part of the page.
     */

  }, {
    key: 'renderLayer',
    value: function renderLayer() {
      var _this2 = this;

      var _props = this.props,
          open = _props.open,
          render = _props.render;


      if (open) {
        if (!this.layer) {
          this.layer = document.createElement('div');
          document.body.appendChild(this.layer);

          if (this.props.useLayerForClickAway) {
            this.layer.addEventListener('touchstart', this.onClickAway);
            this.layer.addEventListener('click', this.onClickAway);
            this.layer.style.position = 'fixed';
            this.layer.style.top = 0;
            this.layer.style.bottom = 0;
            this.layer.style.left = 0;
            this.layer.style.right = 0;
            this.layer.style.zIndex = this.context.muiTheme.zIndex.layer;
          } else {
            setTimeout(function () {
              window.addEventListener('touchstart', _this2.onClickAway);
              window.addEventListener('click', _this2.onClickAway);
            }, 0);
          }
        }

        var layerElement = render();
        this.layerElement = (0, _reactDom$w.unstable_renderSubtreeIntoContainer)(this, layerElement, this.layer);
      } else {
        this.unrenderLayer();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return RenderToLayer;
}(_react$3j.Component);

RenderToLayer$2.defaultProps = {
  useLayerForClickAway: true
};
RenderToLayer$2.contextTypes = {
  muiTheme: _propTypes2$2l.default.object.isRequired
};
RenderToLayer$2.propTypes = {
  componentClickAway: _propTypes2$2l.default.func,
  open: _propTypes2$2l.default.bool.isRequired,
  render: _propTypes2$2l.default.func.isRequired,
  useLayerForClickAway: _propTypes2$2l.default.bool
} ;
RenderToLayer$3.default = RenderToLayer$2;

var Paper$5 = {};

var Paper$4 = {};

var propTypes$4 = {};

Object.defineProperty(propTypes$4, "__esModule", {
  value: true
});

var _propTypes$2k = propTypes$5.exports;

var _propTypes2$2k = _interopRequireDefault$4v(_propTypes$2k);

function _interopRequireDefault$4v(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var horizontal$1 = _propTypes2$2k.default.oneOf(['left', 'middle', 'right']);
var vertical$1 = _propTypes2$2k.default.oneOf(['top', 'center', 'bottom']);

propTypes$4.default = {

  corners: _propTypes2$2k.default.oneOf(['bottom-left', 'bottom-right', 'top-left', 'top-right']),

  horizontal: horizontal$1,

  vertical: vertical$1,

  origin: _propTypes2$2k.default.shape({
    horizontal: horizontal$1,
    vertical: vertical$1
  }),

  cornersAndCenter: _propTypes2$2k.default.oneOf(['bottom-center', 'bottom-left', 'bottom-right', 'top-center', 'top-left', 'top-right']),

  stringOrNumber: _propTypes2$2k.default.oneOfType([_propTypes2$2k.default.string, _propTypes2$2k.default.number]),

  zDepth: _propTypes2$2k.default.oneOf([0, 1, 2, 3, 4, 5])

};

Object.defineProperty(Paper$4, "__esModule", {
  value: true
});

var _extends2$1H = _extends$3;

var _extends3$1H = _interopRequireDefault$4u(_extends2$1H);

var _objectWithoutProperties2$1F = objectWithoutProperties$2;

var _objectWithoutProperties3$1F = _interopRequireDefault$4u(_objectWithoutProperties2$1F);

var _getPrototypeOf$22 = getPrototypeOf$1.exports;

var _getPrototypeOf2$20 = _interopRequireDefault$4u(_getPrototypeOf$22);

var _classCallCheck2$23 = classCallCheck$3;

var _classCallCheck3$23 = _interopRequireDefault$4u(_classCallCheck2$23);

var _createClass2$22 = createClass$2;

var _createClass3$22 = _interopRequireDefault$4u(_createClass2$22);

var _possibleConstructorReturn2$20 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$20 = _interopRequireDefault$4u(_possibleConstructorReturn2$20);

var _inherits2$20 = inherits$3;

var _inherits3$20 = _interopRequireDefault$4u(_inherits2$20);

var _simpleAssign$1Y = simpleAssign;

var _simpleAssign2$1Y = _interopRequireDefault$4u(_simpleAssign$1Y);

var _react$3i = react;

var _react2$3b = _interopRequireDefault$4u(_react$3i);

var _propTypes$2j = propTypes$5.exports;

var _propTypes2$2j = _interopRequireDefault$4u(_propTypes$2j);

var _propTypes3$k = propTypes$4;

var _propTypes4$k = _interopRequireDefault$4u(_propTypes3$k);

var _transitions$W = transitions$1;

var _transitions2$W = _interopRequireDefault$4u(_transitions$W);

function _interopRequireDefault$4u(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1m(props, context) {
  var rounded = props.rounded,
      circle = props.circle,
      transitionEnabled = props.transitionEnabled,
      zDepth = props.zDepth;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      paper = _context$muiTheme.paper,
      borderRadius = _context$muiTheme.borderRadius;


  return {
    root: {
      color: paper.color,
      backgroundColor: paper.backgroundColor,
      transition: transitionEnabled && _transitions2$W.default.easeOut(),
      boxSizing: 'border-box',
      fontFamily: baseTheme.fontFamily,
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      boxShadow: paper.zDepthShadows[zDepth - 1], // No shadow for 0 depth papers
      borderRadius: circle ? '50%' : rounded ? borderRadius : '0px'
    }
  };
}

var Paper$3 = function (_Component) {
  (0, _inherits3$20.default)(Paper, _Component);

  function Paper() {
    (0, _classCallCheck3$23.default)(this, Paper);
    return (0, _possibleConstructorReturn3$20.default)(this, (Paper.__proto__ || (0, _getPrototypeOf2$20.default)(Paper)).apply(this, arguments));
  }

  (0, _createClass3$22.default)(Paper, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.circle;
          _props.rounded;
          var style = _props.style;
          _props.transitionEnabled;
          _props.zDepth;
          var other = (0, _objectWithoutProperties3$1F.default)(_props, ['children', 'circle', 'rounded', 'style', 'transitionEnabled', 'zDepth']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1m(this.props, this.context);

      return _react2$3b.default.createElement(
        'div',
        (0, _extends3$1H.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1Y.default)(styles.root, style)) }),
        children
      );
    }
  }]);
  return Paper;
}(_react$3i.Component);

Paper$3.defaultProps = {
  circle: false,
  rounded: true,
  transitionEnabled: true,
  zDepth: 1
};
Paper$3.contextTypes = {
  muiTheme: _propTypes2$2j.default.object.isRequired
};
Paper$3.propTypes = {
  /**
   * Children passed into the paper element.
   */
  children: _propTypes2$2j.default.node,
  /**
   * Set to true to generate a circular paper container.
   */
  circle: _propTypes2$2j.default.bool,
  /**
   * By default, the paper container will have a border radius.
   * Set this to false to generate a container with sharp corners.
   */
  rounded: _propTypes2$2j.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2j.default.object,
  /**
   * Set to false to disable CSS transitions for the paper element.
   */
  transitionEnabled: _propTypes2$2j.default.bool,
  /**
   * This number represents the zDepth of the paper shadow.
   */
  zDepth: _propTypes4$k.default.zDepth
} ;
Paper$4.default = Paper$3;

Object.defineProperty(Paper$5, "__esModule", {
  value: true
});
Paper$5.default = undefined;

var _Paper$i = Paper$4;

var _Paper2$i = _interopRequireDefault$4t(_Paper$i);

function _interopRequireDefault$4t(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Paper$5.default = _Paper2$i.default;

Object.defineProperty(Dialog$4, "__esModule", {
  value: true
});

var _extends2$1G = _extends$3;

var _extends3$1G = _interopRequireDefault$4s(_extends2$1G);

var _objectWithoutProperties2$1E = objectWithoutProperties$2;

var _objectWithoutProperties3$1E = _interopRequireDefault$4s(_objectWithoutProperties2$1E);

var _getPrototypeOf$21 = getPrototypeOf$1.exports;

var _getPrototypeOf2$1$ = _interopRequireDefault$4s(_getPrototypeOf$21);

var _classCallCheck2$22 = classCallCheck$3;

var _classCallCheck3$22 = _interopRequireDefault$4s(_classCallCheck2$22);

var _createClass2$21 = createClass$2;

var _createClass3$21 = _interopRequireDefault$4s(_createClass2$21);

var _possibleConstructorReturn2$1$ = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1$ = _interopRequireDefault$4s(_possibleConstructorReturn2$1$);

var _inherits2$1$ = inherits$3;

var _inherits3$1$ = _interopRequireDefault$4s(_inherits2$1$);

var _simpleAssign$1X = simpleAssign;

var _simpleAssign2$1X = _interopRequireDefault$4s(_simpleAssign$1X);

var _react$3h = react;

var _react2$3a = _interopRequireDefault$4s(_react$3h);

var _propTypes$2i = propTypes$5.exports;

var _propTypes2$2i = _interopRequireDefault$4s(_propTypes$2i);

var _reactDom$v = reactDom;

var _reactDom2$u = _interopRequireDefault$4s(_reactDom$v);

var _reactEventListener$c = reactEventListener_cjs$1;

var _reactEventListener2$c = _interopRequireDefault$4s(_reactEventListener$c);

var _keycode$f = keycode.exports;

var _keycode2$f = _interopRequireDefault$4s(_keycode$f);

var _transitions$V = transitions$1;

var _transitions2$V = _interopRequireDefault$4s(_transitions$V);

var _Overlay$2 = Overlay$3;

var _Overlay2$2 = _interopRequireDefault$4s(_Overlay$2);

var _RenderToLayer$3 = RenderToLayer$3;

var _RenderToLayer2$3 = _interopRequireDefault$4s(_RenderToLayer$3);

var _Paper$h = Paper$5;

var _Paper2$h = _interopRequireDefault$4s(_Paper$h);

var _TransitionGroup$7 = TransitionGroup.exports;

var _TransitionGroup2$7 = _interopRequireDefault$4s(_TransitionGroup$7);

function _interopRequireDefault$4s(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TransitionItem$1 = function (_Component) {
  (0, _inherits3$1$.default)(TransitionItem, _Component);

  function TransitionItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$22.default)(this, TransitionItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1$.default)(this, (_ref = TransitionItem.__proto__ || (0, _getPrototypeOf2$1$.default)(TransitionItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      style: {}
    }, _temp), (0, _possibleConstructorReturn3$1$.default)(_this, _ret);
  }

  (0, _createClass3$21.default)(TransitionItem, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimeout);
      clearTimeout(this.leaveTimeout);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.componentWillAppear(callback);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      var spacing = this.context.muiTheme.baseTheme.spacing;

      this.setState({
        style: {
          opacity: 1,
          transform: 'translate(0, ' + spacing.desktopKeylineIncrement + 'px)'
        }
      });

      this.enterTimeout = setTimeout(callback, 450); // matches transition duration
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      this.setState({
        style: {
          opacity: 0,
          transform: 'translate(0, 0)'
        }
      });

      this.leaveTimeout = setTimeout(callback, 450); // matches transition duration
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          children = _props.children,
          other = (0, _objectWithoutProperties3$1E.default)(_props, ['style', 'children']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      return _react2$3a.default.createElement(
        'div',
        (0, _extends3$1G.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1X.default)({}, this.state.style, style)) }),
        children
      );
    }
  }]);
  return TransitionItem;
}(_react$3h.Component);

TransitionItem$1.contextTypes = {
  muiTheme: _propTypes2$2i.default.object.isRequired
};
TransitionItem$1.propTypes = {
  children: _propTypes2$2i.default.node,
  style: _propTypes2$2i.default.object
} ;


function getStyles$1l(props, context) {
  var autoScrollBodyContent = props.autoScrollBodyContent,
      open = props.open;
  var _context$muiTheme = context.muiTheme,
      _context$muiTheme$bas = _context$muiTheme.baseTheme,
      spacing = _context$muiTheme$bas.spacing,
      palette = _context$muiTheme$bas.palette,
      dialog = _context$muiTheme.dialog,
      zIndex = _context$muiTheme.zIndex;


  var gutter = spacing.desktopGutter;
  var borderScroll = '1px solid ' + palette.borderColor;

  return {
    root: {
      position: 'fixed',
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      zIndex: zIndex.dialog,
      top: 0,
      left: open ? 0 : -10000,
      width: '100%',
      height: '100%',
      transition: open ? _transitions2$V.default.easeOut('0ms', 'left', '0ms') : _transitions2$V.default.easeOut('0ms', 'left', '450ms')
    },
    content: {
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      transition: _transitions2$V.default.easeOut(),
      position: 'relative',
      width: '75%',
      maxWidth: spacing.desktopKeylineIncrement * 12,
      margin: '0 auto',
      zIndex: zIndex.dialog
    },
    actionsContainer: {
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      padding: 8,
      width: '100%',
      textAlign: 'right',
      marginTop: autoScrollBodyContent ? -1 : 0
    },
    overlay: {
      zIndex: zIndex.dialogOverlay
    },
    title: {
      margin: 0,
      padding: gutter + 'px ' + gutter + 'px 20px ' + gutter + 'px',
      color: palette.textColor,
      fontSize: dialog.titleFontSize,
      lineHeight: '32px',
      fontWeight: 400,
      marginBottom: autoScrollBodyContent ? -1 : 0
    },
    body: {
      fontSize: dialog.bodyFontSize,
      color: dialog.bodyColor,
      padding: (props.title ? 0 : gutter) + 'px ' + gutter + 'px ' + gutter + 'px',
      boxSizing: 'border-box',
      overflowY: autoScrollBodyContent ? 'auto' : 'hidden',
      borderTop: autoScrollBodyContent ? borderScroll : 'none',
      borderBottom: autoScrollBodyContent ? borderScroll : 'none'
    }
  };
}

var DialogInline$1 = function (_Component2) {
  (0, _inherits3$1$.default)(DialogInline, _Component2);

  function DialogInline() {
    var _ref2;

    var _temp2, _this2, _ret2;

    (0, _classCallCheck3$22.default)(this, DialogInline);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this2 = (0, _possibleConstructorReturn3$1$.default)(this, (_ref2 = DialogInline.__proto__ || (0, _getPrototypeOf2$1$.default)(DialogInline)).call.apply(_ref2, [this].concat(args))), _this2), _this2.handleTouchTapOverlay = function () {
      _this2.requestClose(false);
    }, _this2.handleKeyUp = function (event) {
      if ((0, _keycode2$f.default)(event) === 'esc') {
        _this2.requestClose(false);
      }
    }, _this2.handleResize = function () {
      _this2.positionDialog();
    }, _temp2), (0, _possibleConstructorReturn3$1$.default)(_this2, _ret2);
  }

  (0, _createClass3$21.default)(DialogInline, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.positionDialog();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.positionDialog();
    }
  }, {
    key: 'positionDialog',
    value: function positionDialog() {
      var _props2 = this.props,
          actions = _props2.actions,
          autoDetectWindowHeight = _props2.autoDetectWindowHeight,
          autoScrollBodyContent = _props2.autoScrollBodyContent,
          bodyStyle = _props2.bodyStyle,
          open = _props2.open,
          repositionOnUpdate = _props2.repositionOnUpdate,
          title = _props2.title;


      if (!open) {
        return;
      }

      var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var container = _reactDom2$u.default.findDOMNode(this);
      var dialogWindow = _reactDom2$u.default.findDOMNode(this.refs.dialogWindow);
      var dialogContent = _reactDom2$u.default.findDOMNode(this.refs.dialogContent);
      var minPaddingTop = 16;

      // Reset the height in case the window was resized.
      dialogWindow.style.height = '';
      dialogContent.style.height = '';

      var dialogWindowHeight = dialogWindow.offsetHeight;
      var paddingTop = (clientHeight - dialogWindowHeight) / 2 - 64;
      if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;

      // Vertically center the dialog window, but make sure it doesn't
      // transition to that position.
      if (repositionOnUpdate || !container.style.paddingTop) {
        container.style.paddingTop = paddingTop + 'px';
      }

      // Force a height if the dialog is taller than clientHeight
      if (autoDetectWindowHeight || autoScrollBodyContent) {
        var styles = getStyles$1l(this.props, this.context);
        styles.body = (0, _simpleAssign2$1X.default)(styles.body, bodyStyle);
        var maxDialogContentHeight = clientHeight - 2 * 64;

        if (title) maxDialogContentHeight -= dialogContent.previousSibling.offsetHeight;

        if (_react2$3a.default.Children.count(actions)) {
          maxDialogContentHeight -= dialogContent.nextSibling.offsetHeight;
        }

        dialogContent.style.maxHeight = maxDialogContentHeight + 'px';
        if (maxDialogContentHeight > dialogWindowHeight) {
          dialogContent.style.borderBottom = 'none';
          dialogContent.style.borderTop = 'none';
        }
      }
    }
  }, {
    key: 'requestClose',
    value: function requestClose(buttonClicked) {
      if (!buttonClicked && this.props.modal) {
        return;
      }

      if (this.props.onRequestClose) {
        this.props.onRequestClose(!!buttonClicked);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          actions = _props3.actions,
          actionsContainerClassName = _props3.actionsContainerClassName,
          actionsContainerStyle = _props3.actionsContainerStyle,
          bodyClassName = _props3.bodyClassName,
          bodyStyle = _props3.bodyStyle,
          children = _props3.children,
          className = _props3.className,
          contentClassName = _props3.contentClassName,
          contentStyle = _props3.contentStyle,
          overlayClassName = _props3.overlayClassName,
          overlayStyle = _props3.overlayStyle,
          open = _props3.open,
          paperClassName = _props3.paperClassName,
          paperProps = _props3.paperProps,
          style = _props3.style,
          titleClassName = _props3.titleClassName,
          titleStyle = _props3.titleStyle,
          title = _props3.title;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1l(this.props, this.context);

      styles.root = (0, _simpleAssign2$1X.default)(styles.root, style);
      styles.content = (0, _simpleAssign2$1X.default)(styles.content, contentStyle);
      styles.body = (0, _simpleAssign2$1X.default)(styles.body, bodyStyle);
      styles.actionsContainer = (0, _simpleAssign2$1X.default)(styles.actionsContainer, actionsContainerStyle);
      styles.overlay = (0, _simpleAssign2$1X.default)(styles.overlay, overlayStyle);
      styles.title = (0, _simpleAssign2$1X.default)(styles.title, titleStyle);

      var actionsContainer = _react2$3a.default.Children.count(actions) > 0 && _react2$3a.default.createElement(
        'div',
        { className: actionsContainerClassName, style: prepareStyles(styles.actionsContainer) },
        _react2$3a.default.Children.toArray(actions)
      );

      var titleElement = title;
      if (_react2$3a.default.isValidElement(title)) {
        titleElement = _react2$3a.default.cloneElement(title, {
          className: title.props.className || titleClassName,
          style: prepareStyles((0, _simpleAssign2$1X.default)(styles.title, title.props.style))
        });
      } else if (typeof title === 'string') {
        titleElement = _react2$3a.default.createElement(
          'h3',
          { className: titleClassName, style: prepareStyles(styles.title) },
          title
        );
      }

      return _react2$3a.default.createElement(
        'div',
        { className: className, style: prepareStyles(styles.root) },
        open && _react2$3a.default.createElement(_reactEventListener2$c.default, {
          target: 'window',
          onKeyUp: this.handleKeyUp,
          onResize: this.handleResize
        }),
        _react2$3a.default.createElement(
          _TransitionGroup2$7.default,
          {
            component: 'div',
            ref: 'dialogWindow',
            transitionAppear: true,
            transitionAppearTimeout: 450,
            transitionEnter: true,
            transitionEnterTimeout: 450
          },
          open && _react2$3a.default.createElement(
            TransitionItem$1,
            {
              className: contentClassName,
              style: styles.content
            },
            _react2$3a.default.createElement(
              _Paper2$h.default,
              (0, _extends3$1G.default)({ className: paperClassName, zDepth: 4 }, paperProps),
              titleElement,
              _react2$3a.default.createElement(
                'div',
                {
                  ref: 'dialogContent',
                  className: bodyClassName,
                  style: prepareStyles(styles.body)
                },
                children
              ),
              actionsContainer
            )
          )
        ),
        _react2$3a.default.createElement(_Overlay2$2.default, {
          show: open,
          className: overlayClassName,
          style: styles.overlay,
          onClick: this.handleTouchTapOverlay
        })
      );
    }
  }]);
  return DialogInline;
}(_react$3h.Component);

DialogInline$1.contextTypes = {
  muiTheme: _propTypes2$2i.default.object.isRequired
};
DialogInline$1.propTypes = {
  actions: _propTypes2$2i.default.node,
  actionsContainerClassName: _propTypes2$2i.default.string,
  actionsContainerStyle: _propTypes2$2i.default.object,
  autoDetectWindowHeight: _propTypes2$2i.default.bool,
  autoScrollBodyContent: _propTypes2$2i.default.bool,
  bodyClassName: _propTypes2$2i.default.string,
  bodyStyle: _propTypes2$2i.default.object,
  children: _propTypes2$2i.default.node,
  className: _propTypes2$2i.default.string,
  contentClassName: _propTypes2$2i.default.string,
  contentStyle: _propTypes2$2i.default.object,
  modal: _propTypes2$2i.default.bool,
  onRequestClose: _propTypes2$2i.default.func,
  open: _propTypes2$2i.default.bool.isRequired,
  overlayClassName: _propTypes2$2i.default.string,
  overlayStyle: _propTypes2$2i.default.object,
  paperClassName: _propTypes2$2i.default.string,
  paperProps: _propTypes2$2i.default.object,
  repositionOnUpdate: _propTypes2$2i.default.bool,
  style: _propTypes2$2i.default.object,
  title: _propTypes2$2i.default.node,
  titleClassName: _propTypes2$2i.default.string,
  titleStyle: _propTypes2$2i.default.object
} ;

var Dialog$3 = function (_Component3) {
  (0, _inherits3$1$.default)(Dialog, _Component3);

  function Dialog() {
    var _ref3;

    var _temp3, _this3, _ret3;

    (0, _classCallCheck3$22.default)(this, Dialog);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret3 = (_temp3 = (_this3 = (0, _possibleConstructorReturn3$1$.default)(this, (_ref3 = Dialog.__proto__ || (0, _getPrototypeOf2$1$.default)(Dialog)).call.apply(_ref3, [this].concat(args))), _this3), _this3.renderLayer = function () {
      return _react2$3a.default.createElement(DialogInline$1, _this3.props);
    }, _temp3), (0, _possibleConstructorReturn3$1$.default)(_this3, _ret3);
  }

  (0, _createClass3$21.default)(Dialog, [{
    key: 'render',
    value: function render() {
      return _react2$3a.default.createElement(_RenderToLayer2$3.default, { render: this.renderLayer, open: true, useLayerForClickAway: false });
    }
  }]);
  return Dialog;
}(_react$3h.Component);

Dialog$3.contextTypes = {
  muiTheme: _propTypes2$2i.default.object.isRequired
};
Dialog$3.defaultProps = {
  autoDetectWindowHeight: true,
  autoScrollBodyContent: false,
  modal: false,
  repositionOnUpdate: true
};
Dialog$3.propTypes = {
  /**
   * Action buttons to display below the Dialog content (`children`).
   * This property accepts either a React element, or an array of React elements.
   */
  actions: _propTypes2$2i.default.node,
  /**
   * The `className` to add to the actions container's root element.
   */
  actionsContainerClassName: _propTypes2$2i.default.string,
  /**
   * Overrides the inline-styles of the actions container's root element.
   */
  actionsContainerStyle: _propTypes2$2i.default.object,
  /**
   * If set to true, the height of the `Dialog` will be auto detected. A max height
   * will be enforced so that the content does not extend beyond the viewport.
   */
  autoDetectWindowHeight: _propTypes2$2i.default.bool,
  /**
   * If set to true, the body content of the `Dialog` will be scrollable.
   */
  autoScrollBodyContent: _propTypes2$2i.default.bool,
  /**
   * The `className` to add to the content's root element under the title.
   */
  bodyClassName: _propTypes2$2i.default.string,
  /**
   * Overrides the inline-styles of the content's root element under the title.
   */
  bodyStyle: _propTypes2$2i.default.object,
  /**
   * The contents of the `Dialog`.
   */
  children: _propTypes2$2i.default.node,
  /**
   * @ignore
   */
  className: _propTypes2$2i.default.string,
  /**
   * The `className` to add to the content container.
   */
  contentClassName: _propTypes2$2i.default.string,
  /**
   * Overrides the inline-styles of the content container.
   */
  contentStyle: _propTypes2$2i.default.object,
  /**
   * Force the user to use one of the actions in the `Dialog`.
   * Clicking outside the `Dialog` will not trigger the `onRequestClose`.
   */
  modal: _propTypes2$2i.default.bool,
  /**
   * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.
   *
   * @param {bool} buttonClicked Determines whether a button click triggered this request.
   */
  onRequestClose: _propTypes2$2i.default.func,
  /**
   * Controls whether the Dialog is opened or not.
   */
  open: _propTypes2$2i.default.bool.isRequired,
  /**
   * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.
   */
  overlayClassName: _propTypes2$2i.default.string,
  /**
   * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.
   */
  overlayStyle: _propTypes2$2i.default.object,
  /**
   * The CSS class name of the `Paper` element.
   */
  paperClassName: _propTypes2$2i.default.string,
  /**
   * Properties applied to the `Paper` element.
   */
  paperProps: _propTypes2$2i.default.object,
  /**
   * Determines whether the `Dialog` should be repositioned when it's contents are updated.
   */
  repositionOnUpdate: _propTypes2$2i.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2i.default.object,
  /**
   * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.
   */
  title: _propTypes2$2i.default.node,
  /**
   * The `className` to add to the title's root container element.
   */
  titleClassName: _propTypes2$2i.default.string,
  /**
   * Overrides the inline-styles of the title's root container element.
   */
  titleStyle: _propTypes2$2i.default.object
} ;
var _default$14 = Dialog$4.default = Dialog$3;

var FlatButton$5 = {};

var colorManipulator$1 = {};

Object.defineProperty(colorManipulator$1, "__esModule", {
  value: true
});
colorManipulator$1.convertColorToString = convertColorToString$1;
colorManipulator$1.convertHexToRGB = convertHexToRGB$1;
colorManipulator$1.decomposeColor = decomposeColor$1;
colorManipulator$1.getContrastRatio = getContrastRatio$1;
colorManipulator$1.getLuminance = getLuminance$1;
colorManipulator$1.emphasize = emphasize$1;
colorManipulator$1.fade = fade$1;
colorManipulator$1.darken = darken$1;
colorManipulator$1.lighten = lighten$1;

var _warning$f = warning_1$1;

var _warning2$f = _interopRequireDefault$4r(_warning$f);

function _interopRequireDefault$4r(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
function clamp$1(value, min, max) {
  if (value < min) {
    return min;
  }
  if (value > max) {
    return max;
  }
  return value;
}

/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */
function convertColorToString$1(color) {
  var type = color.type,
      values = color.values;


  if (type.indexOf('rgb') > -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    for (var i = 0; i < 3; i++) {
      values[i] = parseInt(values[i]);
    }
  }

  var colorString = void 0;

  if (type.indexOf('hsl') > -1) {
    colorString = color.type + '(' + values[0] + ', ' + values[1] + '%, ' + values[2] + '%';
  } else {
    colorString = color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
  }

  if (values.length === 4) {
    colorString += ', ' + color.values[3] + ')';
  } else {
    colorString += ')';
  }

  return colorString;
}

/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 *  @returns {string} A CSS rgb color string
 */
function convertHexToRGB$1(color) {
  if (color.length === 4) {
    var extendedColor = '#';
    for (var i = 1; i < color.length; i++) {
      extendedColor += color.charAt(i) + color.charAt(i);
    }
    color = extendedColor;
  }

  var values = {
    r: parseInt(color.substr(1, 2), 16),
    g: parseInt(color.substr(3, 2), 16),
    b: parseInt(color.substr(5, 2), 16)
  };

  return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
}

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values and color names.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {{type: string, values: number[]}} A MUI color object
 */
function decomposeColor$1(color) {
  if (color.charAt(0) === '#') {
    return decomposeColor$1(convertHexToRGB$1(color));
  }

  var marker = color.indexOf('(');

  (0, _warning2$f.default)(marker !== -1, 'Material-UI: The ' + color + ' color was not parsed correctly,\n  because it has an unsupported format (color name or RGB %). This may cause issues in component rendering.') ;

  var type = color.substring(0, marker);
  var values = color.substring(marker + 1, color.length - 1).split(',');
  values = values.map(function (value) {
    return parseFloat(value);
  });

  return { type: type, values: values };
}

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
 */
function getContrastRatio$1(foreground, background) {
  var lumA = getLuminance$1(foreground);
  var lumB = getLuminance$1(background);
  var contrastRatio = (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

  return Number(contrastRatio.toFixed(2)); // Truncate at two digits
}

/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */
function getLuminance$1(color) {
  color = decomposeColor$1(color);

  if (color.type.indexOf('rgb') > -1) {
    var rgb = color.values.map(function (val) {
      val /= 255; // normalized
      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
    });
    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)); // Truncate at 3 digits
  } else if (color.type.indexOf('hsl') > -1) {
    return color.values[2] / 100;
  }
}

/**
 * Darken or lighten a colour, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function emphasize$1(color) {
  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;

  return getLuminance$1(color) > 0.5 ? darken$1(color, coefficient) : lighten$1(color, coefficient);
}

/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function fade$1(color, value) {
  color = decomposeColor$1(color);
  value = clamp$1(value, 0, 1);

  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }
  color.values[3] = value;

  return convertColorToString$1(color);
}

/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function darken$1(color, coefficient) {
  color = decomposeColor$1(color);
  coefficient = clamp$1(coefficient, 0, 1);

  if (color.type.indexOf('hsl') > -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') > -1) {
    for (var i = 0; i < 3; i++) {
      color.values[i] *= 1 - coefficient;
    }
  }
  return convertColorToString$1(color);
}

/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function lighten$1(color, coefficient) {
  color = decomposeColor$1(color);
  coefficient = clamp$1(coefficient, 0, 1);

  if (color.type.indexOf('hsl') > -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') > -1) {
    for (var i = 0; i < 3; i++) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  }

  return convertColorToString$1(color);
}

var EnhancedButton$3 = {};

var events$1 = {};

Object.defineProperty(events$1, "__esModule", {
  value: true
});
events$1.default = {
  once: function once(el, type, callback) {
    var typeArray = type ? type.split(' ') : [];
    var recursiveFunction = function recursiveFunction(event) {
      event.target.removeEventListener(event.type, recursiveFunction);
      return callback(event);
    };

    for (var i = typeArray.length - 1; i >= 0; i--) {
      this.on(el, typeArray[i], recursiveFunction);
    }
  },
  on: function on(el, type, callback) {
    if (el.addEventListener) {
      el.addEventListener(type, callback);
    } else {
      // IE8+ Support
      el.attachEvent('on' + type, function () {
        callback.call(el);
      });
    }
  },
  off: function off(el, type, callback) {
    if (el.removeEventListener) {
      el.removeEventListener(type, callback);
    } else {
      // IE8+ Support
      el.detachEvent('on' + type, callback);
    }
  },
  isKeyboard: function isKeyboard(event) {
    return ['keydown', 'keypress', 'keyup'].indexOf(event.type) !== -1;
  }
};

var FocusRipple$3 = {};

var shallowEqual$1 = {};

shallowEqual$1.__esModule = true;

var _shallowEqual$f = shallowEqual_1;

var _shallowEqual2$f = _interopRequireDefault$4q(_shallowEqual$f);

function _interopRequireDefault$4q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

shallowEqual$1.default = _shallowEqual2$f.default;

var autoPrefix$1 = {};

Object.defineProperty(autoPrefix$1, "__esModule", {
  value: true
});
autoPrefix$1.default = {
  set: function set(style, key, value) {
    style[key] = value;
  }
};

var ScaleIn$3 = {};

var ScaleInChild$3 = {};

Object.defineProperty(ScaleInChild$3, "__esModule", {
  value: true
});

var _extends2$1F = _extends$3;

var _extends3$1F = _interopRequireDefault$4p(_extends2$1F);

var _objectWithoutProperties2$1D = objectWithoutProperties$2;

var _objectWithoutProperties3$1D = _interopRequireDefault$4p(_objectWithoutProperties2$1D);

var _getPrototypeOf$20 = getPrototypeOf$1.exports;

var _getPrototypeOf2$1_ = _interopRequireDefault$4p(_getPrototypeOf$20);

var _classCallCheck2$21 = classCallCheck$3;

var _classCallCheck3$21 = _interopRequireDefault$4p(_classCallCheck2$21);

var _createClass2$20 = createClass$2;

var _createClass3$20 = _interopRequireDefault$4p(_createClass2$20);

var _possibleConstructorReturn2$1_ = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1_ = _interopRequireDefault$4p(_possibleConstructorReturn2$1_);

var _inherits2$1_ = inherits$3;

var _inherits3$1_ = _interopRequireDefault$4p(_inherits2$1_);

var _simpleAssign$1W = simpleAssign;

var _simpleAssign2$1W = _interopRequireDefault$4p(_simpleAssign$1W);

var _react$3g = react;

var _react2$39 = _interopRequireDefault$4p(_react$3g);

var _propTypes$2h = propTypes$5.exports;

var _propTypes2$2h = _interopRequireDefault$4p(_propTypes$2h);

var _reactDom$u = reactDom;

var _reactDom2$t = _interopRequireDefault$4p(_reactDom$u);

var _autoPrefix$9 = autoPrefix$1;

var _autoPrefix2$9 = _interopRequireDefault$4p(_autoPrefix$9);

var _transitions$U = transitions$1;

var _transitions2$U = _interopRequireDefault$4p(_transitions$U);

function _interopRequireDefault$4p(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScaleInChild$2 = function (_Component) {
  (0, _inherits3$1_.default)(ScaleInChild, _Component);

  function ScaleInChild() {
    (0, _classCallCheck3$21.default)(this, ScaleInChild);
    return (0, _possibleConstructorReturn3$1_.default)(this, (ScaleInChild.__proto__ || (0, _getPrototypeOf2$1_.default)(ScaleInChild)).apply(this, arguments));
  }

  (0, _createClass3$20.default)(ScaleInChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentDidAppear',
    value: function componentDidAppear() {
      this.animate();
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      this.animate();
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var style = _reactDom2$t.default.findDOMNode(this).style;

      style.opacity = '0';
      _autoPrefix2$9.default.set(style, 'transform', 'scale(' + this.props.minScale + ')');

      this.leaveTimer = setTimeout(callback, 450);
    }
  }, {
    key: 'animate',
    value: function animate() {
      var style = _reactDom2$t.default.findDOMNode(this).style;

      style.opacity = '1';
      _autoPrefix2$9.default.set(style, 'transform', 'scale(' + this.props.maxScale + ')');
    }
  }, {
    key: 'initializeAnimation',
    value: function initializeAnimation(callback) {
      var style = _reactDom2$t.default.findDOMNode(this).style;

      style.opacity = '0';
      _autoPrefix2$9.default.set(style, 'transform', 'scale(0)');

      this.enterTimer = setTimeout(callback, this.props.enterDelay);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.enterDelay;
          _props.maxScale;
          _props.minScale;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$1D.default)(_props, ['children', 'enterDelay', 'maxScale', 'minScale', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$1W.default)({}, {
        position: 'absolute',
        height: '100%',
        width: '100%',
        top: 0,
        left: 0,
        transition: _transitions2$U.default.easeOut(null, ['transform', 'opacity'])
      }, style);

      return _react2$39.default.createElement(
        'div',
        (0, _extends3$1F.default)({}, other, { style: prepareStyles(mergedRootStyles) }),
        children
      );
    }
  }]);
  return ScaleInChild;
}(_react$3g.Component);

ScaleInChild$2.defaultProps = {
  enterDelay: 0,
  maxScale: 1,
  minScale: 0
};
ScaleInChild$2.contextTypes = {
  muiTheme: _propTypes2$2h.default.object.isRequired
};
ScaleInChild$2.propTypes = {
  children: _propTypes2$2h.default.node,
  enterDelay: _propTypes2$2h.default.number,
  maxScale: _propTypes2$2h.default.number,
  minScale: _propTypes2$2h.default.number,
  style: _propTypes2$2h.default.object
} ;
ScaleInChild$3.default = ScaleInChild$2;

Object.defineProperty(ScaleIn$3, "__esModule", {
  value: true
});

var _extends2$1E = _extends$3;

var _extends3$1E = _interopRequireDefault$4o(_extends2$1E);

var _objectWithoutProperties2$1C = objectWithoutProperties$2;

var _objectWithoutProperties3$1C = _interopRequireDefault$4o(_objectWithoutProperties2$1C);

var _getPrototypeOf$1$ = getPrototypeOf$1.exports;

var _getPrototypeOf2$1Z = _interopRequireDefault$4o(_getPrototypeOf$1$);

var _classCallCheck2$20 = classCallCheck$3;

var _classCallCheck3$20 = _interopRequireDefault$4o(_classCallCheck2$20);

var _createClass2$1$ = createClass$2;

var _createClass3$1$ = _interopRequireDefault$4o(_createClass2$1$);

var _possibleConstructorReturn2$1Z = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1Z = _interopRequireDefault$4o(_possibleConstructorReturn2$1Z);

var _inherits2$1Z = inherits$3;

var _inherits3$1Z = _interopRequireDefault$4o(_inherits2$1Z);

var _simpleAssign$1V = simpleAssign;

var _simpleAssign2$1V = _interopRequireDefault$4o(_simpleAssign$1V);

var _react$3f = react;

var _react2$38 = _interopRequireDefault$4o(_react$3f);

var _propTypes$2g = propTypes$5.exports;

var _propTypes2$2g = _interopRequireDefault$4o(_propTypes$2g);

var _TransitionGroup$6 = TransitionGroup.exports;

var _TransitionGroup2$6 = _interopRequireDefault$4o(_TransitionGroup$6);

var _ScaleInChild$1 = ScaleInChild$3;

var _ScaleInChild2$1 = _interopRequireDefault$4o(_ScaleInChild$1);

function _interopRequireDefault$4o(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScaleIn$2 = function (_Component) {
  (0, _inherits3$1Z.default)(ScaleIn, _Component);

  function ScaleIn() {
    (0, _classCallCheck3$20.default)(this, ScaleIn);
    return (0, _possibleConstructorReturn3$1Z.default)(this, (ScaleIn.__proto__ || (0, _getPrototypeOf2$1Z.default)(ScaleIn)).apply(this, arguments));
  }

  (0, _createClass3$1$.default)(ScaleIn, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          childStyle = _props.childStyle,
          enterDelay = _props.enterDelay,
          maxScale = _props.maxScale,
          minScale = _props.minScale,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1C.default)(_props, ['children', 'childStyle', 'enterDelay', 'maxScale', 'minScale', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$1V.default)({}, {
        position: 'relative',
        height: '100%'
      }, style);

      var newChildren = _react2$38.default.Children.map(children, function (child) {
        return _react2$38.default.createElement(
          _ScaleInChild2$1.default,
          {
            key: child.key,
            enterDelay: enterDelay,
            maxScale: maxScale,
            minScale: minScale,
            style: childStyle
          },
          child
        );
      });

      return _react2$38.default.createElement(
        _TransitionGroup2$6.default,
        (0, _extends3$1E.default)({}, other, {
          style: prepareStyles(mergedRootStyles),
          component: 'div'
        }),
        newChildren
      );
    }
  }]);
  return ScaleIn;
}(_react$3f.Component);

ScaleIn$2.defaultProps = {
  enterDelay: 0
};
ScaleIn$2.contextTypes = {
  muiTheme: _propTypes2$2g.default.object.isRequired
};
ScaleIn$2.propTypes = {
  childStyle: _propTypes2$2g.default.object,
  children: _propTypes2$2g.default.node,
  enterDelay: _propTypes2$2g.default.number,
  maxScale: _propTypes2$2g.default.number,
  minScale: _propTypes2$2g.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2g.default.object
} ;
ScaleIn$3.default = ScaleIn$2;

Object.defineProperty(FocusRipple$3, "__esModule", {
  value: true
});

var _getPrototypeOf$1_ = getPrototypeOf$1.exports;

var _getPrototypeOf2$1Y = _interopRequireDefault$4n(_getPrototypeOf$1_);

var _classCallCheck2$1$ = classCallCheck$3;

var _classCallCheck3$1$ = _interopRequireDefault$4n(_classCallCheck2$1$);

var _createClass2$1_ = createClass$2;

var _createClass3$1_ = _interopRequireDefault$4n(_createClass2$1_);

var _possibleConstructorReturn2$1Y = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1Y = _interopRequireDefault$4n(_possibleConstructorReturn2$1Y);

var _inherits2$1Y = inherits$3;

var _inherits3$1Y = _interopRequireDefault$4n(_inherits2$1Y);

var _simpleAssign$1U = simpleAssign;

var _simpleAssign2$1U = _interopRequireDefault$4n(_simpleAssign$1U);

var _react$3e = react;

var _react2$37 = _interopRequireDefault$4n(_react$3e);

var _propTypes$2f = propTypes$5.exports;

var _propTypes2$2f = _interopRequireDefault$4n(_propTypes$2f);

var _reactDom$t = reactDom;

var _reactDom2$s = _interopRequireDefault$4n(_reactDom$t);

var _shallowEqual$e = shallowEqual$1;

var _shallowEqual2$e = _interopRequireDefault$4n(_shallowEqual$e);

var _autoPrefix$8 = autoPrefix$1;

var _autoPrefix2$8 = _interopRequireDefault$4n(_autoPrefix$8);

var _transitions$T = transitions$1;

var _transitions2$T = _interopRequireDefault$4n(_transitions$T);

var _ScaleIn$1 = ScaleIn$3;

var _ScaleIn2$1 = _interopRequireDefault$4n(_ScaleIn$1);

function _interopRequireDefault$4n(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pulsateDuration$1 = 750;

var FocusRipple$2 = function (_Component) {
  (0, _inherits3$1Y.default)(FocusRipple, _Component);

  function FocusRipple() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1$.default)(this, FocusRipple);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1Y.default)(this, (_ref = FocusRipple.__proto__ || (0, _getPrototypeOf2$1Y.default)(FocusRipple)).call.apply(_ref, [this].concat(args))), _this), _this.pulsate = function () {
      var innerCircle = _reactDom2$s.default.findDOMNode(_this.refs.innerCircle);
      if (!innerCircle) return;

      var startScale = 'scale(1)';
      var endScale = 'scale(0.85)';
      var currentScale = innerCircle.style.transform || startScale;
      var nextScale = currentScale === startScale ? endScale : startScale;

      _autoPrefix2$8.default.set(innerCircle.style, 'transform', nextScale);
      _this.timeout = setTimeout(_this.pulsate, pulsateDuration$1);
    }, _temp), (0, _possibleConstructorReturn3$1Y.default)(_this, _ret);
  }

  (0, _createClass3$1_.default)(FocusRipple, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.show) {
        this.setRippleSize();
        this.pulsate();
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return !(0, _shallowEqual2$e.default)(this.props, nextProps) || !(0, _shallowEqual2$e.default)(this.state, nextState);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.show) {
        this.setRippleSize();
        this.pulsate();
      } else {
        if (this.timeout) clearTimeout(this.timeout);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timeout);
    }
  }, {
    key: 'getRippleElement',
    value: function getRippleElement(props) {
      var color = props.color,
          innerStyle = props.innerStyle,
          opacity = props.opacity;
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          ripple = _context$muiTheme.ripple;


      var innerStyles = (0, _simpleAssign2$1U.default)({
        position: 'absolute',
        height: '100%',
        width: '100%',
        borderRadius: '50%',
        opacity: opacity ? opacity : 0.16,
        backgroundColor: color || ripple.color,
        transition: _transitions2$T.default.easeOut(pulsateDuration$1 + 'ms', 'transform', null, _transitions2$T.default.easeInOutFunction)
      }, innerStyle);

      return _react2$37.default.createElement('div', { ref: 'innerCircle', style: prepareStyles((0, _simpleAssign2$1U.default)({}, innerStyles)) });
    }
  }, {
    key: 'setRippleSize',
    value: function setRippleSize() {
      var el = _reactDom2$s.default.findDOMNode(this.refs.innerCircle);
      var height = el.offsetHeight;
      var width = el.offsetWidth;
      var size = Math.max(height, width);

      var oldTop = 0;
      // For browsers that don't support endsWith()
      if (el.style.top.indexOf('px', el.style.top.length - 2) !== -1) {
        oldTop = parseInt(el.style.top);
      }
      el.style.height = size + 'px';
      el.style.top = height / 2 - size / 2 + oldTop + 'px';
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          show = _props.show,
          style = _props.style;


      var mergedRootStyles = (0, _simpleAssign2$1U.default)({
        height: '100%',
        width: '100%',
        position: 'absolute',
        top: 0,
        left: 0
      }, style);

      var ripple = show ? this.getRippleElement(this.props) : null;

      return _react2$37.default.createElement(
        _ScaleIn2$1.default,
        {
          maxScale: 0.85,
          style: mergedRootStyles
        },
        ripple
      );
    }
  }]);
  return FocusRipple;
}(_react$3e.Component);

FocusRipple$2.contextTypes = {
  muiTheme: _propTypes2$2f.default.object.isRequired
};
FocusRipple$2.propTypes = {
  color: _propTypes2$2f.default.string,
  innerStyle: _propTypes2$2f.default.object,
  opacity: _propTypes2$2f.default.number,
  show: _propTypes2$2f.default.bool,
  style: _propTypes2$2f.default.object
} ;
FocusRipple$3.default = FocusRipple$2;

var TouchRipple$3 = {};

var CircleRipple$3 = {};

Object.defineProperty(CircleRipple$3, "__esModule", {
  value: true
});

var _extends2$1D = _extends$3;

var _extends3$1D = _interopRequireDefault$4m(_extends2$1D);

var _objectWithoutProperties2$1B = objectWithoutProperties$2;

var _objectWithoutProperties3$1B = _interopRequireDefault$4m(_objectWithoutProperties2$1B);

var _getPrototypeOf$1Z = getPrototypeOf$1.exports;

var _getPrototypeOf2$1X = _interopRequireDefault$4m(_getPrototypeOf$1Z);

var _classCallCheck2$1_ = classCallCheck$3;

var _classCallCheck3$1_ = _interopRequireDefault$4m(_classCallCheck2$1_);

var _createClass2$1Z = createClass$2;

var _createClass3$1Z = _interopRequireDefault$4m(_createClass2$1Z);

var _possibleConstructorReturn2$1X = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1X = _interopRequireDefault$4m(_possibleConstructorReturn2$1X);

var _inherits2$1X = inherits$3;

var _inherits3$1X = _interopRequireDefault$4m(_inherits2$1X);

var _simpleAssign$1T = simpleAssign;

var _simpleAssign2$1T = _interopRequireDefault$4m(_simpleAssign$1T);

var _react$3d = react;

var _react2$36 = _interopRequireDefault$4m(_react$3d);

var _propTypes$2e = propTypes$5.exports;

var _propTypes2$2e = _interopRequireDefault$4m(_propTypes$2e);

var _reactDom$s = reactDom;

var _reactDom2$r = _interopRequireDefault$4m(_reactDom$s);

var _shallowEqual$d = shallowEqual$1;

var _shallowEqual2$d = _interopRequireDefault$4m(_shallowEqual$d);

var _autoPrefix$7 = autoPrefix$1;

var _autoPrefix2$7 = _interopRequireDefault$4m(_autoPrefix$7);

var _transitions$S = transitions$1;

var _transitions2$S = _interopRequireDefault$4m(_transitions$S);

function _interopRequireDefault$4m(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CircleRipple$2 = function (_Component) {
  (0, _inherits3$1X.default)(CircleRipple, _Component);

  function CircleRipple() {
    (0, _classCallCheck3$1_.default)(this, CircleRipple);
    return (0, _possibleConstructorReturn3$1X.default)(this, (CircleRipple.__proto__ || (0, _getPrototypeOf2$1X.default)(CircleRipple)).apply(this, arguments));
  }

  (0, _createClass3$1Z.default)(CircleRipple, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !(0, _shallowEqual2$d.default)(this.props, nextProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentDidAppear',
    value: function componentDidAppear() {
      this.animate();
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      this.animate();
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var style = _reactDom2$r.default.findDOMNode(this).style;
      style.opacity = 0;
      // If the animation is aborted, remove from the DOM immediately
      var removeAfter = this.props.aborted ? 0 : 2000;
      this.enterTimer = setTimeout(callback, removeAfter);
    }
  }, {
    key: 'animate',
    value: function animate() {
      var style = _reactDom2$r.default.findDOMNode(this).style;
      var transitionValue = _transitions2$S.default.easeOut('2s', 'opacity') + ', ' + _transitions2$S.default.easeOut('1s', 'transform');
      _autoPrefix2$7.default.set(style, 'transition', transitionValue);
      _autoPrefix2$7.default.set(style, 'transform', 'scale(1)');
    }
  }, {
    key: 'initializeAnimation',
    value: function initializeAnimation(callback) {
      var style = _reactDom2$r.default.findDOMNode(this).style;
      style.opacity = this.props.opacity;
      _autoPrefix2$7.default.set(style, 'transform', 'scale(0)');
      this.leaveTimer = setTimeout(callback, 0);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.aborted;
          var color = _props.color;
          _props.opacity;
          var style = _props.style;
          _props.touchGenerated;
          var other = (0, _objectWithoutProperties3$1B.default)(_props, ['aborted', 'color', 'opacity', 'style', 'touchGenerated']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedStyles = (0, _simpleAssign2$1T.default)({
        position: 'absolute',
        top: 0,
        left: 0,
        height: '100%',
        width: '100%',
        borderRadius: '50%',
        backgroundColor: color
      }, style);

      return _react2$36.default.createElement('div', (0, _extends3$1D.default)({}, other, { style: prepareStyles(mergedStyles) }));
    }
  }]);
  return CircleRipple;
}(_react$3d.Component);

CircleRipple$2.defaultProps = {
  opacity: 0.1,
  aborted: false
};
CircleRipple$2.contextTypes = {
  muiTheme: _propTypes2$2e.default.object.isRequired
};
CircleRipple$2.propTypes = {
  aborted: _propTypes2$2e.default.bool,
  color: _propTypes2$2e.default.string,
  opacity: _propTypes2$2e.default.number,
  style: _propTypes2$2e.default.object,
  touchGenerated: _propTypes2$2e.default.bool
} ;
CircleRipple$3.default = CircleRipple$2;

Object.defineProperty(TouchRipple$3, "__esModule", {
  value: true
});

var _toConsumableArray2$5 = toConsumableArray;

var _toConsumableArray3$5 = _interopRequireDefault$4l(_toConsumableArray2$5);

var _getPrototypeOf$1Y = getPrototypeOf$1.exports;

var _getPrototypeOf2$1W = _interopRequireDefault$4l(_getPrototypeOf$1Y);

var _classCallCheck2$1Z = classCallCheck$3;

var _classCallCheck3$1Z = _interopRequireDefault$4l(_classCallCheck2$1Z);

var _createClass2$1Y = createClass$2;

var _createClass3$1Y = _interopRequireDefault$4l(_createClass2$1Y);

var _possibleConstructorReturn2$1W = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1W = _interopRequireDefault$4l(_possibleConstructorReturn2$1W);

var _inherits2$1W = inherits$3;

var _inherits3$1W = _interopRequireDefault$4l(_inherits2$1W);

var _toArray2$3 = toArray;

var _toArray3$3 = _interopRequireDefault$4l(_toArray2$3);

var _simpleAssign$1S = simpleAssign;

var _simpleAssign2$1S = _interopRequireDefault$4l(_simpleAssign$1S);

var _react$3c = react;

var _react2$35 = _interopRequireDefault$4l(_react$3c);

var _propTypes$2d = propTypes$5.exports;

var _propTypes2$2d = _interopRequireDefault$4l(_propTypes$2d);

var _reactDom$r = reactDom;

var _reactDom2$q = _interopRequireDefault$4l(_reactDom$r);

var _TransitionGroup$5 = TransitionGroup.exports;

var _TransitionGroup2$5 = _interopRequireDefault$4l(_TransitionGroup$5);

var _dom$2 = dom$1;

var _dom2$2 = _interopRequireDefault$4l(_dom$2);

var _CircleRipple$1 = CircleRipple$3;

var _CircleRipple2$1 = _interopRequireDefault$4l(_CircleRipple$1);

function _interopRequireDefault$4l(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Remove the first element of the array
var shift$1 = function shift(_ref) {
  var _ref2 = (0, _toArray3$3.default)(_ref),
      newArray = _ref2.slice(1);

  return newArray;
};

var TouchRipple$2 = function (_Component) {
  (0, _inherits3$1W.default)(TouchRipple, _Component);

  function TouchRipple(props, context) {
    (0, _classCallCheck3$1Z.default)(this, TouchRipple);

    // Touch start produces a mouse down event for compat reasons. To avoid
    // showing ripples twice we skip showing a ripple for the first mouse down
    // after a touch start. Note we don't store ignoreNextMouseDown in this.state
    // to avoid re-rendering when we change it.
    var _this = (0, _possibleConstructorReturn3$1W.default)(this, (TouchRipple.__proto__ || (0, _getPrototypeOf2$1W.default)(TouchRipple)).call(this, props, context));

    _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.start(event, false);
      }
    };

    _this.handleMouseUp = function () {
      _this.end();
    };

    _this.handleMouseLeave = function () {
      _this.end();
    };

    _this.handleTouchStart = function (event) {
      event.stopPropagation();
      // If the user is swiping (not just tapping), save the position so we can
      // abort ripples if the user appears to be scrolling.
      if (_this.props.abortOnScroll && event.touches) {
        _this.startListeningForScrollAbort(event);
        _this.startTime = Date.now();
      }
      _this.start(event, true);
    };

    _this.handleTouchEnd = function () {
      _this.end();
    };

    _this.handleTouchMove = function (event) {
      // Stop trying to abort if we're already 300ms into the animation
      var timeSinceStart = Math.abs(Date.now() - _this.startTime);
      if (timeSinceStart > 300) {
        _this.stopListeningForScrollAbort();
        return;
      }

      // If the user is scrolling...
      var deltaY = Math.abs(event.touches[0].clientY - _this.firstTouchY);
      var deltaX = Math.abs(event.touches[0].clientX - _this.firstTouchX);
      // Call it a scroll after an arbitrary 6px (feels reasonable in testing)
      if (deltaY > 6 || deltaX > 6) {
        var currentRipples = _this.state.ripples;
        var ripple = currentRipples[0];
        // This clone will replace the ripple in ReactTransitionGroup with a
        // version that will disappear immediately when removed from the DOM
        var abortedRipple = _react2$35.default.cloneElement(ripple, { aborted: true });
        // Remove the old ripple and replace it with the new updated one
        currentRipples = shift$1(currentRipples);
        currentRipples = [].concat((0, _toConsumableArray3$5.default)(currentRipples), [abortedRipple]);
        _this.setState({ ripples: currentRipples }, function () {
          // Call end after we've set the ripple to abort otherwise the setState
          // in end() merges with this and the ripple abort fails
          _this.end();
        });
      }
    };

    _this.ignoreNextMouseDown = false;

    _this.state = {
      // This prop allows us to only render the ReactTransitionGroup
      // on the first click of the component, making the inital render faster.
      hasRipples: false,
      nextKey: 0,
      ripples: []
    };
    return _this;
  }

  (0, _createClass3$1Y.default)(TouchRipple, [{
    key: 'start',
    value: function start(event, isRippleTouchGenerated) {
      var theme = this.context.muiTheme.ripple;

      if (this.ignoreNextMouseDown && !isRippleTouchGenerated) {
        this.ignoreNextMouseDown = false;
        return;
      }

      var ripples = this.state.ripples;

      // Add a ripple to the ripples array
      ripples = [].concat((0, _toConsumableArray3$5.default)(ripples), [_react2$35.default.createElement(_CircleRipple2$1.default, {
        key: this.state.nextKey,
        style: !this.props.centerRipple ? this.getRippleStyle(event) : {},
        color: this.props.color || theme.color,
        opacity: this.props.opacity,
        touchGenerated: isRippleTouchGenerated
      })]);

      this.ignoreNextMouseDown = isRippleTouchGenerated;
      this.setState({
        hasRipples: true,
        nextKey: this.state.nextKey + 1,
        ripples: ripples
      });
    }
  }, {
    key: 'end',
    value: function end() {
      var currentRipples = this.state.ripples;
      this.setState({
        ripples: shift$1(currentRipples)
      });
      if (this.props.abortOnScroll) {
        this.stopListeningForScrollAbort();
      }
    }

    // Check if the user seems to be scrolling and abort the animation if so

  }, {
    key: 'startListeningForScrollAbort',
    value: function startListeningForScrollAbort(event) {
      this.firstTouchY = event.touches[0].clientY;
      this.firstTouchX = event.touches[0].clientX;
      // Note that when scolling Chrome throttles this event to every 200ms
      // Also note we don't listen for scroll events directly as there's no general
      // way to cover cases like scrolling within containers on the page
      document.body.addEventListener('touchmove', this.handleTouchMove);
    }
  }, {
    key: 'stopListeningForScrollAbort',
    value: function stopListeningForScrollAbort() {
      document.body.removeEventListener('touchmove', this.handleTouchMove);
    }
  }, {
    key: 'getRippleStyle',
    value: function getRippleStyle(event) {
      var el = _reactDom2$q.default.findDOMNode(this);
      var elHeight = el.offsetHeight;
      var elWidth = el.offsetWidth;
      var offset = _dom2$2.default.offset(el);
      var isTouchEvent = event.touches && event.touches.length;
      var pageX = isTouchEvent ? event.touches[0].pageX : event.pageX;
      var pageY = isTouchEvent ? event.touches[0].pageY : event.pageY;
      var pointerX = pageX - offset.left;
      var pointerY = pageY - offset.top;
      var topLeftDiag = this.calcDiag(pointerX, pointerY);
      var topRightDiag = this.calcDiag(elWidth - pointerX, pointerY);
      var botRightDiag = this.calcDiag(elWidth - pointerX, elHeight - pointerY);
      var botLeftDiag = this.calcDiag(pointerX, elHeight - pointerY);
      var rippleRadius = Math.max(topLeftDiag, topRightDiag, botRightDiag, botLeftDiag);
      var rippleSize = rippleRadius * 2;
      var left = pointerX - rippleRadius;
      var top = pointerY - rippleRadius;

      return {
        directionInvariant: true,
        height: rippleSize,
        width: rippleSize,
        top: top,
        left: left
      };
    }
  }, {
    key: 'calcDiag',
    value: function calcDiag(a, b) {
      return Math.sqrt(a * a + b * b);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style;
      var _state = this.state,
          hasRipples = _state.hasRipples,
          ripples = _state.ripples;
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var rippleGroup = void 0;

      if (hasRipples) {
        var mergedStyles = (0, _simpleAssign2$1S.default)({
          height: '100%',
          width: '100%',
          position: 'absolute',
          top: 0,
          left: 0,
          overflow: 'hidden',
          pointerEvents: 'none',
          zIndex: 1 // This is also needed so that ripples do not bleed past a parent border radius.
        }, style);

        rippleGroup = _react2$35.default.createElement(
          _TransitionGroup2$5.default,
          { style: prepareStyles(mergedStyles) },
          ripples
        );
      }

      return _react2$35.default.createElement(
        'div',
        {
          onMouseUp: this.handleMouseUp,
          onMouseDown: this.handleMouseDown,
          onMouseLeave: this.handleMouseLeave,
          onTouchStart: this.handleTouchStart,
          onTouchEnd: this.handleTouchEnd
        },
        rippleGroup,
        children
      );
    }
  }]);
  return TouchRipple;
}(_react$3c.Component);

TouchRipple$2.defaultProps = {
  abortOnScroll: true
};
TouchRipple$2.contextTypes = {
  muiTheme: _propTypes2$2d.default.object.isRequired
};
TouchRipple$2.propTypes = {
  abortOnScroll: _propTypes2$2d.default.bool,
  centerRipple: _propTypes2$2d.default.bool,
  children: _propTypes2$2d.default.node,
  color: _propTypes2$2d.default.string,
  opacity: _propTypes2$2d.default.number,
  style: _propTypes2$2d.default.object
} ;
TouchRipple$3.default = TouchRipple$2;

Object.defineProperty(EnhancedButton$3, "__esModule", {
  value: true
});

var _extends2$1C = _extends$3;

var _extends3$1C = _interopRequireDefault$4k(_extends2$1C);

var _objectWithoutProperties2$1A = objectWithoutProperties$2;

var _objectWithoutProperties3$1A = _interopRequireDefault$4k(_objectWithoutProperties2$1A);

var _getPrototypeOf$1X = getPrototypeOf$1.exports;

var _getPrototypeOf2$1V = _interopRequireDefault$4k(_getPrototypeOf$1X);

var _classCallCheck2$1Y = classCallCheck$3;

var _classCallCheck3$1Y = _interopRequireDefault$4k(_classCallCheck2$1Y);

var _createClass2$1X = createClass$2;

var _createClass3$1X = _interopRequireDefault$4k(_createClass2$1X);

var _possibleConstructorReturn2$1V = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1V = _interopRequireDefault$4k(_possibleConstructorReturn2$1V);

var _inherits2$1V = inherits$3;

var _inherits3$1V = _interopRequireDefault$4k(_inherits2$1V);

var _simpleAssign$1R = simpleAssign;

var _simpleAssign2$1R = _interopRequireDefault$4k(_simpleAssign$1R);

var _react$3b = react;

var _react2$34 = _interopRequireDefault$4k(_react$3b);

var _propTypes$2c = propTypes$5.exports;

var _propTypes2$2c = _interopRequireDefault$4k(_propTypes$2c);

var _events$5 = events$1;

var _events2$5 = _interopRequireDefault$4k(_events$5);

var _keycode$e = keycode.exports;

var _keycode2$e = _interopRequireDefault$4k(_keycode$e);

var _FocusRipple$3 = FocusRipple$3;

var _FocusRipple2$3 = _interopRequireDefault$4k(_FocusRipple$3);

var _TouchRipple$2 = TouchRipple$3;

var _TouchRipple2$2 = _interopRequireDefault$4k(_TouchRipple$2);

function _interopRequireDefault$4k(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styleInjected$1 = false;
var listening$1 = false;
var tabPressed$1 = false;

function injectStyle$1() {
  if (!styleInjected$1) {
    // Remove inner padding and border in Firefox 4+.
    var style = document.createElement('style');
    style.innerHTML = '\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    ';

    document.body.appendChild(style);
    styleInjected$1 = true;
  }
}

function listenForTabPresses$1() {
  if (!listening$1) {
    _events2$5.default.on(window, 'keydown', function (event) {
      tabPressed$1 = (0, _keycode2$e.default)(event) === 'tab';
    });
    listening$1 = true;
  }
}

var EnhancedButton$2 = function (_Component) {
  (0, _inherits3$1V.default)(EnhancedButton, _Component);

  function EnhancedButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1Y.default)(this, EnhancedButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1V.default)(this, (_ref = EnhancedButton.__proto__ || (0, _getPrototypeOf2$1V.default)(EnhancedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isKeyboardFocused: false
    }, _this.handleKeyDown = function (event) {
      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
        if ((0, _keycode2$e.default)(event) === 'enter' && _this.state.isKeyboardFocused) {
          _this.handleTouchTap(event);
        }
        if ((0, _keycode2$e.default)(event) === 'esc' && _this.state.isKeyboardFocused) {
          _this.removeKeyboardFocus(event);
        }
      }
      _this.props.onKeyDown(event);
    }, _this.handleKeyUp = function (event) {
      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
        if ((0, _keycode2$e.default)(event) === 'space' && _this.state.isKeyboardFocused) {
          _this.handleTouchTap(event);
        }
      }
      _this.props.onKeyUp(event);
    }, _this.handleBlur = function (event) {
      _this.cancelFocusTimeout();
      _this.removeKeyboardFocus(event);
      _this.props.onBlur(event);
    }, _this.handleFocus = function (event) {
      if (event) event.persist();
      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
        // setTimeout is needed because the focus event fires first
        // Wait so that we can capture if this was a keyboard focus
        // or touch focus
        _this.focusTimeout = setTimeout(function () {
          if (tabPressed$1) {
            _this.setKeyboardFocus(event);
            tabPressed$1 = false;
          }
        }, 150);

        _this.props.onFocus(event);
      }
    }, _this.handleTouchTap = function (event) {
      _this.cancelFocusTimeout();
      if (!_this.props.disabled) {
        tabPressed$1 = false;
        _this.removeKeyboardFocus(event);
        _this.props.onClick(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1V.default)(_this, _ret);
  }

  (0, _createClass3$1X.default)(EnhancedButton, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          disabled = _props.disabled,
          disableKeyboardFocus = _props.disableKeyboardFocus,
          keyboardFocused = _props.keyboardFocused;

      if (!disabled && keyboardFocused && !disableKeyboardFocus) {
        this.setState({ isKeyboardFocused: true });
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      injectStyle$1();
      listenForTabPresses$1();
      if (this.state.isKeyboardFocused) {
        this.button.focus();
        this.props.onKeyboardFocus(null, true);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ((nextProps.disabled || nextProps.disableKeyboardFocus) && this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: false });
        if (nextProps.onKeyboardFocus) {
          nextProps.onKeyboardFocus(null, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.focusTimeout) {
        clearTimeout(this.focusTimeout);
      }
    }
  }, {
    key: 'isKeyboardFocused',
    value: function isKeyboardFocused() {
      return this.state.isKeyboardFocused;
    }
  }, {
    key: 'removeKeyboardFocus',
    value: function removeKeyboardFocus(event) {
      if (this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: false });
        this.props.onKeyboardFocus(event, false);
      }
    }
  }, {
    key: 'setKeyboardFocus',
    value: function setKeyboardFocus(event) {
      if (!this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: true });
        this.props.onKeyboardFocus(event, true);
      }
    }
  }, {
    key: 'cancelFocusTimeout',
    value: function cancelFocusTimeout() {
      if (this.focusTimeout) {
        clearTimeout(this.focusTimeout);
        this.focusTimeout = null;
      }
    }
  }, {
    key: 'createButtonChildren',
    value: function createButtonChildren() {
      var _props2 = this.props,
          centerRipple = _props2.centerRipple,
          children = _props2.children,
          disabled = _props2.disabled,
          disableFocusRipple = _props2.disableFocusRipple,
          disableKeyboardFocus = _props2.disableKeyboardFocus,
          disableTouchRipple = _props2.disableTouchRipple,
          focusRippleColor = _props2.focusRippleColor,
          focusRippleOpacity = _props2.focusRippleOpacity,
          touchRippleColor = _props2.touchRippleColor,
          touchRippleOpacity = _props2.touchRippleOpacity;
      var isKeyboardFocused = this.state.isKeyboardFocused;

      // Focus Ripple

      var focusRipple = isKeyboardFocused && !disabled && !disableFocusRipple && !disableKeyboardFocus ? _react2$34.default.createElement(_FocusRipple2$3.default, {
        color: focusRippleColor,
        opacity: focusRippleOpacity,
        show: isKeyboardFocused,
        style: {
          overflow: 'hidden'
        },
        key: 'focusRipple'
      }) : undefined;

      // Touch Ripple
      var touchRipple = !disabled && !disableTouchRipple ? _react2$34.default.createElement(
        _TouchRipple2$2.default,
        {
          centerRipple: centerRipple,
          color: touchRippleColor,
          opacity: touchRippleOpacity,
          key: 'touchRipple'
        },
        children
      ) : undefined;

      return [focusRipple, touchRipple, touchRipple ? undefined : children];
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props;
          _props3.centerRipple;
          var children = _props3.children,
          containerElement = _props3.containerElement,
          disabled = _props3.disabled;
          _props3.disableFocusRipple;
          var disableKeyboardFocus = _props3.disableKeyboardFocus;
          _props3.disableTouchRipple;
          _props3.focusRippleColor;
          _props3.focusRippleOpacity;
          var href = _props3.href;
          _props3.keyboardFocused;
          _props3.touchRippleColor;
          _props3.touchRippleOpacity;
          _props3.onBlur;
          _props3.onClick;
          _props3.onFocus;
          _props3.onKeyUp;
          _props3.onKeyDown;
          _props3.onKeyboardFocus;
          var style = _props3.style,
          tabIndex = _props3.tabIndex,
          type = _props3.type,
          other = (0, _objectWithoutProperties3$1A.default)(_props3, ['centerRipple', 'children', 'containerElement', 'disabled', 'disableFocusRipple', 'disableKeyboardFocus', 'disableTouchRipple', 'focusRippleColor', 'focusRippleOpacity', 'href', 'keyboardFocused', 'touchRippleColor', 'touchRippleOpacity', 'onBlur', 'onClick', 'onFocus', 'onKeyUp', 'onKeyDown', 'onKeyboardFocus', 'style', 'tabIndex', 'type']);
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          enhancedButton = _context$muiTheme.enhancedButton;


      var mergedStyles = (0, _simpleAssign2$1R.default)({
        border: 10,
        boxSizing: 'border-box',
        display: 'inline-block',
        fontFamily: this.context.muiTheme.baseTheme.fontFamily,
        WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)
        cursor: disabled ? 'default' : 'pointer',
        textDecoration: 'none',
        margin: 0,
        padding: 0,
        outline: 'none',
        fontSize: 'inherit',
        fontWeight: 'inherit',
        position: 'relative', // This is needed so that ripples do not bleed past border radius.
        verticalAlign: href ? 'middle' : null
      }, style);

      // Passing both background:none & backgroundColor can break due to object iteration order
      if (!mergedStyles.backgroundColor && !mergedStyles.background) {
        mergedStyles.background = 'none';
      }

      if (disabled && href) {
        return _react2$34.default.createElement(
          'span',
          (0, _extends3$1C.default)({}, other, {
            style: mergedStyles
          }),
          children
        );
      }

      var buttonProps = (0, _extends3$1C.default)({}, other, {
        style: prepareStyles(mergedStyles),
        ref: function ref(node) {
          return _this2.button = node;
        },
        disabled: disabled,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onKeyUp: this.handleKeyUp,
        onKeyDown: this.handleKeyDown,
        onClick: this.handleTouchTap,
        tabIndex: disabled || disableKeyboardFocus ? -1 : tabIndex
      });

      if (href) buttonProps.href = href;

      var buttonChildren = this.createButtonChildren();

      if (_react2$34.default.isValidElement(containerElement)) {
        return _react2$34.default.cloneElement(containerElement, buttonProps, buttonChildren);
      }

      if (!href && containerElement === 'button') {
        buttonProps.type = type;
      }

      return _react2$34.default.createElement(href ? 'a' : containerElement, buttonProps, buttonChildren);
    }
  }]);
  return EnhancedButton;
}(_react$3b.Component);

EnhancedButton$2.defaultProps = {
  containerElement: 'button',
  onBlur: function onBlur() {},
  onClick: function onClick() {},
  onFocus: function onFocus() {},
  onKeyDown: function onKeyDown() {},
  onKeyUp: function onKeyUp() {},
  onKeyboardFocus: function onKeyboardFocus() {},
  tabIndex: 0,
  type: 'button'
};
EnhancedButton$2.contextTypes = {
  muiTheme: _propTypes2$2c.default.object.isRequired
};
EnhancedButton$2.propTypes = {
  centerRipple: _propTypes2$2c.default.bool,
  children: _propTypes2$2c.default.node,
  containerElement: _propTypes2$2c.default.oneOfType([_propTypes2$2c.default.string, _propTypes2$2c.default.element]),
  disableFocusRipple: _propTypes2$2c.default.bool,
  disableKeyboardFocus: _propTypes2$2c.default.bool,
  disableTouchRipple: _propTypes2$2c.default.bool,
  disabled: _propTypes2$2c.default.bool,
  focusRippleColor: _propTypes2$2c.default.string,
  focusRippleOpacity: _propTypes2$2c.default.number,
  href: _propTypes2$2c.default.string,
  keyboardFocused: _propTypes2$2c.default.bool,
  onBlur: _propTypes2$2c.default.func,
  onClick: _propTypes2$2c.default.func,
  onFocus: _propTypes2$2c.default.func,
  onKeyDown: _propTypes2$2c.default.func,
  onKeyUp: _propTypes2$2c.default.func,
  onKeyboardFocus: _propTypes2$2c.default.func,
  style: _propTypes2$2c.default.object,
  tabIndex: _propTypes2$2c.default.number,
  touchRippleColor: _propTypes2$2c.default.string,
  touchRippleOpacity: _propTypes2$2c.default.number,
  type: _propTypes2$2c.default.string
} ;
EnhancedButton$3.default = EnhancedButton$2;

var FlatButtonLabel$3 = {};

Object.defineProperty(FlatButtonLabel$3, "__esModule", {
  value: true
});

var _getPrototypeOf$1W = getPrototypeOf$1.exports;

var _getPrototypeOf2$1U = _interopRequireDefault$4j(_getPrototypeOf$1W);

var _classCallCheck2$1X = classCallCheck$3;

var _classCallCheck3$1X = _interopRequireDefault$4j(_classCallCheck2$1X);

var _createClass2$1W = createClass$2;

var _createClass3$1W = _interopRequireDefault$4j(_createClass2$1W);

var _possibleConstructorReturn2$1U = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1U = _interopRequireDefault$4j(_possibleConstructorReturn2$1U);

var _inherits2$1U = inherits$3;

var _inherits3$1U = _interopRequireDefault$4j(_inherits2$1U);

var _simpleAssign$1Q = simpleAssign;

var _simpleAssign2$1Q = _interopRequireDefault$4j(_simpleAssign$1Q);

var _react$3a = react;

var _react2$33 = _interopRequireDefault$4j(_react$3a);

var _propTypes$2b = propTypes$5.exports;

var _propTypes2$2b = _interopRequireDefault$4j(_propTypes$2b);

function _interopRequireDefault$4j(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1k(props, context) {
  var baseTheme = context.muiTheme.baseTheme;


  return {
    root: {
      position: 'relative',
      paddingLeft: baseTheme.spacing.desktopGutterLess,
      paddingRight: baseTheme.spacing.desktopGutterLess,
      verticalAlign: 'middle'
    }
  };
}

var FlatButtonLabel$2 = function (_Component) {
  (0, _inherits3$1U.default)(FlatButtonLabel, _Component);

  function FlatButtonLabel() {
    (0, _classCallCheck3$1X.default)(this, FlatButtonLabel);
    return (0, _possibleConstructorReturn3$1U.default)(this, (FlatButtonLabel.__proto__ || (0, _getPrototypeOf2$1U.default)(FlatButtonLabel)).apply(this, arguments));
  }

  (0, _createClass3$1W.default)(FlatButtonLabel, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          style = _props.style;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1k(this.props, this.context);

      return _react2$33.default.createElement(
        'span',
        { style: prepareStyles((0, _simpleAssign2$1Q.default)(styles.root, style)) },
        label
      );
    }
  }]);
  return FlatButtonLabel;
}(_react$3a.Component);

FlatButtonLabel$2.contextTypes = {
  muiTheme: _propTypes2$2b.default.object.isRequired
};
FlatButtonLabel$2.propTypes = {
  label: _propTypes2$2b.default.node,
  style: _propTypes2$2b.default.object
} ;
FlatButtonLabel$3.default = FlatButtonLabel$2;

Object.defineProperty(FlatButton$5, "__esModule", {
  value: true
});

var _extends2$1B = _extends$3;

var _extends3$1B = _interopRequireDefault$4i(_extends2$1B);

var _objectWithoutProperties2$1z = objectWithoutProperties$2;

var _objectWithoutProperties3$1z = _interopRequireDefault$4i(_objectWithoutProperties2$1z);

var _getPrototypeOf$1V = getPrototypeOf$1.exports;

var _getPrototypeOf2$1T = _interopRequireDefault$4i(_getPrototypeOf$1V);

var _classCallCheck2$1W = classCallCheck$3;

var _classCallCheck3$1W = _interopRequireDefault$4i(_classCallCheck2$1W);

var _createClass2$1V = createClass$2;

var _createClass3$1V = _interopRequireDefault$4i(_createClass2$1V);

var _possibleConstructorReturn2$1T = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1T = _interopRequireDefault$4i(_possibleConstructorReturn2$1T);

var _inherits2$1T = inherits$3;

var _inherits3$1T = _interopRequireDefault$4i(_inherits2$1T);

var _simpleAssign$1P = simpleAssign;

var _simpleAssign2$1P = _interopRequireDefault$4i(_simpleAssign$1P);

var _react$39 = react;

var _react2$32 = _interopRequireDefault$4i(_react$39);

var _propTypes$2a = propTypes$5.exports;

var _propTypes2$2a = _interopRequireDefault$4i(_propTypes$2a);

var _transitions$R = transitions$1;

var _transitions2$R = _interopRequireDefault$4i(_transitions$R);

var _colorManipulator$a = colorManipulator$1;

var _EnhancedButton$e = EnhancedButton$3;

var _EnhancedButton2$e = _interopRequireDefault$4i(_EnhancedButton$e);

var _FlatButtonLabel$1 = FlatButtonLabel$3;

var _FlatButtonLabel2$1 = _interopRequireDefault$4i(_FlatButtonLabel$1);

function _interopRequireDefault$4i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validateLabel$3(props, propName, componentName) {
  {
    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
    }
  }
}

var FlatButton$4 = function (_Component) {
  (0, _inherits3$1T.default)(FlatButton, _Component);

  function FlatButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1W.default)(this, FlatButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1T.default)(this, (_ref = FlatButton.__proto__ || (0, _getPrototypeOf2$1T.default)(FlatButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      touch: false
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      _this.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleMouseEnter = function (event) {
      // Cancel hover styles for touch devices
      if (!_this.state.touch) _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchStart(event);
    }, _temp), (0, _possibleConstructorReturn3$1T.default)(_this, _ret);
  }

  (0, _createClass3$1V.default)(FlatButton, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled) {
        this.setState({
          hovered: false
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          backgroundColor = _props.backgroundColor,
          children = _props.children,
          disabled = _props.disabled,
          fullWidth = _props.fullWidth,
          hoverColor = _props.hoverColor,
          icon = _props.icon,
          label = _props.label,
          labelStyle = _props.labelStyle,
          labelPosition = _props.labelPosition,
          primary = _props.primary,
          rippleColor = _props.rippleColor,
          secondary = _props.secondary,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1z.default)(_props, ['backgroundColor', 'children', 'disabled', 'fullWidth', 'hoverColor', 'icon', 'label', 'labelStyle', 'labelPosition', 'primary', 'rippleColor', 'secondary', 'style']);
      var _context$muiTheme = this.context.muiTheme,
          borderRadius = _context$muiTheme.borderRadius,
          _context$muiTheme$but = _context$muiTheme.button,
          buttonHeight = _context$muiTheme$but.height,
          buttonMinWidth = _context$muiTheme$but.minWidth,
          buttonTextTransform = _context$muiTheme$but.textTransform,
          _context$muiTheme$fla = _context$muiTheme.flatButton,
          buttonFilterColor = _context$muiTheme$fla.buttonFilterColor,
          buttonColor = _context$muiTheme$fla.color,
          disabledTextColor = _context$muiTheme$fla.disabledTextColor,
          fontSize = _context$muiTheme$fla.fontSize,
          fontWeight = _context$muiTheme$fla.fontWeight,
          primaryTextColor = _context$muiTheme$fla.primaryTextColor,
          secondaryTextColor = _context$muiTheme$fla.secondaryTextColor,
          textColor = _context$muiTheme$fla.textColor,
          _context$muiTheme$fla2 = _context$muiTheme$fla.textTransform,
          textTransform = _context$muiTheme$fla2 === undefined ? buttonTextTransform || 'uppercase' : _context$muiTheme$fla2;

      var defaultTextColor = disabled ? disabledTextColor : primary ? primaryTextColor : secondary ? secondaryTextColor : textColor;

      var defaultHoverColor = (0, _colorManipulator$a.fade)(buttonFilterColor, 0.2);
      var defaultRippleColor = buttonFilterColor;
      var buttonHoverColor = hoverColor || defaultHoverColor;
      var buttonRippleColor = rippleColor || defaultRippleColor;
      var buttonBackgroundColor = backgroundColor || buttonColor;
      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

      var mergedRootStyles = (0, _simpleAssign2$1P.default)({}, {
        height: buttonHeight,
        lineHeight: buttonHeight + 'px',
        minWidth: fullWidth ? '100%' : buttonMinWidth,
        color: defaultTextColor,
        transition: _transitions2$R.default.easeOut(),
        borderRadius: borderRadius,
        userSelect: 'none',
        overflow: 'hidden',
        backgroundColor: hovered ? buttonHoverColor : buttonBackgroundColor,
        padding: 0,
        margin: 0,
        textAlign: 'center'
      }, style);

      var iconCloned = void 0;
      var labelStyleIcon = {};

      if (icon) {
        var iconStyles = (0, _simpleAssign2$1P.default)({
          verticalAlign: 'middle',
          marginLeft: label && labelPosition !== 'before' ? 12 : 0,
          marginRight: label && labelPosition === 'before' ? 12 : 0
        }, icon.props.style);
        iconCloned = _react2$32.default.cloneElement(icon, {
          color: icon.props.color || mergedRootStyles.color,
          style: iconStyles,
          key: 'iconCloned'
        });

        if (labelPosition === 'before') {
          labelStyleIcon.paddingRight = 8;
        } else {
          labelStyleIcon.paddingLeft = 8;
        }
      }

      var mergedLabelStyles = (0, _simpleAssign2$1P.default)({
        letterSpacing: 0,
        textTransform: textTransform,
        fontWeight: fontWeight,
        fontSize: fontSize
      }, labelStyleIcon, labelStyle);

      var labelElement = label ? _react2$32.default.createElement(_FlatButtonLabel2$1.default, { key: 'labelElement', label: label, style: mergedLabelStyles }) : undefined;

      // Place label before or after children.
      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

      return _react2$32.default.createElement(
        _EnhancedButton2$e.default,
        (0, _extends3$1B.default)({}, other, {
          disabled: disabled,
          focusRippleColor: buttonRippleColor,
          focusRippleOpacity: 0.3,
          onKeyboardFocus: this.handleKeyboardFocus,
          onMouseLeave: this.handleMouseLeave,
          onMouseEnter: this.handleMouseEnter,
          onTouchStart: this.handleTouchStart,
          style: mergedRootStyles,
          touchRippleColor: buttonRippleColor,
          touchRippleOpacity: 0.3
        }),
        enhancedButtonChildren
      );
    }
  }]);
  return FlatButton;
}(_react$39.Component);

FlatButton$4.muiName = 'FlatButton';
FlatButton$4.defaultProps = {
  disabled: false,
  fullWidth: false,
  labelStyle: {},
  labelPosition: 'after',
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onTouchStart: function onTouchStart() {},
  primary: false,
  secondary: false
};
FlatButton$4.contextTypes = {
  muiTheme: _propTypes2$2a.default.object.isRequired
};
FlatButton$4.propTypes = {
  /**
   * Color of button when mouse is not hovering over it.
   */
  backgroundColor: _propTypes2$2a.default.string,
  /**
   * This is what will be displayed inside the button.
   * If a label is specified, the text within the label prop will
   * be displayed. Otherwise, the component will expect children
   * which will then be displayed. (In our example,
   * we are nesting an `<input type="file" />` and a `span`
   * that acts as our label to be displayed.) This only
   * applies to flat and raised buttons.
   */
  children: _propTypes2$2a.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$2a.default.string,
  /**
   * The element to use as the container for the FlatButton. Either a string to
   * use a DOM element or a ReactElement. This is useful for wrapping the
   * FlatButton in a custom Link component. If a ReactElement is given, ensure
   * that it passes all of its given props through to the underlying DOM
   * element and renders its children prop for proper integration.
   */
  containerElement: _propTypes2$2a.default.oneOfType([_propTypes2$2a.default.string, _propTypes2$2a.default.element]),
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$2a.default.bool,
  /**
   * Disables the button if set to true.
   */
  disabled: _propTypes2$2a.default.bool,
  /**
   * If true, the button will take up the full width of its container.
   */
  fullWidth: _propTypes2$2a.default.bool,
  /**
   * Color of button when mouse hovers over.
   */
  hoverColor: _propTypes2$2a.default.string,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$2a.default.string,
  /**
   * Use this property to display an icon.
   */
  icon: _propTypes2$2a.default.node,
  /**
   * Label for the button.
   */
  label: validateLabel$3,
  /**
   * Place label before or after the passed children.
   */
  labelPosition: _propTypes2$2a.default.oneOf(['before', 'after']),
  /**
   * Override the inline-styles of the button's label element.
   */
  labelStyle: _propTypes2$2a.default.object,
  /**
   * Callback function fired when the button is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the button.
   */
  onClick: _propTypes2$2a.default.func,
  /**
   * Callback function fired when the element is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the element.
   * @param {boolean} isKeyboardFocused Indicates whether the element is focused.
   */
  onKeyboardFocus: _propTypes2$2a.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$2a.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$2a.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$2a.default.func,
  /**
   * If true, colors button according to
   * primaryTextColor from the Theme.
   */
  primary: _propTypes2$2a.default.bool,
  /**
   * Color for the ripple after button is clicked.
   */
  rippleColor: _propTypes2$2a.default.string,
  /**
   * If true, colors button according to secondaryTextColor from the theme.
   * The primary prop has precendent if set to true.
   */
  secondary: _propTypes2$2a.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2a.default.object
} ;
var _default$13 = FlatButton$5.default = FlatButton$4;

var RaisedButton$5 = {};

var RaisedButton$4 = {};

Object.defineProperty(RaisedButton$4, "__esModule", {
  value: true
});

var _extends2$1A = _extends$3;

var _extends3$1A = _interopRequireDefault$4h(_extends2$1A);

var _objectWithoutProperties2$1y = objectWithoutProperties$2;

var _objectWithoutProperties3$1y = _interopRequireDefault$4h(_objectWithoutProperties2$1y);

var _getPrototypeOf$1U = getPrototypeOf$1.exports;

var _getPrototypeOf2$1S = _interopRequireDefault$4h(_getPrototypeOf$1U);

var _classCallCheck2$1V = classCallCheck$3;

var _classCallCheck3$1V = _interopRequireDefault$4h(_classCallCheck2$1V);

var _createClass2$1U = createClass$2;

var _createClass3$1U = _interopRequireDefault$4h(_createClass2$1U);

var _possibleConstructorReturn2$1S = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1S = _interopRequireDefault$4h(_possibleConstructorReturn2$1S);

var _inherits2$1S = inherits$3;

var _inherits3$1S = _interopRequireDefault$4h(_inherits2$1S);

var _simpleAssign$1O = simpleAssign;

var _simpleAssign2$1O = _interopRequireDefault$4h(_simpleAssign$1O);

var _react$38 = react;

var _react2$31 = _interopRequireDefault$4h(_react$38);

var _propTypes$29 = propTypes$5.exports;

var _propTypes2$29 = _interopRequireDefault$4h(_propTypes$29);

var _transitions$Q = transitions$1;

var _transitions2$Q = _interopRequireDefault$4h(_transitions$Q);

var _colorManipulator$9 = colorManipulator$1;

var _EnhancedButton$d = EnhancedButton$3;

var _EnhancedButton2$d = _interopRequireDefault$4h(_EnhancedButton$d);

var _Paper$g = Paper$5;

var _Paper2$g = _interopRequireDefault$4h(_Paper$g);

function _interopRequireDefault$4h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validateLabel$2(props, propName, componentName) {
  {
    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
    }
  }
}

function getStyles$1j(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      button = _context$muiTheme.button,
      raisedButton = _context$muiTheme.raisedButton,
      borderRadius = _context$muiTheme.borderRadius;
  var disabled = props.disabled,
      disabledBackgroundColor = props.disabledBackgroundColor,
      disabledLabelColor = props.disabledLabelColor,
      fullWidth = props.fullWidth,
      icon = props.icon,
      label = props.label,
      labelPosition = props.labelPosition,
      primary = props.primary,
      secondary = props.secondary,
      style = props.style;


  var amount = primary || secondary ? 0.4 : 0.08;

  var backgroundColor = raisedButton.color;
  var labelColor = raisedButton.textColor;

  if (disabled) {
    backgroundColor = disabledBackgroundColor || raisedButton.disabledColor;
    labelColor = disabledLabelColor || raisedButton.disabledTextColor;
  } else if (primary) {
    backgroundColor = raisedButton.primaryColor;
    labelColor = raisedButton.primaryTextColor;
  } else if (secondary) {
    backgroundColor = raisedButton.secondaryColor;
    labelColor = raisedButton.secondaryTextColor;
  } else {
    if (props.backgroundColor) {
      backgroundColor = props.backgroundColor;
    }
    if (props.labelColor) {
      labelColor = props.labelColor;
    }
  }

  var buttonHeight = style && style.height || button.height;

  return {
    root: {
      display: 'inline-block',
      transition: _transitions2$Q.default.easeOut(),
      minWidth: fullWidth ? '100%' : button.minWidth
    },
    button: {
      height: buttonHeight,
      lineHeight: buttonHeight + 'px',
      width: '100%',
      padding: 0,
      borderRadius: borderRadius,
      transition: _transitions2$Q.default.easeOut(),
      backgroundColor: backgroundColor,
      // That's the default value for a button but not a link
      textAlign: 'center'
    },
    label: {
      position: 'relative',
      opacity: 1,
      fontSize: raisedButton.fontSize,
      letterSpacing: 0,
      textTransform: raisedButton.textTransform || button.textTransform || 'uppercase',
      fontWeight: raisedButton.fontWeight,
      margin: 0,
      userSelect: 'none',
      paddingLeft: icon && labelPosition !== 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
      paddingRight: icon && labelPosition === 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
      color: labelColor
    },
    icon: {
      verticalAlign: 'middle',
      marginLeft: label && labelPosition !== 'before' ? 12 : 0,
      marginRight: label && labelPosition === 'before' ? 12 : 0
    },
    overlay: {
      height: buttonHeight,
      borderRadius: borderRadius,
      backgroundColor: (state.keyboardFocused || state.hovered) && !disabled && (0, _colorManipulator$9.fade)(labelColor, amount),
      transition: _transitions2$Q.default.easeOut(),
      top: 0
    },
    ripple: {
      color: labelColor,
      opacity: !(primary || secondary) ? 0.1 : 0.16
    }
  };
}

var RaisedButton$3 = function (_Component) {
  (0, _inherits3$1S.default)(RaisedButton, _Component);

  function RaisedButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1V.default)(this, RaisedButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1S.default)(this, (_ref = RaisedButton.__proto__ || (0, _getPrototypeOf2$1S.default)(RaisedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      keyboardFocused: false,
      touched: false,
      initialZDepth: 0,
      zDepth: 0
    }, _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.setState({
          zDepth: _this.state.initialZDepth + 1
        });
      }
      if (_this.props.onMouseDown) {
        _this.props.onMouseDown(event);
      }
    }, _this.handleMouseUp = function (event) {
      _this.setState({
        zDepth: _this.state.initialZDepth
      });
      if (_this.props.onMouseUp) {
        _this.props.onMouseUp(event);
      }
    }, _this.handleMouseLeave = function (event) {
      if (!_this.state.keyboardFocused) {
        _this.setState({
          zDepth: _this.state.initialZDepth,
          hovered: false
        });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseEnter = function (event) {
      if (!_this.state.keyboardFocused && !_this.state.touched) {
        _this.setState({
          hovered: true
        });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _this.handleTouchStart = function (event) {
      _this.setState({
        touched: true,
        zDepth: _this.state.initialZDepth + 1
      });

      if (_this.props.onTouchStart) {
        _this.props.onTouchStart(event);
      }
    }, _this.handleTouchEnd = function (event) {
      _this.setState({
        touched: true,
        zDepth: _this.state.initialZDepth
      });

      if (_this.props.onTouchEnd) {
        _this.props.onTouchEnd(event);
      }
    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
      var zDepth = keyboardFocused && !_this.props.disabled ? _this.state.initialZDepth + 1 : _this.state.initialZDepth;

      _this.setState({
        zDepth: zDepth,
        keyboardFocused: keyboardFocused
      });
    }, _temp), (0, _possibleConstructorReturn3$1S.default)(_this, _ret);
  }

  (0, _createClass3$1U.default)(RaisedButton, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var zDepth = this.props.disabled ? 0 : 1;
      this.setState({
        zDepth: zDepth,
        initialZDepth: zDepth
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var zDepth = nextProps.disabled ? 0 : 1;
      var nextState = {
        zDepth: zDepth,
        initialZDepth: zDepth
      };

      if (nextProps.disabled) {
        nextState.hovered = false;
      }

      this.setState(nextState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.backgroundColor;
          var buttonStyle = _props.buttonStyle,
          children = _props.children,
          className = _props.className,
          disabled = _props.disabled;
          _props.disabledBackgroundColor;
          _props.disabledLabelColor;
          _props.fullWidth;
          var icon = _props.icon,
          label = _props.label;
          _props.labelColor;
          var labelPosition = _props.labelPosition,
          labelStyle = _props.labelStyle,
          overlayStyle = _props.overlayStyle;
          _props.primary;
          var rippleStyle = _props.rippleStyle;
          _props.secondary;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$1y.default)(_props, ['backgroundColor', 'buttonStyle', 'children', 'className', 'disabled', 'disabledBackgroundColor', 'disabledLabelColor', 'fullWidth', 'icon', 'label', 'labelColor', 'labelPosition', 'labelStyle', 'overlayStyle', 'primary', 'rippleStyle', 'secondary', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1j(this.props, this.context, this.state);
      var mergedRippleStyles = (0, _simpleAssign2$1O.default)({}, styles.ripple, rippleStyle);

      var buttonEventHandlers = disabled ? {} : {
        onMouseDown: this.handleMouseDown,
        onMouseUp: this.handleMouseUp,
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        onTouchStart: this.handleTouchStart,
        onTouchEnd: this.handleTouchEnd,
        onKeyboardFocus: this.handleKeyboardFocus
      };

      var labelElement = label && _react2$31.default.createElement(
        'span',
        { style: prepareStyles((0, _simpleAssign2$1O.default)(styles.label, labelStyle)), key: 'labelElement' },
        label
      );

      var iconCloned = icon && (0, _react$38.cloneElement)(icon, {
        color: icon.props.color || styles.label.color,
        style: (0, _simpleAssign2$1O.default)(styles.icon, icon.props.style),
        key: 'iconCloned'
      });

      // Place label before or after children.
      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

      return _react2$31.default.createElement(
        _Paper2$g.default,
        {
          className: className,
          style: (0, _simpleAssign2$1O.default)(styles.root, style),
          zDepth: this.state.zDepth
        },
        _react2$31.default.createElement(
          _EnhancedButton2$d.default,
          (0, _extends3$1A.default)({}, other, buttonEventHandlers, {
            ref: 'container',
            disabled: disabled,
            style: (0, _simpleAssign2$1O.default)(styles.button, buttonStyle),
            focusRippleColor: mergedRippleStyles.color,
            touchRippleColor: mergedRippleStyles.color,
            focusRippleOpacity: mergedRippleStyles.opacity,
            touchRippleOpacity: mergedRippleStyles.opacity
          }),
          _react2$31.default.createElement(
            'div',
            {
              ref: 'overlay',
              style: prepareStyles((0, _simpleAssign2$1O.default)(styles.overlay, overlayStyle))
            },
            enhancedButtonChildren
          )
        )
      );
    }
  }]);
  return RaisedButton;
}(_react$38.Component);

RaisedButton$3.muiName = 'RaisedButton';
RaisedButton$3.defaultProps = {
  disabled: false,
  labelPosition: 'after',
  fullWidth: false,
  primary: false,
  secondary: false
};
RaisedButton$3.contextTypes = {
  muiTheme: _propTypes2$29.default.object.isRequired
};
RaisedButton$3.propTypes = {
  /**
   * Override the default background color for the button,
   * but not the default disabled background color
   * (use `disabledBackgroundColor` for this).
   */
  backgroundColor: _propTypes2$29.default.string,
  /**
   * Override the inline-styles of the button element.
   */
  buttonStyle: _propTypes2$29.default.object,
  /**
   * The content of the button.
   * If a label is provided via the `label` prop, the text within the label
   * will be displayed in addition to the content provided here.
   */
  children: _propTypes2$29.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$29.default.string,
  /**
    * The element to use as the container for the RaisedButton. Either a string to
    * use a DOM element or a ReactElement. This is useful for wrapping the
    * RaisedButton in a custom Link component. If a ReactElement is given, ensure
    * that it passes all of its given props through to the underlying DOM
    * element and renders its children prop for proper integration.
    */
  containerElement: _propTypes2$29.default.oneOfType([_propTypes2$29.default.string, _propTypes2$29.default.element]),
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$29.default.bool,
  /**
   * If true, the button will be disabled.
   */
  disabled: _propTypes2$29.default.bool,
  /**
   * Override the default background color for the button
   * when it is disabled.
   */
  disabledBackgroundColor: _propTypes2$29.default.string,
  /**
   * The color of the button's label when the button is disabled.
   */
  disabledLabelColor: _propTypes2$29.default.string,
  /**
   * If true, the button will take up the full width of its container.
   */
  fullWidth: _propTypes2$29.default.bool,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$29.default.string,
  /**
   * An icon to be displayed within the button.
   */
  icon: _propTypes2$29.default.node,
  /**
   * The label to be displayed within the button.
   * If content is provided via the `children` prop, that content will be
   * displayed in addition to the label provided here.
   */
  label: validateLabel$2,
  /**
   * The color of the button's label.
   */
  labelColor: _propTypes2$29.default.string,
  /**
   * The position of the button's label relative to the button's `children`.
   */
  labelPosition: _propTypes2$29.default.oneOf(['before', 'after']),
  /**
   * Override the inline-styles of the button's label element.
   */
  labelStyle: _propTypes2$29.default.object,
  /**
   * Callback function fired when the button is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the button.
   */
  onClick: _propTypes2$29.default.func,
  /** @ignore */
  onMouseDown: _propTypes2$29.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$29.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$29.default.func,
  /** @ignore */
  onMouseUp: _propTypes2$29.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$29.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$29.default.func,
  /**
   * Override the inline style of the button overlay.
   */
  overlayStyle: _propTypes2$29.default.object,
  /**
   * If true, the button will use the theme's primary color.
   */
  primary: _propTypes2$29.default.bool,
  /**
   * Override the inline style of the ripple element.
   */
  rippleStyle: _propTypes2$29.default.object,
  /**
   * If true, the button will use the theme's secondary color.
   * If both `secondary` and `primary` are true, the button will use
   * the theme's primary color.
   */
  secondary: _propTypes2$29.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$29.default.object
} ;
RaisedButton$4.default = RaisedButton$3;

Object.defineProperty(RaisedButton$5, "__esModule", {
  value: true
});
var _default$12 = RaisedButton$5.default = undefined;

var _RaisedButton$1 = RaisedButton$4;

var _RaisedButton2$1 = _interopRequireDefault$4g(_RaisedButton$1);

function _interopRequireDefault$4g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$12 = RaisedButton$5.default = _RaisedButton2$1.default;

var Snackbar$5 = {};

var Snackbar$4 = {};

var ClickAwayListener$3 = {};

Object.defineProperty(ClickAwayListener$3, "__esModule", {
  value: true
});

var _getPrototypeOf$1T = getPrototypeOf$1.exports;

var _getPrototypeOf2$1R = _interopRequireDefault$4f(_getPrototypeOf$1T);

var _classCallCheck2$1U = classCallCheck$3;

var _classCallCheck3$1U = _interopRequireDefault$4f(_classCallCheck2$1U);

var _createClass2$1T = createClass$2;

var _createClass3$1T = _interopRequireDefault$4f(_createClass2$1T);

var _possibleConstructorReturn2$1R = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1R = _interopRequireDefault$4f(_possibleConstructorReturn2$1R);

var _inherits2$1R = inherits$3;

var _inherits3$1R = _interopRequireDefault$4f(_inherits2$1R);

var _react$37 = react;

var _propTypes$28 = propTypes$5.exports;

var _propTypes2$28 = _interopRequireDefault$4f(_propTypes$28);

var _reactDom$q = reactDom;

var _reactDom2$p = _interopRequireDefault$4f(_reactDom$q);

var _events$4 = events$1;

var _events2$4 = _interopRequireDefault$4f(_events$4);

function _interopRequireDefault$4f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDescendant$1 = function isDescendant(el, target) {
  if (target !== null) {
    return el === target || isDescendant(el, target.parentNode);
  }
  return false;
};

var clickAwayEvents$1 = ['mouseup', 'touchend'];
var bind$1 = function bind(callback) {
  return clickAwayEvents$1.forEach(function (event) {
    return _events2$4.default.on(document, event, callback);
  });
};
var unbind$1 = function unbind(callback) {
  return clickAwayEvents$1.forEach(function (event) {
    return _events2$4.default.off(document, event, callback);
  });
};

var ClickAwayListener$2 = function (_Component) {
  (0, _inherits3$1R.default)(ClickAwayListener, _Component);

  function ClickAwayListener() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1U.default)(this, ClickAwayListener);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1R.default)(this, (_ref = ClickAwayListener.__proto__ || (0, _getPrototypeOf2$1R.default)(ClickAwayListener)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickAway = function (event) {
      if (event.defaultPrevented) {
        return;
      }

      // IE11 support, which trigger the handleClickAway even after the unbind
      if (_this.isCurrentlyMounted) {
        var el = _reactDom2$p.default.findDOMNode(_this);

        if (document.documentElement.contains(event.target) && !isDescendant$1(el, event.target)) {
          _this.props.onClickAway(event);
        }
      }
    }, _temp), (0, _possibleConstructorReturn3$1R.default)(_this, _ret);
  }

  (0, _createClass3$1T.default)(ClickAwayListener, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.isCurrentlyMounted = true;
      if (this.props.onClickAway) {
        bind$1(this.handleClickAway);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.onClickAway !== this.props.onClickAway) {
        unbind$1(this.handleClickAway);
        if (this.props.onClickAway) {
          bind$1(this.handleClickAway);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.isCurrentlyMounted = false;
      unbind$1(this.handleClickAway);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);
  return ClickAwayListener;
}(_react$37.Component);

ClickAwayListener$2.propTypes = {
  children: _propTypes2$28.default.element,
  onClickAway: _propTypes2$28.default.func
} ;
ClickAwayListener$3.default = ClickAwayListener$2;

var SnackbarBody$3 = {};

var withWidth$3 = {};

Object.defineProperty(withWidth$3, "__esModule", {
  value: true
});
withWidth$3.LARGE = withWidth$3.MEDIUM = withWidth$3.SMALL = undefined;

var _extends2$1z = _extends$3;

var _extends3$1z = _interopRequireDefault$4e(_extends2$1z);

var _getPrototypeOf$1S = getPrototypeOf$1.exports;

var _getPrototypeOf2$1Q = _interopRequireDefault$4e(_getPrototypeOf$1S);

var _classCallCheck2$1T = classCallCheck$3;

var _classCallCheck3$1T = _interopRequireDefault$4e(_classCallCheck2$1T);

var _createClass2$1S = createClass$2;

var _createClass3$1S = _interopRequireDefault$4e(_createClass2$1S);

var _possibleConstructorReturn2$1Q = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1Q = _interopRequireDefault$4e(_possibleConstructorReturn2$1Q);

var _inherits2$1Q = inherits$3;

var _inherits3$1Q = _interopRequireDefault$4e(_inherits2$1Q);

withWidth$3.default = withWidth$2;

var _react$36 = react;

var _react2$30 = _interopRequireDefault$4e(_react$36);

var _reactEventListener$b = reactEventListener_cjs$1;

var _reactEventListener2$b = _interopRequireDefault$4e(_reactEventListener$b);

function _interopRequireDefault$4e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SMALL$1 = withWidth$3.SMALL = 1;
var MEDIUM$1 = withWidth$3.MEDIUM = 2;
var LARGE$1 = withWidth$3.LARGE = 3;

function withWidth$2() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$largeWidth = options.largeWidth,
      largeWidth = _options$largeWidth === undefined ? 992 : _options$largeWidth,
      _options$mediumWidth = options.mediumWidth,
      mediumWidth = _options$mediumWidth === undefined ? 768 : _options$mediumWidth,
      _options$resizeInterv = options.resizeInterval,
      resizeInterval = _options$resizeInterv === undefined ? 166 : _options$resizeInterv;


  return function (MyComponent) {
    return function (_Component) {
      (0, _inherits3$1Q.default)(WithWidth, _Component);

      function WithWidth() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3$1T.default)(this, WithWidth);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1Q.default)(this, (_ref = WithWidth.__proto__ || (0, _getPrototypeOf2$1Q.default)(WithWidth)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          width: null
        }, _this.handleResize = function () {
          clearTimeout(_this.deferTimer);
          _this.deferTimer = setTimeout(function () {
            _this.updateWidth();
          }, resizeInterval);
        }, _temp), (0, _possibleConstructorReturn3$1Q.default)(_this, _ret);
      }

      (0, _createClass3$1S.default)(WithWidth, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          this.updateWidth();
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          clearTimeout(this.deferTimer);
        }
      }, {
        key: 'updateWidth',
        value: function updateWidth() {
          var innerWidth = window.innerWidth;
          var width = void 0;

          if (innerWidth >= largeWidth) {
            width = LARGE$1;
          } else if (innerWidth >= mediumWidth) {
            width = MEDIUM$1;
          } else {
            // innerWidth < 768
            width = SMALL$1;
          }

          if (width !== this.state.width) {
            this.setState({
              width: width
            });
          }
        }
      }, {
        key: 'render',
        value: function render() {
          var width = this.state.width;

          /**
           * When rendering the component on the server,
           * we have no idea about the screen width.
           * In order to prevent blinks and help the reconciliation
           * we are not rendering the component.
           *
           * A better alternative would be to send client hints.
           * But the browser support of this API is low:
           * http://caniuse.com/#search=client%20hint
           */
          if (width === null) {
            return null;
          }

          return _react2$30.default.createElement(
            _reactEventListener2$b.default,
            { target: 'window', onResize: this.handleResize },
            _react2$30.default.createElement(MyComponent, (0, _extends3$1z.default)({
              width: width
            }, this.props))
          );
        }
      }]);
      return WithWidth;
    }(_react$36.Component);
  };
}

var FlatButton$3 = {};

Object.defineProperty(FlatButton$3, "__esModule", {
  value: true
});
FlatButton$3.default = undefined;

var _FlatButton$5 = FlatButton$5;

var _FlatButton2$5 = _interopRequireDefault$4d(_FlatButton$5);

function _interopRequireDefault$4d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

FlatButton$3.default = _FlatButton2$5.default;

Object.defineProperty(SnackbarBody$3, "__esModule", {
  value: true
});
SnackbarBody$3.SnackbarBody = undefined;

var _extends2$1y = _extends$3;

var _extends3$1y = _interopRequireDefault$4c(_extends2$1y);

var _objectWithoutProperties2$1x = objectWithoutProperties$2;

var _objectWithoutProperties3$1x = _interopRequireDefault$4c(_objectWithoutProperties2$1x);

var _simpleAssign$1N = simpleAssign;

var _simpleAssign2$1N = _interopRequireDefault$4c(_simpleAssign$1N);

var _react$35 = react;

var _react2$2$ = _interopRequireDefault$4c(_react$35);

var _propTypes$27 = propTypes$5.exports;

var _propTypes2$27 = _interopRequireDefault$4c(_propTypes$27);

var _transitions$P = transitions$1;

var _transitions2$P = _interopRequireDefault$4c(_transitions$P);

var _withWidth$1 = withWidth$3;

var _withWidth2$1 = _interopRequireDefault$4c(_withWidth$1);

var _FlatButton$4 = FlatButton$3;

var _FlatButton2$4 = _interopRequireDefault$4c(_FlatButton$4);

function _interopRequireDefault$4c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1i(props, context) {
  var open = props.open,
      width = props.width;
  var _context$muiTheme = context.muiTheme,
      _context$muiTheme$bas = _context$muiTheme.baseTheme,
      _context$muiTheme$bas2 = _context$muiTheme$bas.spacing,
      desktopGutter = _context$muiTheme$bas2.desktopGutter,
      desktopSubheaderHeight = _context$muiTheme$bas2.desktopSubheaderHeight,
      fontFamily = _context$muiTheme$bas.fontFamily,
      _context$muiTheme$sna = _context$muiTheme.snackbar,
      backgroundColor = _context$muiTheme$sna.backgroundColor,
      textColor = _context$muiTheme$sna.textColor,
      actionColor = _context$muiTheme$sna.actionColor,
      borderRadius = _context$muiTheme.borderRadius;


  var isSmall = width === _withWidth$1.SMALL;

  var styles = {
    root: {
      fontFamily: fontFamily,
      backgroundColor: backgroundColor,
      padding: '0 ' + desktopGutter + 'px',
      height: desktopSubheaderHeight,
      lineHeight: desktopSubheaderHeight + 'px',
      borderRadius: isSmall ? 0 : borderRadius,
      maxWidth: isSmall ? 'inherit' : 568,
      minWidth: isSmall ? 'inherit' : 288,
      width: isSmall ? 'calc(100vw - ' + desktopGutter * 2 + 'px)' : 'auto',
      flexGrow: isSmall ? 1 : 0
    },
    content: {
      fontSize: 14,
      color: textColor,
      opacity: open ? 1 : 0,
      transition: open ? _transitions2$P.default.easeOut('500ms', 'opacity', '100ms') : _transitions2$P.default.easeOut('400ms', 'opacity')
    },
    action: {
      color: actionColor,
      float: 'right',
      marginTop: 6,
      marginRight: -16,
      marginLeft: desktopGutter,
      backgroundColor: 'transparent'
    }
  };

  return styles;
}

var SnackbarBody$2 = function SnackbarBody(props, context) {
  var action = props.action,
      contentStyle = props.contentStyle,
      message = props.message;
      props.open;
      var onActionTouchTap = props.onActionTouchTap,
      style = props.style,
      other = (0, _objectWithoutProperties3$1x.default)(props, ['action', 'contentStyle', 'message', 'open', 'onActionTouchTap', 'style']);
  var prepareStyles = context.muiTheme.prepareStyles;

  var styles = getStyles$1i(props, context);

  var actionButton = action && _react2$2$.default.createElement(_FlatButton2$4.default, {
    style: styles.action,
    label: action,
    onClick: onActionTouchTap
  });

  return _react2$2$.default.createElement(
    'div',
    (0, _extends3$1y.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1N.default)(styles.root, style)) }),
    _react2$2$.default.createElement(
      'div',
      { style: prepareStyles((0, _simpleAssign2$1N.default)(styles.content, contentStyle)) },
      _react2$2$.default.createElement(
        'span',
        null,
        message
      ),
      actionButton
    )
  );
};

SnackbarBody$3.SnackbarBody = SnackbarBody$2;
SnackbarBody$2.propTypes = {
  /**
   * The label for the action on the snackbar.
   */
  action: _propTypes2$27.default.node,
  /**
   * Override the inline-styles of the content element.
   */
  contentStyle: _propTypes2$27.default.object,
  /**
   * The message to be displayed.
   *
   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
   * showing again)
   */
  message: _propTypes2$27.default.node.isRequired,
  /**
   * Fired when the action button is touchtapped.
   *
   * @param {object} event Action button event.
   */
  onActionTouchTap: _propTypes2$27.default.func,
  /**
   * @ignore
   * Controls whether the `Snackbar` is opened or not.
   */
  open: _propTypes2$27.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$27.default.object,
  /**
   * @ignore
   * Width of the screen.
   */
  width: _propTypes2$27.default.number.isRequired
} ;

SnackbarBody$2.contextTypes = {
  muiTheme: _propTypes2$27.default.object.isRequired
};

SnackbarBody$3.default = (0, _withWidth2$1.default)()(SnackbarBody$2);

Object.defineProperty(Snackbar$4, "__esModule", {
  value: true
});

var _extends2$1x = _extends$3;

var _extends3$1x = _interopRequireDefault$4b(_extends2$1x);

var _objectWithoutProperties2$1w = objectWithoutProperties$2;

var _objectWithoutProperties3$1w = _interopRequireDefault$4b(_objectWithoutProperties2$1w);

var _getPrototypeOf$1R = getPrototypeOf$1.exports;

var _getPrototypeOf2$1P = _interopRequireDefault$4b(_getPrototypeOf$1R);

var _classCallCheck2$1S = classCallCheck$3;

var _classCallCheck3$1S = _interopRequireDefault$4b(_classCallCheck2$1S);

var _createClass2$1R = createClass$2;

var _createClass3$1R = _interopRequireDefault$4b(_createClass2$1R);

var _possibleConstructorReturn2$1P = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1P = _interopRequireDefault$4b(_possibleConstructorReturn2$1P);

var _inherits2$1P = inherits$3;

var _inherits3$1P = _interopRequireDefault$4b(_inherits2$1P);

var _simpleAssign$1M = simpleAssign;

var _simpleAssign2$1M = _interopRequireDefault$4b(_simpleAssign$1M);

var _react$34 = react;

var _react2$2_ = _interopRequireDefault$4b(_react$34);

var _propTypes$26 = propTypes$5.exports;

var _propTypes2$26 = _interopRequireDefault$4b(_propTypes$26);

var _transitions$O = transitions$1;

var _transitions2$O = _interopRequireDefault$4b(_transitions$O);

var _ClickAwayListener$4 = ClickAwayListener$3;

var _ClickAwayListener2$4 = _interopRequireDefault$4b(_ClickAwayListener$4);

var _SnackbarBody$1 = SnackbarBody$3;

var _SnackbarBody2$1 = _interopRequireDefault$4b(_SnackbarBody$1);

function _interopRequireDefault$4b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1h(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      desktopSubheaderHeight = _context$muiTheme.baseTheme.spacing.desktopSubheaderHeight,
      zIndex = _context$muiTheme.zIndex;
  var open = state.open;


  var styles = {
    root: {
      position: 'fixed',
      left: '50%',
      display: 'flex',
      bottom: 0,
      zIndex: zIndex.snackbar,
      visibility: open ? 'visible' : 'hidden',
      transform: open ? 'translate(-50%, 0)' : 'translate(-50%, ' + desktopSubheaderHeight + 'px)',
      transition: _transitions2$O.default.easeOut('400ms', 'transform') + ', ' + _transitions2$O.default.easeOut('400ms', 'visibility')
    }
  };

  return styles;
}

var Snackbar$3 = function (_Component) {
  (0, _inherits3$1P.default)(Snackbar, _Component);

  function Snackbar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1S.default)(this, Snackbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1P.default)(this, (_ref = Snackbar.__proto__ || (0, _getPrototypeOf2$1P.default)(Snackbar)).call.apply(_ref, [this].concat(args))), _this), _this.componentClickAway = function () {
      if (_this.timerTransitionId) {
        // If transitioning, don't close the snackbar.
        return;
      }

      if (_this.props.open !== null && _this.props.onRequestClose) {
        _this.props.onRequestClose('clickaway');
      } else {
        _this.setState({ open: false });
      }
    }, _temp), (0, _possibleConstructorReturn3$1P.default)(_this, _ret);
  }

  (0, _createClass3$1R.default)(Snackbar, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        open: this.props.open,
        message: this.props.message,
        action: this.props.action
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.state.open) {
        this.setAutoHideTimer();
        this.setTransitionTimer();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.open && nextProps.open && (nextProps.message !== this.props.message || nextProps.action !== this.props.action)) {
        this.setState({
          open: false
        });

        clearTimeout(this.timerOneAtTheTimeId);
        this.timerOneAtTheTimeId = setTimeout(function () {
          _this2.setState({
            message: nextProps.message,
            action: nextProps.action,
            open: true
          });
        }, 400);
      } else {
        var open = nextProps.open;

        this.setState({
          open: open !== null ? open : this.state.open,
          message: nextProps.message,
          action: nextProps.action
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevState.open !== this.state.open) {
        if (this.state.open) {
          this.setAutoHideTimer();
          this.setTransitionTimer();
        } else {
          clearTimeout(this.timerAutoHideId);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timerAutoHideId);
      clearTimeout(this.timerTransitionId);
      clearTimeout(this.timerOneAtTheTimeId);
    }
  }, {
    key: 'setAutoHideTimer',


    // Timer that controls delay before snackbar auto hides
    value: function setAutoHideTimer() {
      var _this3 = this;

      var autoHideDuration = this.props.autoHideDuration;

      if (autoHideDuration > 0) {
        clearTimeout(this.timerAutoHideId);
        this.timerAutoHideId = setTimeout(function () {
          if (_this3.props.open !== null && _this3.props.onRequestClose) {
            _this3.props.onRequestClose('timeout');
          } else {
            _this3.setState({ open: false });
          }
        }, autoHideDuration);
      }
    }

    // Timer that controls delay before click-away events are captured (based on when animation completes)

  }, {
    key: 'setTransitionTimer',
    value: function setTransitionTimer() {
      var _this4 = this;

      this.timerTransitionId = setTimeout(function () {
        _this4.timerTransitionId = undefined;
      }, 400);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.autoHideDuration;
          var contentStyle = _props.contentStyle,
          bodyStyle = _props.bodyStyle;
          _props.message;
          _props.onRequestClose;
          var onActionTouchTap = _props.onActionTouchTap,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1w.default)(_props, ['autoHideDuration', 'contentStyle', 'bodyStyle', 'message', 'onRequestClose', 'onActionTouchTap', 'style']);
      var _state = this.state,
          action = _state.action,
          message = _state.message,
          open = _state.open;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1h(this.props, this.context, this.state);

      return _react2$2_.default.createElement(
        _ClickAwayListener2$4.default,
        { onClickAway: open ? this.componentClickAway : null },
        _react2$2_.default.createElement(
          'div',
          (0, _extends3$1x.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1M.default)(styles.root, style)) }),
          _react2$2_.default.createElement(_SnackbarBody2$1.default, {
            action: action,
            contentStyle: contentStyle,
            message: message,
            open: open,
            onActionTouchTap: onActionTouchTap,
            style: bodyStyle
          })
        )
      );
    }
  }]);
  return Snackbar;
}(_react$34.Component);

Snackbar$3.contextTypes = {
  muiTheme: _propTypes2$26.default.object.isRequired
};
Snackbar$3.propTypes = {
  /**
   * The label for the action on the snackbar.
   */
  action: _propTypes2$26.default.node,
  /**
   * The number of milliseconds to wait before automatically dismissing.
   * If no value is specified the snackbar will dismiss normally.
   * If a value is provided the snackbar can still be dismissed normally.
   * If a snackbar is dismissed before the timer expires, the timer will be cleared.
   */
  autoHideDuration: _propTypes2$26.default.number,
  /**
   * Override the inline-styles of the body element.
   */
  bodyStyle: _propTypes2$26.default.object,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$26.default.string,
  /**
   * Override the inline-styles of the content element.
   */
  contentStyle: _propTypes2$26.default.object,
  /**
   * The message to be displayed.
   *
   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
   * showing again)
   */
  message: _propTypes2$26.default.node.isRequired,
  /**
   * Fired when the action button is touchtapped.
   *
   * @param {object} event Action button event.
   */
  onActionTouchTap: _propTypes2$26.default.func,
  /**
   * Fired when the `Snackbar` is requested to be closed by a click outside the `Snackbar`, or after the
   * `autoHideDuration` timer expires.
   *
   * Typically `onRequestClose` is used to set state in the parent component, which is used to control the `Snackbar`
   * `open` prop.
   *
   * The `reason` parameter can optionally be used to control the response to `onRequestClose`,
   * for example ignoring `clickaway`.
   *
   * @param {string} reason Can be:`"timeout"` (`autoHideDuration` expired) or: `"clickaway"`
   */
  onRequestClose: _propTypes2$26.default.func,
  /**
   * Controls whether the `Snackbar` is opened or not.
   */
  open: _propTypes2$26.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$26.default.object
} ;
Snackbar$4.default = Snackbar$3;

Object.defineProperty(Snackbar$5, "__esModule", {
  value: true
});
var _default$11 = Snackbar$5.default = undefined;

var _Snackbar$1 = Snackbar$4;

var _Snackbar2$1 = _interopRequireDefault$4a(_Snackbar$1);

function _interopRequireDefault$4a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$11 = Snackbar$5.default = _Snackbar2$1.default;

var Divider$5 = {};

var Divider$4 = {};

Object.defineProperty(Divider$4, "__esModule", {
  value: true
});

var _extends2$1w = _extends$3;

var _extends3$1w = _interopRequireDefault$49(_extends2$1w);

var _objectWithoutProperties2$1v = objectWithoutProperties$2;

var _objectWithoutProperties3$1v = _interopRequireDefault$49(_objectWithoutProperties2$1v);

var _simpleAssign$1L = simpleAssign;

var _simpleAssign2$1L = _interopRequireDefault$49(_simpleAssign$1L);

var _react$33 = react;

var _react2$2Z = _interopRequireDefault$49(_react$33);

var _propTypes$25 = propTypes$5.exports;

var _propTypes2$25 = _interopRequireDefault$49(_propTypes$25);

function _interopRequireDefault$49(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Divider$3 = function Divider(props, context) {
  var inset = props.inset,
      style = props.style,
      other = (0, _objectWithoutProperties3$1v.default)(props, ['inset', 'style']);
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      prepareStyles = _context$muiTheme.prepareStyles;


  var styles = {
    root: {
      margin: 0,
      marginTop: -1,
      marginLeft: inset ? 72 : 0,
      height: 1,
      border: 'none',
      backgroundColor: baseTheme.palette.borderColor
    }
  };

  return _react2$2Z.default.createElement('hr', (0, _extends3$1w.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1L.default)(styles.root, style)) }));
};

Divider$3.muiName = 'Divider';

Divider$3.propTypes = {
  /**
   * If true, the `Divider` will be indented.
   */
  inset: _propTypes2$25.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$25.default.object
} ;

Divider$3.defaultProps = {
  inset: false
};

Divider$3.contextTypes = {
  muiTheme: _propTypes2$25.default.object.isRequired
};

Divider$4.default = Divider$3;

Object.defineProperty(Divider$5, "__esModule", {
  value: true
});
var _default$10 = Divider$5.default = undefined;

var _Divider$3 = Divider$4;

var _Divider2$3 = _interopRequireDefault$48(_Divider$3);

function _interopRequireDefault$48(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$10 = Divider$5.default = _Divider2$3.default;

var Subheader$5 = {};

var Subheader$4 = {};

Object.defineProperty(Subheader$4, "__esModule", {
  value: true
});

var _extends2$1v = _extends$3;

var _extends3$1v = _interopRequireDefault$47(_extends2$1v);

var _objectWithoutProperties2$1u = objectWithoutProperties$2;

var _objectWithoutProperties3$1u = _interopRequireDefault$47(_objectWithoutProperties2$1u);

var _simpleAssign$1K = simpleAssign;

var _simpleAssign2$1K = _interopRequireDefault$47(_simpleAssign$1K);

var _react$32 = react;

var _react2$2Y = _interopRequireDefault$47(_react$32);

var _propTypes$24 = propTypes$5.exports;

var _propTypes2$24 = _interopRequireDefault$47(_propTypes$24);

function _interopRequireDefault$47(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Subheader$3 = function Subheader(props, context) {
  var children = props.children,
      inset = props.inset,
      style = props.style,
      other = (0, _objectWithoutProperties3$1u.default)(props, ['children', 'inset', 'style']);
  var _context$muiTheme = context.muiTheme,
      prepareStyles = _context$muiTheme.prepareStyles,
      subheader = _context$muiTheme.subheader;


  var styles = {
    root: {
      boxSizing: 'border-box',
      color: subheader.color,
      fontSize: 14,
      fontWeight: subheader.fontWeight,
      lineHeight: '48px',
      paddingLeft: inset ? 72 : 16,
      width: '100%'
    }
  };

  return _react2$2Y.default.createElement(
    'div',
    (0, _extends3$1v.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1K.default)(styles.root, style)) }),
    children
  );
};

Subheader$3.muiName = 'Subheader';

Subheader$3.propTypes = {
  /**
   * Node that will be placed inside the `Subheader`.
   */
  children: _propTypes2$24.default.node,
  /**
   * If true, the `Subheader` will be indented.
   */
  inset: _propTypes2$24.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$24.default.object
} ;

Subheader$3.defaultProps = {
  inset: false
};

Subheader$3.contextTypes = {
  muiTheme: _propTypes2$24.default.object.isRequired
};

Subheader$4.default = Subheader$3;

Object.defineProperty(Subheader$5, "__esModule", {
  value: true
});
var _default$$ = Subheader$5.default = undefined;

var _Subheader$3 = Subheader$4;

var _Subheader2$3 = _interopRequireDefault$46(_Subheader$3);

function _interopRequireDefault$46(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$$ = Subheader$5.default = _Subheader2$3.default;

/**
 * @module lib/utils
 */

/**
 * Function to create CSS class names
 *
 * @param {String} name The base name
 * @param {String} selector string to append to the base name
 * @returns String
 */
var createClassName = function createClassName() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return selector ? name + ' ' + name + '-' + selector : name;
};

var promise$1 = {exports: {}};

var _anInstance = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

var _forOf = {exports: {}};

var ctx$2 = _ctx;
var call = _iterCall;
var isArrayIter = _isArrayIter;
var anObject$2 = _anObject;
var toLength = _toLength;
var getIterFn = core_getIteratorMethod;
var BREAK = {};
var RETURN = {};
var exports = _forOf.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx$2(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject$2(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject$1 = _anObject;
var aFunction$2 = _aFunction;
var SPECIES$1 = _wks.exports('species');
var _speciesConstructor = function (O, D) {
  var C = anObject$1(O).constructor;
  var S;
  return C === undefined || (S = anObject$1(C)[SPECIES$1]) == undefined ? D : aFunction$2(S);
};

// fast apply, http://jsperf.lnkit.com/fast-apply/5
var _invoke = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

var ctx$1 = _ctx;
var invoke = _invoke;
var html = _html;
var cel = _domCreate;
var global$5 = _global.exports;
var process$2 = global$5.process;
var setTask = global$5.setImmediate;
var clearTask = global$5.clearImmediate;
var MessageChannel = global$5.MessageChannel;
var Dispatch = global$5.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (_cof(process$2) == 'process') {
    defer = function (id) {
      process$2.nextTick(ctx$1(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx$1(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx$1(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global$5.addEventListener && typeof postMessage == 'function' && !global$5.importScripts) {
    defer = function (id) {
      global$5.postMessage(id + '', '*');
    };
    global$5.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx$1(run, id, 1), 0);
    };
  }
}
var _task = {
  set: setTask,
  clear: clearTask
};

var global$4 = _global.exports;
var macrotask = _task.set;
var Observer = global$4.MutationObserver || global$4.WebKitMutationObserver;
var process$1 = global$4.process;
var Promise$3 = global$4.Promise;
var isNode$1 = _cof(process$1) == 'process';

var _microtask = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode$1 && (parent = process$1.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode$1) {
    notify = function () {
      process$1.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global$4.navigator && global$4.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise$3 && Promise$3.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise$3.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global$4, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

var _newPromiseCapability = {};

// 25.4.1.5 NewPromiseCapability(C)
var aFunction$1 = _aFunction;

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction$1(resolve);
  this.reject = aFunction$1(reject);
}

_newPromiseCapability.f = function (C) {
  return new PromiseCapability(C);
};

var _perform = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

var global$3 = _global.exports;
var navigator$1 = global$3.navigator;

var _userAgent = navigator$1 && navigator$1.userAgent || '';

var anObject = _anObject;
var isObject$b = _isObject;
var newPromiseCapability$2 = _newPromiseCapability;

var _promiseResolve = function (C, x) {
  anObject(C);
  if (isObject$b(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability$2.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var hide = _hide;
var _redefineAll = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

var global$2 = _global.exports;
var core$1 = _core.exports;
var dP = _objectDp;
var DESCRIPTORS = _descriptors;
var SPECIES = _wks.exports('species');

var _setSpecies = function (KEY) {
  var C = typeof core$1[KEY] == 'function' ? core$1[KEY] : global$2[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

var LIBRARY = _library;
var global$1 = _global.exports;
var ctx = _ctx;
var classof = _classof;
var $export$3 = _export;
var isObject$a = _isObject;
var aFunction = _aFunction;
var anInstance = _anInstance;
var forOf = _forOf.exports;
var speciesConstructor$1 = _speciesConstructor;
var task = _task.set;
var microtask = _microtask();
var newPromiseCapabilityModule = _newPromiseCapability;
var perform$1 = _perform;
var userAgent = _userAgent;
var promiseResolve$1 = _promiseResolve;
var PROMISE = 'Promise';
var TypeError$1 = global$1.TypeError;
var process = global$1.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global$1[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability$1 = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject$a(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError$1('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global$1, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform$1(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global$1.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global$1.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global$1, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global$1.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError$1("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = _redefineAll($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability$1(speciesConstructor$1(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability$1 = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export$3($export$3.G + $export$3.W + $export$3.F * !USE_NATIVE, { Promise: $Promise });
_setToStringTag($Promise, PROMISE);
_setSpecies(PROMISE);
Wrapper = _core.exports[PROMISE];

// statics
$export$3($export$3.S + $export$3.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability$1(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export$3($export$3.S + $export$3.F * (LIBRARY ), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve$1(this === Wrapper ? $Promise : this, x);
  }
});
$export$3($export$3.S + $export$3.F * !(USE_NATIVE && _iterDetect(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability$1(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$1(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability$1(C);
    var reject = capability.reject;
    var result = perform$1(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

var $export$2 = _export;
var core = _core.exports;
var global = _global.exports;
var speciesConstructor = _speciesConstructor;
var promiseResolve = _promiseResolve;

$export$2($export$2.P + $export$2.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

// https://github.com/tc39/proposal-promise-try
var $export$1 = _export;
var newPromiseCapability = _newPromiseCapability;
var perform = _perform;

$export$1($export$1.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

var promise = _core.exports.Promise;

(function (module) {
module.exports = { "default": promise, __esModule: true };
}(promise$1));

var _Promise$1 = /*@__PURE__*/getDefaultExportFromCjs(promise$1.exports);

var lodash_min = {exports: {}};

/**
 * @license
 * Lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
 */

(function (module, exports) {
(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n);}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&false!==t(n[r],r,n););return n}function e(n,t){for(var r=null==n?0:n.length;r--&&false!==t(n[r],r,n););return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return false;
return true}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o);}return i}function o(n,t){return !(null==n||!n.length)&&-1<v(n,t,0)}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return true;return false}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);
return r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return true;return false}function p(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,false}),e}function _(n,t,r,e){var u=n.length;for(r+=e?1:-1;e?r--:++r<u;)if(t(n[r],r,n))return r;return -1}function v(n,t,r){if(t===t)n:{--r;for(var e=n.length;++r<e;)if(n[r]===t){n=r;break n}n=-1;}else n=_(n,d,r);return n}function g(n,t,r,e){
--r;for(var u=n.length;++r<u;)if(e(n[r],t))return r;return -1}function d(n){return n!==n}function y(n,t){var r=null==n?0:n.length;return r?m(n,t)/r:F}function b(n){return function(t){return null==t?T:t[n]}}function x(n){return function(t){return null==n?T:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=false,n):t(r,n,u,i);}),r}function w(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function m(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==T&&(r=r===T?i:r+i);}return r;
}function A(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function E(n,t){return c(t,function(t){return [t,n[t]]})}function k(n){return function(t){return n(t)}}function S(n,t){return c(t,function(t){return n[t]})}function O(n,t){return n.has(t)}function I(n,t){for(var r=-1,e=n.length;++r<e&&-1<v(t,n[r],0););return r}function R(n,t){for(var r=n.length;r--&&-1<v(t,n[r],0););return r}function z(n){return "\\"+Un[n]}function W(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n];
}),r}function B(n,t){return function(r){return n(t(r))}}function L(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&"__lodash_placeholder__"!==o||(n[r]="__lodash_placeholder__",i[u++]=r);}return i}function U(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n;}),r}function C(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n];}),r}function D(n){if(Rn.test(n)){for(var t=On.lastIndex=0;On.test(n);)++t;n=t;}else n=Qn(n);return n}function M(n){return Rn.test(n)?n.match(On)||[]:n.split("");
}var T,$=1/0,F=NaN,N=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],P=/\b__p\+='';/g,Z=/\b(__p\+=)''\+/g,q=/(__e\(.*?\)|\b__t\))\+'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,K=/[&<>"']/g,G=RegExp(V.source),H=RegExp(K.source),J=/<%-([\s\S]+?)%>/g,Y=/<%([\s\S]+?)%>/g,Q=/<%=([\s\S]+?)%>/g,X=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,nn=/^\w*$/,tn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,rn=/[\\^$.*+?()[\]{}|]/g,en=RegExp(rn.source),un=/^\s+|\s+$/g,on=/^\s+/,fn=/\s+$/,cn=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,an=/\{\n\/\* \[wrapped with (.+)\] \*/,ln=/,? & /,sn=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,hn=/\\(\\)?/g,pn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,_n=/\w*$/,vn=/^[-+]0x[0-9a-f]+$/i,gn=/^0b[01]+$/i,dn=/^\[object .+?Constructor\]$/,yn=/^0o[0-7]+$/i,bn=/^(?:0|[1-9]\d*)$/,xn=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,jn=/($^)/,wn=/['\n\r\u2028\u2029\\]/g,mn="[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*",An="(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])"+mn,En="(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?|[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])",kn=RegExp("['\u2019]","g"),Sn=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g"),On=RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|"+En+mn,"g"),In=RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+",An].join("|"),"g"),Rn=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),zn=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Wn="Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout".split(" "),Bn={};
Bn["[object Float32Array]"]=Bn["[object Float64Array]"]=Bn["[object Int8Array]"]=Bn["[object Int16Array]"]=Bn["[object Int32Array]"]=Bn["[object Uint8Array]"]=Bn["[object Uint8ClampedArray]"]=Bn["[object Uint16Array]"]=Bn["[object Uint32Array]"]=true,Bn["[object Arguments]"]=Bn["[object Array]"]=Bn["[object ArrayBuffer]"]=Bn["[object Boolean]"]=Bn["[object DataView]"]=Bn["[object Date]"]=Bn["[object Error]"]=Bn["[object Function]"]=Bn["[object Map]"]=Bn["[object Number]"]=Bn["[object Object]"]=Bn["[object RegExp]"]=Bn["[object Set]"]=Bn["[object String]"]=Bn["[object WeakMap]"]=false;
var Ln={};Ln["[object Arguments]"]=Ln["[object Array]"]=Ln["[object ArrayBuffer]"]=Ln["[object DataView]"]=Ln["[object Boolean]"]=Ln["[object Date]"]=Ln["[object Float32Array]"]=Ln["[object Float64Array]"]=Ln["[object Int8Array]"]=Ln["[object Int16Array]"]=Ln["[object Int32Array]"]=Ln["[object Map]"]=Ln["[object Number]"]=Ln["[object Object]"]=Ln["[object RegExp]"]=Ln["[object Set]"]=Ln["[object String]"]=Ln["[object Symbol]"]=Ln["[object Uint8Array]"]=Ln["[object Uint8ClampedArray]"]=Ln["[object Uint16Array]"]=Ln["[object Uint32Array]"]=true,
Ln["[object Error]"]=Ln["[object Function]"]=Ln["[object WeakMap]"]=false;var Un={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Cn=parseFloat,Dn=parseInt,Mn=typeof commonjsGlobal=="object"&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,Tn=typeof self=="object"&&self&&self.Object===Object&&self,$n=Mn||Tn||Function("return this")(),Fn=exports&&!exports.nodeType&&exports,Nn=Fn&&'object'=="object"&&module&&!module.nodeType&&module,Pn=Nn&&Nn.exports===Fn,Zn=Pn&&Mn.process,qn=function(){
try{var n=Nn&&Nn.f&&Nn.f("util").types;return n?n:Zn&&Zn.binding&&Zn.binding("util")}catch(n){}}(),Vn=qn&&qn.isArrayBuffer,Kn=qn&&qn.isDate,Gn=qn&&qn.isMap,Hn=qn&&qn.isRegExp,Jn=qn&&qn.isSet,Yn=qn&&qn.isTypedArray,Qn=b("length"),Xn=x({"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I",
"\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xdd":"Y","\xfd":"y","\xff":"y","\xc6":"Ae","\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss","\u0100":"A","\u0102":"A","\u0104":"A","\u0101":"a","\u0103":"a","\u0105":"a","\u0106":"C",
"\u0108":"C","\u010a":"C","\u010c":"C","\u0107":"c","\u0109":"c","\u010b":"c","\u010d":"c","\u010e":"D","\u0110":"D","\u010f":"d","\u0111":"d","\u0112":"E","\u0114":"E","\u0116":"E","\u0118":"E","\u011a":"E","\u0113":"e","\u0115":"e","\u0117":"e","\u0119":"e","\u011b":"e","\u011c":"G","\u011e":"G","\u0120":"G","\u0122":"G","\u011d":"g","\u011f":"g","\u0121":"g","\u0123":"g","\u0124":"H","\u0126":"H","\u0125":"h","\u0127":"h","\u0128":"I","\u012a":"I","\u012c":"I","\u012e":"I","\u0130":"I","\u0129":"i",
"\u012b":"i","\u012d":"i","\u012f":"i","\u0131":"i","\u0134":"J","\u0135":"j","\u0136":"K","\u0137":"k","\u0138":"k","\u0139":"L","\u013b":"L","\u013d":"L","\u013f":"L","\u0141":"L","\u013a":"l","\u013c":"l","\u013e":"l","\u0140":"l","\u0142":"l","\u0143":"N","\u0145":"N","\u0147":"N","\u014a":"N","\u0144":"n","\u0146":"n","\u0148":"n","\u014b":"n","\u014c":"O","\u014e":"O","\u0150":"O","\u014d":"o","\u014f":"o","\u0151":"o","\u0154":"R","\u0156":"R","\u0158":"R","\u0155":"r","\u0157":"r","\u0159":"r",
"\u015a":"S","\u015c":"S","\u015e":"S","\u0160":"S","\u015b":"s","\u015d":"s","\u015f":"s","\u0161":"s","\u0162":"T","\u0164":"T","\u0166":"T","\u0163":"t","\u0165":"t","\u0167":"t","\u0168":"U","\u016a":"U","\u016c":"U","\u016e":"U","\u0170":"U","\u0172":"U","\u0169":"u","\u016b":"u","\u016d":"u","\u016f":"u","\u0171":"u","\u0173":"u","\u0174":"W","\u0175":"w","\u0176":"Y","\u0177":"y","\u0178":"Y","\u0179":"Z","\u017b":"Z","\u017d":"Z","\u017a":"z","\u017c":"z","\u017e":"z","\u0132":"IJ","\u0133":"ij",
"\u0152":"Oe","\u0153":"oe","\u0149":"'n","\u017f":"s"}),nt=x({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"}),tt=x({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),rt=function x(mn){function An(n){if(du(n)&&!of(n)&&!(n instanceof Un)){if(n instanceof On)return n;if(ii.call(n,"__wrapped__"))return $e(n)}return new On(n)}function En(){}function On(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=T;}function Un(n){this.__wrapped__=n,
this.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[];}function Mn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1]);}}function Tn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1]);}}function Fn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1]);}}function Nn(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Fn;++t<r;)this.add(n[t]);
}function Zn(n){this.size=(this.__data__=new Tn(n)).size;}function qn(n,t){var r,e=of(n),u=!e&&uf(n),i=!e&&!u&&cf(n),o=!e&&!u&&!i&&pf(n),u=(e=e||u||i||o)?A(n.length,Xu):[],f=u.length;for(r in n)!t&&!ii.call(n,r)||e&&("length"==r||i&&("offset"==r||"parent"==r)||o&&("buffer"==r||"byteLength"==r||"byteOffset"==r)||Se(r,f))||u.push(r);return u}function Qn(n){var t=n.length;return t?n[ir(0,t-1)]:T}function et(n,t){return Ce(Ur(n),pt(t,0,n.length))}function ut(n){return Ce(Ur(n))}function it(n,t,r){(r===T||au(n[t],r))&&(r!==T||t in n)||st(n,t,r);
}function ot(n,t,r){var e=n[t];ii.call(n,t)&&au(e,r)&&(r!==T||t in n)||st(n,t,r);}function ft(n,t){for(var r=n.length;r--;)if(au(n[r][0],t))return r;return -1}function ct(n,t,r,e){return eo(n,function(n,u,i){t(e,n,r(n),i);}),e}function at(n,t){return n&&Cr(t,zu(t),n)}function lt(n,t){return n&&Cr(t,Wu(t),n)}function st(n,t,r){"__proto__"==t&&mi?mi(n,t,{configurable:true,enumerable:true,value:r,writable:true}):n[t]=r;}function ht(n,t){for(var r=-1,e=t.length,u=Vu(e),i=null==n;++r<e;)u[r]=i?T:Iu(n,t[r]);return u;
}function pt(n,t,r){return n===n&&(r!==T&&(n=n<=r?n:r),t!==T&&(n=n>=t?n:t)),n}function _t(n,t,e,u,i,o){var f,c=1&t,a=2&t,l=4&t;if(e&&(f=i?e(n,u,i,o):e(n)),f!==T)return f;if(!gu(n))return n;if(u=of(n)){if(f=me(n),!c)return Ur(n,f)}else {var s=_o(n),h="[object Function]"==s||"[object GeneratorFunction]"==s;if(cf(n))return Ir(n,c);if("[object Object]"==s||"[object Arguments]"==s||h&&!i){if(f=a||h?{}:Ae(n),!c)return a?Mr(n,lt(f,n)):Dr(n,at(f,n))}else {if(!Ln[s])return i?n:{};f=Ee(n,s,c);}}if(o||(o=new Zn),
i=o.get(n))return i;if(o.set(n,f),hf(n))return n.forEach(function(r){f.add(_t(r,t,e,r,n,o));}),f;if(lf(n))return n.forEach(function(r,u){f.set(u,_t(r,t,e,u,n,o));}),f;var a=l?a?ve:_e:a?Wu:zu,p=u?T:a(n);return r(p||n,function(r,u){p&&(u=r,r=n[u]),ot(f,u,_t(r,t,e,u,n,o));}),f}function vt(n){var t=zu(n);return function(r){return gt(r,n,t)}}function gt(n,t,r){var e=r.length;if(null==n)return !e;for(n=Yu(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===T&&!(u in n)||!i(o))return false}return true}function dt(n,t,r){if(typeof n!="function")throw new ni("Expected a function");
return yo(function(){n.apply(T,r);},t)}function yt(n,t,r,e){var u=-1,i=o,a=true,l=n.length,s=[],h=t.length;if(!l)return s;r&&(t=c(t,k(r))),e?(i=f,a=false):200<=t.length&&(i=O,a=false,t=new Nn(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p),p=e||0!==p?p:0;if(a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p);}else i(t,_,e)||s.push(p);}return s}function bt(n,t){var r=true;return eo(n,function(n,e,u){return r=!!t(n,e,u)}),r}function xt(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===T?o===o&&!ju(o):r(o,f)))var f=o,c=i;
}return c}function jt(n,t){var r=[];return eo(n,function(n,e,u){t(n,e,u)&&r.push(n);}),r}function wt(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=ke),u||(u=[]);++i<o;){var f=n[i];0<t&&r(f)?1<t?wt(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f);}return u}function mt(n,t){return n&&io(n,t,zu)}function At(n,t){return n&&oo(n,t,zu)}function Et(n,t){return i(t,function(t){return pu(n[t])})}function kt(n,t){t=Sr(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[De(t[r++])];return r&&r==e?n:T}function St(n,t,r){return t=t(n),
of(n)?t:a(t,r(n))}function Ot(n){if(null==n)n=n===T?"[object Undefined]":"[object Null]";else if(wi&&wi in Yu(n)){var t=ii.call(n,wi),r=n[wi];try{n[wi]=T;var e=true;}catch(n){}var u=ci.call(n);e&&(t?n[wi]=r:delete n[wi]),n=u;}else n=ci.call(n);return n}function It(n,t){return n>t}function Rt(n,t){return null!=n&&ii.call(n,t)}function zt(n,t){return null!=n&&t in Yu(n)}function Wt(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=Vu(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,k(t))),s=Ui(p.length,s),
l[a]=!r&&(t||120<=u&&120<=p.length)?new Nn(a&&p):T;}var p=n[0],_=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],d=t?t(g):g,g=r||0!==g?g:0;if(v?!O(v,d):!e(h,d,r)){for(a=i;--a;){var y=l[a];if(y?!O(y,d):!e(n[a],d,r))continue n}v&&v.push(d),h.push(g);}}return h}function Bt(n,t,r){var e={};return mt(n,function(n,u,i){t(e,r(n),u,i);}),e}function Lt(t,r,e){return r=Sr(r,t),t=2>r.length?t:kt(t,hr(r,0,-1)),r=null==t?t:t[De(qe(r))],null==r?T:n(r,t,e)}function Ut(n){return du(n)&&"[object Arguments]"==Ot(n)}function Ct(n){
return du(n)&&"[object ArrayBuffer]"==Ot(n)}function Dt(n){return du(n)&&"[object Date]"==Ot(n)}function Mt(n,t,r,e,u){if(n===t)t=true;else if(null==n||null==t||!du(n)&&!du(t))t=n!==n&&t!==t;else n:{var i=of(n),o=of(t),f=i?"[object Array]":_o(n),c=o?"[object Array]":_o(t),f="[object Arguments]"==f?"[object Object]":f,c="[object Arguments]"==c?"[object Object]":c,a="[object Object]"==f,o="[object Object]"==c;if((c=f==c)&&cf(n)){if(!cf(t)){t=false;break n}i=true,a=false;}if(c&&!a)u||(u=new Zn),t=i||pf(n)?se(n,t,r,e,Mt,u):he(n,t,f,r,e,Mt,u);else {
if(!(1&r)&&(i=a&&ii.call(n,"__wrapped__"),f=o&&ii.call(t,"__wrapped__"),i||f)){n=i?n.value():n,t=f?t.value():t,u||(u=new Zn),t=Mt(n,t,r,e,u);break n}if(c)t:if(u||(u=new Zn),i=1&r,f=_e(n),o=f.length,c=_e(t).length,o==c||i){for(a=o;a--;){var l=f[a];if(!(i?l in t:ii.call(t,l))){t=false;break t}}if((c=u.get(n))&&u.get(t))t=c==t;else {c=true,u.set(n,t),u.set(t,n);for(var s=i;++a<o;){var l=f[a],h=n[l],p=t[l];if(e)var _=i?e(p,h,l,t,n,u):e(h,p,l,n,t,u);if(_===T?h!==p&&!Mt(h,p,r,e,u):!_){c=false;break}s||(s="constructor"==l);
}c&&!s&&(r=n.constructor,e=t.constructor,r!=e&&"constructor"in n&&"constructor"in t&&!(typeof r=="function"&&r instanceof r&&typeof e=="function"&&e instanceof e)&&(c=false)),u.delete(n),u.delete(t),t=c;}}else t=false;else t=false;}}return t}function Tt(n){return du(n)&&"[object Map]"==_o(n)}function $t(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return !i;for(n=Yu(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return false}for(;++u<i;){var f=r[u],c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===T&&!(c in n))return false;
}else {if(f=new Zn,e)var s=e(a,l,c,n,t,f);if(s===T?!Mt(l,a,3,e,f):!s)return false}}return true}function Ft(n){return !(!gu(n)||fi&&fi in n)&&(pu(n)?si:dn).test(Me(n))}function Nt(n){return du(n)&&"[object RegExp]"==Ot(n)}function Pt(n){return du(n)&&"[object Set]"==_o(n)}function Zt(n){return du(n)&&vu(n.length)&&!!Bn[Ot(n)]}function qt(n){return typeof n=="function"?n:null==n?Tu:typeof n=="object"?of(n)?Jt(n[0],n[1]):Ht(n):Pu(n)}function Vt(n){if(!ze(n))return Bi(n);var t,r=[];for(t in Yu(n))ii.call(n,t)&&"constructor"!=t&&r.push(t);
return r}function Kt(n,t){return n<t}function Gt(n,t){var r=-1,e=lu(n)?Vu(n.length):[];return eo(n,function(n,u,i){e[++r]=t(n,u,i);}),e}function Ht(n){var t=xe(n);return 1==t.length&&t[0][2]?We(t[0][0],t[0][1]):function(r){return r===n||$t(r,n,t)}}function Jt(n,t){return Ie(n)&&t===t&&!gu(t)?We(De(n),t):function(r){var e=Iu(r,n);return e===T&&e===t?Ru(r,n):Mt(t,e,3)}}function Yt(n,t,r,e,u){n!==t&&io(t,function(i,o){if(gu(i)){u||(u=new Zn);var f=u,c="__proto__"==o?T:n[o],a="__proto__"==o?T:t[o],l=f.get(a);
if(l)it(n,o,l);else {var l=e?e(c,a,o+"",n,t,f):T,s=l===T;if(s){var h=of(a),p=!h&&cf(a),_=!h&&!p&&pf(a),l=a;h||p||_?of(c)?l=c:su(c)?l=Ur(c):p?(s=false,l=Ir(a,true)):_?(s=false,l=zr(a,true)):l=[]:bu(a)||uf(a)?(l=c,uf(c)?l=Su(c):(!gu(c)||r&&pu(c))&&(l=Ae(a))):s=false;}s&&(f.set(a,l),Yt(l,a,r,e,f),f.delete(a)),it(n,o,l);}}else f=e?e("__proto__"==o?T:n[o],i,o+"",n,t,u):T,f===T&&(f=i),it(n,o,f);},Wu);}function Qt(n,t){var r=n.length;if(r)return t+=0>t?r:0,Se(t,r)?n[t]:T}function Xt(n,t,r){var e=-1;return t=c(t.length?t:[Tu],k(ye())),
n=Gt(n,function(n){return {a:c(t,function(t){return t(n)}),b:++e,c:n}}),w(n,function(n,t){var e;n:{e=-1;for(var u=n.a,i=t.a,o=u.length,f=r.length;++e<o;){var c=Wr(u[e],i[e]);if(c){e=e>=f?c:c*("desc"==r[e]?-1:1);break n}}e=n.b-t.b;}return e})}function nr(n,t){return tr(n,t,function(t,r){return Ru(n,r)})}function tr(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=kt(n,o);r(f,o)&&lr(i,Sr(o,n),f);}return i}function rr(n){return function(t){return kt(t,n)}}function er(n,t,r,e){var u=e?g:v,i=-1,o=t.length,f=n;
for(n===t&&(t=Ur(t)),r&&(f=c(n,k(r)));++i<o;)for(var a=0,l=t[i],l=r?r(l):l;-1<(a=u(f,l,a,e));)f!==n&&bi.call(f,a,1),bi.call(n,a,1);return n}function ur(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;Se(u)?bi.call(n,u,1):xr(n,u);}}}function ir(n,t){return n+Oi(Mi()*(t-n+1))}function or(n,t){var r="";if(!n||1>t||9007199254740991<t)return r;do t%2&&(r+=n),(t=Oi(t/2))&&(n+=n);while(t);return r}function fr(n,t){return bo(Be(n,t,Tu),n+"")}function cr(n){return Qn(Lu(n))}function ar(n,t){
var r=Lu(n);return Ce(r,pt(t,0,r.length))}function lr(n,t,r,e){if(!gu(n))return n;t=Sr(t,n);for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=De(t[u]),a=r;if(u!=o){var l=f[c],a=e?e(l,c,f):T;a===T&&(a=gu(l)?l:Se(t[u+1])?[]:{});}ot(f,c,a),f=f[c];}return n}function sr(n){return Ce(Lu(n))}function hr(n,t,r){var e=-1,u=n.length;for(0>t&&(t=-t>u?0:u+t),r=r>u?u:r,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Vu(u);++e<u;)r[e]=n[e+t];return r}function pr(n,t){var r;return eo(n,function(n,e,u){return r=t(n,e,u),
!r}),!!r}function _r(n,t,r){var e=0,u=null==n?e:n.length;if(typeof t=="number"&&t===t&&2147483647>=u){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!ju(o)&&(r?o<=t:o<t)?e=i+1:u=i;}return u}return vr(n,t,Tu,r)}function vr(n,t,r,e){t=r(t);for(var u=0,i=null==n?0:n.length,o=t!==t,f=null===t,c=ju(t),a=t===T;u<i;){var l=Oi((u+i)/2),s=r(n[l]),h=s!==T,p=null===s,_=s===s,v=ju(s);(o?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=t:s<t)?u=l+1:i=l;}return Ui(i,4294967294)}function gr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){
var o=n[r],f=t?t(o):o;if(!r||!au(f,c)){var c=f;i[u++]=0===o?0:o;}}return i}function dr(n){return typeof n=="number"?n:ju(n)?F:+n}function yr(n){if(typeof n=="string")return n;if(of(n))return c(n,yr)+"";if(ju(n))return to?to.call(n):"";var t=n+"";return "0"==t&&1/n==-$?"-0":t}function br(n,t,r){var e=-1,u=o,i=n.length,c=true,a=[],l=a;if(r)c=false,u=f;else if(200<=i){if(u=t?null:lo(n))return U(u);c=false,u=O,l=new Nn;}else l=t?[]:a;n:for(;++e<i;){var s=n[e],h=t?t(s):s,s=r||0!==s?s:0;if(c&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue n;
t&&l.push(h),a.push(s);}else u(l,h,r)||(l!==a&&l.push(h),a.push(s));}return a}function xr(n,t){return t=Sr(t,n),n=2>t.length?n:kt(n,hr(t,0,-1)),null==n||delete n[De(qe(t))]}function jr(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?hr(n,e?0:i,e?i+1:u):hr(n,e?i+1:0,e?u:i)}function wr(n,t){var r=n;return r instanceof Un&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mr(n,t,r){var e=n.length;if(2>e)return e?br(n[0]):[];for(var u=-1,i=Vu(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=yt(i[u]||o,n[f],t,r));
return br(wt(i,1),t,r)}function Ar(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;)r(o,n[e],e<i?t[e]:T);return o}function Er(n){return su(n)?n:[]}function kr(n){return typeof n=="function"?n:Tu}function Sr(n,t){return of(n)?n:Ie(n,t)?[n]:xo(Ou(n))}function Or(n,t,r){var e=n.length;return r=r===T?e:r,!t&&r>=e?n:hr(n,t,r)}function Ir(n,t){if(t)return n.slice();var r=n.length,r=vi?vi(r):new n.constructor(r);return n.copy(r),r}function Rr(n){var t=new n.constructor(n.byteLength);return new _i(t).set(new _i(n)),
t}function zr(n,t){return new n.constructor(t?Rr(n.buffer):n.buffer,n.byteOffset,n.length)}function Wr(n,t){if(n!==t){var r=n!==T,e=null===n,u=n===n,i=ju(n),o=t!==T,f=null===t,c=t===t,a=ju(t);if(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return -1}return 0}function Br(n,t,r,e){var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Li(i-o,0),l=Vu(c+a);for(e=!e;++f<c;)l[f]=t[f];for(;++u<o;)(e||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];
return l}function Lr(n,t,r,e){var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Li(i-f,0),s=Vu(l+a);for(e=!e;++u<l;)s[u]=n[u];for(l=u;++c<a;)s[l+c]=t[c];for(;++o<f;)(e||u<i)&&(s[l+r[o]]=n[u++]);return s}function Ur(n,t){var r=-1,e=n.length;for(t||(t=Vu(e));++r<e;)t[r]=n[r];return t}function Cr(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):T;c===T&&(c=n[f]),u?st(r,f,c):ot(r,f,c);}return r}function Dr(n,t){return Cr(n,ho(n),t)}function Mr(n,t){return Cr(n,po(n),t);
}function Tr(n,r){return function(e,u){var i=of(e)?t:ct,o=r?r():{};return i(e,n,ye(u,2),o)}}function $r(n){return fr(function(t,r){var e=-1,u=r.length,i=1<u?r[u-1]:T,o=2<u?r[2]:T,i=3<n.length&&typeof i=="function"?(u--,i):T;for(o&&Oe(r[0],r[1],o)&&(i=3>u?T:i,u=1),t=Yu(t);++e<u;)(o=r[e])&&n(t,o,e,i);return t})}function Fr(n,t){return function(r,e){if(null==r)return r;if(!lu(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=Yu(r);(t?i--:++i<u)&&false!==e(o[i],i,o););return r}}function Nr(n){return function(t,r,e){
var u=-1,i=Yu(t);e=e(t);for(var o=e.length;o--;){var f=e[n?o:++u];if(false===r(i[f],f,i))break}return t}}function Pr(n,t,r){function e(){return (this&&this!==$n&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=1&t,i=Vr(n);return e}function Zr(n){return function(t){t=Ou(t);var r=Rn.test(t)?M(t):T,e=r?r[0]:t.charAt(0);return t=r?Or(r,1).join(""):t.slice(1),e[n]()+t}}function qr(n){return function(t){return l(Du(Cu(t).replace(kn,"")),n,"")}}function Vr(n){return function(){var t=arguments;switch(t.length){
case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=ro(n.prototype),t=n.apply(r,t);return gu(t)?t:r}}function Kr(t,r,e){function u(){for(var o=arguments.length,f=Vu(o),c=o,a=de(u);c--;)f[c]=arguments[c];return c=3>o&&f[0]!==a&&f[o-1]!==a?[]:L(f,a),
o-=c.length,o<e?ue(t,r,Jr,u.placeholder,T,f,c,T,T,e-o):n(this&&this!==$n&&this instanceof u?i:t,this,f)}var i=Vr(t);return u}function Gr(n){return function(t,r,e){var u=Yu(t);if(!lu(t)){var i=ye(r,3);t=zu(t),r=function(n){return i(u[n],n,u)};}return r=n(t,r,e),-1<r?u[i?t[r]:r]:T}}function Hr(n){return pe(function(t){var r=t.length,e=r,u=On.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(typeof i!="function")throw new ni("Expected a function");if(u&&!o&&"wrapper"==ge(i))var o=new On([],true);}for(e=o?e:r;++e<r;)var i=t[e],u=ge(i),f="wrapper"==u?so(i):T,o=f&&Re(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?o[ge(f[0])].apply(o,f[3]):1==i.length&&Re(i)?o[u]():o.thru(i);
return function(){var n=arguments,e=n[0];if(o&&1==n.length&&of(e))return o.plant(e).value();for(var u=0,n=r?t[u].apply(this,n):e;++u<r;)n=t[u].call(this,n);return n}})}function Jr(n,t,r,e,u,i,o,f,c,a){function l(){for(var d=arguments.length,y=Vu(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=de(l),b=y.length;for(x=0;b--;)y[b]===j&&++x;}if(e&&(y=Br(y,e,u,_)),i&&(y=Lr(y,i,o,_)),d-=x,_&&d<a)return j=L(y,j),ue(n,t,Jr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[n]:n,d=y.length,f){x=y.length;for(var w=Ui(f.length,x),m=Ur(y);w--;){
var A=f[w];y[w]=Se(A,x)?m[A]:T;}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==$n&&this instanceof l&&(b=g||Vr(b)),b.apply(j,y)}var s=128&t,h=1&t,p=2&t,_=24&t,v=512&t,g=p?T:Vr(n);return l}function Yr(n,t){return function(r,e){return Bt(r,n,t(e))}}function Qr(n,t){return function(r,e){var u;if(r===T&&e===T)return t;if(r!==T&&(u=r),e!==T){if(u===T)return e;typeof r=="string"||typeof e=="string"?(r=yr(r),e=yr(e)):(r=dr(r),e=dr(e)),u=n(r,e);}return u}}function Xr(t){return pe(function(r){
return r=c(r,k(ye())),fr(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ne(n,t){t=t===T?" ":yr(t);var r=t.length;return 2>r?r?or(t,n):t:(r=or(t,Si(n/D(t))),Rn.test(t)?Or(M(r),0,n).join(""):r.slice(0,n))}function te(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=Vu(l+c),h=this&&this!==$n&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];return n(h,o?e:this,s)}var o=1&r,f=Vr(t);return i}function re(n){return function(t,r,e){
e&&typeof e!="number"&&Oe(t,r,e)&&(r=e=T),t=mu(t),r===T?(r=t,t=0):r=mu(r),e=e===T?t<r?1:-1:mu(e);var u=-1;r=Li(Si((r-t)/(e||1)),0);for(var i=Vu(r);r--;)i[n?r:++u]=t,t+=e;return i}}function ee(n){return function(t,r){return typeof t=="string"&&typeof r=="string"||(t=ku(t),r=ku(r)),n(t,r)}}function ue(n,t,r,e,u,i,o,f,c,a){var l=8&t,s=l?o:T;o=l?T:o;var h=l?i:T;return i=l?T:i,t=(t|(l?32:64))&~(l?64:32),4&t||(t&=-4),u=[n,t,u,h,s,i,o,f,c,a],r=r.apply(T,u),Re(n)&&go(r,u),r.placeholder=e,Le(r,n,t)}function ie(n){
var t=Ju[n];return function(n,r){if(n=ku(n),r=null==r?0:Ui(Au(r),292)){var e=(Ou(n)+"e").split("e"),e=t(e[0]+"e"+(+e[1]+r)),e=(Ou(e)+"e").split("e");return +(e[0]+"e"+(+e[1]-r))}return t(n)}}function oe(n){return function(t){var r=_o(t);return "[object Map]"==r?W(t):"[object Set]"==r?C(t):E(t,n(t))}}function fe(n,t,r,e,u,i,o,f){var c=2&t;if(!c&&typeof n!="function")throw new ni("Expected a function");var a=e?e.length:0;if(a||(t&=-97,e=u=T),o=o===T?o:Li(Au(o),0),f=f===T?f:Au(f),a-=u?u.length:0,64&t){
var l=e,s=u;e=u=T;}var h=c?T:so(n);return i=[n,t,r,e,u,l,s,i,o,f],h&&(r=i[1],n=h[1],t=r|n,e=128==n&&8==r||128==n&&256==r&&i[7].length<=h[8]||384==n&&h[7].length<=h[8]&&8==r,131>t||e)&&(1&n&&(i[2]=h[2],t|=1&r?0:4),(r=h[3])&&(e=i[3],i[3]=e?Br(e,r,h[4]):r,i[4]=e?L(i[3],"__lodash_placeholder__"):h[4]),(r=h[5])&&(e=i[5],i[5]=e?Lr(e,r,h[6]):r,i[6]=e?L(i[5],"__lodash_placeholder__"):h[6]),(r=h[7])&&(i[7]=r),128&n&&(i[8]=null==i[8]?h[8]:Ui(i[8],h[8])),null==i[9]&&(i[9]=h[9]),i[0]=h[0],i[1]=t),n=i[0],t=i[1],
r=i[2],e=i[3],u=i[4],f=i[9]=i[9]===T?c?0:n.length:Li(i[9]-a,0),!f&&24&t&&(t&=-25),Le((h?fo:go)(t&&1!=t?8==t||16==t?Kr(n,t,f):32!=t&&33!=t||u.length?Jr.apply(T,i):te(n,t,r,e):Pr(n,t,r),i),n,t)}function ce(n,t,r,e){return n===T||au(n,ri[r])&&!ii.call(e,r)?t:n}function ae(n,t,r,e,u,i){return gu(n)&&gu(t)&&(i.set(t,n),Yt(n,t,T,ae,i),i.delete(t)),n}function le(n){return bu(n)?T:n}function se(n,t,r,e,u,i){var o=1&r,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return false;if((c=i.get(n))&&i.get(t))return c==t;var c=-1,a=true,l=2&r?new Nn:T;
for(i.set(n,t),i.set(t,n);++c<f;){var s=n[c],p=t[c];if(e)var _=o?e(p,s,c,t,n,i):e(s,p,c,n,t,i);if(_!==T){if(_)continue;a=false;break}if(l){if(!h(t,function(n,t){if(!O(l,t)&&(s===n||u(s,n,r,e,i)))return l.push(t)})){a=false;break}}else if(s!==p&&!u(s,p,r,e,i)){a=false;break}}return i.delete(n),i.delete(t),a}function he(n,t,r,e,u,i,o){switch(r){case"[object DataView]":if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)break;n=n.buffer,t=t.buffer;case"[object ArrayBuffer]":if(n.byteLength!=t.byteLength||!i(new _i(n),new _i(t)))break;
return true;case"[object Boolean]":case"[object Date]":case"[object Number]":return au(+n,+t);case"[object Error]":return n.name==t.name&&n.message==t.message;case"[object RegExp]":case"[object String]":return n==t+"";case"[object Map]":var f=W;case"[object Set]":if(f||(f=U),n.size!=t.size&&!(1&e))break;return (r=o.get(n))?r==t:(e|=2,o.set(n,t),t=se(f(n),f(t),e,u,i,o),o.delete(n),t);case"[object Symbol]":if(no)return no.call(n)==no.call(t)}return false}function pe(n){return bo(Be(n,T,Pe),n+"")}function _e(n){
return St(n,zu,ho)}function ve(n){return St(n,Wu,po)}function ge(n){for(var t=n.name+"",r=Ki[t],e=ii.call(Ki,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function de(n){return (ii.call(An,"placeholder")?An:n).placeholder}function ye(){var n=An.iteratee||$u,n=n===$u?qt:n;return arguments.length?n(arguments[0],arguments[1]):n}function be(n,t){var r=n.__data__,e=typeof t;return ("string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t)?r[typeof t=="string"?"string":"hash"]:r.map;
}function xe(n){for(var t=zu(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,u===u&&!gu(u)];}return t}function je(n,t){var r=null==n?T:n[t];return Ft(r)?r:T}function we(n,t,r){t=Sr(t,n);for(var e=-1,u=t.length,i=false;++e<u;){var o=De(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o];}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&vu(u)&&Se(o,u)&&(of(n)||uf(n)))}function me(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&ii.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Ae(n){
return typeof n.constructor!="function"||ze(n)?{}:ro(gi(n))}function Ee(n,t,r){var e=n.constructor;switch(t){case"[object ArrayBuffer]":return Rr(n);case"[object Boolean]":case"[object Date]":return new e(+n);case"[object DataView]":return t=r?Rr(n.buffer):n.buffer,new n.constructor(t,n.byteOffset,n.byteLength);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":
case"[object Uint16Array]":case"[object Uint32Array]":return zr(n,r);case"[object Map]":return new e;case"[object Number]":case"[object String]":return new e(n);case"[object RegExp]":return t=new n.constructor(n.source,_n.exec(n)),t.lastIndex=n.lastIndex,t;case"[object Set]":return new e;case"[object Symbol]":return no?Yu(no.call(n)):{}}}function ke(n){return of(n)||uf(n)||!!(xi&&n&&n[xi])}function Se(n,t){var r=typeof n;return t=null==t?9007199254740991:t,!!t&&("number"==r||"symbol"!=r&&bn.test(n))&&-1<n&&0==n%1&&n<t;
}function Oe(n,t,r){if(!gu(r))return false;var e=typeof t;return !!("number"==e?lu(r)&&Se(t,r.length):"string"==e&&t in r)&&au(r[t],n)}function Ie(n,t){if(of(n))return false;var r=typeof n;return !("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=n&&!ju(n))||(nn.test(n)||!X.test(n)||null!=t&&n in Yu(t))}function Re(n){var t=ge(n),r=An[t];return typeof r=="function"&&t in Un.prototype&&(n===r||(t=so(r),!!t&&n===t[0]))}function ze(n){var t=n&&n.constructor;return n===(typeof t=="function"&&t.prototype||ri)}function We(n,t){
return function(r){return null!=r&&(r[n]===t&&(t!==T||n in Yu(r)))}}function Be(t,r,e){return r=Li(r===T?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Li(u.length-r,0),f=Vu(o);++i<o;)f[i]=u[r+i];for(i=-1,o=Vu(r+1);++i<r;)o[i]=u[i];return o[r]=e(f),n(t,this,o)}}function Le(n,t,r){var e=t+"";t=bo;var u,i=Te;return u=(u=e.match(an))?u[1].split(ln):[],r=i(u,r),(i=r.length)&&(u=i-1,r[u]=(1<i?"& ":"")+r[u],r=r.join(2<i?", ":" "),e=e.replace(cn,"{\n/* [wrapped with "+r+"] */\n")),t(n,e)}function Ue(n){
var t=0,r=0;return function(){var e=Ci(),u=16-(e-r);if(r=e,0<u){if(800<=++t)return arguments[0]}else t=0;return n.apply(T,arguments)}}function Ce(n,t){var r=-1,e=n.length,u=e-1;for(t=t===T?e:t;++r<t;){var e=ir(r,u),i=n[e];n[e]=n[r],n[r]=i;}return n.length=t,n}function De(n){if(typeof n=="string"||ju(n))return n;var t=n+"";return "0"==t&&1/n==-$?"-0":t}function Me(n){if(null!=n){try{return ui.call(n)}catch(n){}return n+""}return ""}function Te(n,t){return r(N,function(r){var e="_."+r[0];t&r[1]&&!o(n,e)&&n.push(e);
}),n.sort()}function $e(n){if(n instanceof Un)return n.clone();var t=new On(n.__wrapped__,n.__chain__);return t.__actions__=Ur(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function Fe(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),_(n,ye(t,3),r)):-1}function Ne(n,t,r){var e=null==n?0:n.length;if(!e)return -1;var u=e-1;return r!==T&&(u=Au(r),u=0>r?Li(e+u,0):Ui(u,e-1)),_(n,ye(t,3),u,true)}function Pe(n){return (null==n?0:n.length)?wt(n,1):[]}function Ze(n){
return n&&n.length?n[0]:T}function qe(n){var t=null==n?0:n.length;return t?n[t-1]:T}function Ve(n,t){return n&&n.length&&t&&t.length?er(n,t):n}function Ke(n){return null==n?n:Ti.call(n)}function Ge(n){if(!n||!n.length)return [];var t=0;return n=i(n,function(n){if(su(n))return t=Li(n.length,t),true}),A(t,function(t){return c(n,b(t))})}function He(t,r){if(!t||!t.length)return [];var e=Ge(t);return null==r?e:c(e,function(t){return n(r,T,t)})}function Je(n){return n=An(n),n.__chain__=true,n}function Ye(n,t){
return t(n)}function Qe(){return this}function Xe(n,t){return (of(n)?r:eo)(n,ye(t,3))}function nu(n,t){return (of(n)?e:uo)(n,ye(t,3))}function tu(n,t){return (of(n)?c:Gt)(n,ye(t,3))}function ru(n,t,r){return t=r?T:t,t=n&&null==t?n.length:t,fe(n,128,T,T,T,T,t)}function eu(n,t){var r;if(typeof t!="function")throw new ni("Expected a function");return n=Au(n),function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=T),r}}function uu(n,t,r){return t=r?T:t,n=fe(n,8,T,T,T,T,T,t),n.placeholder=uu.placeholder,
n}function iu(n,t,r){return t=r?T:t,n=fe(n,16,T,T,T,T,T,t),n.placeholder=iu.placeholder,n}function ou(n,t,r){function e(t){var r=c,e=a;return c=a=T,_=t,s=n.apply(e,r)}function u(n){var r=n-p;return n-=_,p===T||r>=t||0>r||g&&n>=l}function i(){var n=Ko();if(u(n))return o(n);var r,e=yo;r=n-_,n=t-(n-p),r=g?Ui(n,l-r):n,h=e(i,r);}function o(n){return h=T,d&&c?e(n):(c=a=T,s)}function f(){var n=Ko(),r=u(n);if(c=arguments,a=this,p=n,r){if(h===T)return _=n=p,h=yo(i,t),v?e(n):s;if(g)return h=yo(i,t),e(p)}return h===T&&(h=yo(i,t)),
s}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof n!="function")throw new ni("Expected a function");return t=ku(t)||0,gu(r)&&(v=!!r.leading,l=(g="maxWait"in r)?Li(ku(r.maxWait)||0,t):l,d="trailing"in r?!!r.trailing:d),f.cancel=function(){h!==T&&ao(h),_=0,c=p=a=h=T;},f.flush=function(){return h===T?s:o(Ko())},f}function fu(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;return i.has(u)?i.get(u):(e=n.apply(this,e),r.cache=i.set(u,e)||i,e)}if(typeof n!="function"||null!=t&&typeof t!="function")throw new ni("Expected a function");
return r.cache=new(fu.Cache||Fn),r}function cu(n){if(typeof n!="function")throw new ni("Expected a function");return function(){var t=arguments;switch(t.length){case 0:return !n.call(this);case 1:return !n.call(this,t[0]);case 2:return !n.call(this,t[0],t[1]);case 3:return !n.call(this,t[0],t[1],t[2])}return !n.apply(this,t)}}function au(n,t){return n===t||n!==n&&t!==t}function lu(n){return null!=n&&vu(n.length)&&!pu(n)}function su(n){return du(n)&&lu(n)}function hu(n){if(!du(n))return false;var t=Ot(n);return "[object Error]"==t||"[object DOMException]"==t||typeof n.message=="string"&&typeof n.name=="string"&&!bu(n);
}function pu(n){return !!gu(n)&&(n=Ot(n),"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n)}function _u(n){return typeof n=="number"&&n==Au(n)}function vu(n){return typeof n=="number"&&-1<n&&0==n%1&&9007199254740991>=n}function gu(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}function du(n){return null!=n&&typeof n=="object"}function yu(n){return typeof n=="number"||du(n)&&"[object Number]"==Ot(n)}function bu(n){return !(!du(n)||"[object Object]"!=Ot(n))&&(n=gi(n),
null===n||(n=ii.call(n,"constructor")&&n.constructor,typeof n=="function"&&n instanceof n&&ui.call(n)==ai))}function xu(n){return typeof n=="string"||!of(n)&&du(n)&&"[object String]"==Ot(n)}function ju(n){return typeof n=="symbol"||du(n)&&"[object Symbol]"==Ot(n)}function wu(n){if(!n)return [];if(lu(n))return xu(n)?M(n):Ur(n);if(ji&&n[ji]){n=n[ji]();for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}return t=_o(n),("[object Map]"==t?W:"[object Set]"==t?U:Lu)(n)}function mu(n){return n?(n=ku(n),
n===$||n===-$?1.7976931348623157e308*(0>n?-1:1):n===n?n:0):0===n?n:0}function Au(n){n=mu(n);var t=n%1;return n===n?t?n-t:n:0}function Eu(n){return n?pt(Au(n),0,4294967295):0}function ku(n){if(typeof n=="number")return n;if(ju(n))return F;if(gu(n)&&(n=typeof n.valueOf=="function"?n.valueOf():n,n=gu(n)?n+"":n),typeof n!="string")return 0===n?n:+n;n=n.replace(un,"");var t=gn.test(n);return t||yn.test(n)?Dn(n.slice(2),t?2:8):vn.test(n)?F:+n}function Su(n){return Cr(n,Wu(n))}function Ou(n){return null==n?"":yr(n);
}function Iu(n,t,r){return n=null==n?T:kt(n,t),n===T?r:n}function Ru(n,t){return null!=n&&we(n,t,zt)}function zu(n){return lu(n)?qn(n):Vt(n)}function Wu(n){if(lu(n))n=qn(n,true);else if(gu(n)){var t,r=ze(n),e=[];for(t in n)("constructor"!=t||!r&&ii.call(n,t))&&e.push(t);n=e;}else {if(t=[],null!=n)for(r in Yu(n))t.push(r);n=t;}return n}function Bu(n,t){if(null==n)return {};var r=c(ve(n),function(n){return [n]});return t=ye(t),tr(n,r,function(n,r){return t(n,r[0])})}function Lu(n){return null==n?[]:S(n,zu(n));
}function Uu(n){return Tf(Ou(n).toLowerCase())}function Cu(n){return (n=Ou(n))&&n.replace(xn,Xn).replace(Sn,"")}function Du(n,t,r){return n=Ou(n),t=r?T:t,t===T?zn.test(n)?n.match(In)||[]:n.match(sn)||[]:n.match(t)||[]}function Mu(n){return function(){return n}}function Tu(n){return n}function $u(n){return qt(typeof n=="function"?n:_t(n,1))}function Fu(n,t,e){var u=zu(t),i=Et(t,u);null!=e||gu(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=Et(t,zu(t)));var o=!(gu(e)&&"chain"in e&&!e.chain),f=pu(n);return r(i,function(r){
var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;if(o||t){var r=n(this.__wrapped__);return (r.__actions__=Ur(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))});}),n}function Nu(){}function Pu(n){return Ie(n)?b(De(n)):rr(n)}function Zu(){return []}function qu(){return false}mn=null==mn?$n:rt.defaults($n.Object(),mn,rt.pick($n,Wn));var Vu=mn.Array,Ku=mn.Date,Gu=mn.Error,Hu=mn.Function,Ju=mn.Math,Yu=mn.Object,Qu=mn.RegExp,Xu=mn.String,ni=mn.TypeError,ti=Vu.prototype,ri=Yu.prototype,ei=mn["__core-js_shared__"],ui=Hu.prototype.toString,ii=ri.hasOwnProperty,oi=0,fi=function(){
var n=/[^.]+$/.exec(ei&&ei.keys&&ei.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:""}(),ci=ri.toString,ai=ui.call(Yu),li=$n._,si=Qu("^"+ui.call(ii).replace(rn,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),hi=Pn?mn.Buffer:T,pi=mn.Symbol,_i=mn.Uint8Array,vi=hi?hi.g:T,gi=B(Yu.getPrototypeOf,Yu),di=Yu.create,yi=ri.propertyIsEnumerable,bi=ti.splice,xi=pi?pi.isConcatSpreadable:T,ji=pi?pi.iterator:T,wi=pi?pi.toStringTag:T,mi=function(){try{var n=je(Yu,"defineProperty");
return n({},"",{}),n}catch(n){}}(),Ai=mn.clearTimeout!==$n.clearTimeout&&mn.clearTimeout,Ei=Ku&&Ku.now!==$n.Date.now&&Ku.now,ki=mn.setTimeout!==$n.setTimeout&&mn.setTimeout,Si=Ju.ceil,Oi=Ju.floor,Ii=Yu.getOwnPropertySymbols,Ri=hi?hi.isBuffer:T,zi=mn.isFinite,Wi=ti.join,Bi=B(Yu.keys,Yu),Li=Ju.max,Ui=Ju.min,Ci=Ku.now,Di=mn.parseInt,Mi=Ju.random,Ti=ti.reverse,$i=je(mn,"DataView"),Fi=je(mn,"Map"),Ni=je(mn,"Promise"),Pi=je(mn,"Set"),Zi=je(mn,"WeakMap"),qi=je(Yu,"create"),Vi=Zi&&new Zi,Ki={},Gi=Me($i),Hi=Me(Fi),Ji=Me(Ni),Yi=Me(Pi),Qi=Me(Zi),Xi=pi?pi.prototype:T,no=Xi?Xi.valueOf:T,to=Xi?Xi.toString:T,ro=function(){
function n(){}return function(t){return gu(t)?di?di(t):(n.prototype=t,t=new n,n.prototype=T,t):{}}}();An.templateSettings={escape:J,evaluate:Y,interpolate:Q,variable:"",imports:{_:An}},An.prototype=En.prototype,An.prototype.constructor=An,On.prototype=ro(En.prototype),On.prototype.constructor=On,Un.prototype=ro(En.prototype),Un.prototype.constructor=Un,Mn.prototype.clear=function(){this.__data__=qi?qi(null):{},this.size=0;},Mn.prototype.delete=function(n){return n=this.has(n)&&delete this.__data__[n],
this.size-=n?1:0,n},Mn.prototype.get=function(n){var t=this.__data__;return qi?(n=t[n],"__lodash_hash_undefined__"===n?T:n):ii.call(t,n)?t[n]:T},Mn.prototype.has=function(n){var t=this.__data__;return qi?t[n]!==T:ii.call(t,n)},Mn.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=qi&&t===T?"__lodash_hash_undefined__":t,this},Tn.prototype.clear=function(){this.__data__=[],this.size=0;},Tn.prototype.delete=function(n){var t=this.__data__;return n=ft(t,n),!(0>n)&&(n==t.length-1?t.pop():bi.call(t,n,1),
--this.size,true)},Tn.prototype.get=function(n){var t=this.__data__;return n=ft(t,n),0>n?T:t[n][1]},Tn.prototype.has=function(n){return -1<ft(this.__data__,n)},Tn.prototype.set=function(n,t){var r=this.__data__,e=ft(r,n);return 0>e?(++this.size,r.push([n,t])):r[e][1]=t,this},Fn.prototype.clear=function(){this.size=0,this.__data__={hash:new Mn,map:new(Fi||Tn),string:new Mn};},Fn.prototype.delete=function(n){return n=be(this,n).delete(n),this.size-=n?1:0,n},Fn.prototype.get=function(n){return be(this,n).get(n);
},Fn.prototype.has=function(n){return be(this,n).has(n)},Fn.prototype.set=function(n,t){var r=be(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Nn.prototype.add=Nn.prototype.push=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this},Nn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.clear=function(){this.__data__=new Tn,this.size=0;},Zn.prototype.delete=function(n){var t=this.__data__;return n=t.delete(n),this.size=t.size,n},Zn.prototype.get=function(n){
return this.__data__.get(n)},Zn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.set=function(n,t){var r=this.__data__;if(r instanceof Tn){var e=r.__data__;if(!Fi||199>e.length)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Fn(e);}return r.set(n,t),this.size=r.size,this};var eo=Fr(mt),uo=Fr(At,true),io=Nr(),oo=Nr(true),fo=Vi?function(n,t){return Vi.set(n,t),n}:Tu,co=mi?function(n,t){return mi(n,"toString",{configurable:true,enumerable:false,value:Mu(t),writable:true})}:Tu,ao=Ai||function(n){
return $n.clearTimeout(n)},lo=Pi&&1/U(new Pi([,-0]))[1]==$?function(n){return new Pi(n)}:Nu,so=Vi?function(n){return Vi.get(n)}:Nu,ho=Ii?function(n){return null==n?[]:(n=Yu(n),i(Ii(n),function(t){return yi.call(n,t)}))}:Zu,po=Ii?function(n){for(var t=[];n;)a(t,ho(n)),n=gi(n);return t}:Zu,_o=Ot;($i&&"[object DataView]"!=_o(new $i(new ArrayBuffer(1)))||Fi&&"[object Map]"!=_o(new Fi)||Ni&&"[object Promise]"!=_o(Ni.resolve())||Pi&&"[object Set]"!=_o(new Pi)||Zi&&"[object WeakMap]"!=_o(new Zi))&&(_o=function(n){
var t=Ot(n);if(n=(n="[object Object]"==t?n.constructor:T)?Me(n):"")switch(n){case Gi:return "[object DataView]";case Hi:return "[object Map]";case Ji:return "[object Promise]";case Yi:return "[object Set]";case Qi:return "[object WeakMap]"}return t});var vo=ei?pu:qu,go=Ue(fo),yo=ki||function(n,t){return $n.setTimeout(n,t)},bo=Ue(co),xo=function(n){n=fu(n,function(n){return 500===t.size&&t.clear(),n});var t=n.cache;return n}(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(""),n.replace(tn,function(n,r,e,u){
t.push(e?u.replace(hn,"$1"):r||n);}),t}),jo=fr(function(n,t){return su(n)?yt(n,wt(t,1,su,true)):[]}),wo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),ye(r,2)):[]}),mo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),T,r):[]}),Ao=fr(function(n){var t=c(n,Er);return t.length&&t[0]===n[0]?Wt(t):[]}),Eo=fr(function(n){var t=qe(n),r=c(n,Er);return t===qe(r)?t=T:r.pop(),r.length&&r[0]===n[0]?Wt(r,ye(t,2)):[]}),ko=fr(function(n){var t=qe(n),r=c(n,Er);return (t=typeof t=="function"?t:T)&&r.pop(),
r.length&&r[0]===n[0]?Wt(r,T,t):[]}),So=fr(Ve),Oo=pe(function(n,t){var r=null==n?0:n.length,e=ht(n,t);return ur(n,c(t,function(n){return Se(n,r)?+n:n}).sort(Wr)),e}),Io=fr(function(n){return br(wt(n,1,su,true))}),Ro=fr(function(n){var t=qe(n);return su(t)&&(t=T),br(wt(n,1,su,true),ye(t,2))}),zo=fr(function(n){var t=qe(n),t=typeof t=="function"?t:T;return br(wt(n,1,su,true),T,t)}),Wo=fr(function(n,t){return su(n)?yt(n,t):[]}),Bo=fr(function(n){return mr(i(n,su))}),Lo=fr(function(n){var t=qe(n);return su(t)&&(t=T),
mr(i(n,su),ye(t,2))}),Uo=fr(function(n){var t=qe(n),t=typeof t=="function"?t:T;return mr(i(n,su),T,t)}),Co=fr(Ge),Do=fr(function(n){var t=n.length,t=1<t?n[t-1]:T,t=typeof t=="function"?(n.pop(),t):T;return He(n,t)}),Mo=pe(function(n){function t(t){return ht(t,n)}var r=n.length,e=r?n[0]:0,u=this.__wrapped__;return !(1<r||this.__actions__.length)&&u instanceof Un&&Se(e)?(u=u.slice(e,+e+(r?1:0)),u.__actions__.push({func:Ye,args:[t],thisArg:T}),new On(u,this.__chain__).thru(function(n){return r&&!n.length&&n.push(T),
n})):this.thru(t)}),To=Tr(function(n,t,r){ii.call(n,r)?++n[r]:st(n,r,1);}),$o=Gr(Fe),Fo=Gr(Ne),No=Tr(function(n,t,r){ii.call(n,r)?n[r].push(t):st(n,r,[t]);}),Po=fr(function(t,r,e){var u=-1,i=typeof r=="function",o=lu(t)?Vu(t.length):[];return eo(t,function(t){o[++u]=i?n(r,t,e):Lt(t,r,e);}),o}),Zo=Tr(function(n,t,r){st(n,r,t);}),qo=Tr(function(n,t,r){n[r?0:1].push(t);},function(){return [[],[]]}),Vo=fr(function(n,t){if(null==n)return [];var r=t.length;return 1<r&&Oe(n,t[0],t[1])?t=[]:2<r&&Oe(t[0],t[1],t[2])&&(t=[t[0]]),
Xt(n,wt(t,1),[])}),Ko=Ei||function(){return $n.Date.now()},Go=fr(function(n,t,r){var e=1;if(r.length)var u=L(r,de(Go)),e=32|e;return fe(n,e,t,r,u)}),Ho=fr(function(n,t,r){var e=3;if(r.length)var u=L(r,de(Ho)),e=32|e;return fe(t,e,n,r,u)}),Jo=fr(function(n,t){return dt(n,1,t)}),Yo=fr(function(n,t,r){return dt(n,ku(t)||0,r)});fu.Cache=Fn;var Qo=fr(function(t,r){r=1==r.length&&of(r[0])?c(r[0],k(ye())):c(wt(r,1),k(ye()));var e=r.length;return fr(function(u){for(var i=-1,o=Ui(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);
return n(t,this,u)})}),Xo=fr(function(n,t){return fe(n,32,T,t,L(t,de(Xo)))}),nf=fr(function(n,t){return fe(n,64,T,t,L(t,de(nf)))}),tf=pe(function(n,t){return fe(n,256,T,T,T,t)}),rf=ee(It),ef=ee(function(n,t){return n>=t}),uf=Ut(function(){return arguments}())?Ut:function(n){return du(n)&&ii.call(n,"callee")&&!yi.call(n,"callee")},of=Vu.isArray,ff=Vn?k(Vn):Ct,cf=Ri||qu,af=Kn?k(Kn):Dt,lf=Gn?k(Gn):Tt,sf=Hn?k(Hn):Nt,hf=Jn?k(Jn):Pt,pf=Yn?k(Yn):Zt,_f=ee(Kt),vf=ee(function(n,t){return n<=t}),gf=$r(function(n,t){
if(ze(t)||lu(t))Cr(t,zu(t),n);else for(var r in t)ii.call(t,r)&&ot(n,r,t[r]);}),df=$r(function(n,t){Cr(t,Wu(t),n);}),yf=$r(function(n,t,r,e){Cr(t,Wu(t),n,e);}),bf=$r(function(n,t,r,e){Cr(t,zu(t),n,e);}),xf=pe(ht),jf=fr(function(n,t){n=Yu(n);var r=-1,e=t.length,u=2<e?t[2]:T;for(u&&Oe(t[0],t[1],u)&&(e=1);++r<e;)for(var u=t[r],i=Wu(u),o=-1,f=i.length;++o<f;){var c=i[o],a=n[c];(a===T||au(a,ri[c])&&!ii.call(n,c))&&(n[c]=u[c]);}return n}),wf=fr(function(t){return t.push(T,ae),n(Sf,T,t)}),mf=Yr(function(n,t,r){
null!=t&&typeof t.toString!="function"&&(t=ci.call(t)),n[t]=r;},Mu(Tu)),Af=Yr(function(n,t,r){null!=t&&typeof t.toString!="function"&&(t=ci.call(t)),ii.call(n,t)?n[t].push(r):n[t]=[r];},ye),Ef=fr(Lt),kf=$r(function(n,t,r){Yt(n,t,r);}),Sf=$r(function(n,t,r,e){Yt(n,t,r,e);}),Of=pe(function(n,t){var r={};if(null==n)return r;var e=false;t=c(t,function(t){return t=Sr(t,n),e||(e=1<t.length),t}),Cr(n,ve(n),r),e&&(r=_t(r,7,le));for(var u=t.length;u--;)xr(r,t[u]);return r}),If=pe(function(n,t){return null==n?{}:nr(n,t);
}),Rf=oe(zu),zf=oe(Wu),Wf=qr(function(n,t,r){return t=t.toLowerCase(),n+(r?Uu(t):t)}),Bf=qr(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Lf=qr(function(n,t,r){return n+(r?" ":"")+t.toLowerCase()}),Uf=Zr("toLowerCase"),Cf=qr(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),Df=qr(function(n,t,r){return n+(r?" ":"")+Tf(t)}),Mf=qr(function(n,t,r){return n+(r?" ":"")+t.toUpperCase()}),Tf=Zr("toUpperCase"),$f=fr(function(t,r){try{return n(t,T,r)}catch(n){return hu(n)?n:new Gu(n)}}),Ff=pe(function(n,t){
return r(t,function(t){t=De(t),st(n,t,Go(n[t],n));}),n}),Nf=Hr(),Pf=Hr(true),Zf=fr(function(n,t){return function(r){return Lt(r,n,t)}}),qf=fr(function(n,t){return function(r){return Lt(n,r,t)}}),Vf=Xr(c),Kf=Xr(u),Gf=Xr(h),Hf=re(),Jf=re(true),Yf=Qr(function(n,t){return n+t},0),Qf=ie("ceil"),Xf=Qr(function(n,t){return n/t},1),nc=ie("floor"),tc=Qr(function(n,t){return n*t},1),rc=ie("round"),ec=Qr(function(n,t){return n-t},0);return An.after=function(n,t){if(typeof t!="function")throw new ni("Expected a function");
return n=Au(n),function(){if(1>--n)return t.apply(this,arguments)}},An.ary=ru,An.assign=gf,An.assignIn=df,An.assignInWith=yf,An.assignWith=bf,An.at=xf,An.before=eu,An.bind=Go,An.bindAll=Ff,An.bindKey=Ho,An.castArray=function(){if(!arguments.length)return [];var n=arguments[0];return of(n)?n:[n]},An.chain=Je,An.chunk=function(n,t,r){if(t=(r?Oe(n,t,r):t===T)?1:Li(Au(t),0),r=null==n?0:n.length,!r||1>t)return [];for(var e=0,u=0,i=Vu(Si(r/t));e<r;)i[u++]=hr(n,e,e+=t);return i},An.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){
var i=n[t];i&&(u[e++]=i);}return u},An.concat=function(){var n=arguments.length;if(!n)return [];for(var t=Vu(n-1),r=arguments[0];n--;)t[n-1]=arguments[n];return a(of(r)?Ur(r):[r],wt(t,1))},An.cond=function(t){var r=null==t?0:t.length,e=ye();return t=r?c(t,function(n){if("function"!=typeof n[1])throw new ni("Expected a function");return [e(n[0]),n[1]]}):[],fr(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})},An.conforms=function(n){return vt(_t(n,1))},An.constant=Mu,
An.countBy=To,An.create=function(n,t){var r=ro(n);return null==t?r:at(r,t)},An.curry=uu,An.curryRight=iu,An.debounce=ou,An.defaults=jf,An.defaultsDeep=wf,An.defer=Jo,An.delay=Yo,An.difference=jo,An.differenceBy=wo,An.differenceWith=mo,An.drop=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),hr(n,0>t?0:t,e)):[]},An.dropRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0,0>t?0:t)):[]},An.dropRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true,true):[];
},An.dropWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true):[]},An.fill=function(n,t,r,e){var u=null==n?0:n.length;if(!u)return [];for(r&&typeof r!="number"&&Oe(n,t,r)&&(r=0,e=u),u=n.length,r=Au(r),0>r&&(r=-r>u?0:u+r),e=e===T||e>u?u:Au(e),0>e&&(e+=u),e=r>e?0:Eu(e);r<e;)n[r++]=t;return n},An.filter=function(n,t){return (of(n)?i:jt)(n,ye(t,3))},An.flatMap=function(n,t){return wt(tu(n,t),1)},An.flatMapDeep=function(n,t){return wt(tu(n,t),$)},An.flatMapDepth=function(n,t,r){return r=r===T?1:Au(r),
wt(tu(n,t),r)},An.flatten=Pe,An.flattenDeep=function(n){return (null==n?0:n.length)?wt(n,$):[]},An.flattenDepth=function(n,t){return null!=n&&n.length?(t=t===T?1:Au(t),wt(n,t)):[]},An.flip=function(n){return fe(n,512)},An.flow=Nf,An.flowRight=Pf,An.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1];}return e},An.functions=function(n){return null==n?[]:Et(n,zu(n))},An.functionsIn=function(n){return null==n?[]:Et(n,Wu(n))},An.groupBy=No,An.initial=function(n){
return (null==n?0:n.length)?hr(n,0,-1):[]},An.intersection=Ao,An.intersectionBy=Eo,An.intersectionWith=ko,An.invert=mf,An.invertBy=Af,An.invokeMap=Po,An.iteratee=$u,An.keyBy=Zo,An.keys=zu,An.keysIn=Wu,An.map=tu,An.mapKeys=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,t(n,e,u),n);}),r},An.mapValues=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,e,t(n,e,u));}),r},An.matches=function(n){return Ht(_t(n,1))},An.matchesProperty=function(n,t){return Jt(n,_t(t,1))},An.memoize=fu,
An.merge=kf,An.mergeWith=Sf,An.method=Zf,An.methodOf=qf,An.mixin=Fu,An.negate=cu,An.nthArg=function(n){return n=Au(n),fr(function(t){return Qt(t,n)})},An.omit=Of,An.omitBy=function(n,t){return Bu(n,cu(ye(t)))},An.once=function(n){return eu(2,n)},An.orderBy=function(n,t,r,e){return null==n?[]:(of(t)||(t=null==t?[]:[t]),r=e?T:r,of(r)||(r=null==r?[]:[r]),Xt(n,t,r))},An.over=Vf,An.overArgs=Qo,An.overEvery=Kf,An.overSome=Gf,An.partial=Xo,An.partialRight=nf,An.partition=qo,An.pick=If,An.pickBy=Bu,An.property=Pu,
An.propertyOf=function(n){return function(t){return null==n?T:kt(n,t)}},An.pull=So,An.pullAll=Ve,An.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,ye(r,2)):n},An.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,T,r):n},An.pullAt=Oo,An.range=Hf,An.rangeRight=Jf,An.rearg=tf,An.reject=function(n,t){return (of(n)?i:jt)(n,cu(ye(t,3)))},An.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=ye(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),
u.push(e));}return ur(n,u),r},An.rest=function(n,t){if(typeof n!="function")throw new ni("Expected a function");return t=t===T?t:Au(t),fr(n,t)},An.reverse=Ke,An.sampleSize=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),(of(n)?et:ar)(n,t)},An.set=function(n,t,r){return null==n?n:lr(n,t,r)},An.setWith=function(n,t,r,e){return e=typeof e=="function"?e:T,null==n?n:lr(n,t,r,e)},An.shuffle=function(n){return (of(n)?ut:sr)(n)},An.slice=function(n,t,r){var e=null==n?0:n.length;return e?(r&&typeof r!="number"&&Oe(n,t,r)?(t=0,
r=e):(t=null==t?0:Au(t),r=r===T?e:Au(r)),hr(n,t,r)):[]},An.sortBy=Vo,An.sortedUniq=function(n){return n&&n.length?gr(n):[]},An.sortedUniqBy=function(n,t){return n&&n.length?gr(n,ye(t,2)):[]},An.split=function(n,t,r){return r&&typeof r!="number"&&Oe(n,t,r)&&(t=r=T),r=r===T?4294967295:r>>>0,r?(n=Ou(n))&&(typeof t=="string"||null!=t&&!sf(t))&&(t=yr(t),!t&&Rn.test(n))?Or(M(n),0,r):n.split(t,r):[]},An.spread=function(t,r){if(typeof t!="function")throw new ni("Expected a function");return r=null==r?0:Li(Au(r),0),
fr(function(e){var u=e[r];return e=Or(e,0,r),u&&a(e,u),n(t,this,e)})},An.tail=function(n){var t=null==n?0:n.length;return t?hr(n,1,t):[]},An.take=function(n,t,r){return n&&n.length?(t=r||t===T?1:Au(t),hr(n,0,0>t?0:t)):[]},An.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0>t?0:t,e)):[]},An.takeRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),false,true):[]},An.takeWhile=function(n,t){return n&&n.length?jr(n,ye(t,3)):[]},An.tap=function(n,t){return t(n),
n},An.throttle=function(n,t,r){var e=true,u=true;if(typeof n!="function")throw new ni("Expected a function");return gu(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),ou(n,t,{leading:e,maxWait:t,trailing:u})},An.thru=Ye,An.toArray=wu,An.toPairs=Rf,An.toPairsIn=zf,An.toPath=function(n){return of(n)?c(n,De):ju(n)?[n]:Ur(xo(Ou(n)))},An.toPlainObject=Su,An.transform=function(n,t,e){var u=of(n),i=u||cf(n)||pf(n);if(t=ye(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:gu(n)&&pu(o)?ro(gi(n)):{};
}return (i?r:mt)(n,function(n,r,u){return t(e,n,r,u)}),e},An.unary=function(n){return ru(n,1)},An.union=Io,An.unionBy=Ro,An.unionWith=zo,An.uniq=function(n){return n&&n.length?br(n):[]},An.uniqBy=function(n,t){return n&&n.length?br(n,ye(t,2)):[]},An.uniqWith=function(n,t){return t=typeof t=="function"?t:T,n&&n.length?br(n,T,t):[]},An.unset=function(n,t){return null==n||xr(n,t)},An.unzip=Ge,An.unzipWith=He,An.update=function(n,t,r){return null==n?n:lr(n,t,kr(r)(kt(n,t)),void 0)},An.updateWith=function(n,t,r,e){
return e=typeof e=="function"?e:T,null!=n&&(n=lr(n,t,kr(r)(kt(n,t)),e)),n},An.values=Lu,An.valuesIn=function(n){return null==n?[]:S(n,Wu(n))},An.without=Wo,An.words=Du,An.wrap=function(n,t){return Xo(kr(t),n)},An.xor=Bo,An.xorBy=Lo,An.xorWith=Uo,An.zip=Co,An.zipObject=function(n,t){return Ar(n||[],t||[],ot)},An.zipObjectDeep=function(n,t){return Ar(n||[],t||[],lr)},An.zipWith=Do,An.entries=Rf,An.entriesIn=zf,An.extend=df,An.extendWith=yf,Fu(An,An),An.add=Yf,An.attempt=$f,An.camelCase=Wf,An.capitalize=Uu,
An.ceil=Qf,An.clamp=function(n,t,r){return r===T&&(r=t,t=T),r!==T&&(r=ku(r),r=r===r?r:0),t!==T&&(t=ku(t),t=t===t?t:0),pt(ku(n),t,r)},An.clone=function(n){return _t(n,4)},An.cloneDeep=function(n){return _t(n,5)},An.cloneDeepWith=function(n,t){return t=typeof t=="function"?t:T,_t(n,5,t)},An.cloneWith=function(n,t){return t=typeof t=="function"?t:T,_t(n,4,t)},An.conformsTo=function(n,t){return null==t||gt(n,t,zu(t))},An.deburr=Cu,An.defaultTo=function(n,t){return null==n||n!==n?t:n},An.divide=Xf,An.endsWith=function(n,t,r){
n=Ou(n),t=yr(t);var e=n.length,e=r=r===T?e:pt(Au(r),0,e);return r-=t.length,0<=r&&n.slice(r,e)==t},An.eq=au,An.escape=function(n){return (n=Ou(n))&&H.test(n)?n.replace(K,nt):n},An.escapeRegExp=function(n){return (n=Ou(n))&&en.test(n)?n.replace(rn,"\\$&"):n},An.every=function(n,t,r){var e=of(n)?u:bt;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.find=$o,An.findIndex=Fe,An.findKey=function(n,t){return p(n,ye(t,3),mt)},An.findLast=Fo,An.findLastIndex=Ne,An.findLastKey=function(n,t){return p(n,ye(t,3),At);
},An.floor=nc,An.forEach=Xe,An.forEachRight=nu,An.forIn=function(n,t){return null==n?n:io(n,ye(t,3),Wu)},An.forInRight=function(n,t){return null==n?n:oo(n,ye(t,3),Wu)},An.forOwn=function(n,t){return n&&mt(n,ye(t,3))},An.forOwnRight=function(n,t){return n&&At(n,ye(t,3))},An.get=Iu,An.gt=rf,An.gte=ef,An.has=function(n,t){return null!=n&&we(n,t,Rt)},An.hasIn=Ru,An.head=Ze,An.identity=Tu,An.includes=function(n,t,r,e){return n=lu(n)?n:Lu(n),r=r&&!e?Au(r):0,e=n.length,0>r&&(r=Li(e+r,0)),xu(n)?r<=e&&-1<n.indexOf(t,r):!!e&&-1<v(n,t,r);
},An.indexOf=function(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),v(n,t,r)):-1},An.inRange=function(n,t,r){return t=mu(t),r===T?(r=t,t=0):r=mu(r),n=ku(n),n>=Ui(t,r)&&n<Li(t,r)},An.invoke=Ef,An.isArguments=uf,An.isArray=of,An.isArrayBuffer=ff,An.isArrayLike=lu,An.isArrayLikeObject=su,An.isBoolean=function(n){return true===n||false===n||du(n)&&"[object Boolean]"==Ot(n)},An.isBuffer=cf,An.isDate=af,An.isElement=function(n){return du(n)&&1===n.nodeType&&!bu(n)},An.isEmpty=function(n){
if(null==n)return true;if(lu(n)&&(of(n)||typeof n=="string"||typeof n.splice=="function"||cf(n)||pf(n)||uf(n)))return !n.length;var t=_o(n);if("[object Map]"==t||"[object Set]"==t)return !n.size;if(ze(n))return !Vt(n).length;for(var r in n)if(ii.call(n,r))return false;return true},An.isEqual=function(n,t){return Mt(n,t)},An.isEqualWith=function(n,t,r){var e=(r=typeof r=="function"?r:T)?r(n,t):T;return e===T?Mt(n,t,T,r):!!e},An.isError=hu,An.isFinite=function(n){return typeof n=="number"&&zi(n)},An.isFunction=pu,
An.isInteger=_u,An.isLength=vu,An.isMap=lf,An.isMatch=function(n,t){return n===t||$t(n,t,xe(t))},An.isMatchWith=function(n,t,r){return r=typeof r=="function"?r:T,$t(n,t,xe(t),r)},An.isNaN=function(n){return yu(n)&&n!=+n},An.isNative=function(n){if(vo(n))throw new Gu("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Ft(n)},An.isNil=function(n){return null==n},An.isNull=function(n){return null===n},An.isNumber=yu,An.isObject=gu,An.isObjectLike=du,An.isPlainObject=bu,An.isRegExp=sf,
An.isSafeInteger=function(n){return _u(n)&&-9007199254740991<=n&&9007199254740991>=n},An.isSet=hf,An.isString=xu,An.isSymbol=ju,An.isTypedArray=pf,An.isUndefined=function(n){return n===T},An.isWeakMap=function(n){return du(n)&&"[object WeakMap]"==_o(n)},An.isWeakSet=function(n){return du(n)&&"[object WeakSet]"==Ot(n)},An.join=function(n,t){return null==n?"":Wi.call(n,t)},An.kebabCase=Bf,An.last=qe,An.lastIndexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return -1;var u=e;if(r!==T&&(u=Au(r),u=0>u?Li(e+u,0):Ui(u,e-1)),
t===t){for(r=u+1;r--&&n[r]!==t;);n=r;}else n=_(n,d,u,true);return n},An.lowerCase=Lf,An.lowerFirst=Uf,An.lt=_f,An.lte=vf,An.max=function(n){return n&&n.length?xt(n,Tu,It):T},An.maxBy=function(n,t){return n&&n.length?xt(n,ye(t,2),It):T},An.mean=function(n){return y(n,Tu)},An.meanBy=function(n,t){return y(n,ye(t,2))},An.min=function(n){return n&&n.length?xt(n,Tu,Kt):T},An.minBy=function(n,t){return n&&n.length?xt(n,ye(t,2),Kt):T},An.stubArray=Zu,An.stubFalse=qu,An.stubObject=function(){return {}},An.stubString=function(){
return ""},An.stubTrue=function(){return true},An.multiply=tc,An.nth=function(n,t){return n&&n.length?Qt(n,Au(t)):T},An.noConflict=function(){return $n._===this&&($n._=li),this},An.noop=Nu,An.now=Ko,An.pad=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return !t||e>=t?n:(t=(t-e)/2,ne(Oi(t),r)+n+ne(Si(t),r))},An.padEnd=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?n+ne(t-e,r):n},An.padStart=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?ne(t-e,r)+n:n},An.parseInt=function(n,t,r){
return r||null==t?t=0:t&&(t=+t),Di(Ou(n).replace(on,""),t||0)},An.random=function(n,t,r){if(r&&typeof r!="boolean"&&Oe(n,t,r)&&(t=r=T),r===T&&(typeof t=="boolean"?(r=t,t=T):typeof n=="boolean"&&(r=n,n=T)),n===T&&t===T?(n=0,t=1):(n=mu(n),t===T?(t=n,n=0):t=mu(t)),n>t){var e=n;n=t,t=e;}return r||n%1||t%1?(r=Mi(),Ui(n+r*(t-n+Cn("1e-"+((r+"").length-1))),t)):ir(n,t)},An.reduce=function(n,t,r){var e=of(n)?l:j,u=3>arguments.length;return e(n,ye(t,4),r,u,eo)},An.reduceRight=function(n,t,r){var e=of(n)?s:j,u=3>arguments.length;
return e(n,ye(t,4),r,u,uo)},An.repeat=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),or(Ou(n),t)},An.replace=function(){var n=arguments,t=Ou(n[0]);return 3>n.length?t:t.replace(n[1],n[2])},An.result=function(n,t,r){t=Sr(t,n);var e=-1,u=t.length;for(u||(u=1,n=T);++e<u;){var i=null==n?T:n[De(t[e])];i===T&&(e=u,i=r),n=pu(i)?i.call(n):i;}return n},An.round=rc,An.runInContext=x,An.sample=function(n){return (of(n)?Qn:cr)(n)},An.size=function(n){if(null==n)return 0;if(lu(n))return xu(n)?D(n):n.length;
var t=_o(n);return "[object Map]"==t||"[object Set]"==t?n.size:Vt(n).length},An.snakeCase=Cf,An.some=function(n,t,r){var e=of(n)?h:pr;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.sortedIndex=function(n,t){return _r(n,t)},An.sortedIndexBy=function(n,t,r){return vr(n,t,ye(r,2))},An.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=_r(n,t);if(e<r&&au(n[e],t))return e}return -1},An.sortedLastIndex=function(n,t){return _r(n,t,true)},An.sortedLastIndexBy=function(n,t,r){return vr(n,t,ye(r,2),true);
},An.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var r=_r(n,t,true)-1;if(au(n[r],t))return r}return -1},An.startCase=Df,An.startsWith=function(n,t,r){return n=Ou(n),r=null==r?0:pt(Au(r),0,n.length),t=yr(t),n.slice(r,r+t.length)==t},An.subtract=ec,An.sum=function(n){return n&&n.length?m(n,Tu):0},An.sumBy=function(n,t){return n&&n.length?m(n,ye(t,2)):0},An.template=function(n,t,r){var e=An.templateSettings;r&&Oe(n,t,r)&&(t=T),n=Ou(n),t=yf({},t,e,ce),r=yf({},t.imports,e.imports,ce);var u,i,o=zu(r),f=S(r,o),c=0;
r=t.interpolate||jn;var a="__p+='";r=Qu((t.escape||jn).source+"|"+r.source+"|"+(r===Q?pn:jn).source+"|"+(t.evaluate||jn).source+"|$","g");var l="sourceURL"in t?"//# sourceURL="+t.sourceURL+"\n":"";if(n.replace(r,function(t,r,e,o,f,l){return e||(e=o),a+=n.slice(c,l).replace(wn,z),r&&(u=true,a+="'+__e("+r+")+'"),f&&(i=true,a+="';"+f+";\n__p+='"),e&&(a+="'+((__t=("+e+"))==null?'':__t)+'"),c=l+t.length,t}),a+="';",(t=t.variable)||(a="with(obj){"+a+"}"),a=(i?a.replace(P,""):a).replace(Z,"$1").replace(q,"$1;"),
a="function("+(t||"obj")+"){"+(t?"":"obj||(obj={});")+"var __t,__p=''"+(u?",__e=_.escape":"")+(i?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+a+"return __p}",t=$f(function(){return Hu(o,l+"return "+a).apply(T,f)}),t.source=a,hu(t))throw t;return t},An.times=function(n,t){if(n=Au(n),1>n||9007199254740991<n)return [];var r=4294967295,e=Ui(n,4294967295);for(t=ye(t),n-=4294967295,e=A(e,t);++r<n;)t(r);return e},An.toFinite=mu,An.toInteger=Au,An.toLength=Eu,An.toLower=function(n){
return Ou(n).toLowerCase()},An.toNumber=ku,An.toSafeInteger=function(n){return n?pt(Au(n),-9007199254740991,9007199254740991):0===n?n:0},An.toString=Ou,An.toUpper=function(n){return Ou(n).toUpperCase()},An.trim=function(n,t,r){return (n=Ou(n))&&(r||t===T)?n.replace(un,""):n&&(t=yr(t))?(n=M(n),r=M(t),t=I(n,r),r=R(n,r)+1,Or(n,t,r).join("")):n},An.trimEnd=function(n,t,r){return (n=Ou(n))&&(r||t===T)?n.replace(fn,""):n&&(t=yr(t))?(n=M(n),t=R(n,M(t))+1,Or(n,0,t).join("")):n},An.trimStart=function(n,t,r){
return (n=Ou(n))&&(r||t===T)?n.replace(on,""):n&&(t=yr(t))?(n=M(n),t=I(n,M(t)),Or(n,t).join("")):n},An.truncate=function(n,t){var r=30,e="...";if(gu(t))var u="separator"in t?t.separator:u,r="length"in t?Au(t.length):r,e="omission"in t?yr(t.omission):e;n=Ou(n);var i=n.length;if(Rn.test(n))var o=M(n),i=o.length;if(r>=i)return n;if(i=r-D(e),1>i)return e;if(r=o?Or(o,0,i).join(""):n.slice(0,i),u===T)return r+e;if(o&&(i+=r.length-i),sf(u)){if(n.slice(i).search(u)){var f=r;for(u.global||(u=Qu(u.source,Ou(_n.exec(u))+"g")),
u.lastIndex=0;o=u.exec(f);)var c=o.index;r=r.slice(0,c===T?i:c);}}else n.indexOf(yr(u),i)!=i&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},An.unescape=function(n){return (n=Ou(n))&&G.test(n)?n.replace(V,tt):n},An.uniqueId=function(n){var t=++oi;return Ou(n)+t},An.upperCase=Mf,An.upperFirst=Tf,An.each=Xe,An.eachRight=nu,An.first=Ze,Fu(An,function(){var n={};return mt(An,function(t,r){ii.call(An.prototype,r)||(n[r]=t);}),n}(),{chain:false}),An.VERSION="4.17.10",r("bind bindKey curry curryRight partial partialRight".split(" "),function(n){
An[n].placeholder=An;}),r(["drop","take"],function(n,t){Un.prototype[n]=function(r){r=r===T?1:Li(Au(r),0);var e=this.__filtered__&&!t?new Un(this):this.clone();return e.__filtered__?e.__takeCount__=Ui(r,e.__takeCount__):e.__views__.push({size:Ui(r,4294967295),type:n+(0>e.__dir__?"Right":"")}),e},Un.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()};}),r(["filter","map","takeWhile"],function(n,t){var r=t+1,e=1==r||3==r;Un.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({
iteratee:ye(n,3),type:r}),t.__filtered__=t.__filtered__||e,t};}),r(["head","last"],function(n,t){var r="take"+(t?"Right":"");Un.prototype[n]=function(){return this[r](1).value()[0]};}),r(["initial","tail"],function(n,t){var r="drop"+(t?"":"Right");Un.prototype[n]=function(){return this.__filtered__?new Un(this):this[r](1)};}),Un.prototype.compact=function(){return this.filter(Tu)},Un.prototype.find=function(n){return this.filter(n).head()},Un.prototype.findLast=function(n){return this.reverse().find(n);
},Un.prototype.invokeMap=fr(function(n,t){return typeof n=="function"?new Un(this):this.map(function(r){return Lt(r,n,t)})}),Un.prototype.reject=function(n){return this.filter(cu(ye(n)))},Un.prototype.slice=function(n,t){n=Au(n);var r=this;return r.__filtered__&&(0<n||0>t)?new Un(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==T&&(t=Au(t),r=0>t?r.dropRight(-t):r.take(t-n)),r)},Un.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Un.prototype.toArray=function(){return this.take(4294967295);
},mt(Un.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=An[e?"take"+("last"==t?"Right":""):t],i=e||/^find/.test(t);u&&(An.prototype[t]=function(){function t(n){return n=u.apply(An,a([n],f)),e&&h?n[0]:n}var o=this.__wrapped__,f=e?[1]:arguments,c=o instanceof Un,l=f[0],s=c||of(o);s&&r&&typeof l=="function"&&1!=l.length&&(c=s=false);var h=this.__chain__,p=!!this.__actions__.length,l=i&&!h,c=c&&!p;return !i&&s?(o=c?o:new Un(this),o=n.apply(o,f),o.__actions__.push({
func:Ye,args:[t],thisArg:T}),new On(o,h)):l&&c?n.apply(this,f):(o=this.thru(t),l?e?o.value()[0]:o.value():o)});}),r("pop push shift sort splice unshift".split(" "),function(n){var t=ti[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:pop|shift)$/.test(n);An.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(of(u)?u:[],n)}return this[r](function(r){return t.apply(of(r)?r:[],n)})};}),mt(Un.prototype,function(n,t){var r=An[t];if(r){var e=r.name+"";
(Ki[e]||(Ki[e]=[])).push({name:t,func:r});}}),Ki[Jr(T,2).name]=[{name:"wrapper",func:T}],Un.prototype.clone=function(){var n=new Un(this.__wrapped__);return n.__actions__=Ur(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Ur(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Ur(this.__views__),n},Un.prototype.reverse=function(){if(this.__filtered__){var n=new Un(this);n.__dir__=-1,n.__filtered__=true;}else n=this.clone(),n.__dir__*=-1;return n;
},Un.prototype.value=function(){var n,t=this.__wrapped__.value(),r=this.__dir__,e=of(t),u=0>r,i=e?t.length:0;n=i;for(var o=this.__views__,f=0,c=-1,a=o.length;++c<a;){var l=o[c],s=l.size;switch(l.type){case"drop":f+=s;break;case"dropRight":n-=s;break;case"take":n=Ui(n,f+s);break;case"takeRight":f=Li(f,n-s);}}if(n={start:f,end:n},o=n.start,f=n.end,n=f-o,o=u?f:o-1,f=this.__iteratees__,c=f.length,a=0,l=Ui(n,this.__takeCount__),!e||!u&&i==n&&l==n)return wr(t,this.__actions__);e=[];n:for(;n--&&a<l;){for(o+=r,
u=-1,i=t[o];++u<c;){var h=f[u],s=h.type,h=(0, h.iteratee)(i);if(2==s)i=h;else if(!h){if(1==s)continue n;break n}}e[a++]=i;}return e},An.prototype.at=Mo,An.prototype.chain=function(){return Je(this)},An.prototype.commit=function(){return new On(this.value(),this.__chain__)},An.prototype.next=function(){this.__values__===T&&(this.__values__=wu(this.value()));var n=this.__index__>=this.__values__.length;return {done:n,value:n?T:this.__values__[this.__index__++]}},An.prototype.plant=function(n){for(var t,r=this;r instanceof En;){
var e=$e(r);e.__index__=0,e.__values__=T,t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__;}return u.__wrapped__=n,t},An.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof Un?(this.__actions__.length&&(n=new Un(this)),n=n.reverse(),n.__actions__.push({func:Ye,args:[Ke],thisArg:T}),new On(n,this.__chain__)):this.thru(Ke)},An.prototype.toJSON=An.prototype.valueOf=An.prototype.value=function(){return wr(this.__wrapped__,this.__actions__)},An.prototype.first=An.prototype.head,ji&&(An.prototype[ji]=Qe),
An}();Nn?((Nn.exports=rt)._=rt,Fn._=rt):$n._=rt;}).call(commonjsGlobal);
}(lodash_min, lodash_min.exports));

var _mapping = {};

/** Used to map aliases to their real names. */

(function (exports) {
exports.aliasToReal = {

  // Lodash aliases.
  'each': 'forEach',
  'eachRight': 'forEachRight',
  'entries': 'toPairs',
  'entriesIn': 'toPairsIn',
  'extend': 'assignIn',
  'extendAll': 'assignInAll',
  'extendAllWith': 'assignInAllWith',
  'extendWith': 'assignInWith',
  'first': 'head',

  // Methods that are curried variants of others.
  'conforms': 'conformsTo',
  'matches': 'isMatch',
  'property': 'get',

  // Ramda aliases.
  '__': 'placeholder',
  'F': 'stubFalse',
  'T': 'stubTrue',
  'all': 'every',
  'allPass': 'overEvery',
  'always': 'constant',
  'any': 'some',
  'anyPass': 'overSome',
  'apply': 'spread',
  'assoc': 'set',
  'assocPath': 'set',
  'complement': 'negate',
  'compose': 'flowRight',
  'contains': 'includes',
  'dissoc': 'unset',
  'dissocPath': 'unset',
  'dropLast': 'dropRight',
  'dropLastWhile': 'dropRightWhile',
  'equals': 'isEqual',
  'identical': 'eq',
  'indexBy': 'keyBy',
  'init': 'initial',
  'invertObj': 'invert',
  'juxt': 'over',
  'omitAll': 'omit',
  'nAry': 'ary',
  'path': 'get',
  'pathEq': 'matchesProperty',
  'pathOr': 'getOr',
  'paths': 'at',
  'pickAll': 'pick',
  'pipe': 'flow',
  'pluck': 'map',
  'prop': 'get',
  'propEq': 'matchesProperty',
  'propOr': 'getOr',
  'props': 'at',
  'symmetricDifference': 'xor',
  'symmetricDifferenceBy': 'xorBy',
  'symmetricDifferenceWith': 'xorWith',
  'takeLast': 'takeRight',
  'takeLastWhile': 'takeRightWhile',
  'unapply': 'rest',
  'unnest': 'flatten',
  'useWith': 'overArgs',
  'where': 'conformsTo',
  'whereEq': 'isMatch',
  'zipObj': 'zipObject'
};

/** Used to map ary to method names. */
exports.aryMethod = {
  '1': [
    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
    'uniqueId', 'words', 'zipAll'
  ],
  '2': [
    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
    'zipObjectDeep'
  ],
  '3': [
    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
    'xorWith', 'zipWith'
  ],
  '4': [
    'fill', 'setWith', 'updateWith'
  ]
};

/** Used to map ary to rearg configs. */
exports.aryRearg = {
  '2': [1, 0],
  '3': [2, 0, 1],
  '4': [3, 2, 0, 1]
};

/** Used to map method names to their iteratee ary. */
exports.iterateeAry = {
  'dropRightWhile': 1,
  'dropWhile': 1,
  'every': 1,
  'filter': 1,
  'find': 1,
  'findFrom': 1,
  'findIndex': 1,
  'findIndexFrom': 1,
  'findKey': 1,
  'findLast': 1,
  'findLastFrom': 1,
  'findLastIndex': 1,
  'findLastIndexFrom': 1,
  'findLastKey': 1,
  'flatMap': 1,
  'flatMapDeep': 1,
  'flatMapDepth': 1,
  'forEach': 1,
  'forEachRight': 1,
  'forIn': 1,
  'forInRight': 1,
  'forOwn': 1,
  'forOwnRight': 1,
  'map': 1,
  'mapKeys': 1,
  'mapValues': 1,
  'partition': 1,
  'reduce': 2,
  'reduceRight': 2,
  'reject': 1,
  'remove': 1,
  'some': 1,
  'takeRightWhile': 1,
  'takeWhile': 1,
  'times': 1,
  'transform': 2
};

/** Used to map method names to iteratee rearg configs. */
exports.iterateeRearg = {
  'mapKeys': [1],
  'reduceRight': [1, 0]
};

/** Used to map method names to rearg configs. */
exports.methodRearg = {
  'assignInAllWith': [1, 0],
  'assignInWith': [1, 2, 0],
  'assignAllWith': [1, 0],
  'assignWith': [1, 2, 0],
  'differenceBy': [1, 2, 0],
  'differenceWith': [1, 2, 0],
  'getOr': [2, 1, 0],
  'intersectionBy': [1, 2, 0],
  'intersectionWith': [1, 2, 0],
  'isEqualWith': [1, 2, 0],
  'isMatchWith': [2, 1, 0],
  'mergeAllWith': [1, 0],
  'mergeWith': [1, 2, 0],
  'padChars': [2, 1, 0],
  'padCharsEnd': [2, 1, 0],
  'padCharsStart': [2, 1, 0],
  'pullAllBy': [2, 1, 0],
  'pullAllWith': [2, 1, 0],
  'rangeStep': [1, 2, 0],
  'rangeStepRight': [1, 2, 0],
  'setWith': [3, 1, 2, 0],
  'sortedIndexBy': [2, 1, 0],
  'sortedLastIndexBy': [2, 1, 0],
  'unionBy': [1, 2, 0],
  'unionWith': [1, 2, 0],
  'updateWith': [3, 1, 2, 0],
  'xorBy': [1, 2, 0],
  'xorWith': [1, 2, 0],
  'zipWith': [1, 2, 0]
};

/** Used to map method names to spread configs. */
exports.methodSpread = {
  'assignAll': { 'start': 0 },
  'assignAllWith': { 'start': 0 },
  'assignInAll': { 'start': 0 },
  'assignInAllWith': { 'start': 0 },
  'defaultsAll': { 'start': 0 },
  'defaultsDeepAll': { 'start': 0 },
  'invokeArgs': { 'start': 2 },
  'invokeArgsMap': { 'start': 2 },
  'mergeAll': { 'start': 0 },
  'mergeAllWith': { 'start': 0 },
  'partial': { 'start': 1 },
  'partialRight': { 'start': 1 },
  'without': { 'start': 1 },
  'zipAll': { 'start': 0 }
};

/** Used to identify methods which mutate arrays or objects. */
exports.mutate = {
  'array': {
    'fill': true,
    'pull': true,
    'pullAll': true,
    'pullAllBy': true,
    'pullAllWith': true,
    'pullAt': true,
    'remove': true,
    'reverse': true
  },
  'object': {
    'assign': true,
    'assignAll': true,
    'assignAllWith': true,
    'assignIn': true,
    'assignInAll': true,
    'assignInAllWith': true,
    'assignInWith': true,
    'assignWith': true,
    'defaults': true,
    'defaultsAll': true,
    'defaultsDeep': true,
    'defaultsDeepAll': true,
    'merge': true,
    'mergeAll': true,
    'mergeAllWith': true,
    'mergeWith': true,
  },
  'set': {
    'set': true,
    'setWith': true,
    'unset': true,
    'update': true,
    'updateWith': true
  }
};

/** Used to track methods with placeholder support */
exports.placeholder = {
  'bind': true,
  'bindKey': true,
  'curry': true,
  'curryRight': true,
  'partial': true,
  'partialRight': true
};

/** Used to map real names to their aliases. */
exports.realToAlias = (function() {
  var hasOwnProperty = Object.prototype.hasOwnProperty,
      object = exports.aliasToReal,
      result = {};

  for (var key in object) {
    var value = object[key];
    if (hasOwnProperty.call(result, value)) {
      result[value].push(key);
    } else {
      result[value] = [key];
    }
  }
  return result;
}());

/** Used to map method names to other names. */
exports.remap = {
  'assignAll': 'assign',
  'assignAllWith': 'assignWith',
  'assignInAll': 'assignIn',
  'assignInAllWith': 'assignInWith',
  'curryN': 'curry',
  'curryRightN': 'curryRight',
  'defaultsAll': 'defaults',
  'defaultsDeepAll': 'defaultsDeep',
  'findFrom': 'find',
  'findIndexFrom': 'findIndex',
  'findLastFrom': 'findLast',
  'findLastIndexFrom': 'findLastIndex',
  'getOr': 'get',
  'includesFrom': 'includes',
  'indexOfFrom': 'indexOf',
  'invokeArgs': 'invoke',
  'invokeArgsMap': 'invokeMap',
  'lastIndexOfFrom': 'lastIndexOf',
  'mergeAll': 'merge',
  'mergeAllWith': 'mergeWith',
  'padChars': 'pad',
  'padCharsEnd': 'padEnd',
  'padCharsStart': 'padStart',
  'propertyOf': 'get',
  'rangeStep': 'range',
  'rangeStepRight': 'rangeRight',
  'restFrom': 'rest',
  'spreadFrom': 'spread',
  'trimChars': 'trim',
  'trimCharsEnd': 'trimEnd',
  'trimCharsStart': 'trimStart',
  'zipAll': 'zip'
};

/** Used to track methods that skip fixing their arity. */
exports.skipFixed = {
  'castArray': true,
  'flow': true,
  'flowRight': true,
  'iteratee': true,
  'mixin': true,
  'rearg': true,
  'runInContext': true
};

/** Used to track methods that skip rearranging arguments. */
exports.skipRearg = {
  'add': true,
  'assign': true,
  'assignIn': true,
  'bind': true,
  'bindKey': true,
  'concat': true,
  'difference': true,
  'divide': true,
  'eq': true,
  'gt': true,
  'gte': true,
  'isEqual': true,
  'lt': true,
  'lte': true,
  'matchesProperty': true,
  'merge': true,
  'multiply': true,
  'overArgs': true,
  'partial': true,
  'partialRight': true,
  'propertyOf': true,
  'random': true,
  'range': true,
  'rangeRight': true,
  'subtract': true,
  'zip': true,
  'zipObject': true,
  'zipObjectDeep': true
};
}(_mapping));

/**
 * The default argument placeholder value for methods.
 *
 * @type {Object}
 */

var placeholder = {};

var mapping = _mapping,
    fallbackHolder = placeholder;

/** Built-in value reference. */
var push = Array.prototype.push;

/**
 * Creates a function, with an arity of `n`, that invokes `func` with the
 * arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} n The arity of the new function.
 * @returns {Function} Returns the new function.
 */
function baseArity(func, n) {
  return n == 2
    ? function(a, b) { return func.apply(undefined, arguments); }
    : function(a) { return func.apply(undefined, arguments); };
}

/**
 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
 * any additional arguments.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @param {number} n The arity cap.
 * @returns {Function} Returns the new function.
 */
function baseAry(func, n) {
  return n == 2
    ? function(a, b) { return func(a, b); }
    : function(a) { return func(a); };
}

/**
 * Creates a clone of `array`.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the cloned array.
 */
function cloneArray(array) {
  var length = array ? array.length : 0,
      result = Array(length);

  while (length--) {
    result[length] = array[length];
  }
  return result;
}

/**
 * Creates a function that clones a given object using the assignment `func`.
 *
 * @private
 * @param {Function} func The assignment function.
 * @returns {Function} Returns the new cloner function.
 */
function createCloner(func) {
  return function(object) {
    return func({}, object);
  };
}

/**
 * A specialized version of `_.spread` which flattens the spread array into
 * the arguments of the invoked `func`.
 *
 * @private
 * @param {Function} func The function to spread arguments over.
 * @param {number} start The start position of the spread.
 * @returns {Function} Returns the new function.
 */
function flatSpread(func, start) {
  return function() {
    var length = arguments.length,
        lastIndex = length - 1,
        args = Array(length);

    while (length--) {
      args[length] = arguments[length];
    }
    var array = args[start],
        otherArgs = args.slice(0, start);

    if (array) {
      push.apply(otherArgs, array);
    }
    if (start != lastIndex) {
      push.apply(otherArgs, args.slice(start + 1));
    }
    return func.apply(this, otherArgs);
  };
}

/**
 * Creates a function that wraps `func` and uses `cloner` to clone the first
 * argument it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} cloner The function to clone arguments.
 * @returns {Function} Returns the new immutable function.
 */
function wrapImmutable(func, cloner) {
  return function() {
    var length = arguments.length;
    if (!length) {
      return;
    }
    var args = Array(length);
    while (length--) {
      args[length] = arguments[length];
    }
    var result = args[0] = cloner.apply(undefined, args);
    func.apply(undefined, args);
    return result;
  };
}

/**
 * The base implementation of `convert` which accepts a `util` object of methods
 * required to perform conversions.
 *
 * @param {Object} util The util object.
 * @param {string} name The name of the function to convert.
 * @param {Function} func The function to convert.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
 * @param {boolean} [options.curry=true] Specify currying.
 * @param {boolean} [options.fixed=true] Specify fixed arity.
 * @param {boolean} [options.immutable=true] Specify immutable operations.
 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
 * @returns {Function|Object} Returns the converted function or object.
 */
function baseConvert$1(util, name, func, options) {
  var setPlaceholder,
      isLib = typeof name == 'function',
      isObj = name === Object(name);

  if (isObj) {
    options = func;
    func = name;
    name = undefined;
  }
  if (func == null) {
    throw new TypeError;
  }
  options || (options = {});

  var config = {
    'cap': 'cap' in options ? options.cap : true,
    'curry': 'curry' in options ? options.curry : true,
    'fixed': 'fixed' in options ? options.fixed : true,
    'immutable': 'immutable' in options ? options.immutable : true,
    'rearg': 'rearg' in options ? options.rearg : true
  };

  var forceCurry = ('curry' in options) && options.curry,
      forceFixed = ('fixed' in options) && options.fixed,
      forceRearg = ('rearg' in options) && options.rearg,
      placeholder = isLib ? func : fallbackHolder,
      pristine = isLib ? func.runInContext() : undefined;

  var helpers = isLib ? func : {
    'ary': util.ary,
    'assign': util.assign,
    'clone': util.clone,
    'curry': util.curry,
    'forEach': util.forEach,
    'isArray': util.isArray,
    'isError': util.isError,
    'isFunction': util.isFunction,
    'isWeakMap': util.isWeakMap,
    'iteratee': util.iteratee,
    'keys': util.keys,
    'rearg': util.rearg,
    'toInteger': util.toInteger,
    'toPath': util.toPath
  };

  var ary = helpers.ary,
      assign = helpers.assign,
      clone = helpers.clone,
      curry = helpers.curry,
      each = helpers.forEach,
      isArray = helpers.isArray,
      isError = helpers.isError,
      isFunction = helpers.isFunction,
      isWeakMap = helpers.isWeakMap,
      keys = helpers.keys,
      rearg = helpers.rearg,
      toInteger = helpers.toInteger,
      toPath = helpers.toPath;

  var aryMethodKeys = keys(mapping.aryMethod);

  var wrappers = {
    'castArray': function(castArray) {
      return function() {
        var value = arguments[0];
        return isArray(value)
          ? castArray(cloneArray(value))
          : castArray.apply(undefined, arguments);
      };
    },
    'iteratee': function(iteratee) {
      return function() {
        var func = arguments[0],
            arity = arguments[1],
            result = iteratee(func, arity),
            length = result.length;

        if (config.cap && typeof arity == 'number') {
          arity = arity > 2 ? (arity - 2) : 1;
          return (length && length <= arity) ? result : baseAry(result, arity);
        }
        return result;
      };
    },
    'mixin': function(mixin) {
      return function(source) {
        var func = this;
        if (!isFunction(func)) {
          return mixin(func, Object(source));
        }
        var pairs = [];
        each(keys(source), function(key) {
          if (isFunction(source[key])) {
            pairs.push([key, func.prototype[key]]);
          }
        });

        mixin(func, Object(source));

        each(pairs, function(pair) {
          var value = pair[1];
          if (isFunction(value)) {
            func.prototype[pair[0]] = value;
          } else {
            delete func.prototype[pair[0]];
          }
        });
        return func;
      };
    },
    'nthArg': function(nthArg) {
      return function(n) {
        var arity = n < 0 ? 1 : (toInteger(n) + 1);
        return curry(nthArg(n), arity);
      };
    },
    'rearg': function(rearg) {
      return function(func, indexes) {
        var arity = indexes ? indexes.length : 0;
        return curry(rearg(func, indexes), arity);
      };
    },
    'runInContext': function(runInContext) {
      return function(context) {
        return baseConvert$1(util, runInContext(context), options);
      };
    }
  };

  /*--------------------------------------------------------------------------*/

  /**
   * Casts `func` to a function with an arity capped iteratee if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @returns {Function} Returns the cast function.
   */
  function castCap(name, func) {
    if (config.cap) {
      var indexes = mapping.iterateeRearg[name];
      if (indexes) {
        return iterateeRearg(func, indexes);
      }
      var n = !isLib && mapping.iterateeAry[name];
      if (n) {
        return iterateeAry(func, n);
      }
    }
    return func;
  }

  /**
   * Casts `func` to a curried function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castCurry(name, func, n) {
    return (forceCurry || (config.curry && n > 1))
      ? curry(func, n)
      : func;
  }

  /**
   * Casts `func` to a fixed arity function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the cast function.
   */
  function castFixed(name, func, n) {
    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
      var data = mapping.methodSpread[name],
          start = data && data.start;

      return start  === undefined ? ary(func, n) : flatSpread(func, start);
    }
    return func;
  }

  /**
   * Casts `func` to an rearged function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castRearg(name, func, n) {
    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
      : func;
  }

  /**
   * Creates a clone of `object` by `path`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {Array|string} path The path to clone by.
   * @returns {Object} Returns the cloned object.
   */
  function cloneByPath(object, path) {
    path = toPath(path);

    var index = -1,
        length = path.length,
        lastIndex = length - 1,
        result = clone(Object(object)),
        nested = result;

    while (nested != null && ++index < length) {
      var key = path[index],
          value = nested[key];

      if (value != null &&
          !(isFunction(value) || isError(value) || isWeakMap(value))) {
        nested[key] = clone(index == lastIndex ? value : Object(value));
      }
      nested = nested[key];
    }
    return result;
  }

  /**
   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
   * version with conversion `options` applied.
   *
   * @param {Object} [options] The options object. See `baseConvert` for more details.
   * @returns {Function} Returns the converted `lodash`.
   */
  function convertLib(options) {
    return _.runInContext.convert(options)(undefined);
  }

  /**
   * Create a converter function for `func` of `name`.
   *
   * @param {string} name The name of the function to convert.
   * @param {Function} func The function to convert.
   * @returns {Function} Returns the new converter function.
   */
  function createConverter(name, func) {
    var realName = mapping.aliasToReal[name] || name,
        methodName = mapping.remap[realName] || realName,
        oldOptions = options;

    return function(options) {
      var newUtil = isLib ? pristine : helpers,
          newFunc = isLib ? pristine[methodName] : func,
          newOptions = assign(assign({}, oldOptions), options);

      return baseConvert$1(newUtil, realName, newFunc, newOptions);
    };
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
   * arguments, ignoring any additional arguments.
   *
   * @private
   * @param {Function} func The function to cap iteratee arguments for.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the new function.
   */
  function iterateeAry(func, n) {
    return overArg(func, function(func) {
      return typeof func == 'function' ? baseAry(func, n) : func;
    });
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee with arguments
   * arranged according to the specified `indexes` where the argument value at
   * the first index is provided as the first argument, the argument value at
   * the second index is provided as the second argument, and so on.
   *
   * @private
   * @param {Function} func The function to rearrange iteratee arguments for.
   * @param {number[]} indexes The arranged argument indexes.
   * @returns {Function} Returns the new function.
   */
  function iterateeRearg(func, indexes) {
    return overArg(func, function(func) {
      var n = indexes.length;
      return baseArity(rearg(baseAry(func, n), indexes), n);
    });
  }

  /**
   * Creates a function that invokes `func` with its first argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function() {
      var length = arguments.length;
      if (!length) {
        return func();
      }
      var args = Array(length);
      while (length--) {
        args[length] = arguments[length];
      }
      var index = config.rearg ? 0 : (length - 1);
      args[index] = transform(args[index]);
      return func.apply(undefined, args);
    };
  }

  /**
   * Creates a function that wraps `func` and applys the conversions
   * rules by `name`.
   *
   * @private
   * @param {string} name The name of the function to wrap.
   * @param {Function} func The function to wrap.
   * @returns {Function} Returns the converted function.
   */
  function wrap(name, func) {
    var result,
        realName = mapping.aliasToReal[name] || name,
        wrapped = func,
        wrapper = wrappers[realName];

    if (wrapper) {
      wrapped = wrapper(func);
    }
    else if (config.immutable) {
      if (mapping.mutate.array[realName]) {
        wrapped = wrapImmutable(func, cloneArray);
      }
      else if (mapping.mutate.object[realName]) {
        wrapped = wrapImmutable(func, createCloner(func));
      }
      else if (mapping.mutate.set[realName]) {
        wrapped = wrapImmutable(func, cloneByPath);
      }
    }
    each(aryMethodKeys, function(aryKey) {
      each(mapping.aryMethod[aryKey], function(otherName) {
        if (realName == otherName) {
          var data = mapping.methodSpread[realName],
              afterRearg = data && data.afterRearg;

          result = afterRearg
            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);

          result = castCap(realName, result);
          result = castCurry(realName, result, aryKey);
          return false;
        }
      });
      return !result;
    });

    result || (result = wrapped);
    if (result == func) {
      result = forceCurry ? curry(result, 1) : function() {
        return func.apply(this, arguments);
      };
    }
    result.convert = createConverter(realName, func);
    if (mapping.placeholder[realName]) {
      setPlaceholder = true;
      result.placeholder = func.placeholder = placeholder;
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  if (!isObj) {
    return wrap(name, func);
  }
  var _ = func;

  // Convert methods by ary cap.
  var pairs = [];
  each(aryMethodKeys, function(aryKey) {
    each(mapping.aryMethod[aryKey], function(key) {
      var func = _[mapping.remap[key] || key];
      if (func) {
        pairs.push([key, wrap(key, func)]);
      }
    });
  });

  // Convert remaining methods.
  each(keys(_), function(key) {
    var func = _[key];
    if (typeof func == 'function') {
      var length = pairs.length;
      while (length--) {
        if (pairs[length][0] == key) {
          return;
        }
      }
      func.convert = createConverter(key, func);
      pairs.push([key, func]);
    }
  });

  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
  each(pairs, function(pair) {
    _[pair[0]] = pair[1];
  });

  _.convert = convertLib;
  if (setPlaceholder) {
    _.placeholder = placeholder;
  }
  // Assign aliases.
  each(keys(_), function(key) {
    each(mapping.realToAlias[key] || [], function(alias) {
      _[alias] = _[key];
    });
  });

  return _;
}

var _baseConvert = baseConvert$1;

var _ = lodash_min.exports.runInContext();
_baseConvert(_, _);

var FlatButton$2 = {};

var FlatButton$1 = {};

var transitions = {};

Object.defineProperty(transitions, "__esModule", {
  value: true
});
transitions.default = {

  easeOutFunction: 'cubic-bezier(0.23, 1, 0.32, 1)',
  easeInOutFunction: 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',

  easeOut: function easeOut(duration, property, delay, easeFunction) {
    easeFunction = easeFunction || this.easeOutFunction;

    if (property && Object.prototype.toString.call(property) === '[object Array]') {
      var transitions = '';
      for (var i = 0; i < property.length; i++) {
        if (transitions) transitions += ',';
        transitions += this.create(duration, property[i], delay, easeFunction);
      }

      return transitions;
    } else {
      return this.create(duration, property, delay, easeFunction);
    }
  },
  create: function create(duration, property, delay, easeFunction) {
    duration = duration || '450ms';
    property = property || 'all';
    delay = delay || '0ms';
    easeFunction = easeFunction || 'linear';

    return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;
  }
};

var colorManipulator = {};

Object.defineProperty(colorManipulator, "__esModule", {
  value: true
});
colorManipulator.convertColorToString = convertColorToString;
colorManipulator.convertHexToRGB = convertHexToRGB;
colorManipulator.decomposeColor = decomposeColor;
colorManipulator.getContrastRatio = getContrastRatio;
colorManipulator.getLuminance = getLuminance;
colorManipulator.emphasize = emphasize;
var fade_1 = colorManipulator.fade = fade;
colorManipulator.darken = darken;
colorManipulator.lighten = lighten;

var _warning$e = warning_1$1;

var _warning2$e = _interopRequireDefault$45(_warning$e);

function _interopRequireDefault$45(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
function clamp(value, min, max) {
  if (value < min) {
    return min;
  }
  if (value > max) {
    return max;
  }
  return value;
}

/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */
function convertColorToString(color) {
  var type = color.type,
      values = color.values;


  if (type.indexOf('rgb') > -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    for (var i = 0; i < 3; i++) {
      values[i] = parseInt(values[i]);
    }
  }

  var colorString = void 0;

  if (type.indexOf('hsl') > -1) {
    colorString = color.type + '(' + values[0] + ', ' + values[1] + '%, ' + values[2] + '%';
  } else {
    colorString = color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
  }

  if (values.length === 4) {
    colorString += ', ' + color.values[3] + ')';
  } else {
    colorString += ')';
  }

  return colorString;
}

/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 *  @returns {string} A CSS rgb color string
 */
function convertHexToRGB(color) {
  if (color.length === 4) {
    var extendedColor = '#';
    for (var i = 1; i < color.length; i++) {
      extendedColor += color.charAt(i) + color.charAt(i);
    }
    color = extendedColor;
  }

  var values = {
    r: parseInt(color.substr(1, 2), 16),
    g: parseInt(color.substr(3, 2), 16),
    b: parseInt(color.substr(5, 2), 16)
  };

  return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
}

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values and color names.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {{type: string, values: number[]}} A MUI color object
 */
function decomposeColor(color) {
  if (color.charAt(0) === '#') {
    return decomposeColor(convertHexToRGB(color));
  }

  var marker = color.indexOf('(');

  (0, _warning2$e.default)(marker !== -1, 'Material-UI: The ' + color + ' color was not parsed correctly,\n  because it has an unsupported format (color name or RGB %). This may cause issues in component rendering.') ;

  var type = color.substring(0, marker);
  var values = color.substring(marker + 1, color.length - 1).split(',');
  values = values.map(function (value) {
    return parseFloat(value);
  });

  return { type: type, values: values };
}

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
 */
function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  var contrastRatio = (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

  return Number(contrastRatio.toFixed(2)); // Truncate at two digits
}

/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */
function getLuminance(color) {
  color = decomposeColor(color);

  if (color.type.indexOf('rgb') > -1) {
    var rgb = color.values.map(function (val) {
      val /= 255; // normalized
      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
    });
    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)); // Truncate at 3 digits
  } else if (color.type.indexOf('hsl') > -1) {
    return color.values[2] / 100;
  }
}

/**
 * Darken or lighten a colour, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function emphasize(color) {
  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;

  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}

/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function fade(color, value) {
  color = decomposeColor(color);
  value = clamp(value, 0, 1);

  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }
  color.values[3] = value;

  return convertColorToString(color);
}

/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function darken(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient, 0, 1);

  if (color.type.indexOf('hsl') > -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') > -1) {
    for (var i = 0; i < 3; i++) {
      color.values[i] *= 1 - coefficient;
    }
  }
  return convertColorToString(color);
}

/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */
function lighten(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient, 0, 1);

  if (color.type.indexOf('hsl') > -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') > -1) {
    for (var i = 0; i < 3; i++) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  }

  return convertColorToString(color);
}

var EnhancedButton$1 = {};

var events = {};

Object.defineProperty(events, "__esModule", {
  value: true
});
events.default = {
  once: function once(el, type, callback) {
    var typeArray = type ? type.split(' ') : [];
    var recursiveFunction = function recursiveFunction(event) {
      event.target.removeEventListener(event.type, recursiveFunction);
      return callback(event);
    };

    for (var i = typeArray.length - 1; i >= 0; i--) {
      this.on(el, typeArray[i], recursiveFunction);
    }
  },
  on: function on(el, type, callback) {
    if (el.addEventListener) {
      el.addEventListener(type, callback);
    } else {
      // IE8+ Support
      el.attachEvent('on' + type, function () {
        callback.call(el);
      });
    }
  },
  off: function off(el, type, callback) {
    if (el.removeEventListener) {
      el.removeEventListener(type, callback);
    } else {
      // IE8+ Support
      el.detachEvent('on' + type, callback);
    }
  },
  isKeyboard: function isKeyboard(event) {
    return ['keydown', 'keypress', 'keyup'].indexOf(event.type) !== -1;
  }
};

var FocusRipple$1 = {};

var shallowEqual = {};

shallowEqual.__esModule = true;

var _shallowEqual$c = shallowEqual_1;

var _shallowEqual2$c = _interopRequireDefault$44(_shallowEqual$c);

function _interopRequireDefault$44(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

shallowEqual.default = _shallowEqual2$c.default;

var autoPrefix = {};

Object.defineProperty(autoPrefix, "__esModule", {
  value: true
});
autoPrefix.default = {
  set: function set(style, key, value) {
    style[key] = value;
  }
};

var ScaleIn$1 = {};

var ScaleInChild$1 = {};

Object.defineProperty(ScaleInChild$1, "__esModule", {
  value: true
});

var _extends2$1u = _extends$3;

var _extends3$1u = _interopRequireDefault$43(_extends2$1u);

var _objectWithoutProperties2$1t = objectWithoutProperties$2;

var _objectWithoutProperties3$1t = _interopRequireDefault$43(_objectWithoutProperties2$1t);

var _getPrototypeOf$1Q = getPrototypeOf$1.exports;

var _getPrototypeOf2$1O = _interopRequireDefault$43(_getPrototypeOf$1Q);

var _classCallCheck2$1R = classCallCheck$3;

var _classCallCheck3$1R = _interopRequireDefault$43(_classCallCheck2$1R);

var _createClass2$1Q = createClass$2;

var _createClass3$1Q = _interopRequireDefault$43(_createClass2$1Q);

var _possibleConstructorReturn2$1O = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1O = _interopRequireDefault$43(_possibleConstructorReturn2$1O);

var _inherits2$1O = inherits$3;

var _inherits3$1O = _interopRequireDefault$43(_inherits2$1O);

var _simpleAssign$1J = simpleAssign;

var _simpleAssign2$1J = _interopRequireDefault$43(_simpleAssign$1J);

var _react$31 = react;

var _react2$2X = _interopRequireDefault$43(_react$31);

var _propTypes$23 = propTypes$5.exports;

var _propTypes2$23 = _interopRequireDefault$43(_propTypes$23);

var _reactDom$p = reactDom;

var _reactDom2$o = _interopRequireDefault$43(_reactDom$p);

var _autoPrefix$6 = autoPrefix;

var _autoPrefix2$6 = _interopRequireDefault$43(_autoPrefix$6);

var _transitions$N = transitions;

var _transitions2$N = _interopRequireDefault$43(_transitions$N);

function _interopRequireDefault$43(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScaleInChild = function (_Component) {
  (0, _inherits3$1O.default)(ScaleInChild, _Component);

  function ScaleInChild() {
    (0, _classCallCheck3$1R.default)(this, ScaleInChild);
    return (0, _possibleConstructorReturn3$1O.default)(this, (ScaleInChild.__proto__ || (0, _getPrototypeOf2$1O.default)(ScaleInChild)).apply(this, arguments));
  }

  (0, _createClass3$1Q.default)(ScaleInChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentDidAppear',
    value: function componentDidAppear() {
      this.animate();
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      this.animate();
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var style = _reactDom2$o.default.findDOMNode(this).style;

      style.opacity = '0';
      _autoPrefix2$6.default.set(style, 'transform', 'scale(' + this.props.minScale + ')');

      this.leaveTimer = setTimeout(callback, 450);
    }
  }, {
    key: 'animate',
    value: function animate() {
      var style = _reactDom2$o.default.findDOMNode(this).style;

      style.opacity = '1';
      _autoPrefix2$6.default.set(style, 'transform', 'scale(' + this.props.maxScale + ')');
    }
  }, {
    key: 'initializeAnimation',
    value: function initializeAnimation(callback) {
      var style = _reactDom2$o.default.findDOMNode(this).style;

      style.opacity = '0';
      _autoPrefix2$6.default.set(style, 'transform', 'scale(0)');

      this.enterTimer = setTimeout(callback, this.props.enterDelay);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.enterDelay;
          _props.maxScale;
          _props.minScale;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$1t.default)(_props, ['children', 'enterDelay', 'maxScale', 'minScale', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$1J.default)({}, {
        position: 'absolute',
        height: '100%',
        width: '100%',
        top: 0,
        left: 0,
        transition: _transitions2$N.default.easeOut(null, ['transform', 'opacity'])
      }, style);

      return _react2$2X.default.createElement(
        'div',
        (0, _extends3$1u.default)({}, other, { style: prepareStyles(mergedRootStyles) }),
        children
      );
    }
  }]);
  return ScaleInChild;
}(_react$31.Component);

ScaleInChild.defaultProps = {
  enterDelay: 0,
  maxScale: 1,
  minScale: 0
};
ScaleInChild.contextTypes = {
  muiTheme: _propTypes2$23.default.object.isRequired
};
ScaleInChild.propTypes = {
  children: _propTypes2$23.default.node,
  enterDelay: _propTypes2$23.default.number,
  maxScale: _propTypes2$23.default.number,
  minScale: _propTypes2$23.default.number,
  style: _propTypes2$23.default.object
} ;
ScaleInChild$1.default = ScaleInChild;

Object.defineProperty(ScaleIn$1, "__esModule", {
  value: true
});

var _extends2$1t = _extends$3;

var _extends3$1t = _interopRequireDefault$42(_extends2$1t);

var _objectWithoutProperties2$1s = objectWithoutProperties$2;

var _objectWithoutProperties3$1s = _interopRequireDefault$42(_objectWithoutProperties2$1s);

var _getPrototypeOf$1P = getPrototypeOf$1.exports;

var _getPrototypeOf2$1N = _interopRequireDefault$42(_getPrototypeOf$1P);

var _classCallCheck2$1Q = classCallCheck$3;

var _classCallCheck3$1Q = _interopRequireDefault$42(_classCallCheck2$1Q);

var _createClass2$1P = createClass$2;

var _createClass3$1P = _interopRequireDefault$42(_createClass2$1P);

var _possibleConstructorReturn2$1N = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1N = _interopRequireDefault$42(_possibleConstructorReturn2$1N);

var _inherits2$1N = inherits$3;

var _inherits3$1N = _interopRequireDefault$42(_inherits2$1N);

var _simpleAssign$1I = simpleAssign;

var _simpleAssign2$1I = _interopRequireDefault$42(_simpleAssign$1I);

var _react$30 = react;

var _react2$2W = _interopRequireDefault$42(_react$30);

var _propTypes$22 = propTypes$5.exports;

var _propTypes2$22 = _interopRequireDefault$42(_propTypes$22);

var _TransitionGroup$4 = TransitionGroup.exports;

var _TransitionGroup2$4 = _interopRequireDefault$42(_TransitionGroup$4);

var _ScaleInChild = ScaleInChild$1;

var _ScaleInChild2 = _interopRequireDefault$42(_ScaleInChild);

function _interopRequireDefault$42(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScaleIn = function (_Component) {
  (0, _inherits3$1N.default)(ScaleIn, _Component);

  function ScaleIn() {
    (0, _classCallCheck3$1Q.default)(this, ScaleIn);
    return (0, _possibleConstructorReturn3$1N.default)(this, (ScaleIn.__proto__ || (0, _getPrototypeOf2$1N.default)(ScaleIn)).apply(this, arguments));
  }

  (0, _createClass3$1P.default)(ScaleIn, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          childStyle = _props.childStyle,
          enterDelay = _props.enterDelay,
          maxScale = _props.maxScale,
          minScale = _props.minScale,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1s.default)(_props, ['children', 'childStyle', 'enterDelay', 'maxScale', 'minScale', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$1I.default)({}, {
        position: 'relative',
        height: '100%'
      }, style);

      var newChildren = _react2$2W.default.Children.map(children, function (child) {
        return _react2$2W.default.createElement(
          _ScaleInChild2.default,
          {
            key: child.key,
            enterDelay: enterDelay,
            maxScale: maxScale,
            minScale: minScale,
            style: childStyle
          },
          child
        );
      });

      return _react2$2W.default.createElement(
        _TransitionGroup2$4.default,
        (0, _extends3$1t.default)({}, other, {
          style: prepareStyles(mergedRootStyles),
          component: 'div'
        }),
        newChildren
      );
    }
  }]);
  return ScaleIn;
}(_react$30.Component);

ScaleIn.defaultProps = {
  enterDelay: 0
};
ScaleIn.contextTypes = {
  muiTheme: _propTypes2$22.default.object.isRequired
};
ScaleIn.propTypes = {
  childStyle: _propTypes2$22.default.object,
  children: _propTypes2$22.default.node,
  enterDelay: _propTypes2$22.default.number,
  maxScale: _propTypes2$22.default.number,
  minScale: _propTypes2$22.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$22.default.object
} ;
ScaleIn$1.default = ScaleIn;

Object.defineProperty(FocusRipple$1, "__esModule", {
  value: true
});

var _getPrototypeOf$1O = getPrototypeOf$1.exports;

var _getPrototypeOf2$1M = _interopRequireDefault$41(_getPrototypeOf$1O);

var _classCallCheck2$1P = classCallCheck$3;

var _classCallCheck3$1P = _interopRequireDefault$41(_classCallCheck2$1P);

var _createClass2$1O = createClass$2;

var _createClass3$1O = _interopRequireDefault$41(_createClass2$1O);

var _possibleConstructorReturn2$1M = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1M = _interopRequireDefault$41(_possibleConstructorReturn2$1M);

var _inherits2$1M = inherits$3;

var _inherits3$1M = _interopRequireDefault$41(_inherits2$1M);

var _simpleAssign$1H = simpleAssign;

var _simpleAssign2$1H = _interopRequireDefault$41(_simpleAssign$1H);

var _react$2$ = react;

var _react2$2V = _interopRequireDefault$41(_react$2$);

var _propTypes$21 = propTypes$5.exports;

var _propTypes2$21 = _interopRequireDefault$41(_propTypes$21);

var _reactDom$o = reactDom;

var _reactDom2$n = _interopRequireDefault$41(_reactDom$o);

var _shallowEqual$b = shallowEqual;

var _shallowEqual2$b = _interopRequireDefault$41(_shallowEqual$b);

var _autoPrefix$5 = autoPrefix;

var _autoPrefix2$5 = _interopRequireDefault$41(_autoPrefix$5);

var _transitions$M = transitions;

var _transitions2$M = _interopRequireDefault$41(_transitions$M);

var _ScaleIn = ScaleIn$1;

var _ScaleIn2 = _interopRequireDefault$41(_ScaleIn);

function _interopRequireDefault$41(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pulsateDuration = 750;

var FocusRipple = function (_Component) {
  (0, _inherits3$1M.default)(FocusRipple, _Component);

  function FocusRipple() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1P.default)(this, FocusRipple);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1M.default)(this, (_ref = FocusRipple.__proto__ || (0, _getPrototypeOf2$1M.default)(FocusRipple)).call.apply(_ref, [this].concat(args))), _this), _this.pulsate = function () {
      var innerCircle = _reactDom2$n.default.findDOMNode(_this.refs.innerCircle);
      if (!innerCircle) return;

      var startScale = 'scale(1)';
      var endScale = 'scale(0.85)';
      var currentScale = innerCircle.style.transform || startScale;
      var nextScale = currentScale === startScale ? endScale : startScale;

      _autoPrefix2$5.default.set(innerCircle.style, 'transform', nextScale);
      _this.timeout = setTimeout(_this.pulsate, pulsateDuration);
    }, _temp), (0, _possibleConstructorReturn3$1M.default)(_this, _ret);
  }

  (0, _createClass3$1O.default)(FocusRipple, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.show) {
        this.setRippleSize();
        this.pulsate();
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return !(0, _shallowEqual2$b.default)(this.props, nextProps) || !(0, _shallowEqual2$b.default)(this.state, nextState);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.show) {
        this.setRippleSize();
        this.pulsate();
      } else {
        if (this.timeout) clearTimeout(this.timeout);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timeout);
    }
  }, {
    key: 'getRippleElement',
    value: function getRippleElement(props) {
      var color = props.color,
          innerStyle = props.innerStyle,
          opacity = props.opacity;
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          ripple = _context$muiTheme.ripple;


      var innerStyles = (0, _simpleAssign2$1H.default)({
        position: 'absolute',
        height: '100%',
        width: '100%',
        borderRadius: '50%',
        opacity: opacity ? opacity : 0.16,
        backgroundColor: color || ripple.color,
        transition: _transitions2$M.default.easeOut(pulsateDuration + 'ms', 'transform', null, _transitions2$M.default.easeInOutFunction)
      }, innerStyle);

      return _react2$2V.default.createElement('div', { ref: 'innerCircle', style: prepareStyles((0, _simpleAssign2$1H.default)({}, innerStyles)) });
    }
  }, {
    key: 'setRippleSize',
    value: function setRippleSize() {
      var el = _reactDom2$n.default.findDOMNode(this.refs.innerCircle);
      var height = el.offsetHeight;
      var width = el.offsetWidth;
      var size = Math.max(height, width);

      var oldTop = 0;
      // For browsers that don't support endsWith()
      if (el.style.top.indexOf('px', el.style.top.length - 2) !== -1) {
        oldTop = parseInt(el.style.top);
      }
      el.style.height = size + 'px';
      el.style.top = height / 2 - size / 2 + oldTop + 'px';
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          show = _props.show,
          style = _props.style;


      var mergedRootStyles = (0, _simpleAssign2$1H.default)({
        height: '100%',
        width: '100%',
        position: 'absolute',
        top: 0,
        left: 0
      }, style);

      var ripple = show ? this.getRippleElement(this.props) : null;

      return _react2$2V.default.createElement(
        _ScaleIn2.default,
        {
          maxScale: 0.85,
          style: mergedRootStyles
        },
        ripple
      );
    }
  }]);
  return FocusRipple;
}(_react$2$.Component);

FocusRipple.contextTypes = {
  muiTheme: _propTypes2$21.default.object.isRequired
};
FocusRipple.propTypes = {
  color: _propTypes2$21.default.string,
  innerStyle: _propTypes2$21.default.object,
  opacity: _propTypes2$21.default.number,
  show: _propTypes2$21.default.bool,
  style: _propTypes2$21.default.object
} ;
FocusRipple$1.default = FocusRipple;

var TouchRipple$1 = {};

var dom = {};

Object.defineProperty(dom, "__esModule", {
  value: true
});
dom.default = {
  isDescendant: function isDescendant(parent, child) {
    var node = child.parentNode;

    while (node !== null) {
      if (node === parent) return true;
      node = node.parentNode;
    }

    return false;
  },
  offset: function offset(el) {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top + document.body.scrollTop,
      left: rect.left + document.body.scrollLeft
    };
  }
};

var CircleRipple$1 = {};

Object.defineProperty(CircleRipple$1, "__esModule", {
  value: true
});

var _extends2$1s = _extends$3;

var _extends3$1s = _interopRequireDefault$40(_extends2$1s);

var _objectWithoutProperties2$1r = objectWithoutProperties$2;

var _objectWithoutProperties3$1r = _interopRequireDefault$40(_objectWithoutProperties2$1r);

var _getPrototypeOf$1N = getPrototypeOf$1.exports;

var _getPrototypeOf2$1L = _interopRequireDefault$40(_getPrototypeOf$1N);

var _classCallCheck2$1O = classCallCheck$3;

var _classCallCheck3$1O = _interopRequireDefault$40(_classCallCheck2$1O);

var _createClass2$1N = createClass$2;

var _createClass3$1N = _interopRequireDefault$40(_createClass2$1N);

var _possibleConstructorReturn2$1L = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1L = _interopRequireDefault$40(_possibleConstructorReturn2$1L);

var _inherits2$1L = inherits$3;

var _inherits3$1L = _interopRequireDefault$40(_inherits2$1L);

var _simpleAssign$1G = simpleAssign;

var _simpleAssign2$1G = _interopRequireDefault$40(_simpleAssign$1G);

var _react$2_ = react;

var _react2$2U = _interopRequireDefault$40(_react$2_);

var _propTypes$20 = propTypes$5.exports;

var _propTypes2$20 = _interopRequireDefault$40(_propTypes$20);

var _reactDom$n = reactDom;

var _reactDom2$m = _interopRequireDefault$40(_reactDom$n);

var _shallowEqual$a = shallowEqual;

var _shallowEqual2$a = _interopRequireDefault$40(_shallowEqual$a);

var _autoPrefix$4 = autoPrefix;

var _autoPrefix2$4 = _interopRequireDefault$40(_autoPrefix$4);

var _transitions$L = transitions;

var _transitions2$L = _interopRequireDefault$40(_transitions$L);

function _interopRequireDefault$40(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CircleRipple = function (_Component) {
  (0, _inherits3$1L.default)(CircleRipple, _Component);

  function CircleRipple() {
    (0, _classCallCheck3$1O.default)(this, CircleRipple);
    return (0, _possibleConstructorReturn3$1L.default)(this, (CircleRipple.__proto__ || (0, _getPrototypeOf2$1L.default)(CircleRipple)).apply(this, arguments));
  }

  (0, _createClass3$1N.default)(CircleRipple, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !(0, _shallowEqual2$a.default)(this.props, nextProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.initializeAnimation(callback);
    }
  }, {
    key: 'componentDidAppear',
    value: function componentDidAppear() {
      this.animate();
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      this.animate();
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var style = _reactDom2$m.default.findDOMNode(this).style;
      style.opacity = 0;
      // If the animation is aborted, remove from the DOM immediately
      var removeAfter = this.props.aborted ? 0 : 2000;
      this.enterTimer = setTimeout(callback, removeAfter);
    }
  }, {
    key: 'animate',
    value: function animate() {
      var style = _reactDom2$m.default.findDOMNode(this).style;
      var transitionValue = _transitions2$L.default.easeOut('2s', 'opacity') + ', ' + _transitions2$L.default.easeOut('1s', 'transform');
      _autoPrefix2$4.default.set(style, 'transition', transitionValue);
      _autoPrefix2$4.default.set(style, 'transform', 'scale(1)');
    }
  }, {
    key: 'initializeAnimation',
    value: function initializeAnimation(callback) {
      var style = _reactDom2$m.default.findDOMNode(this).style;
      style.opacity = this.props.opacity;
      _autoPrefix2$4.default.set(style, 'transform', 'scale(0)');
      this.leaveTimer = setTimeout(callback, 0);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.aborted;
          var color = _props.color;
          _props.opacity;
          var style = _props.style;
          _props.touchGenerated;
          var other = (0, _objectWithoutProperties3$1r.default)(_props, ['aborted', 'color', 'opacity', 'style', 'touchGenerated']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedStyles = (0, _simpleAssign2$1G.default)({
        position: 'absolute',
        top: 0,
        left: 0,
        height: '100%',
        width: '100%',
        borderRadius: '50%',
        backgroundColor: color
      }, style);

      return _react2$2U.default.createElement('div', (0, _extends3$1s.default)({}, other, { style: prepareStyles(mergedStyles) }));
    }
  }]);
  return CircleRipple;
}(_react$2_.Component);

CircleRipple.defaultProps = {
  opacity: 0.1,
  aborted: false
};
CircleRipple.contextTypes = {
  muiTheme: _propTypes2$20.default.object.isRequired
};
CircleRipple.propTypes = {
  aborted: _propTypes2$20.default.bool,
  color: _propTypes2$20.default.string,
  opacity: _propTypes2$20.default.number,
  style: _propTypes2$20.default.object,
  touchGenerated: _propTypes2$20.default.bool
} ;
CircleRipple$1.default = CircleRipple;

Object.defineProperty(TouchRipple$1, "__esModule", {
  value: true
});

var _toConsumableArray2$4 = toConsumableArray;

var _toConsumableArray3$4 = _interopRequireDefault$3$(_toConsumableArray2$4);

var _getPrototypeOf$1M = getPrototypeOf$1.exports;

var _getPrototypeOf2$1K = _interopRequireDefault$3$(_getPrototypeOf$1M);

var _classCallCheck2$1N = classCallCheck$3;

var _classCallCheck3$1N = _interopRequireDefault$3$(_classCallCheck2$1N);

var _createClass2$1M = createClass$2;

var _createClass3$1M = _interopRequireDefault$3$(_createClass2$1M);

var _possibleConstructorReturn2$1K = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1K = _interopRequireDefault$3$(_possibleConstructorReturn2$1K);

var _inherits2$1K = inherits$3;

var _inherits3$1K = _interopRequireDefault$3$(_inherits2$1K);

var _toArray2$2 = toArray;

var _toArray3$2 = _interopRequireDefault$3$(_toArray2$2);

var _simpleAssign$1F = simpleAssign;

var _simpleAssign2$1F = _interopRequireDefault$3$(_simpleAssign$1F);

var _react$2Z = react;

var _react2$2T = _interopRequireDefault$3$(_react$2Z);

var _propTypes$1$ = propTypes$5.exports;

var _propTypes2$1$ = _interopRequireDefault$3$(_propTypes$1$);

var _reactDom$m = reactDom;

var _reactDom2$l = _interopRequireDefault$3$(_reactDom$m);

var _TransitionGroup$3 = TransitionGroup.exports;

var _TransitionGroup2$3 = _interopRequireDefault$3$(_TransitionGroup$3);

var _dom$1 = dom;

var _dom2$1 = _interopRequireDefault$3$(_dom$1);

var _CircleRipple = CircleRipple$1;

var _CircleRipple2 = _interopRequireDefault$3$(_CircleRipple);

function _interopRequireDefault$3$(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Remove the first element of the array
var shift = function shift(_ref) {
  var _ref2 = (0, _toArray3$2.default)(_ref),
      newArray = _ref2.slice(1);

  return newArray;
};

var TouchRipple = function (_Component) {
  (0, _inherits3$1K.default)(TouchRipple, _Component);

  function TouchRipple(props, context) {
    (0, _classCallCheck3$1N.default)(this, TouchRipple);

    // Touch start produces a mouse down event for compat reasons. To avoid
    // showing ripples twice we skip showing a ripple for the first mouse down
    // after a touch start. Note we don't store ignoreNextMouseDown in this.state
    // to avoid re-rendering when we change it.
    var _this = (0, _possibleConstructorReturn3$1K.default)(this, (TouchRipple.__proto__ || (0, _getPrototypeOf2$1K.default)(TouchRipple)).call(this, props, context));

    _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.start(event, false);
      }
    };

    _this.handleMouseUp = function () {
      _this.end();
    };

    _this.handleMouseLeave = function () {
      _this.end();
    };

    _this.handleTouchStart = function (event) {
      event.stopPropagation();
      // If the user is swiping (not just tapping), save the position so we can
      // abort ripples if the user appears to be scrolling.
      if (_this.props.abortOnScroll && event.touches) {
        _this.startListeningForScrollAbort(event);
        _this.startTime = Date.now();
      }
      _this.start(event, true);
    };

    _this.handleTouchEnd = function () {
      _this.end();
    };

    _this.handleTouchMove = function (event) {
      // Stop trying to abort if we're already 300ms into the animation
      var timeSinceStart = Math.abs(Date.now() - _this.startTime);
      if (timeSinceStart > 300) {
        _this.stopListeningForScrollAbort();
        return;
      }

      // If the user is scrolling...
      var deltaY = Math.abs(event.touches[0].clientY - _this.firstTouchY);
      var deltaX = Math.abs(event.touches[0].clientX - _this.firstTouchX);
      // Call it a scroll after an arbitrary 6px (feels reasonable in testing)
      if (deltaY > 6 || deltaX > 6) {
        var currentRipples = _this.state.ripples;
        var ripple = currentRipples[0];
        // This clone will replace the ripple in ReactTransitionGroup with a
        // version that will disappear immediately when removed from the DOM
        var abortedRipple = _react2$2T.default.cloneElement(ripple, { aborted: true });
        // Remove the old ripple and replace it with the new updated one
        currentRipples = shift(currentRipples);
        currentRipples = [].concat((0, _toConsumableArray3$4.default)(currentRipples), [abortedRipple]);
        _this.setState({ ripples: currentRipples }, function () {
          // Call end after we've set the ripple to abort otherwise the setState
          // in end() merges with this and the ripple abort fails
          _this.end();
        });
      }
    };

    _this.ignoreNextMouseDown = false;

    _this.state = {
      // This prop allows us to only render the ReactTransitionGroup
      // on the first click of the component, making the inital render faster.
      hasRipples: false,
      nextKey: 0,
      ripples: []
    };
    return _this;
  }

  (0, _createClass3$1M.default)(TouchRipple, [{
    key: 'start',
    value: function start(event, isRippleTouchGenerated) {
      var theme = this.context.muiTheme.ripple;

      if (this.ignoreNextMouseDown && !isRippleTouchGenerated) {
        this.ignoreNextMouseDown = false;
        return;
      }

      var ripples = this.state.ripples;

      // Add a ripple to the ripples array
      ripples = [].concat((0, _toConsumableArray3$4.default)(ripples), [_react2$2T.default.createElement(_CircleRipple2.default, {
        key: this.state.nextKey,
        style: !this.props.centerRipple ? this.getRippleStyle(event) : {},
        color: this.props.color || theme.color,
        opacity: this.props.opacity,
        touchGenerated: isRippleTouchGenerated
      })]);

      this.ignoreNextMouseDown = isRippleTouchGenerated;
      this.setState({
        hasRipples: true,
        nextKey: this.state.nextKey + 1,
        ripples: ripples
      });
    }
  }, {
    key: 'end',
    value: function end() {
      var currentRipples = this.state.ripples;
      this.setState({
        ripples: shift(currentRipples)
      });
      if (this.props.abortOnScroll) {
        this.stopListeningForScrollAbort();
      }
    }

    // Check if the user seems to be scrolling and abort the animation if so

  }, {
    key: 'startListeningForScrollAbort',
    value: function startListeningForScrollAbort(event) {
      this.firstTouchY = event.touches[0].clientY;
      this.firstTouchX = event.touches[0].clientX;
      // Note that when scolling Chrome throttles this event to every 200ms
      // Also note we don't listen for scroll events directly as there's no general
      // way to cover cases like scrolling within containers on the page
      document.body.addEventListener('touchmove', this.handleTouchMove);
    }
  }, {
    key: 'stopListeningForScrollAbort',
    value: function stopListeningForScrollAbort() {
      document.body.removeEventListener('touchmove', this.handleTouchMove);
    }
  }, {
    key: 'getRippleStyle',
    value: function getRippleStyle(event) {
      var el = _reactDom2$l.default.findDOMNode(this);
      var elHeight = el.offsetHeight;
      var elWidth = el.offsetWidth;
      var offset = _dom2$1.default.offset(el);
      var isTouchEvent = event.touches && event.touches.length;
      var pageX = isTouchEvent ? event.touches[0].pageX : event.pageX;
      var pageY = isTouchEvent ? event.touches[0].pageY : event.pageY;
      var pointerX = pageX - offset.left;
      var pointerY = pageY - offset.top;
      var topLeftDiag = this.calcDiag(pointerX, pointerY);
      var topRightDiag = this.calcDiag(elWidth - pointerX, pointerY);
      var botRightDiag = this.calcDiag(elWidth - pointerX, elHeight - pointerY);
      var botLeftDiag = this.calcDiag(pointerX, elHeight - pointerY);
      var rippleRadius = Math.max(topLeftDiag, topRightDiag, botRightDiag, botLeftDiag);
      var rippleSize = rippleRadius * 2;
      var left = pointerX - rippleRadius;
      var top = pointerY - rippleRadius;

      return {
        directionInvariant: true,
        height: rippleSize,
        width: rippleSize,
        top: top,
        left: left
      };
    }
  }, {
    key: 'calcDiag',
    value: function calcDiag(a, b) {
      return Math.sqrt(a * a + b * b);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style;
      var _state = this.state,
          hasRipples = _state.hasRipples,
          ripples = _state.ripples;
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var rippleGroup = void 0;

      if (hasRipples) {
        var mergedStyles = (0, _simpleAssign2$1F.default)({
          height: '100%',
          width: '100%',
          position: 'absolute',
          top: 0,
          left: 0,
          overflow: 'hidden',
          pointerEvents: 'none',
          zIndex: 1 // This is also needed so that ripples do not bleed past a parent border radius.
        }, style);

        rippleGroup = _react2$2T.default.createElement(
          _TransitionGroup2$3.default,
          { style: prepareStyles(mergedStyles) },
          ripples
        );
      }

      return _react2$2T.default.createElement(
        'div',
        {
          onMouseUp: this.handleMouseUp,
          onMouseDown: this.handleMouseDown,
          onMouseLeave: this.handleMouseLeave,
          onTouchStart: this.handleTouchStart,
          onTouchEnd: this.handleTouchEnd
        },
        rippleGroup,
        children
      );
    }
  }]);
  return TouchRipple;
}(_react$2Z.Component);

TouchRipple.defaultProps = {
  abortOnScroll: true
};
TouchRipple.contextTypes = {
  muiTheme: _propTypes2$1$.default.object.isRequired
};
TouchRipple.propTypes = {
  abortOnScroll: _propTypes2$1$.default.bool,
  centerRipple: _propTypes2$1$.default.bool,
  children: _propTypes2$1$.default.node,
  color: _propTypes2$1$.default.string,
  opacity: _propTypes2$1$.default.number,
  style: _propTypes2$1$.default.object
} ;
TouchRipple$1.default = TouchRipple;

Object.defineProperty(EnhancedButton$1, "__esModule", {
  value: true
});

var _extends2$1r = _extends$3;

var _extends3$1r = _interopRequireDefault$3_(_extends2$1r);

var _objectWithoutProperties2$1q = objectWithoutProperties$2;

var _objectWithoutProperties3$1q = _interopRequireDefault$3_(_objectWithoutProperties2$1q);

var _getPrototypeOf$1L = getPrototypeOf$1.exports;

var _getPrototypeOf2$1J = _interopRequireDefault$3_(_getPrototypeOf$1L);

var _classCallCheck2$1M = classCallCheck$3;

var _classCallCheck3$1M = _interopRequireDefault$3_(_classCallCheck2$1M);

var _createClass2$1L = createClass$2;

var _createClass3$1L = _interopRequireDefault$3_(_createClass2$1L);

var _possibleConstructorReturn2$1J = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1J = _interopRequireDefault$3_(_possibleConstructorReturn2$1J);

var _inherits2$1J = inherits$3;

var _inherits3$1J = _interopRequireDefault$3_(_inherits2$1J);

var _simpleAssign$1E = simpleAssign;

var _simpleAssign2$1E = _interopRequireDefault$3_(_simpleAssign$1E);

var _react$2Y = react;

var _react2$2S = _interopRequireDefault$3_(_react$2Y);

var _propTypes$1_ = propTypes$5.exports;

var _propTypes2$1_ = _interopRequireDefault$3_(_propTypes$1_);

var _events$3 = events;

var _events2$3 = _interopRequireDefault$3_(_events$3);

var _keycode$d = keycode.exports;

var _keycode2$d = _interopRequireDefault$3_(_keycode$d);

var _FocusRipple$2 = FocusRipple$1;

var _FocusRipple2$2 = _interopRequireDefault$3_(_FocusRipple$2);

var _TouchRipple$1 = TouchRipple$1;

var _TouchRipple2$1 = _interopRequireDefault$3_(_TouchRipple$1);

function _interopRequireDefault$3_(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styleInjected = false;
var listening = false;
var tabPressed = false;

function injectStyle() {
  if (!styleInjected) {
    // Remove inner padding and border in Firefox 4+.
    var style = document.createElement('style');
    style.innerHTML = '\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    ';

    document.body.appendChild(style);
    styleInjected = true;
  }
}

function listenForTabPresses() {
  if (!listening) {
    _events2$3.default.on(window, 'keydown', function (event) {
      tabPressed = (0, _keycode2$d.default)(event) === 'tab';
    });
    listening = true;
  }
}

var EnhancedButton = function (_Component) {
  (0, _inherits3$1J.default)(EnhancedButton, _Component);

  function EnhancedButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1M.default)(this, EnhancedButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1J.default)(this, (_ref = EnhancedButton.__proto__ || (0, _getPrototypeOf2$1J.default)(EnhancedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isKeyboardFocused: false
    }, _this.handleKeyDown = function (event) {
      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
        if ((0, _keycode2$d.default)(event) === 'esc' && _this.state.isKeyboardFocused) {
          _this.removeKeyboardFocus(event);
        }
      }
      _this.props.onKeyDown(event);
    }, _this.handleKeyUp = function (event) {
      _this.props.onKeyUp(event);
    }, _this.handleBlur = function (event) {
      _this.cancelFocusTimeout();
      _this.removeKeyboardFocus(event);
      _this.props.onBlur(event);
    }, _this.handleFocus = function (event) {
      if (event) event.persist();
      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
        // setTimeout is needed because the focus event fires first
        // Wait so that we can capture if this was a keyboard focus
        // or touch focus
        _this.focusTimeout = setTimeout(function () {
          if (tabPressed) {
            _this.setKeyboardFocus(event);
            tabPressed = false;
          }
        }, 150);

        _this.props.onFocus(event);
      }
    }, _this.handleClick = function (event) {
      _this.cancelFocusTimeout();
      if (!_this.props.disabled) {
        tabPressed = false;
        _this.removeKeyboardFocus(event);
        _this.props.onClick(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1J.default)(_this, _ret);
  }

  (0, _createClass3$1L.default)(EnhancedButton, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          disabled = _props.disabled,
          disableKeyboardFocus = _props.disableKeyboardFocus,
          keyboardFocused = _props.keyboardFocused;

      if (!disabled && keyboardFocused && !disableKeyboardFocus) {
        this.setState({ isKeyboardFocused: true });
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      injectStyle();
      listenForTabPresses();
      if (this.state.isKeyboardFocused) {
        this.button.focus();
        this.props.onKeyboardFocus(null, true);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ((nextProps.disabled || nextProps.disableKeyboardFocus) && this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: false });
        if (nextProps.onKeyboardFocus) {
          nextProps.onKeyboardFocus(null, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.focusTimeout) {
        clearTimeout(this.focusTimeout);
      }
    }
  }, {
    key: 'isKeyboardFocused',
    value: function isKeyboardFocused() {
      return this.state.isKeyboardFocused;
    }
  }, {
    key: 'removeKeyboardFocus',
    value: function removeKeyboardFocus(event) {
      if (this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: false });
        this.props.onKeyboardFocus(event, false);
      }
    }
  }, {
    key: 'setKeyboardFocus',
    value: function setKeyboardFocus(event) {
      if (!this.state.isKeyboardFocused) {
        this.setState({ isKeyboardFocused: true });
        this.props.onKeyboardFocus(event, true);
      }
    }
  }, {
    key: 'cancelFocusTimeout',
    value: function cancelFocusTimeout() {
      if (this.focusTimeout) {
        clearTimeout(this.focusTimeout);
        this.focusTimeout = null;
      }
    }
  }, {
    key: 'createButtonChildren',
    value: function createButtonChildren() {
      var _props2 = this.props,
          centerRipple = _props2.centerRipple,
          children = _props2.children,
          disabled = _props2.disabled,
          disableFocusRipple = _props2.disableFocusRipple,
          disableKeyboardFocus = _props2.disableKeyboardFocus,
          disableTouchRipple = _props2.disableTouchRipple,
          focusRippleColor = _props2.focusRippleColor,
          focusRippleOpacity = _props2.focusRippleOpacity,
          touchRippleColor = _props2.touchRippleColor,
          touchRippleOpacity = _props2.touchRippleOpacity;
      var isKeyboardFocused = this.state.isKeyboardFocused;

      // Focus Ripple

      var focusRipple = isKeyboardFocused && !disabled && !disableFocusRipple && !disableKeyboardFocus ? _react2$2S.default.createElement(_FocusRipple2$2.default, {
        color: focusRippleColor,
        opacity: focusRippleOpacity,
        show: isKeyboardFocused,
        style: {
          overflow: 'hidden'
        },
        key: 'focusRipple'
      }) : undefined;

      // Touch Ripple
      var touchRipple = !disabled && !disableTouchRipple ? _react2$2S.default.createElement(
        _TouchRipple2$1.default,
        {
          centerRipple: centerRipple,
          color: touchRippleColor,
          opacity: touchRippleOpacity,
          key: 'touchRipple'
        },
        children
      ) : undefined;

      return [focusRipple, touchRipple, touchRipple ? undefined : children];
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props;
          _props3.centerRipple;
          var children = _props3.children,
          containerElement = _props3.containerElement,
          disabled = _props3.disabled;
          _props3.disableFocusRipple;
          var disableKeyboardFocus = _props3.disableKeyboardFocus;
          _props3.disableTouchRipple;
          _props3.focusRippleColor;
          _props3.focusRippleOpacity;
          var href = _props3.href;
          _props3.keyboardFocused;
          _props3.touchRippleColor;
          _props3.touchRippleOpacity;
          _props3.onBlur;
          _props3.onClick;
          _props3.onFocus;
          _props3.onKeyUp;
          _props3.onKeyDown;
          _props3.onKeyboardFocus;
          var style = _props3.style,
          tabIndex = _props3.tabIndex,
          type = _props3.type,
          other = (0, _objectWithoutProperties3$1q.default)(_props3, ['centerRipple', 'children', 'containerElement', 'disabled', 'disableFocusRipple', 'disableKeyboardFocus', 'disableTouchRipple', 'focusRippleColor', 'focusRippleOpacity', 'href', 'keyboardFocused', 'touchRippleColor', 'touchRippleOpacity', 'onBlur', 'onClick', 'onFocus', 'onKeyUp', 'onKeyDown', 'onKeyboardFocus', 'style', 'tabIndex', 'type']);
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          enhancedButton = _context$muiTheme.enhancedButton;


      var mergedStyles = (0, _simpleAssign2$1E.default)({
        border: 10,
        boxSizing: 'border-box',
        display: 'inline-block',
        fontFamily: this.context.muiTheme.baseTheme.fontFamily,
        WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)
        cursor: disabled ? 'default' : 'pointer',
        textDecoration: 'none',
        margin: 0,
        padding: 0,
        outline: 'none',
        fontSize: 'inherit',
        fontWeight: 'inherit',
        position: 'relative', // This is needed so that ripples do not bleed past border radius.
        verticalAlign: href ? 'middle' : null
      }, style);

      // Passing both background:none & backgroundColor can break due to object iteration order
      if (!mergedStyles.backgroundColor && !mergedStyles.background) {
        mergedStyles.background = 'none';
      }

      if (disabled && href) {
        return _react2$2S.default.createElement(
          'span',
          (0, _extends3$1r.default)({}, other, {
            style: mergedStyles
          }),
          children
        );
      }

      var buttonProps = (0, _extends3$1r.default)({}, other, {
        style: prepareStyles(mergedStyles),
        ref: function ref(node) {
          return _this2.button = node;
        },
        disabled: disabled,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onKeyUp: this.handleKeyUp,
        onKeyDown: this.handleKeyDown,
        onClick: this.handleClick,
        tabIndex: disabled || disableKeyboardFocus ? -1 : tabIndex
      });

      if (href) buttonProps.href = href;

      var buttonChildren = this.createButtonChildren();

      if (_react2$2S.default.isValidElement(containerElement)) {
        return _react2$2S.default.cloneElement(containerElement, buttonProps, buttonChildren);
      }

      if (!href && containerElement === 'button') {
        buttonProps.type = type;
      }

      return _react2$2S.default.createElement(href ? 'a' : containerElement, buttonProps, buttonChildren);
    }
  }]);
  return EnhancedButton;
}(_react$2Y.Component);

EnhancedButton.defaultProps = {
  containerElement: 'button',
  onBlur: function onBlur() {},
  onClick: function onClick() {},
  onFocus: function onFocus() {},
  onKeyDown: function onKeyDown() {},
  onKeyUp: function onKeyUp() {},
  onKeyboardFocus: function onKeyboardFocus() {},
  tabIndex: 0,
  type: 'button'
};
EnhancedButton.contextTypes = {
  muiTheme: _propTypes2$1_.default.object.isRequired
};
EnhancedButton.propTypes = {
  centerRipple: _propTypes2$1_.default.bool,
  children: _propTypes2$1_.default.node,
  containerElement: _propTypes2$1_.default.oneOfType([_propTypes2$1_.default.string, _propTypes2$1_.default.element]),
  disableFocusRipple: _propTypes2$1_.default.bool,
  disableKeyboardFocus: _propTypes2$1_.default.bool,
  disableTouchRipple: _propTypes2$1_.default.bool,
  disabled: _propTypes2$1_.default.bool,
  focusRippleColor: _propTypes2$1_.default.string,
  focusRippleOpacity: _propTypes2$1_.default.number,
  href: _propTypes2$1_.default.string,
  keyboardFocused: _propTypes2$1_.default.bool,
  onBlur: _propTypes2$1_.default.func,
  onClick: _propTypes2$1_.default.func,
  onFocus: _propTypes2$1_.default.func,
  onKeyDown: _propTypes2$1_.default.func,
  onKeyUp: _propTypes2$1_.default.func,
  onKeyboardFocus: _propTypes2$1_.default.func,
  style: _propTypes2$1_.default.object,
  tabIndex: _propTypes2$1_.default.number,
  touchRippleColor: _propTypes2$1_.default.string,
  touchRippleOpacity: _propTypes2$1_.default.number,
  type: _propTypes2$1_.default.string
} ;
EnhancedButton$1.default = EnhancedButton;

var FlatButtonLabel$1 = {};

Object.defineProperty(FlatButtonLabel$1, "__esModule", {
  value: true
});

var _getPrototypeOf$1K = getPrototypeOf$1.exports;

var _getPrototypeOf2$1I = _interopRequireDefault$3Z(_getPrototypeOf$1K);

var _classCallCheck2$1L = classCallCheck$3;

var _classCallCheck3$1L = _interopRequireDefault$3Z(_classCallCheck2$1L);

var _createClass2$1K = createClass$2;

var _createClass3$1K = _interopRequireDefault$3Z(_createClass2$1K);

var _possibleConstructorReturn2$1I = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1I = _interopRequireDefault$3Z(_possibleConstructorReturn2$1I);

var _inherits2$1I = inherits$3;

var _inherits3$1I = _interopRequireDefault$3Z(_inherits2$1I);

var _simpleAssign$1D = simpleAssign;

var _simpleAssign2$1D = _interopRequireDefault$3Z(_simpleAssign$1D);

var _react$2X = react;

var _react2$2R = _interopRequireDefault$3Z(_react$2X);

var _propTypes$1Z = propTypes$5.exports;

var _propTypes2$1Z = _interopRequireDefault$3Z(_propTypes$1Z);

function _interopRequireDefault$3Z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1g(props, context) {
  var baseTheme = context.muiTheme.baseTheme;


  return {
    root: {
      position: 'relative',
      paddingLeft: baseTheme.spacing.desktopGutterLess,
      paddingRight: baseTheme.spacing.desktopGutterLess,
      verticalAlign: 'middle'
    }
  };
}

var FlatButtonLabel = function (_Component) {
  (0, _inherits3$1I.default)(FlatButtonLabel, _Component);

  function FlatButtonLabel() {
    (0, _classCallCheck3$1L.default)(this, FlatButtonLabel);
    return (0, _possibleConstructorReturn3$1I.default)(this, (FlatButtonLabel.__proto__ || (0, _getPrototypeOf2$1I.default)(FlatButtonLabel)).apply(this, arguments));
  }

  (0, _createClass3$1K.default)(FlatButtonLabel, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          style = _props.style;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1g(this.props, this.context);

      return _react2$2R.default.createElement(
        'span',
        { style: prepareStyles((0, _simpleAssign2$1D.default)(styles.root, style)) },
        label
      );
    }
  }]);
  return FlatButtonLabel;
}(_react$2X.Component);

FlatButtonLabel.contextTypes = {
  muiTheme: _propTypes2$1Z.default.object.isRequired
};
FlatButtonLabel.propTypes = {
  label: _propTypes2$1Z.default.node,
  style: _propTypes2$1Z.default.object
} ;
FlatButtonLabel$1.default = FlatButtonLabel;

Object.defineProperty(FlatButton$1, "__esModule", {
  value: true
});

var _extends2$1q = _extends$3;

var _extends3$1q = _interopRequireDefault$3Y(_extends2$1q);

var _objectWithoutProperties2$1p = objectWithoutProperties$2;

var _objectWithoutProperties3$1p = _interopRequireDefault$3Y(_objectWithoutProperties2$1p);

var _getPrototypeOf$1J = getPrototypeOf$1.exports;

var _getPrototypeOf2$1H = _interopRequireDefault$3Y(_getPrototypeOf$1J);

var _classCallCheck2$1K = classCallCheck$3;

var _classCallCheck3$1K = _interopRequireDefault$3Y(_classCallCheck2$1K);

var _createClass2$1J = createClass$2;

var _createClass3$1J = _interopRequireDefault$3Y(_createClass2$1J);

var _possibleConstructorReturn2$1H = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1H = _interopRequireDefault$3Y(_possibleConstructorReturn2$1H);

var _inherits2$1H = inherits$3;

var _inherits3$1H = _interopRequireDefault$3Y(_inherits2$1H);

var _simpleAssign$1C = simpleAssign;

var _simpleAssign2$1C = _interopRequireDefault$3Y(_simpleAssign$1C);

var _react$2W = react;

var _react2$2Q = _interopRequireDefault$3Y(_react$2W);

var _propTypes$1Y = propTypes$5.exports;

var _propTypes2$1Y = _interopRequireDefault$3Y(_propTypes$1Y);

var _transitions$K = transitions;

var _transitions2$K = _interopRequireDefault$3Y(_transitions$K);

var _colorManipulator$8 = colorManipulator;

var _EnhancedButton$c = EnhancedButton$1;

var _EnhancedButton2$c = _interopRequireDefault$3Y(_EnhancedButton$c);

var _FlatButtonLabel = FlatButtonLabel$1;

var _FlatButtonLabel2 = _interopRequireDefault$3Y(_FlatButtonLabel);

function _interopRequireDefault$3Y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validateLabel$1(props, propName, componentName) {
  {
    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
    }
  }
}

var FlatButton = function (_Component) {
  (0, _inherits3$1H.default)(FlatButton, _Component);

  function FlatButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1K.default)(this, FlatButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1H.default)(this, (_ref = FlatButton.__proto__ || (0, _getPrototypeOf2$1H.default)(FlatButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      touch: false
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      _this.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleMouseEnter = function (event) {
      // Cancel hover styles for touch devices
      if (!_this.state.touch) _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchStart(event);
    }, _temp), (0, _possibleConstructorReturn3$1H.default)(_this, _ret);
  }

  (0, _createClass3$1J.default)(FlatButton, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled) {
        this.setState({
          hovered: false
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          backgroundColor = _props.backgroundColor,
          children = _props.children,
          disabled = _props.disabled,
          fullWidth = _props.fullWidth,
          hoverColor = _props.hoverColor,
          icon = _props.icon,
          label = _props.label,
          labelStyle = _props.labelStyle,
          labelPosition = _props.labelPosition,
          primary = _props.primary,
          rippleColor = _props.rippleColor,
          secondary = _props.secondary,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1p.default)(_props, ['backgroundColor', 'children', 'disabled', 'fullWidth', 'hoverColor', 'icon', 'label', 'labelStyle', 'labelPosition', 'primary', 'rippleColor', 'secondary', 'style']);
      var _context$muiTheme = this.context.muiTheme,
          borderRadius = _context$muiTheme.borderRadius,
          _context$muiTheme$but = _context$muiTheme.button,
          buttonHeight = _context$muiTheme$but.height,
          buttonMinWidth = _context$muiTheme$but.minWidth,
          buttonTextTransform = _context$muiTheme$but.textTransform,
          _context$muiTheme$fla = _context$muiTheme.flatButton,
          buttonFilterColor = _context$muiTheme$fla.buttonFilterColor,
          buttonColor = _context$muiTheme$fla.color,
          disabledTextColor = _context$muiTheme$fla.disabledTextColor,
          fontSize = _context$muiTheme$fla.fontSize,
          fontWeight = _context$muiTheme$fla.fontWeight,
          primaryTextColor = _context$muiTheme$fla.primaryTextColor,
          secondaryTextColor = _context$muiTheme$fla.secondaryTextColor,
          textColor = _context$muiTheme$fla.textColor,
          _context$muiTheme$fla2 = _context$muiTheme$fla.textTransform,
          textTransform = _context$muiTheme$fla2 === undefined ? buttonTextTransform || 'uppercase' : _context$muiTheme$fla2;

      var defaultTextColor = disabled ? disabledTextColor : primary ? primaryTextColor : secondary ? secondaryTextColor : textColor;

      var defaultHoverColor = (0, _colorManipulator$8.fade)(buttonFilterColor, 0.2);
      var defaultRippleColor = buttonFilterColor;
      var buttonHoverColor = hoverColor || defaultHoverColor;
      var buttonRippleColor = rippleColor || defaultRippleColor;
      var buttonBackgroundColor = backgroundColor || buttonColor;
      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

      var mergedRootStyles = (0, _simpleAssign2$1C.default)({}, {
        height: buttonHeight,
        lineHeight: buttonHeight + 'px',
        minWidth: fullWidth ? '100%' : buttonMinWidth,
        color: defaultTextColor,
        transition: _transitions2$K.default.easeOut(),
        borderRadius: borderRadius,
        userSelect: 'none',
        overflow: 'hidden',
        backgroundColor: hovered ? buttonHoverColor : buttonBackgroundColor,
        padding: 0,
        margin: 0,
        textAlign: 'center'
      }, style);

      var iconCloned = void 0;
      var labelStyleIcon = {};

      if (icon) {
        var iconStyles = (0, _simpleAssign2$1C.default)({
          verticalAlign: 'middle',
          marginLeft: label && labelPosition !== 'before' ? 12 : 0,
          marginRight: label && labelPosition === 'before' ? 12 : 0
        }, icon.props.style);
        iconCloned = _react2$2Q.default.cloneElement(icon, {
          color: icon.props.color || mergedRootStyles.color,
          style: iconStyles,
          key: 'iconCloned'
        });

        if (labelPosition === 'before') {
          labelStyleIcon.paddingRight = 8;
        } else {
          labelStyleIcon.paddingLeft = 8;
        }
      }

      var mergedLabelStyles = (0, _simpleAssign2$1C.default)({
        letterSpacing: 0,
        textTransform: textTransform,
        fontWeight: fontWeight,
        fontSize: fontSize
      }, labelStyleIcon, labelStyle);

      var labelElement = label ? _react2$2Q.default.createElement(_FlatButtonLabel2.default, { key: 'labelElement', label: label, style: mergedLabelStyles }) : undefined;

      // Place label before or after children.
      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

      return _react2$2Q.default.createElement(
        _EnhancedButton2$c.default,
        (0, _extends3$1q.default)({}, other, {
          disabled: disabled,
          focusRippleColor: buttonRippleColor,
          focusRippleOpacity: 0.3,
          onKeyboardFocus: this.handleKeyboardFocus,
          onMouseLeave: this.handleMouseLeave,
          onMouseEnter: this.handleMouseEnter,
          onTouchStart: this.handleTouchStart,
          style: mergedRootStyles,
          touchRippleColor: buttonRippleColor,
          touchRippleOpacity: 0.3
        }),
        enhancedButtonChildren
      );
    }
  }]);
  return FlatButton;
}(_react$2W.Component);

FlatButton.muiName = 'FlatButton';
FlatButton.defaultProps = {
  disabled: false,
  fullWidth: false,
  labelStyle: {},
  labelPosition: 'after',
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onTouchStart: function onTouchStart() {},
  primary: false,
  secondary: false
};
FlatButton.contextTypes = {
  muiTheme: _propTypes2$1Y.default.object.isRequired
};
FlatButton.propTypes = {
  /**
   * Color of button when mouse is not hovering over it.
   */
  backgroundColor: _propTypes2$1Y.default.string,
  /**
   * This is what will be displayed inside the button.
   * If a label is specified, the text within the label prop will
   * be displayed. Otherwise, the component will expect children
   * which will then be displayed. (In our example,
   * we are nesting an `<input type="file" />` and a `span`
   * that acts as our label to be displayed.) This only
   * applies to flat and raised buttons.
   */
  children: _propTypes2$1Y.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$1Y.default.string,
  /**
   * The element to use as the container for the FlatButton. Either a string to
   * use a DOM element or a ReactElement. This is useful for wrapping the
   * FlatButton in a custom Link component. If a ReactElement is given, ensure
   * that it passes all of its given props through to the underlying DOM
   * element and renders its children prop for proper integration.
   */
  containerElement: _propTypes2$1Y.default.oneOfType([_propTypes2$1Y.default.string, _propTypes2$1Y.default.element]),
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$1Y.default.bool,
  /**
   * Disables the button if set to true.
   */
  disabled: _propTypes2$1Y.default.bool,
  /**
   * If true, the button will take up the full width of its container.
   */
  fullWidth: _propTypes2$1Y.default.bool,
  /**
   * Color of button when mouse hovers over.
   */
  hoverColor: _propTypes2$1Y.default.string,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$1Y.default.string,
  /**
   * Use this property to display an icon.
   */
  icon: _propTypes2$1Y.default.node,
  /**
   * Label for the button.
   */
  label: validateLabel$1,
  /**
   * Place label before or after the passed children.
   */
  labelPosition: _propTypes2$1Y.default.oneOf(['before', 'after']),
  /**
   * Override the inline-styles of the button's label element.
   */
  labelStyle: _propTypes2$1Y.default.object,
  /**
   * Callback function fired when the button is clicked.
   *
   * @param {object} event Click event targeting the button.
   */
  onClick: _propTypes2$1Y.default.func,
  /**
   * Callback function fired when the element is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the element.
   * @param {boolean} isKeyboardFocused Indicates whether the element is focused.
   */
  onKeyboardFocus: _propTypes2$1Y.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1Y.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1Y.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1Y.default.func,
  /**
   * If true, colors button according to
   * primaryTextColor from the Theme.
   */
  primary: _propTypes2$1Y.default.bool,
  /**
   * Color for the ripple after button is clicked.
   */
  rippleColor: _propTypes2$1Y.default.string,
  /**
   * If true, colors button according to secondaryTextColor from the theme.
   * The primary prop has precendent if set to true.
   */
  secondary: _propTypes2$1Y.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1Y.default.object
} ;
FlatButton$1.default = FlatButton;

Object.defineProperty(FlatButton$2, "__esModule", {
  value: true
});
FlatButton$2.default = undefined;

var _FlatButton$3 = FlatButton$1;

var _FlatButton2$3 = _interopRequireDefault$3X(_FlatButton$3);

function _interopRequireDefault$3X(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

FlatButton$2.default = _FlatButton2$3.default;

var RaisedButton$2 = {};

var RaisedButton$1 = {};

var Paper$2 = {};

var Paper$1 = {};

var propTypes$3 = {};

Object.defineProperty(propTypes$3, "__esModule", {
  value: true
});

var _propTypes$1X = propTypes$5.exports;

var _propTypes2$1X = _interopRequireDefault$3W(_propTypes$1X);

function _interopRequireDefault$3W(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var horizontal = _propTypes2$1X.default.oneOf(['left', 'middle', 'right']);
var vertical = _propTypes2$1X.default.oneOf(['top', 'center', 'bottom']);

propTypes$3.default = {

  corners: _propTypes2$1X.default.oneOf(['bottom-left', 'bottom-right', 'top-left', 'top-right']),

  horizontal: horizontal,

  vertical: vertical,

  origin: _propTypes2$1X.default.shape({
    horizontal: horizontal,
    vertical: vertical
  }),

  cornersAndCenter: _propTypes2$1X.default.oneOf(['bottom-center', 'bottom-left', 'bottom-right', 'top-center', 'top-left', 'top-right']),

  stringOrNumber: _propTypes2$1X.default.oneOfType([_propTypes2$1X.default.string, _propTypes2$1X.default.number]),

  zDepth: _propTypes2$1X.default.oneOf([0, 1, 2, 3, 4, 5])

};

Object.defineProperty(Paper$1, "__esModule", {
  value: true
});

var _extends2$1p = _extends$3;

var _extends3$1p = _interopRequireDefault$3V(_extends2$1p);

var _objectWithoutProperties2$1o = objectWithoutProperties$2;

var _objectWithoutProperties3$1o = _interopRequireDefault$3V(_objectWithoutProperties2$1o);

var _getPrototypeOf$1I = getPrototypeOf$1.exports;

var _getPrototypeOf2$1G = _interopRequireDefault$3V(_getPrototypeOf$1I);

var _classCallCheck2$1J = classCallCheck$3;

var _classCallCheck3$1J = _interopRequireDefault$3V(_classCallCheck2$1J);

var _createClass2$1I = createClass$2;

var _createClass3$1I = _interopRequireDefault$3V(_createClass2$1I);

var _possibleConstructorReturn2$1G = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1G = _interopRequireDefault$3V(_possibleConstructorReturn2$1G);

var _inherits2$1G = inherits$3;

var _inherits3$1G = _interopRequireDefault$3V(_inherits2$1G);

var _simpleAssign$1B = simpleAssign;

var _simpleAssign2$1B = _interopRequireDefault$3V(_simpleAssign$1B);

var _react$2V = react;

var _react2$2P = _interopRequireDefault$3V(_react$2V);

var _propTypes$1W = propTypes$5.exports;

var _propTypes2$1W = _interopRequireDefault$3V(_propTypes$1W);

var _propTypes3$j = propTypes$3;

var _propTypes4$j = _interopRequireDefault$3V(_propTypes3$j);

var _transitions$J = transitions;

var _transitions2$J = _interopRequireDefault$3V(_transitions$J);

function _interopRequireDefault$3V(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1f(props, context) {
  var rounded = props.rounded,
      circle = props.circle,
      transitionEnabled = props.transitionEnabled,
      zDepth = props.zDepth;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      paper = _context$muiTheme.paper,
      borderRadius = _context$muiTheme.borderRadius;


  return {
    root: {
      color: paper.color,
      backgroundColor: paper.backgroundColor,
      transition: transitionEnabled && _transitions2$J.default.easeOut(),
      boxSizing: 'border-box',
      fontFamily: baseTheme.fontFamily,
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      boxShadow: paper.zDepthShadows[zDepth - 1], // No shadow for 0 depth papers
      borderRadius: circle ? '50%' : rounded ? borderRadius : '0px'
    }
  };
}

var Paper = function (_Component) {
  (0, _inherits3$1G.default)(Paper, _Component);

  function Paper() {
    (0, _classCallCheck3$1J.default)(this, Paper);
    return (0, _possibleConstructorReturn3$1G.default)(this, (Paper.__proto__ || (0, _getPrototypeOf2$1G.default)(Paper)).apply(this, arguments));
  }

  (0, _createClass3$1I.default)(Paper, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.circle;
          _props.rounded;
          var style = _props.style;
          _props.transitionEnabled;
          _props.zDepth;
          var other = (0, _objectWithoutProperties3$1o.default)(_props, ['children', 'circle', 'rounded', 'style', 'transitionEnabled', 'zDepth']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1f(this.props, this.context);

      return _react2$2P.default.createElement(
        'div',
        (0, _extends3$1p.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1B.default)(styles.root, style)) }),
        children
      );
    }
  }]);
  return Paper;
}(_react$2V.Component);

Paper.defaultProps = {
  circle: false,
  rounded: true,
  transitionEnabled: true,
  zDepth: 1
};
Paper.contextTypes = {
  muiTheme: _propTypes2$1W.default.object.isRequired
};
Paper.propTypes = {
  /**
   * Children passed into the paper element.
   */
  children: _propTypes2$1W.default.node,
  /**
   * Set to true to generate a circular paper container.
   */
  circle: _propTypes2$1W.default.bool,
  /**
   * By default, the paper container will have a border radius.
   * Set this to false to generate a container with sharp corners.
   */
  rounded: _propTypes2$1W.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1W.default.object,
  /**
   * Set to false to disable CSS transitions for the paper element.
   */
  transitionEnabled: _propTypes2$1W.default.bool,
  /**
   * This number represents the zDepth of the paper shadow.
   */
  zDepth: _propTypes4$j.default.zDepth
} ;
Paper$1.default = Paper;

Object.defineProperty(Paper$2, "__esModule", {
  value: true
});
Paper$2.default = undefined;

var _Paper$f = Paper$1;

var _Paper2$f = _interopRequireDefault$3U(_Paper$f);

function _interopRequireDefault$3U(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Paper$2.default = _Paper2$f.default;

Object.defineProperty(RaisedButton$1, "__esModule", {
  value: true
});

var _extends2$1o = _extends$3;

var _extends3$1o = _interopRequireDefault$3T(_extends2$1o);

var _objectWithoutProperties2$1n = objectWithoutProperties$2;

var _objectWithoutProperties3$1n = _interopRequireDefault$3T(_objectWithoutProperties2$1n);

var _getPrototypeOf$1H = getPrototypeOf$1.exports;

var _getPrototypeOf2$1F = _interopRequireDefault$3T(_getPrototypeOf$1H);

var _classCallCheck2$1I = classCallCheck$3;

var _classCallCheck3$1I = _interopRequireDefault$3T(_classCallCheck2$1I);

var _createClass2$1H = createClass$2;

var _createClass3$1H = _interopRequireDefault$3T(_createClass2$1H);

var _possibleConstructorReturn2$1F = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1F = _interopRequireDefault$3T(_possibleConstructorReturn2$1F);

var _inherits2$1F = inherits$3;

var _inherits3$1F = _interopRequireDefault$3T(_inherits2$1F);

var _simpleAssign$1A = simpleAssign;

var _simpleAssign2$1A = _interopRequireDefault$3T(_simpleAssign$1A);

var _react$2U = react;

var _react2$2O = _interopRequireDefault$3T(_react$2U);

var _propTypes$1V = propTypes$5.exports;

var _propTypes2$1V = _interopRequireDefault$3T(_propTypes$1V);

var _transitions$I = transitions;

var _transitions2$I = _interopRequireDefault$3T(_transitions$I);

var _colorManipulator$7 = colorManipulator;

var _EnhancedButton$b = EnhancedButton$1;

var _EnhancedButton2$b = _interopRequireDefault$3T(_EnhancedButton$b);

var _Paper$e = Paper$2;

var _Paper2$e = _interopRequireDefault$3T(_Paper$e);

function _interopRequireDefault$3T(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validateLabel(props, propName, componentName) {
  {
    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
    }
  }
}

function getStyles$1e(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      button = _context$muiTheme.button,
      raisedButton = _context$muiTheme.raisedButton,
      borderRadius = _context$muiTheme.borderRadius;
  var disabled = props.disabled,
      disabledBackgroundColor = props.disabledBackgroundColor,
      disabledLabelColor = props.disabledLabelColor,
      fullWidth = props.fullWidth,
      icon = props.icon,
      label = props.label,
      labelPosition = props.labelPosition,
      primary = props.primary,
      secondary = props.secondary,
      style = props.style;


  var amount = primary || secondary ? 0.4 : 0.08;

  var backgroundColor = raisedButton.color;
  var labelColor = raisedButton.textColor;

  if (disabled) {
    backgroundColor = disabledBackgroundColor || raisedButton.disabledColor;
    labelColor = disabledLabelColor || raisedButton.disabledTextColor;
  } else if (primary) {
    backgroundColor = raisedButton.primaryColor;
    labelColor = raisedButton.primaryTextColor;
  } else if (secondary) {
    backgroundColor = raisedButton.secondaryColor;
    labelColor = raisedButton.secondaryTextColor;
  } else {
    if (props.backgroundColor) {
      backgroundColor = props.backgroundColor;
    }
    if (props.labelColor) {
      labelColor = props.labelColor;
    }
  }

  var buttonHeight = style && style.height || button.height;

  return {
    root: {
      display: 'inline-block',
      transition: _transitions2$I.default.easeOut(),
      minWidth: fullWidth ? '100%' : button.minWidth
    },
    button: {
      height: buttonHeight,
      lineHeight: buttonHeight + 'px',
      width: '100%',
      padding: 0,
      borderRadius: borderRadius,
      transition: _transitions2$I.default.easeOut(),
      backgroundColor: backgroundColor,
      // That's the default value for a button but not a link
      textAlign: 'center'
    },
    label: {
      position: 'relative',
      opacity: 1,
      fontSize: raisedButton.fontSize,
      letterSpacing: 0,
      textTransform: raisedButton.textTransform || button.textTransform || 'uppercase',
      fontWeight: raisedButton.fontWeight,
      margin: 0,
      userSelect: 'none',
      paddingLeft: icon && labelPosition !== 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
      paddingRight: icon && labelPosition === 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
      color: labelColor
    },
    icon: {
      verticalAlign: 'middle',
      marginLeft: label && labelPosition !== 'before' ? 12 : 0,
      marginRight: label && labelPosition === 'before' ? 12 : 0
    },
    overlay: {
      height: buttonHeight,
      borderRadius: borderRadius,
      backgroundColor: (state.keyboardFocused || state.hovered) && !disabled && (0, _colorManipulator$7.fade)(labelColor, amount),
      transition: _transitions2$I.default.easeOut(),
      top: 0
    },
    ripple: {
      color: labelColor,
      opacity: !(primary || secondary) ? 0.1 : 0.16
    }
  };
}

var RaisedButton = function (_Component) {
  (0, _inherits3$1F.default)(RaisedButton, _Component);

  function RaisedButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1I.default)(this, RaisedButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1F.default)(this, (_ref = RaisedButton.__proto__ || (0, _getPrototypeOf2$1F.default)(RaisedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      keyboardFocused: false,
      touched: false,
      initialZDepth: 0,
      zDepth: 0
    }, _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.setState({
          zDepth: _this.state.initialZDepth + 1
        });
      }
      if (_this.props.onMouseDown) {
        _this.props.onMouseDown(event);
      }
    }, _this.handleMouseUp = function (event) {
      _this.setState({
        zDepth: _this.state.initialZDepth
      });
      if (_this.props.onMouseUp) {
        _this.props.onMouseUp(event);
      }
    }, _this.handleMouseLeave = function (event) {
      if (!_this.state.keyboardFocused) {
        _this.setState({
          zDepth: _this.state.initialZDepth,
          hovered: false
        });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseEnter = function (event) {
      if (!_this.state.keyboardFocused && !_this.state.touched) {
        _this.setState({
          hovered: true
        });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _this.handleTouchStart = function (event) {
      _this.setState({
        touched: true,
        zDepth: _this.state.initialZDepth + 1
      });

      if (_this.props.onTouchStart) {
        _this.props.onTouchStart(event);
      }
    }, _this.handleTouchEnd = function (event) {
      _this.setState({
        touched: true,
        zDepth: _this.state.initialZDepth
      });

      if (_this.props.onTouchEnd) {
        _this.props.onTouchEnd(event);
      }
    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
      var zDepth = keyboardFocused && !_this.props.disabled ? _this.state.initialZDepth + 1 : _this.state.initialZDepth;

      _this.setState({
        zDepth: zDepth,
        keyboardFocused: keyboardFocused
      });
    }, _temp), (0, _possibleConstructorReturn3$1F.default)(_this, _ret);
  }

  (0, _createClass3$1H.default)(RaisedButton, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var zDepth = this.props.disabled ? 0 : 1;
      this.setState({
        zDepth: zDepth,
        initialZDepth: zDepth
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var zDepth = nextProps.disabled ? 0 : 1;
      var nextState = {
        zDepth: zDepth,
        initialZDepth: zDepth
      };

      if (nextProps.disabled) {
        nextState.hovered = false;
      }

      this.setState(nextState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.backgroundColor;
          var buttonStyle = _props.buttonStyle,
          children = _props.children,
          className = _props.className,
          disabled = _props.disabled;
          _props.disabledBackgroundColor;
          _props.disabledLabelColor;
          _props.fullWidth;
          var icon = _props.icon,
          label = _props.label;
          _props.labelColor;
          var labelPosition = _props.labelPosition,
          labelStyle = _props.labelStyle,
          overlayStyle = _props.overlayStyle;
          _props.primary;
          var rippleStyle = _props.rippleStyle;
          _props.secondary;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$1n.default)(_props, ['backgroundColor', 'buttonStyle', 'children', 'className', 'disabled', 'disabledBackgroundColor', 'disabledLabelColor', 'fullWidth', 'icon', 'label', 'labelColor', 'labelPosition', 'labelStyle', 'overlayStyle', 'primary', 'rippleStyle', 'secondary', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1e(this.props, this.context, this.state);
      var mergedRippleStyles = (0, _simpleAssign2$1A.default)({}, styles.ripple, rippleStyle);

      var buttonEventHandlers = disabled ? {} : {
        onMouseDown: this.handleMouseDown,
        onMouseUp: this.handleMouseUp,
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        onTouchStart: this.handleTouchStart,
        onTouchEnd: this.handleTouchEnd,
        onKeyboardFocus: this.handleKeyboardFocus
      };

      var labelElement = label && _react2$2O.default.createElement(
        'span',
        { style: prepareStyles((0, _simpleAssign2$1A.default)(styles.label, labelStyle)), key: 'labelElement' },
        label
      );

      var iconCloned = icon && (0, _react$2U.cloneElement)(icon, {
        color: icon.props.color || styles.label.color,
        style: (0, _simpleAssign2$1A.default)(styles.icon, icon.props.style),
        key: 'iconCloned'
      });

      var overlayBackgroundProxy = {
        backgroundColor: overlayStyle && styles.overlay.backgroundColor && overlayStyle.backgroundColor || styles.overlay.backgroundColor
      };

      // Place label before or after children.
      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

      return _react2$2O.default.createElement(
        _Paper2$e.default,
        {
          className: className,
          style: (0, _simpleAssign2$1A.default)(styles.root, style),
          zDepth: this.state.zDepth
        },
        _react2$2O.default.createElement(
          _EnhancedButton2$b.default,
          (0, _extends3$1o.default)({}, other, buttonEventHandlers, {
            ref: 'container',
            disabled: disabled,
            style: (0, _simpleAssign2$1A.default)(styles.button, buttonStyle),
            focusRippleColor: mergedRippleStyles.color,
            touchRippleColor: mergedRippleStyles.color,
            focusRippleOpacity: mergedRippleStyles.opacity,
            touchRippleOpacity: mergedRippleStyles.opacity
          }),
          _react2$2O.default.createElement(
            'div',
            {
              ref: 'overlay',
              style: prepareStyles((0, _simpleAssign2$1A.default)(styles.overlay, overlayStyle, overlayBackgroundProxy))
            },
            enhancedButtonChildren
          )
        )
      );
    }
  }]);
  return RaisedButton;
}(_react$2U.Component);

RaisedButton.muiName = 'RaisedButton';
RaisedButton.defaultProps = {
  disabled: false,
  labelPosition: 'after',
  fullWidth: false,
  primary: false,
  secondary: false
};
RaisedButton.contextTypes = {
  muiTheme: _propTypes2$1V.default.object.isRequired
};
RaisedButton.propTypes = {
  /**
   * Override the default background color for the button,
   * but not the default disabled background color
   * (use `disabledBackgroundColor` for this).
   */
  backgroundColor: _propTypes2$1V.default.string,
  /**
   * Override the inline-styles of the button element.
   */
  buttonStyle: _propTypes2$1V.default.object,
  /**
   * The content of the button.
   * If a label is provided via the `label` prop, the text within the label
   * will be displayed in addition to the content provided here.
   */
  children: _propTypes2$1V.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$1V.default.string,
  /**
    * The element to use as the container for the RaisedButton. Either a string to
    * use a DOM element or a ReactElement. This is useful for wrapping the
    * RaisedButton in a custom Link component. If a ReactElement is given, ensure
    * that it passes all of its given props through to the underlying DOM
    * element and renders its children prop for proper integration.
    */
  containerElement: _propTypes2$1V.default.oneOfType([_propTypes2$1V.default.string, _propTypes2$1V.default.element]),
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$1V.default.bool,
  /**
   * If true, the button will be disabled.
   */
  disabled: _propTypes2$1V.default.bool,
  /**
   * Override the default background color for the button
   * when it is disabled.
   */
  disabledBackgroundColor: _propTypes2$1V.default.string,
  /**
   * The color of the button's label when the button is disabled.
   */
  disabledLabelColor: _propTypes2$1V.default.string,
  /**
   * If true, the button will take up the full width of its container.
   */
  fullWidth: _propTypes2$1V.default.bool,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$1V.default.string,
  /**
   * An icon to be displayed within the button.
   */
  icon: _propTypes2$1V.default.node,
  /**
   * The label to be displayed within the button.
   * If content is provided via the `children` prop, that content will be
   * displayed in addition to the label provided here.
   */
  label: validateLabel,
  /**
   * The color of the button's label.
   */
  labelColor: _propTypes2$1V.default.string,
  /**
   * The position of the button's label relative to the button's `children`.
   */
  labelPosition: _propTypes2$1V.default.oneOf(['before', 'after']),
  /**
   * Override the inline-styles of the button's label element.
   */
  labelStyle: _propTypes2$1V.default.object,
  /**
   * Callback function fired when the button is clicked.
   *
   * @param {object} event Click event targeting the button.
   */
  onClick: _propTypes2$1V.default.func,
  /** @ignore */
  onMouseDown: _propTypes2$1V.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1V.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1V.default.func,
  /** @ignore */
  onMouseUp: _propTypes2$1V.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$1V.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1V.default.func,
  /**
   * Override the inline style of the button overlay.
   */
  overlayStyle: _propTypes2$1V.default.object,
  /**
   * If true, the button will use the theme's primary color.
   */
  primary: _propTypes2$1V.default.bool,
  /**
   * Override the inline style of the ripple element.
   */
  rippleStyle: _propTypes2$1V.default.object,
  /**
   * If true, the button will use the theme's secondary color.
   * If both `secondary` and `primary` are true, the button will use
   * the theme's primary color.
   */
  secondary: _propTypes2$1V.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1V.default.object
} ;
RaisedButton$1.default = RaisedButton;

Object.defineProperty(RaisedButton$2, "__esModule", {
  value: true
});
RaisedButton$2.default = undefined;

var _RaisedButton = RaisedButton$1;

var _RaisedButton2 = _interopRequireDefault$3S(_RaisedButton);

function _interopRequireDefault$3S(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

RaisedButton$2.default = _RaisedButton2.default;

var FloatingActionButton$2 = {};

var FloatingActionButton$1 = {};

var FontIcon$5 = {};

var FontIcon$4 = {};

Object.defineProperty(FontIcon$4, "__esModule", {
  value: true
});

var _extends2$1n = _extends$3;

var _extends3$1n = _interopRequireDefault$3R(_extends2$1n);

var _objectWithoutProperties2$1m = objectWithoutProperties$2;

var _objectWithoutProperties3$1m = _interopRequireDefault$3R(_objectWithoutProperties2$1m);

var _getPrototypeOf$1G = getPrototypeOf$1.exports;

var _getPrototypeOf2$1E = _interopRequireDefault$3R(_getPrototypeOf$1G);

var _classCallCheck2$1H = classCallCheck$3;

var _classCallCheck3$1H = _interopRequireDefault$3R(_classCallCheck2$1H);

var _createClass2$1G = createClass$2;

var _createClass3$1G = _interopRequireDefault$3R(_createClass2$1G);

var _possibleConstructorReturn2$1E = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1E = _interopRequireDefault$3R(_possibleConstructorReturn2$1E);

var _inherits2$1E = inherits$3;

var _inherits3$1E = _interopRequireDefault$3R(_inherits2$1E);

var _simpleAssign$1z = simpleAssign;

var _simpleAssign2$1z = _interopRequireDefault$3R(_simpleAssign$1z);

var _react$2T = react;

var _react2$2N = _interopRequireDefault$3R(_react$2T);

var _propTypes$1U = propTypes$5.exports;

var _propTypes2$1U = _interopRequireDefault$3R(_propTypes$1U);

var _transitions$H = transitions;

var _transitions2$H = _interopRequireDefault$3R(_transitions$H);

function _interopRequireDefault$3R(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1d(props, context, state) {
  var color = props.color,
      hoverColor = props.hoverColor;
  var baseTheme = context.muiTheme.baseTheme;

  var offColor = color || baseTheme.palette.textColor;
  var onColor = hoverColor || offColor;

  return {
    root: {
      color: state.hovered ? onColor : offColor,
      position: 'relative',
      fontSize: baseTheme.spacing.iconSize,
      display: 'inline-block',
      userSelect: 'none',
      transition: _transitions2$H.default.easeOut()
    }
  };
}

var FontIcon$3 = function (_Component) {
  (0, _inherits3$1E.default)(FontIcon, _Component);

  function FontIcon() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1H.default)(this, FontIcon);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1E.default)(this, (_ref = FontIcon.__proto__ || (0, _getPrototypeOf2$1E.default)(FontIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.handleMouseLeave = function (event) {
      // hover is needed only when a hoverColor is defined
      if (_this.props.hoverColor !== undefined) {
        _this.setState({ hovered: false });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseEnter = function (event) {
      // hover is needed only when a hoverColor is defined
      if (_this.props.hoverColor !== undefined) {
        _this.setState({ hovered: true });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1E.default)(_this, _ret);
  }

  (0, _createClass3$1G.default)(FontIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.hoverColor;
          _props.onMouseLeave;
          _props.onMouseEnter;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$1m.default)(_props, ['hoverColor', 'onMouseLeave', 'onMouseEnter', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1d(this.props, this.context, this.state);

      return _react2$2N.default.createElement('span', (0, _extends3$1n.default)({}, other, {
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        style: prepareStyles((0, _simpleAssign2$1z.default)(styles.root, style))
      }));
    }
  }]);
  return FontIcon;
}(_react$2T.Component);

FontIcon$3.muiName = 'FontIcon';
FontIcon$3.defaultProps = {
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {}
};
FontIcon$3.contextTypes = {
  muiTheme: _propTypes2$1U.default.object.isRequired
};
FontIcon$3.propTypes = {
  /**
   * This is the font color of the font icon. If not specified,
   * this component will default to muiTheme.palette.textColor.
   */
  color: _propTypes2$1U.default.string,
  /**
   * This is the icon color when the mouse hovers over the icon.
   */
  hoverColor: _propTypes2$1U.default.string,
  /** @ignore */
  onMouseEnter: _propTypes2$1U.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1U.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1U.default.object
} ;
FontIcon$4.default = FontIcon$3;

Object.defineProperty(FontIcon$5, "__esModule", {
  value: true
});
var _default$_ = FontIcon$5.default = undefined;

var _FontIcon$4 = FontIcon$4;

var _FontIcon2$4 = _interopRequireDefault$3Q(_FontIcon$4);

function _interopRequireDefault$3Q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$_ = FontIcon$5.default = _FontIcon2$4.default;

var childUtils$1 = {};

Object.defineProperty(childUtils$1, "__esModule", {
  value: true
});
childUtils$1.extendChildren = extendChildren$1;

var _react$2S = react;

var _react2$2M = _interopRequireDefault$3P(_react$2S);

function _interopRequireDefault$3P(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function extendChildren$1(children, extendedProps, extendedChildren) {
  return _react2$2M.default.Children.map(children, function (child) {
    if (!_react2$2M.default.isValidElement(child)) {
      return child;
    }

    var newProps = typeof extendedProps === 'function' ? extendedProps(child) : extendedProps;

    var newChildren = typeof extendedChildren === 'function' ? extendedChildren(child) : extendedChildren ? extendedChildren : child.props.children;

    return _react2$2M.default.cloneElement(child, newProps, newChildren);
  });
}

Object.defineProperty(FloatingActionButton$1, "__esModule", {
  value: true
});

var _extends2$1m = _extends$3;

var _extends3$1m = _interopRequireDefault$3O(_extends2$1m);

var _objectWithoutProperties2$1l = objectWithoutProperties$2;

var _objectWithoutProperties3$1l = _interopRequireDefault$3O(_objectWithoutProperties2$1l);

var _getPrototypeOf$1F = getPrototypeOf$1.exports;

var _getPrototypeOf2$1D = _interopRequireDefault$3O(_getPrototypeOf$1F);

var _classCallCheck2$1G = classCallCheck$3;

var _classCallCheck3$1G = _interopRequireDefault$3O(_classCallCheck2$1G);

var _createClass2$1F = createClass$2;

var _createClass3$1F = _interopRequireDefault$3O(_createClass2$1F);

var _possibleConstructorReturn2$1D = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1D = _interopRequireDefault$3O(_possibleConstructorReturn2$1D);

var _inherits2$1D = inherits$3;

var _inherits3$1D = _interopRequireDefault$3O(_inherits2$1D);

var _simpleAssign$1y = simpleAssign;

var _simpleAssign2$1y = _interopRequireDefault$3O(_simpleAssign$1y);

var _react$2R = react;

var _react2$2L = _interopRequireDefault$3O(_react$2R);

var _propTypes$1T = propTypes$5.exports;

var _propTypes2$1T = _interopRequireDefault$3O(_propTypes$1T);

var _transitions$G = transitions;

var _transitions2$G = _interopRequireDefault$3O(_transitions$G);

var _colorManipulator$6 = colorManipulator;

var _EnhancedButton$a = EnhancedButton$1;

var _EnhancedButton2$a = _interopRequireDefault$3O(_EnhancedButton$a);

var _FontIcon$3 = FontIcon$5;

var _FontIcon2$3 = _interopRequireDefault$3O(_FontIcon$3);

var _Paper$d = Paper$2;

var _Paper2$d = _interopRequireDefault$3O(_Paper$d);

var _childUtils$2 = childUtils$1;

var _warning$d = warning_1$1;

var _warning2$d = _interopRequireDefault$3O(_warning$d);

var _propTypes3$i = propTypes$3;

var _propTypes4$i = _interopRequireDefault$3O(_propTypes3$i);

function _interopRequireDefault$3O(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1c(props, context) {
  var floatingActionButton = context.muiTheme.floatingActionButton;


  var backgroundColor = props.backgroundColor || floatingActionButton.color;
  var iconColor = floatingActionButton.iconColor;

  if (props.disabled) {
    backgroundColor = props.disabledColor || floatingActionButton.disabledColor;
    iconColor = floatingActionButton.disabledTextColor;
  } else if (props.secondary) {
    backgroundColor = floatingActionButton.secondaryColor;
    iconColor = floatingActionButton.secondaryIconColor;
  }

  return {
    root: {
      transition: _transitions2$G.default.easeOut(),
      display: 'inline-block',
      backgroundColor: 'transparent'
    },
    container: {
      backgroundColor: backgroundColor,
      transition: _transitions2$G.default.easeOut(),
      height: floatingActionButton.buttonSize,
      width: floatingActionButton.buttonSize,
      padding: 0,
      overflow: 'hidden',
      borderRadius: '50%',
      textAlign: 'center',
      verticalAlign: 'bottom'
    },
    containerWhenMini: {
      height: floatingActionButton.miniSize,
      width: floatingActionButton.miniSize
    },
    overlay: {
      transition: _transitions2$G.default.easeOut(),
      top: 0
    },
    overlayWhenHovered: {
      backgroundColor: (0, _colorManipulator$6.fade)(iconColor, 0.4)
    },
    icon: {
      height: floatingActionButton.buttonSize,
      lineHeight: floatingActionButton.buttonSize + 'px',
      fill: iconColor,
      color: iconColor
    },
    iconWhenMini: {
      height: floatingActionButton.miniSize,
      lineHeight: floatingActionButton.miniSize + 'px'
    }
  };
}

var FloatingActionButton = function (_Component) {
  (0, _inherits3$1D.default)(FloatingActionButton, _Component);

  function FloatingActionButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1G.default)(this, FloatingActionButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1D.default)(this, (_ref = FloatingActionButton.__proto__ || (0, _getPrototypeOf2$1D.default)(FloatingActionButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      touch: false,
      zDepth: undefined
    }, _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.setState({ zDepth: _this.props.zDepth + 1 });
      }
      if (_this.props.onMouseDown) _this.props.onMouseDown(event);
    }, _this.handleMouseUp = function (event) {
      _this.setState({ zDepth: _this.props.zDepth });
      if (_this.props.onMouseUp) {
        _this.props.onMouseUp(event);
      }
    }, _this.handleMouseLeave = function (event) {
      if (!_this.refs.container.isKeyboardFocused()) {
        _this.setState({ zDepth: _this.props.zDepth, hovered: false });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseEnter = function (event) {
      if (!_this.refs.container.isKeyboardFocused() && !_this.state.touch) {
        _this.setState({ hovered: true });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _this.handleTouchStart = function (event) {
      _this.setState({
        touch: true,
        zDepth: _this.props.zDepth + 1
      });
      if (_this.props.onTouchStart) {
        _this.props.onTouchStart(event);
      }
    }, _this.handleTouchEnd = function (event) {
      _this.setState({
        touch: true,
        zDepth: _this.props.zDepth
      });
      if (_this.props.onTouchEnd) {
        _this.props.onTouchEnd(event);
      }
    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
      if (keyboardFocused && !_this.props.disabled) {
        _this.setState({ zDepth: _this.props.zDepth + 1 });
        _this.refs.overlay.style.backgroundColor = (0, _colorManipulator$6.fade)(getStyles$1c(_this.props, _this.context).icon.color, 0.4);
      } else if (!_this.state.hovered) {
        _this.setState({ zDepth: _this.props.zDepth });
        _this.refs.overlay.style.backgroundColor = 'transparent';
      }
    }, _temp), (0, _possibleConstructorReturn3$1D.default)(_this, _ret);
  }

  (0, _createClass3$1F.default)(FloatingActionButton, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        zDepth: this.props.disabled ? 0 : this.props.zDepth
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _warning2$d.default)(!this.props.iconClassName || !this.props.children, 'Material-UI: You have set both an iconClassName and a child icon. ' + 'It is recommended you use only one method when adding ' + 'icons to FloatingActionButtons.') ;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextState = {};

      if (nextProps.disabled !== this.props.disabled) {
        nextState.zDepth = nextProps.disabled ? 0 : this.props.zDepth;
      }
      if (nextProps.disabled) {
        nextState.hovered = false;
      }

      this.setState(nextState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.backgroundColor;
          var className = _props.className,
          childrenProp = _props.children,
          disabled = _props.disabled;
          _props.disabledColor;
          var mini = _props.mini;
          _props.secondary;
          var iconStyle = _props.iconStyle,
          iconClassName = _props.iconClassName;
          _props.zDepth;
          var other = (0, _objectWithoutProperties3$1l.default)(_props, ['backgroundColor', 'className', 'children', 'disabled', 'disabledColor', 'mini', 'secondary', 'iconStyle', 'iconClassName', 'zDepth']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1c(this.props, this.context);

      var iconElement = void 0;
      if (iconClassName) {
        iconElement = _react2$2L.default.createElement(_FontIcon2$3.default, {
          className: iconClassName,
          style: (0, _simpleAssign2$1y.default)({}, styles.icon, mini && styles.iconWhenMini, iconStyle)
        });
      }

      var children = void 0;

      if (childrenProp) {
        children = (0, _childUtils$2.extendChildren)(childrenProp, function (child) {
          return {
            style: (0, _simpleAssign2$1y.default)({}, styles.icon, mini && styles.iconWhenMini, iconStyle, child.props.style)
          };
        });
      }

      var buttonEventHandlers = disabled ? null : {
        onMouseDown: this.handleMouseDown,
        onMouseUp: this.handleMouseUp,
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        onTouchStart: this.handleTouchStart,
        onTouchEnd: this.handleTouchEnd,
        onKeyboardFocus: this.handleKeyboardFocus
      };

      return _react2$2L.default.createElement(
        _Paper2$d.default,
        {
          className: className,
          style: (0, _simpleAssign2$1y.default)(styles.root, this.props.style),
          zDepth: this.state.zDepth,
          circle: true
        },
        _react2$2L.default.createElement(
          _EnhancedButton2$a.default,
          (0, _extends3$1m.default)({}, other, buttonEventHandlers, {
            ref: 'container',
            disabled: disabled,
            style: (0, _simpleAssign2$1y.default)(styles.container, this.props.mini && styles.containerWhenMini, iconStyle),
            focusRippleColor: styles.icon.color,
            touchRippleColor: styles.icon.color
          }),
          _react2$2L.default.createElement(
            'div',
            {
              ref: 'overlay',
              style: prepareStyles((0, _simpleAssign2$1y.default)(styles.overlay, this.state.hovered && !this.props.disabled && styles.overlayWhenHovered))
            },
            iconElement,
            children
          )
        )
      );
    }
  }]);
  return FloatingActionButton;
}(_react$2R.Component);

FloatingActionButton.defaultProps = {
  disabled: false,
  mini: false,
  secondary: false,
  zDepth: 2
};
FloatingActionButton.contextTypes = {
  muiTheme: _propTypes2$1T.default.object.isRequired
};
FloatingActionButton.propTypes = {
  /**
   * This value will override the default background color for the button.
   * However it will not override the default disabled background color.
   * This has to be set separately using the disabledColor attribute.
   */
  backgroundColor: _propTypes2$1T.default.string,
  /**
   * This is what displayed inside the floating action button; for example, a SVG Icon.
   */
  children: _propTypes2$1T.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1T.default.string,
  /**
   * Disables the button if set to true.
   */
  disabled: _propTypes2$1T.default.bool,
  /**
   * This value will override the default background color for the button when it is disabled.
   */
  disabledColor: _propTypes2$1T.default.string,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$1T.default.string,
  /**
   * The icon within the FloatingActionButton is a FontIcon component.
   * This property is the classname of the icon to be displayed inside the button.
   * An alternative to adding an iconClassName would be to manually insert a
   * FontIcon component or custom SvgIcon component or as a child of FloatingActionButton.
   */
  iconClassName: _propTypes2$1T.default.string,
  /**
   * This is the equivalent to iconClassName except that it is used for
   * overriding the inline-styles of the FontIcon component.
   */
  iconStyle: _propTypes2$1T.default.object,
  /**
   * If true, the button will be a small floating action button.
   */
  mini: _propTypes2$1T.default.bool,
  /**
   * Callback function fired when the button is clicked.
   *
   * @param {object} event Click event targeting the button.
   */
  onClick: _propTypes2$1T.default.func,
  /** @ignore */
  onMouseDown: _propTypes2$1T.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1T.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1T.default.func,
  /** @ignore */
  onMouseUp: _propTypes2$1T.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$1T.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1T.default.func,
  /**
   * If true, the button will use the secondary button colors.
   */
  secondary: _propTypes2$1T.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1T.default.object,
  /**
   * The zDepth of the underlying `Paper` component.
   */
  zDepth: _propTypes4$i.default.zDepth
} ;
FloatingActionButton$1.default = FloatingActionButton;

Object.defineProperty(FloatingActionButton$2, "__esModule", {
  value: true
});
FloatingActionButton$2.default = undefined;

var _FloatingActionButton = FloatingActionButton$1;

var _FloatingActionButton2 = _interopRequireDefault$3N(_FloatingActionButton);

function _interopRequireDefault$3N(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

FloatingActionButton$2.default = _FloatingActionButton2.default;

({
    /**
     * If true, the button will use raised styling
     */
    raised: PropTypes$2.bool,

    /**
     * If true, the button will use floating action styling
     */
    fab: PropTypes$2.bool,

    /**
     *  If true, the button will be disabled
     */
    disabled: PropTypes$2.bool,

    /**
     * The theme color of the button
     */
    color: PropTypes$2.oneOf(['default', 'primary', 'accent']),

    /**
     * onClick callback, which is triggered when the button is clicked
     *
     * The onClick callback will receive one arguments: TouchTap event targeting the button
     *
     */
    onClick: PropTypes$2.func.isRequired,

    /**
     * Override the inline-styles of the root element
     */
    style: PropTypes$2.object,

    /**
     * If set, adds a class to the element in the format d2-ui-button-selector
     */
    selector: PropTypes$2.string
});

var Avatar$2 = {};

var Avatar$1 = {};

Object.defineProperty(Avatar$1, "__esModule", {
  value: true
});

var _extends2$1l = _extends$3;

var _extends3$1l = _interopRequireDefault$3M(_extends2$1l);

var _objectWithoutProperties2$1k = objectWithoutProperties$2;

var _objectWithoutProperties3$1k = _interopRequireDefault$3M(_objectWithoutProperties2$1k);

var _getPrototypeOf$1E = getPrototypeOf$1.exports;

var _getPrototypeOf2$1C = _interopRequireDefault$3M(_getPrototypeOf$1E);

var _classCallCheck2$1F = classCallCheck$3;

var _classCallCheck3$1F = _interopRequireDefault$3M(_classCallCheck2$1F);

var _createClass2$1E = createClass$2;

var _createClass3$1E = _interopRequireDefault$3M(_createClass2$1E);

var _possibleConstructorReturn2$1C = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1C = _interopRequireDefault$3M(_possibleConstructorReturn2$1C);

var _inherits2$1C = inherits$3;

var _inherits3$1C = _interopRequireDefault$3M(_inherits2$1C);

var _simpleAssign$1x = simpleAssign;

var _simpleAssign2$1x = _interopRequireDefault$3M(_simpleAssign$1x);

var _react$2Q = react;

var _react2$2K = _interopRequireDefault$3M(_react$2Q);

var _propTypes$1S = propTypes$5.exports;

var _propTypes2$1S = _interopRequireDefault$3M(_propTypes$1S);

function _interopRequireDefault$3M(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1b(props, context) {
  var backgroundColor = props.backgroundColor,
      color = props.color,
      size = props.size;
  var avatar = context.muiTheme.avatar;


  var styles = {
    root: {
      color: color || avatar.color,
      backgroundColor: backgroundColor || avatar.backgroundColor,
      userSelect: 'none',
      display: 'inline-flex',
      alignItems: 'center',
      justifyContent: 'center',
      fontSize: size / 2,
      borderRadius: '50%',
      height: size,
      width: size
    },
    icon: {
      color: color || avatar.color,
      width: size * 0.6,
      height: size * 0.6,
      fontSize: size * 0.6,
      margin: size * 0.2
    }
  };

  return styles;
}

var Avatar = function (_Component) {
  (0, _inherits3$1C.default)(Avatar, _Component);

  function Avatar() {
    (0, _classCallCheck3$1F.default)(this, Avatar);
    return (0, _possibleConstructorReturn3$1C.default)(this, (Avatar.__proto__ || (0, _getPrototypeOf2$1C.default)(Avatar)).apply(this, arguments));
  }

  (0, _createClass3$1E.default)(Avatar, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.backgroundColor;
          var icon = _props.icon,
          src = _props.src,
          style = _props.style,
          className = _props.className,
          other = (0, _objectWithoutProperties3$1k.default)(_props, ['backgroundColor', 'icon', 'src', 'style', 'className']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1b(this.props, this.context);

      if (src) {
        return _react2$2K.default.createElement('img', (0, _extends3$1l.default)({
          style: prepareStyles((0, _simpleAssign2$1x.default)(styles.root, style))
        }, other, {
          src: src,
          className: className
        }));
      } else {
        return _react2$2K.default.createElement(
          'div',
          (0, _extends3$1l.default)({}, other, {
            style: prepareStyles((0, _simpleAssign2$1x.default)(styles.root, style)),
            className: className
          }),
          icon && _react2$2K.default.cloneElement(icon, {
            color: styles.icon.color,
            style: (0, _simpleAssign2$1x.default)(styles.icon, icon.props.style)
          }),
          this.props.children
        );
      }
    }
  }]);
  return Avatar;
}(_react$2Q.Component);

Avatar.muiName = 'Avatar';
Avatar.defaultProps = {
  size: 40
};
Avatar.contextTypes = {
  muiTheme: _propTypes2$1S.default.object.isRequired
};
Avatar.propTypes = {
  /**
   * The backgroundColor of the avatar. Does not apply to image avatars.
   */
  backgroundColor: _propTypes2$1S.default.string,
  /**
   * Can be used, for instance, to render a letter inside the avatar.
   */
  children: _propTypes2$1S.default.node,
  /**
   * The css class name of the root `div` or `img` element.
   */
  className: _propTypes2$1S.default.string,
  /**
   * The icon or letter's color.
   */
  color: _propTypes2$1S.default.string,
  /**
   * This is the SvgIcon or FontIcon to be used inside the avatar.
   */
  icon: _propTypes2$1S.default.element,
  /**
   * This is the size of the avatar in pixels.
   */
  size: _propTypes2$1S.default.number,
  /**
   * If passed in, this component will render an img element. Otherwise, a div will be rendered.
   */
  src: _propTypes2$1S.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1S.default.object
} ;
Avatar$1.default = Avatar;

Object.defineProperty(Avatar$2, "__esModule", {
  value: true
});
Avatar$2.default = undefined;

var _Avatar$1 = Avatar$1;

var _Avatar2$1 = _interopRequireDefault$3L(_Avatar$1);

function _interopRequireDefault$3L(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Avatar$2.default = _Avatar2$1.default;

var star = {};

var pure$3 = {};

var shouldUpdate$3 = {};

var setDisplayName$4 = {};

var setStatic$4 = {};

setStatic$4.__esModule = true;
var setStatic$3 = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */
    return BaseComponent;
  };
};

setStatic$4.default = setStatic$3;

setDisplayName$4.__esModule = true;

var _setStatic$1 = setStatic$4;

var _setStatic2$1 = _interopRequireDefault$3K(_setStatic$1);

function _interopRequireDefault$3K(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var setDisplayName$3 = function setDisplayName(displayName) {
  return (0, _setStatic2$1.default)('displayName', displayName);
};

setDisplayName$4.default = setDisplayName$3;

var wrapDisplayName$4 = {};

var getDisplayName$4 = {};

getDisplayName$4.__esModule = true;
var getDisplayName$3 = function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  if (!Component) {
    return undefined;
  }

  return Component.displayName || Component.name || 'Component';
};

getDisplayName$4.default = getDisplayName$3;

wrapDisplayName$4.__esModule = true;

var _getDisplayName$1 = getDisplayName$4;

var _getDisplayName2$1 = _interopRequireDefault$3J(_getDisplayName$1);

function _interopRequireDefault$3J(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var wrapDisplayName$3 = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + '(' + (0, _getDisplayName2$1.default)(BaseComponent) + ')';
};

wrapDisplayName$4.default = wrapDisplayName$3;

shouldUpdate$3.__esModule = true;

var _react$2P = react;

var _setDisplayName$3 = setDisplayName$4;

var _setDisplayName2$3 = _interopRequireDefault$3I(_setDisplayName$3);

var _wrapDisplayName$3 = wrapDisplayName$4;

var _wrapDisplayName2$3 = _interopRequireDefault$3I(_wrapDisplayName$3);

function _interopRequireDefault$3I(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck$3(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$3(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$3(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var shouldUpdate$2 = function shouldUpdate(test) {
  return function (BaseComponent) {
    var factory = (0, _react$2P.createFactory)(BaseComponent);

    var ShouldUpdate = function (_Component) {
      _inherits$3(ShouldUpdate, _Component);

      function ShouldUpdate() {
        _classCallCheck$3(this, ShouldUpdate);

        return _possibleConstructorReturn$3(this, _Component.apply(this, arguments));
      }

      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        return test(this.props, nextProps);
      };

      ShouldUpdate.prototype.render = function render() {
        return factory(this.props);
      };

      return ShouldUpdate;
    }(_react$2P.Component);

    {
      return (0, _setDisplayName2$3.default)((0, _wrapDisplayName2$3.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
    }
  };
};

shouldUpdate$3.default = shouldUpdate$2;

pure$3.__esModule = true;

var _shouldUpdate$1 = shouldUpdate$3;

var _shouldUpdate2$1 = _interopRequireDefault$3H(_shouldUpdate$1);

var _shallowEqual$9 = shallowEqual;

var _shallowEqual2$9 = _interopRequireDefault$3H(_shallowEqual$9);

var _setDisplayName$2 = setDisplayName$4;

var _setDisplayName2$2 = _interopRequireDefault$3H(_setDisplayName$2);

var _wrapDisplayName$2 = wrapDisplayName$4;

var _wrapDisplayName2$2 = _interopRequireDefault$3H(_wrapDisplayName$2);

function _interopRequireDefault$3H(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pure$2 = function pure(BaseComponent) {
  var hoc = (0, _shouldUpdate2$1.default)(function (props, nextProps) {
    return !(0, _shallowEqual2$9.default)(props, nextProps);
  });

  {
    return (0, _setDisplayName2$2.default)((0, _wrapDisplayName2$2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
  }
};

pure$3.default = pure$2;

var SvgIcon$6 = {};

var SvgIcon$5 = {};

Object.defineProperty(SvgIcon$5, "__esModule", {
  value: true
});

var _extends2$1k = _extends$3;

var _extends3$1k = _interopRequireDefault$3G(_extends2$1k);

var _objectWithoutProperties2$1j = objectWithoutProperties$2;

var _objectWithoutProperties3$1j = _interopRequireDefault$3G(_objectWithoutProperties2$1j);

var _getPrototypeOf$1D = getPrototypeOf$1.exports;

var _getPrototypeOf2$1B = _interopRequireDefault$3G(_getPrototypeOf$1D);

var _classCallCheck2$1E = classCallCheck$3;

var _classCallCheck3$1E = _interopRequireDefault$3G(_classCallCheck2$1E);

var _createClass2$1D = createClass$2;

var _createClass3$1D = _interopRequireDefault$3G(_createClass2$1D);

var _possibleConstructorReturn2$1B = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1B = _interopRequireDefault$3G(_possibleConstructorReturn2$1B);

var _inherits2$1B = inherits$3;

var _inherits3$1B = _interopRequireDefault$3G(_inherits2$1B);

var _simpleAssign$1w = simpleAssign;

var _simpleAssign2$1w = _interopRequireDefault$3G(_simpleAssign$1w);

var _react$2O = react;

var _react2$2J = _interopRequireDefault$3G(_react$2O);

var _propTypes$1R = propTypes$5.exports;

var _propTypes2$1R = _interopRequireDefault$3G(_propTypes$1R);

var _transitions$F = transitions;

var _transitions2$F = _interopRequireDefault$3G(_transitions$F);

function _interopRequireDefault$3G(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SvgIcon$4 = function (_Component) {
  (0, _inherits3$1B.default)(SvgIcon, _Component);

  function SvgIcon() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1E.default)(this, SvgIcon);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1B.default)(this, (_ref = SvgIcon.__proto__ || (0, _getPrototypeOf2$1B.default)(SvgIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleMouseEnter = function (event) {
      _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _temp), (0, _possibleConstructorReturn3$1B.default)(_this, _ret);
  }

  (0, _createClass3$1D.default)(SvgIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          color = _props.color,
          hoverColor = _props.hoverColor;
          _props.onMouseEnter;
          _props.onMouseLeave;
          var style = _props.style,
          viewBox = _props.viewBox,
          other = (0, _objectWithoutProperties3$1j.default)(_props, ['children', 'color', 'hoverColor', 'onMouseEnter', 'onMouseLeave', 'style', 'viewBox']);
      var _context$muiTheme = this.context.muiTheme,
          svgIcon = _context$muiTheme.svgIcon,
          prepareStyles = _context$muiTheme.prepareStyles;


      var offColor = color ? color : 'currentColor';
      var onColor = hoverColor ? hoverColor : offColor;

      var mergedStyles = (0, _simpleAssign2$1w.default)({
        display: 'inline-block',
        color: svgIcon.color,
        fill: this.state.hovered ? onColor : offColor,
        height: 24,
        width: 24,
        userSelect: 'none',
        transition: _transitions2$F.default.easeOut()
      }, style);

      return _react2$2J.default.createElement(
        'svg',
        (0, _extends3$1k.default)({}, other, {
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave,
          style: prepareStyles(mergedStyles),
          viewBox: viewBox
        }),
        children
      );
    }
  }]);
  return SvgIcon;
}(_react$2O.Component);

SvgIcon$4.muiName = 'SvgIcon';
SvgIcon$4.defaultProps = {
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  viewBox: '0 0 24 24'
};
SvgIcon$4.contextTypes = {
  muiTheme: _propTypes2$1R.default.object.isRequired
};
SvgIcon$4.propTypes = {
  /**
   * Elements passed into the SVG Icon.
   */
  children: _propTypes2$1R.default.node,
  /**
   * This is the fill color of the svg icon.
   * If not specified, this component will default
   * to muiTheme.palette.textColor.
   */
  color: _propTypes2$1R.default.string,
  /**
   * This is the icon color when the mouse hovers over the icon.
   */
  hoverColor: _propTypes2$1R.default.string,
  /** @ignore */
  onMouseEnter: _propTypes2$1R.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1R.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1R.default.object,
  /**
   * Allows you to redefine what the coordinates
   * without units mean inside an svg element. For example,
   * if the SVG element is 500 (width) by 200 (height), and you
   * pass viewBox="0 0 50 20", this means that the coordinates inside
   * the svg will go from the top left corner (0,0) to bottom right (50,20)
   * and each unit will be worth 10px.
   */
  viewBox: _propTypes2$1R.default.string
} ;
SvgIcon$5.default = SvgIcon$4;

Object.defineProperty(SvgIcon$6, "__esModule", {
  value: true
});
var _default$Z = SvgIcon$6.default = undefined;

var _SvgIcon$Y = SvgIcon$5;

var _SvgIcon2$Y = _interopRequireDefault$3F(_SvgIcon$Y);

function _interopRequireDefault$3F(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$Z = SvgIcon$6.default = _SvgIcon2$Y.default;

Object.defineProperty(star, "__esModule", {
  value: true
});

var _react$2N = react;

var _react2$2I = _interopRequireDefault$3E(_react$2N);

var _pure$W = pure$3;

var _pure2$W = _interopRequireDefault$3E(_pure$W);

var _SvgIcon$X = SvgIcon$6;

var _SvgIcon2$X = _interopRequireDefault$3E(_SvgIcon$X);

function _interopRequireDefault$3E(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleStar = function ToggleStar(props) {
  return _react2$2I.default.createElement(
    _SvgIcon2$X.default,
    props,
    _react2$2I.default.createElement('path', { d: 'M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z' })
  );
};
ToggleStar = (0, _pure2$W.default)(ToggleStar);
ToggleStar.displayName = 'ToggleStar';
ToggleStar.muiName = 'SvgIcon';

var _default$Y = star.default = ToggleStar;

var Chip$2 = {};

var Chip$1 = {};

var cancel = {};

Object.defineProperty(cancel, "__esModule", {
  value: true
});

var _react$2M = react;

var _react2$2H = _interopRequireDefault$3D(_react$2M);

var _pure$V = pure$3;

var _pure2$V = _interopRequireDefault$3D(_pure$V);

var _SvgIcon$W = SvgIcon$6;

var _SvgIcon2$W = _interopRequireDefault$3D(_SvgIcon$W);

function _interopRequireDefault$3D(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationCancel = function NavigationCancel(props) {
  return _react2$2H.default.createElement(
    _SvgIcon2$W.default,
    props,
    _react2$2H.default.createElement('path', { d: 'M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z' })
  );
};
NavigationCancel = (0, _pure2$V.default)(NavigationCancel);
NavigationCancel.displayName = 'NavigationCancel';
NavigationCancel.muiName = 'SvgIcon';

var _default$X = cancel.default = NavigationCancel;

Object.defineProperty(Chip$1, "__esModule", {
  value: true
});

var _extends2$1j = _extends$3;

var _extends3$1j = _interopRequireDefault$3C(_extends2$1j);

var _objectWithoutProperties2$1i = objectWithoutProperties$2;

var _objectWithoutProperties3$1i = _interopRequireDefault$3C(_objectWithoutProperties2$1i);

var _getPrototypeOf$1C = getPrototypeOf$1.exports;

var _getPrototypeOf2$1A = _interopRequireDefault$3C(_getPrototypeOf$1C);

var _classCallCheck2$1D = classCallCheck$3;

var _classCallCheck3$1D = _interopRequireDefault$3C(_classCallCheck2$1D);

var _createClass2$1C = createClass$2;

var _createClass3$1C = _interopRequireDefault$3C(_createClass2$1C);

var _possibleConstructorReturn2$1A = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1A = _interopRequireDefault$3C(_possibleConstructorReturn2$1A);

var _inherits2$1A = inherits$3;

var _inherits3$1A = _interopRequireDefault$3C(_inherits2$1A);

var _simpleAssign$1v = simpleAssign;

var _simpleAssign2$1v = _interopRequireDefault$3C(_simpleAssign$1v);

var _react$2L = react;

var _react2$2G = _interopRequireDefault$3C(_react$2L);

var _propTypes$1Q = propTypes$5.exports;

var _propTypes2$1Q = _interopRequireDefault$3C(_propTypes$1Q);

var _keycode$c = keycode.exports;

var _keycode2$c = _interopRequireDefault$3C(_keycode$c);

var _colorManipulator$5 = colorManipulator;

var _EnhancedButton$9 = EnhancedButton$1;

var _EnhancedButton2$9 = _interopRequireDefault$3C(_EnhancedButton$9);

var _cancel = cancel;

var _cancel2 = _interopRequireDefault$3C(_cancel);

function _interopRequireDefault$3C(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1a(props, context, state) {
  var chip = context.muiTheme.chip;


  var backgroundColor = props.backgroundColor || chip.backgroundColor;
  var focusColor = (0, _colorManipulator$5.emphasize)(backgroundColor, 0.08);
  var pressedColor = (0, _colorManipulator$5.emphasize)(backgroundColor, 0.12);

  return {
    avatar: {
      marginRight: -4
    },
    deleteIcon: {
      color: state.deleteHovered ? (0, _colorManipulator$5.fade)(chip.deleteIconColor, 0.4) : chip.deleteIconColor,
      cursor: 'pointer',
      margin: '4px 4px 0px -8px'
    },
    label: {
      color: props.labelColor || chip.textColor,
      fontSize: chip.fontSize,
      fontWeight: chip.fontWeight,
      lineHeight: '32px',
      paddingLeft: 12,
      paddingRight: 12,
      userSelect: 'none',
      whiteSpace: 'nowrap'
    },
    root: {
      backgroundColor: state.clicked ? pressedColor : state.focused || state.hovered ? focusColor : backgroundColor,
      borderRadius: 16,
      boxShadow: state.clicked ? chip.shadow : null,
      cursor: props.onClick ? 'pointer' : 'default',
      display: 'flex',
      whiteSpace: 'nowrap',
      width: 'fit-content'
    }
  };
}

var Chip = function (_Component) {
  (0, _inherits3$1A.default)(Chip, _Component);

  function Chip() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1D.default)(this, Chip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1A.default)(this, (_ref = Chip.__proto__ || (0, _getPrototypeOf2$1A.default)(Chip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      clicked: false,
      deleteHovered: false,
      focused: false,
      hovered: false
    }, _this.handleBlur = function (event) {
      _this.setState({ clicked: false, focused: false });
      _this.props.onBlur(event);
    }, _this.handleFocus = function (event) {
      if (_this.props.onClick || _this.props.onRequestDelete) {
        _this.setState({ focused: true });
      }
      _this.props.onFocus(event);
    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
      if (keyboardFocused) {
        _this.handleFocus();
        _this.props.onFocus(event);
      } else {
        _this.handleBlur();
      }

      _this.props.onKeyboardFocus(event, keyboardFocused);
    }, _this.handleKeyDown = function (event) {
      if ((0, _keycode2$c.default)(event) === 'backspace') {
        event.preventDefault();
        if (_this.props.onRequestDelete) {
          _this.props.onRequestDelete(event);
        }
      }
      _this.props.onKeyDown(event);
    }, _this.handleMouseDown = function (event) {
      // Only listen to left clicks
      if (event.button === 0) {
        event.stopPropagation();
        if (_this.props.onClick) {
          _this.setState({ clicked: true });
        }
      }
      _this.props.onMouseDown(event);
    }, _this.handleMouseEnter = function (event) {
      if (_this.props.onClick) {
        _this.setState({ hovered: true });
      }
      _this.props.onMouseEnter(event);
    }, _this.handleMouseEnterDeleteIcon = function () {
      _this.setState({ deleteHovered: true });
    }, _this.handleMouseLeave = function (event) {
      _this.setState({
        clicked: false,
        hovered: false
      });
      _this.props.onMouseLeave(event);
    }, _this.handleMouseLeaveDeleteIcon = function () {
      _this.setState({ deleteHovered: false });
    }, _this.handleMouseUp = function (event) {
      _this.setState({ clicked: false });
      _this.props.onMouseUp(event);
    }, _this.handleClickDeleteIcon = function (event) {
      // Stop the event from bubbling up to the `Chip`
      event.stopPropagation();
      _this.props.onRequestDelete(event);
    }, _this.handleTouchEnd = function (event) {
      _this.setState({ clicked: false });
      _this.props.onTouchEnd(event);
    }, _this.handleTouchStart = function (event) {
      event.stopPropagation();
      if (_this.props.onClick) {
        _this.setState({ clicked: true });
      }
      _this.props.onTouchStart(event);
    }, _temp), (0, _possibleConstructorReturn3$1A.default)(_this, _ret);
  }

  (0, _createClass3$1C.default)(Chip, [{
    key: 'render',
    value: function render() {
      var buttonEventHandlers = {
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onKeyDown: this.handleKeyDown,
        onMouseDown: this.handleMouseDown,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        onMouseUp: this.handleMouseUp,
        onTouchEnd: this.handleTouchEnd,
        onTouchStart: this.handleTouchStart,
        onKeyboardFocus: this.handleKeyboardFocus
      };

      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1a(this.props, this.context, this.state);

      var _props = this.props,
          childrenProp = _props.children,
          containerElement = _props.containerElement,
          style = _props.style,
          className = _props.className,
          deleteIconStyle = _props.deleteIconStyle,
          labelStyle = _props.labelStyle;
          _props.labelColor;
          _props.backgroundColor;
          _props.onRequestDelete;
          var other = (0, _objectWithoutProperties3$1i.default)(_props, ['children', 'containerElement', 'style', 'className', 'deleteIconStyle', 'labelStyle', 'labelColor', 'backgroundColor', 'onRequestDelete']);


      var deletable = this.props.onRequestDelete;
      var avatar = null;

      var deleteIcon = deletable ? _react2$2G.default.createElement(_cancel2.default, {
        color: styles.deleteIcon.color,
        style: (0, _simpleAssign2$1v.default)(styles.deleteIcon, deleteIconStyle),
        onClick: this.handleClickDeleteIcon,
        onMouseEnter: this.handleMouseEnterDeleteIcon,
        onMouseLeave: this.handleMouseLeaveDeleteIcon
      }) : null;

      var children = childrenProp;
      var childCount = _react2$2G.default.Children.count(children);

      // If the first child is an avatar, extract it and style it
      if (childCount > 1) {
        children = _react2$2G.default.Children.toArray(children);

        if (_react2$2G.default.isValidElement(children[0]) && children[0].type.muiName === 'Avatar') {
          avatar = children.shift();

          avatar = _react2$2G.default.cloneElement(avatar, {
            style: (0, _simpleAssign2$1v.default)(styles.avatar, avatar.props.style),
            size: 32
          });
        }
      }

      return _react2$2G.default.createElement(
        _EnhancedButton2$9.default,
        (0, _extends3$1j.default)({}, other, buttonEventHandlers, {
          className: className,
          containerElement: containerElement,
          disableTouchRipple: true,
          disableFocusRipple: true,
          style: (0, _simpleAssign2$1v.default)(styles.root, style)
        }),
        avatar,
        _react2$2G.default.createElement(
          'span',
          { style: prepareStyles((0, _simpleAssign2$1v.default)(styles.label, labelStyle)) },
          children
        ),
        deleteIcon
      );
    }
  }]);
  return Chip;
}(_react$2L.Component);

Chip.defaultProps = {
  containerElement: 'div', // Firefox doesn't support nested buttons
  onBlur: function onBlur() {},
  onFocus: function onFocus() {},
  onKeyDown: function onKeyDown() {},
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseDown: function onMouseDown() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onMouseUp: function onMouseUp() {},
  onTouchEnd: function onTouchEnd() {},
  onTouchStart: function onTouchStart() {}
};
Chip.contextTypes = { muiTheme: _propTypes2$1Q.default.object.isRequired };
Chip.propTypes = {
  /**
   * Override the background color of the chip.
   */
  backgroundColor: _propTypes2$1Q.default.string,
  /**
   * Used to render elements inside the Chip.
   */
  children: _propTypes2$1Q.default.node,
  /**
   * CSS `className` of the root element.
   */
  className: _propTypes2$1Q.default.node,
  /**
   * The element to use as the container for the Chip. Either a string to
   * use a DOM element or a ReactElement.
   */
  containerElement: _propTypes2$1Q.default.oneOfType([_propTypes2$1Q.default.string, _propTypes2$1Q.default.element]),
  /**
   * Override the inline-styles of the delete icon.
   */
  deleteIconStyle: _propTypes2$1Q.default.object,
  /**
   * Override the label color.
   */
  labelColor: _propTypes2$1Q.default.string,
  /**
   * Override the inline-styles of the label.
   */
  labelStyle: _propTypes2$1Q.default.object,
  /** @ignore */
  onBlur: _propTypes2$1Q.default.func,
  /**
   * Callback function fired when the `Chip` element is clicked.
   *
   * @param {object} event Click event targeting the element.
   */
  onClick: _propTypes2$1Q.default.func,
  /** @ignore */
  onFocus: _propTypes2$1Q.default.func,
  /** @ignore */
  onKeyDown: _propTypes2$1Q.default.func,
  /** @ignore */
  onKeyboardFocus: _propTypes2$1Q.default.func,
  /** @ignore */
  onMouseDown: _propTypes2$1Q.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1Q.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1Q.default.func,
  /** @ignore */
  onMouseUp: _propTypes2$1Q.default.func,
  /**
   * Callback function fired when the delete icon is clicked. If set, the delete icon will be shown.
   * @param {object} event `click` event targeting the element.
   */
  onRequestDelete: _propTypes2$1Q.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$1Q.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1Q.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1Q.default.object
} ;
Chip$1.default = Chip;

Object.defineProperty(Chip$2, "__esModule", {
  value: true
});
Chip$2.default = undefined;

var _Chip = Chip$1;

var _Chip2 = _interopRequireDefault$3B(_Chip);

function _interopRequireDefault$3B(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Chip$2.default = _Chip2.default;

({
    star: react.createElement(_default$Y, null)
});

({
    /**
     * If set, adds an avatar to the chip
     */
    avatar: PropTypes$2.oneOf(['star']),

    /**
     * The color theme of the chip
     */
    color: PropTypes$2.oneOf(['default', 'primary']),

    /**
     *  If true, the button will be disabled
     */
    disabled: PropTypes$2.bool,

    /**
     *  If set, adds text content to the chip
     */
    label: PropTypes$2.string,

    /**
     * onClick callback function, triggered when the button is clicked
     */
    onClick: PropTypes$2.func,

    /**
     * onRequestDelete callback function, adds a close button to the chip and executes this function when the button is clicked
     */
    onRequestDelete: PropTypes$2.func,

    /**
     * If set, adds a class to the element on the format d2-ui-chip-selector
     */
    selector: PropTypes$2.string
});

var CircularProgress$3 = {};

Object.defineProperty(CircularProgress$3, "__esModule", {
  value: true
});

var _extends2$1i = _extends$3;

var _extends3$1i = _interopRequireDefault$3A(_extends2$1i);

var _objectWithoutProperties2$1h = objectWithoutProperties$2;

var _objectWithoutProperties3$1h = _interopRequireDefault$3A(_objectWithoutProperties2$1h);

var _getPrototypeOf$1B = getPrototypeOf$1.exports;

var _getPrototypeOf2$1z = _interopRequireDefault$3A(_getPrototypeOf$1B);

var _classCallCheck2$1C = classCallCheck$3;

var _classCallCheck3$1C = _interopRequireDefault$3A(_classCallCheck2$1C);

var _createClass2$1B = createClass$2;

var _createClass3$1B = _interopRequireDefault$3A(_createClass2$1B);

var _possibleConstructorReturn2$1z = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1z = _interopRequireDefault$3A(_possibleConstructorReturn2$1z);

var _inherits2$1z = inherits$3;

var _inherits3$1z = _interopRequireDefault$3A(_inherits2$1z);

var _simpleAssign$1u = simpleAssign;

var _simpleAssign2$1u = _interopRequireDefault$3A(_simpleAssign$1u);

var _react$2K = react;

var _react2$2F = _interopRequireDefault$3A(_react$2K);

var _propTypes$1P = propTypes$5.exports;

var _propTypes2$1P = _interopRequireDefault$3A(_propTypes$1P);

var _autoPrefix$3 = autoPrefix;

var _autoPrefix2$3 = _interopRequireDefault$3A(_autoPrefix$3);

var _transitions$E = transitions;

var _transitions2$E = _interopRequireDefault$3A(_transitions$E);

function _interopRequireDefault$3A(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getRelativeValue$1(value, min, max) {
  var clampedValue = Math.min(Math.max(min, value), max);
  return clampedValue / (max - min);
}

function getArcLength(fraction, props) {
  return fraction * Math.PI * (props.size - props.thickness);
}

function getStyles$19(props, context) {
  var max = props.max,
      min = props.min,
      size = props.size,
      value = props.value;
  var palette = context.muiTheme.baseTheme.palette;


  var styles = {
    root: {
      position: 'relative',
      display: 'inline-block',
      width: size,
      height: size
    },
    wrapper: {
      width: size,
      height: size,
      display: 'inline-block',
      transition: _transitions2$E.default.create('transform', '20s', null, 'linear'),
      transitionTimingFunction: 'linear'
    },
    svg: {
      width: size,
      height: size,
      position: 'relative'
    },
    path: {
      stroke: props.color || palette.primary1Color,
      strokeLinecap: 'round',
      transition: _transitions2$E.default.create('all', '1.5s', null, 'ease-in-out')
    }
  };

  if (props.mode === 'determinate') {
    var relVal = getRelativeValue$1(value, min, max);
    styles.path.transition = _transitions2$E.default.create('all', '0.3s', null, 'linear');
    styles.path.strokeDasharray = getArcLength(relVal, props) + ', ' + getArcLength(1, props);
  }

  return styles;
}

var CircularProgress$2 = function (_Component) {
  (0, _inherits3$1z.default)(CircularProgress, _Component);

  function CircularProgress() {
    (0, _classCallCheck3$1C.default)(this, CircularProgress);
    return (0, _possibleConstructorReturn3$1z.default)(this, (CircularProgress.__proto__ || (0, _getPrototypeOf2$1z.default)(CircularProgress)).apply(this, arguments));
  }

  (0, _createClass3$1B.default)(CircularProgress, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.scalePath(this.refs.path);
      this.rotateWrapper(this.refs.wrapper);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.scalePathTimer);
      clearTimeout(this.rotateWrapperTimer);
    }
  }, {
    key: 'scalePath',
    value: function scalePath(path) {
      var _this2 = this;

      var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (this.props.mode !== 'indeterminate') return;

      step %= 3;

      if (step === 0) {
        path.style.strokeDasharray = getArcLength(0, this.props) + ', ' + getArcLength(1, this.props);
        path.style.strokeDashoffset = 0;
        path.style.transitionDuration = '0ms';
      } else if (step === 1) {
        path.style.strokeDasharray = getArcLength(0.7, this.props) + ', ' + getArcLength(1, this.props);
        path.style.strokeDashoffset = getArcLength(-0.3, this.props);
        path.style.transitionDuration = '750ms';
      } else {
        path.style.strokeDasharray = getArcLength(0.7, this.props) + ', ' + getArcLength(1, this.props);
        path.style.strokeDashoffset = getArcLength(-1, this.props);
        path.style.transitionDuration = '850ms';
      }

      this.scalePathTimer = setTimeout(function () {
        return _this2.scalePath(path, step + 1);
      }, step ? 750 : 250);
    }
  }, {
    key: 'rotateWrapper',
    value: function rotateWrapper(wrapper) {
      var _this3 = this;

      if (this.props.mode !== 'indeterminate') return;

      _autoPrefix2$3.default.set(wrapper.style, 'transform', 'rotate(0deg)');
      _autoPrefix2$3.default.set(wrapper.style, 'transitionDuration', '0ms');

      setTimeout(function () {
        _autoPrefix2$3.default.set(wrapper.style, 'transform', 'rotate(1800deg)');
        _autoPrefix2$3.default.set(wrapper.style, 'transitionDuration', '10s');
        _autoPrefix2$3.default.set(wrapper.style, 'transitionTimingFunction', 'linear');
      }, 50);

      this.rotateWrapperTimer = setTimeout(function () {
        return _this3.rotateWrapper(wrapper);
      }, 10050);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          innerStyle = _props.innerStyle,
          size = _props.size,
          thickness = _props.thickness,
          other = (0, _objectWithoutProperties3$1h.default)(_props, ['style', 'innerStyle', 'size', 'thickness']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$19(this.props, this.context);

      return _react2$2F.default.createElement(
        'div',
        (0, _extends3$1i.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1u.default)(styles.root, style)) }),
        _react2$2F.default.createElement(
          'div',
          { ref: 'wrapper', style: prepareStyles((0, _simpleAssign2$1u.default)(styles.wrapper, innerStyle)) },
          _react2$2F.default.createElement(
            'svg',
            {
              viewBox: '0 0 ' + size + ' ' + size,
              style: prepareStyles(styles.svg)
            },
            _react2$2F.default.createElement('circle', {
              ref: 'path',
              style: prepareStyles(styles.path),
              cx: size / 2,
              cy: size / 2,
              r: (size - thickness) / 2,
              fill: 'none',
              strokeWidth: thickness,
              strokeMiterlimit: '20'
            })
          )
        )
      );
    }
  }]);
  return CircularProgress;
}(_react$2K.Component);

CircularProgress$2.defaultProps = {
  mode: 'indeterminate',
  value: 0,
  min: 0,
  max: 100,
  size: 40,
  thickness: 3.5
};
CircularProgress$2.contextTypes = {
  muiTheme: _propTypes2$1P.default.object.isRequired
};
CircularProgress$2.propTypes = {
  /**
   * Override the progress's color.
   */
  color: _propTypes2$1P.default.string,
  /**
   * Style for inner wrapper div.
   */
  innerStyle: _propTypes2$1P.default.object,
  /**
   * The max value of progress, only works in determinate mode.
   */
  max: _propTypes2$1P.default.number,
  /**
   * The min value of progress, only works in determinate mode.
   */
  min: _propTypes2$1P.default.number,
  /**
   * The mode of show your progress, indeterminate
   * for when there is no value for progress.
   */
  mode: _propTypes2$1P.default.oneOf(['determinate', 'indeterminate']),
  /**
   * The diameter of the progress in pixels.
   */
  size: _propTypes2$1P.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1P.default.object,
  /**
   * Stroke width in pixels.
   */
  thickness: _propTypes2$1P.default.number,
  /**
   * The value of progress, only works in determinate mode.
   */
  value: _propTypes2$1P.default.number
} ;
var _default$W = CircularProgress$3.default = CircularProgress$2;

function getSizes(large, small) {
    // Size calculations for the MUI Circular Progress (https://github.com/callemall/material-ui/releases/tag/v0.16.0-rc1)
    var defaultMaterialUISize = 59.5; // Represents the pre 0.16 values size value 1
    var defaultMaterialUIMargin = 5.25; // Represents the pre 0.16 values size value 1

    if (large) {
        return {
            size: defaultMaterialUISize * 2,
            margin: defaultMaterialUIMargin * 2
        };
    }

    if (small) {
        return {
            size: defaultMaterialUISize / 2,
            margin: defaultMaterialUIMargin / 2
        };
    }

    return {
        size: defaultMaterialUISize,
        margin: defaultMaterialUIMargin
    };
}

function CircularProgress$1(_ref) {
    var large = _ref.large,
        small = _ref.small,
        style = _ref.style;

    var sizes = getSizes(large, small);

    return react.createElement(_default$W, {
        mode: 'indeterminate',
        size: sizes.size,
        style: _Object$assign({ margin: sizes.margin }, style)
    });
}

CircularProgress$1.propTypes = {
    large: PropTypes$2.bool,
    small: PropTypes$2.bool,
    style: PropTypes$2.object
};

CircularProgress$1.defaultProps = {
    large: false,
    small: false,
    style: {}
};

var isInteger$1 = {exports: {}};

// 20.1.2.3 Number.isInteger(number)
var isObject$9 = _isObject;
var floor = Math.floor;
var _isInteger = function isInteger(it) {
  return !isObject$9(it) && isFinite(it) && floor(it) === it;
};

// 20.1.2.3 Number.isInteger(number)
var $export = _export;

$export($export.S, 'Number', { isInteger: _isInteger });

var isInteger = _core.exports.Number.isInteger;

(function (module) {
module.exports = { "default": isInteger, __esModule: true };
}(isInteger$1));

var _Number$isInteger = /*@__PURE__*/getDefaultExportFromCjs(isInteger$1.exports);

var add = {};

Object.defineProperty(add, "__esModule", {
  value: true
});

var _react$2J = react;

var _react2$2E = _interopRequireDefault$3z(_react$2J);

var _pure$U = pure$3;

var _pure2$U = _interopRequireDefault$3z(_pure$U);

var _SvgIcon$V = SvgIcon$6;

var _SvgIcon2$V = _interopRequireDefault$3z(_SvgIcon$V);

function _interopRequireDefault$3z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentAdd = function ContentAdd(props) {
  return _react2$2E.default.createElement(
    _SvgIcon2$V.default,
    props,
    _react2$2E.default.createElement('path', { d: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' })
  );
};
ContentAdd = (0, _pure2$U.default)(ContentAdd);
ContentAdd.displayName = 'ContentAdd';
ContentAdd.muiName = 'SvgIcon';

var _default$V = add.default = ContentAdd;

var apps = {};

Object.defineProperty(apps, "__esModule", {
  value: true
});

var _react$2I = react;

var _react2$2D = _interopRequireDefault$3y(_react$2I);

var _pure$T = pure$3;

var _pure2$T = _interopRequireDefault$3y(_pure$T);

var _SvgIcon$U = SvgIcon$6;

var _SvgIcon2$U = _interopRequireDefault$3y(_SvgIcon$U);

function _interopRequireDefault$3y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationApps = function NavigationApps(props) {
  return _react2$2D.default.createElement(
    _SvgIcon2$U.default,
    props,
    _react2$2D.default.createElement('path', { d: 'M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z' })
  );
};
NavigationApps = (0, _pure2$T.default)(NavigationApps);
NavigationApps.displayName = 'NavigationApps';
NavigationApps.muiName = 'SvgIcon';

var _default$U = apps.default = NavigationApps;

var arrowDownward = {};

Object.defineProperty(arrowDownward, "__esModule", {
  value: true
});

var _react$2H = react;

var _react2$2C = _interopRequireDefault$3x(_react$2H);

var _pure$S = pure$3;

var _pure2$S = _interopRequireDefault$3x(_pure$S);

var _SvgIcon$T = SvgIcon$6;

var _SvgIcon2$T = _interopRequireDefault$3x(_SvgIcon$T);

function _interopRequireDefault$3x(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationArrowDownward = function NavigationArrowDownward(props) {
  return _react2$2C.default.createElement(
    _SvgIcon2$T.default,
    props,
    _react2$2C.default.createElement('path', { d: 'M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z' })
  );
};
NavigationArrowDownward = (0, _pure2$S.default)(NavigationArrowDownward);
NavigationArrowDownward.displayName = 'NavigationArrowDownward';
NavigationArrowDownward.muiName = 'SvgIcon';

var _default$T = arrowDownward.default = NavigationArrowDownward;

var navigationArrowDropRight = {};

Object.defineProperty(navigationArrowDropRight, "__esModule", {
  value: true
});

var _react$2G = react;

var _react2$2B = _interopRequireDefault$3w(_react$2G);

var _pure$R = pure$3;

var _pure2$R = _interopRequireDefault$3w(_pure$R);

var _SvgIcon$S = SvgIcon$6;

var _SvgIcon2$S = _interopRequireDefault$3w(_SvgIcon$S);

function _interopRequireDefault$3w(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationArrowDropRight = function NavigationArrowDropRight(props) {
  return _react2$2B.default.createElement(
    _SvgIcon2$S.default,
    props,
    _react2$2B.default.createElement('path', { d: 'M9.5,7l5,5l-5,5V7z' })
  );
};

NavigationArrowDropRight = (0, _pure2$R.default)(NavigationArrowDropRight);
NavigationArrowDropRight.displayName = 'NavigationArrowDropRight';
NavigationArrowDropRight.muiName = 'SvgIcon';

var _default$S = navigationArrowDropRight.default = NavigationArrowDropRight;

var arrowUpward = {};

Object.defineProperty(arrowUpward, "__esModule", {
  value: true
});

var _react$2F = react;

var _react2$2A = _interopRequireDefault$3v(_react$2F);

var _pure$Q = pure$3;

var _pure2$Q = _interopRequireDefault$3v(_pure$Q);

var _SvgIcon$R = SvgIcon$6;

var _SvgIcon2$R = _interopRequireDefault$3v(_SvgIcon$R);

function _interopRequireDefault$3v(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationArrowUpward = function NavigationArrowUpward(props) {
  return _react2$2A.default.createElement(
    _SvgIcon2$R.default,
    props,
    _react2$2A.default.createElement('path', { d: 'M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z' })
  );
};
NavigationArrowUpward = (0, _pure2$Q.default)(NavigationArrowUpward);
NavigationArrowUpward.displayName = 'NavigationArrowUpward';
NavigationArrowUpward.muiName = 'SvgIcon';

var _default$R = arrowUpward.default = NavigationArrowUpward;

var business = {};

Object.defineProperty(business, "__esModule", {
  value: true
});

var _react$2E = react;

var _react2$2z = _interopRequireDefault$3u(_react$2E);

var _pure$P = pure$3;

var _pure2$P = _interopRequireDefault$3u(_pure$P);

var _SvgIcon$Q = SvgIcon$6;

var _SvgIcon2$Q = _interopRequireDefault$3u(_SvgIcon$Q);

function _interopRequireDefault$3u(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CommunicationBusiness = function CommunicationBusiness(props) {
  return _react2$2z.default.createElement(
    _SvgIcon2$Q.default,
    props,
    _react2$2z.default.createElement('path', { d: 'M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z' })
  );
};
CommunicationBusiness = (0, _pure2$P.default)(CommunicationBusiness);
CommunicationBusiness.displayName = 'CommunicationBusiness';
CommunicationBusiness.muiName = 'SvgIcon';

var _default$Q = business.default = CommunicationBusiness;

var chevronLeft = {};

Object.defineProperty(chevronLeft, "__esModule", {
  value: true
});

var _react$2D = react;

var _react2$2y = _interopRequireDefault$3t(_react$2D);

var _pure$O = pure$3;

var _pure2$O = _interopRequireDefault$3t(_pure$O);

var _SvgIcon$P = SvgIcon$6;

var _SvgIcon2$P = _interopRequireDefault$3t(_SvgIcon$P);

function _interopRequireDefault$3t(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationChevronLeft = function NavigationChevronLeft(props) {
  return _react2$2y.default.createElement(
    _SvgIcon2$P.default,
    props,
    _react2$2y.default.createElement('path', { d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z' })
  );
};
NavigationChevronLeft = (0, _pure2$O.default)(NavigationChevronLeft);
NavigationChevronLeft.displayName = 'NavigationChevronLeft';
NavigationChevronLeft.muiName = 'SvgIcon';

var _default$P = chevronLeft.default = NavigationChevronLeft;

var chevronRight = {};

Object.defineProperty(chevronRight, "__esModule", {
  value: true
});

var _react$2C = react;

var _react2$2x = _interopRequireDefault$3s(_react$2C);

var _pure$N = pure$3;

var _pure2$N = _interopRequireDefault$3s(_pure$N);

var _SvgIcon$O = SvgIcon$6;

var _SvgIcon2$O = _interopRequireDefault$3s(_SvgIcon$O);

function _interopRequireDefault$3s(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationChevronRight = function NavigationChevronRight(props) {
  return _react2$2x.default.createElement(
    _SvgIcon2$O.default,
    props,
    _react2$2x.default.createElement('path', { d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z' })
  );
};
NavigationChevronRight = (0, _pure2$N.default)(NavigationChevronRight);
NavigationChevronRight.displayName = 'NavigationChevronRight';
NavigationChevronRight.muiName = 'SvgIcon';

var _default$O = chevronRight.default = NavigationChevronRight;

var clear = {};

Object.defineProperty(clear, "__esModule", {
  value: true
});

var _react$2B = react;

var _react2$2w = _interopRequireDefault$3r(_react$2B);

var _pure$M = pure$3;

var _pure2$M = _interopRequireDefault$3r(_pure$M);

var _SvgIcon$N = SvgIcon$6;

var _SvgIcon2$N = _interopRequireDefault$3r(_SvgIcon$N);

function _interopRequireDefault$3r(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentClear = function ContentClear(props) {
  return _react2$2w.default.createElement(
    _SvgIcon2$N.default,
    props,
    _react2$2w.default.createElement('path', { d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z' })
  );
};
ContentClear = (0, _pure2$M.default)(ContentClear);
ContentClear.displayName = 'ContentClear';
ContentClear.muiName = 'SvgIcon';

var _default$N = clear.default = ContentClear;

var close = {};

Object.defineProperty(close, "__esModule", {
  value: true
});

var _react$2A = react;

var _react2$2v = _interopRequireDefault$3q(_react$2A);

var _pure$L = pure$3;

var _pure2$L = _interopRequireDefault$3q(_pure$L);

var _SvgIcon$M = SvgIcon$6;

var _SvgIcon2$M = _interopRequireDefault$3q(_SvgIcon$M);

function _interopRequireDefault$3q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationClose = function NavigationClose(props) {
  return _react2$2v.default.createElement(
    _SvgIcon2$M.default,
    props,
    _react2$2v.default.createElement('path', { d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z' })
  );
};
NavigationClose = (0, _pure2$L.default)(NavigationClose);
NavigationClose.displayName = 'NavigationClose';
NavigationClose.muiName = 'SvgIcon';

var _default$M = close.default = NavigationClose;

var create = {};

Object.defineProperty(create, "__esModule", {
  value: true
});

var _react$2z = react;

var _react2$2u = _interopRequireDefault$3p(_react$2z);

var _pure$K = pure$3;

var _pure2$K = _interopRequireDefault$3p(_pure$K);

var _SvgIcon$L = SvgIcon$6;

var _SvgIcon2$L = _interopRequireDefault$3p(_SvgIcon$L);

function _interopRequireDefault$3p(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentCreate = function ContentCreate(props) {
  return _react2$2u.default.createElement(
    _SvgIcon2$L.default,
    props,
    _react2$2u.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })
  );
};
ContentCreate = (0, _pure2$K.default)(ContentCreate);
ContentCreate.displayName = 'ContentCreate';
ContentCreate.muiName = 'SvgIcon';

var _default$L = create.default = ContentCreate;

var cropFree = {};

Object.defineProperty(cropFree, "__esModule", {
  value: true
});

var _react$2y = react;

var _react2$2t = _interopRequireDefault$3o(_react$2y);

var _pure$J = pure$3;

var _pure2$J = _interopRequireDefault$3o(_pure$J);

var _SvgIcon$K = SvgIcon$6;

var _SvgIcon2$K = _interopRequireDefault$3o(_SvgIcon$K);

function _interopRequireDefault$3o(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ImageCropFree = function ImageCropFree(props) {
  return _react2$2t.default.createElement(
    _SvgIcon2$K.default,
    props,
    _react2$2t.default.createElement('path', { d: 'M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z' })
  );
};
ImageCropFree = (0, _pure2$J.default)(ImageCropFree);
ImageCropFree.displayName = 'ImageCropFree';
ImageCropFree.muiName = 'SvgIcon';

var _default$K = cropFree.default = ImageCropFree;

var _delete = {};

Object.defineProperty(_delete, "__esModule", {
  value: true
});

var _react$2x = react;

var _react2$2s = _interopRequireDefault$3n(_react$2x);

var _pure$I = pure$3;

var _pure2$I = _interopRequireDefault$3n(_pure$I);

var _SvgIcon$J = SvgIcon$6;

var _SvgIcon2$J = _interopRequireDefault$3n(_SvgIcon$J);

function _interopRequireDefault$3n(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionDelete = function ActionDelete(props) {
  return _react2$2s.default.createElement(
    _SvgIcon2$J.default,
    props,
    _react2$2s.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' })
  );
};
ActionDelete = (0, _pure2$I.default)(ActionDelete);
ActionDelete.displayName = 'ActionDelete';
ActionDelete.muiName = 'SvgIcon';

var _default$J = _delete.default = ActionDelete;

var description = {};

Object.defineProperty(description, "__esModule", {
  value: true
});

var _react$2w = react;

var _react2$2r = _interopRequireDefault$3m(_react$2w);

var _pure$H = pure$3;

var _pure2$H = _interopRequireDefault$3m(_pure$H);

var _SvgIcon$I = SvgIcon$6;

var _SvgIcon2$I = _interopRequireDefault$3m(_SvgIcon$I);

function _interopRequireDefault$3m(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionDescription = function ActionDescription(props) {
  return _react2$2r.default.createElement(
    _SvgIcon2$I.default,
    props,
    _react2$2r.default.createElement('path', { d: 'M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z' })
  );
};
ActionDescription = (0, _pure2$H.default)(ActionDescription);
ActionDescription.displayName = 'ActionDescription';
ActionDescription.muiName = 'SvgIcon';

var _default$I = description.default = ActionDescription;

var done = {};

Object.defineProperty(done, "__esModule", {
  value: true
});

var _react$2v = react;

var _react2$2q = _interopRequireDefault$3l(_react$2v);

var _pure$G = pure$3;

var _pure2$G = _interopRequireDefault$3l(_pure$G);

var _SvgIcon$H = SvgIcon$6;

var _SvgIcon2$H = _interopRequireDefault$3l(_SvgIcon$H);

function _interopRequireDefault$3l(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionDone = function ActionDone(props) {
  return _react2$2q.default.createElement(
    _SvgIcon2$H.default,
    props,
    _react2$2q.default.createElement('path', { d: 'M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z' })
  );
};
ActionDone = (0, _pure2$G.default)(ActionDone);
ActionDone.displayName = 'ActionDone';
ActionDone.muiName = 'SvgIcon';

var _default$H = done.default = ActionDone;

var dragHandle = {};

Object.defineProperty(dragHandle, "__esModule", {
  value: true
});

var _react$2u = react;

var _react2$2p = _interopRequireDefault$3k(_react$2u);

var _pure$F = pure$3;

var _pure2$F = _interopRequireDefault$3k(_pure$F);

var _SvgIcon$G = SvgIcon$6;

var _SvgIcon2$G = _interopRequireDefault$3k(_SvgIcon$G);

function _interopRequireDefault$3k(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorDragHandle = function EditorDragHandle(props) {
  return _react2$2p.default.createElement(
    _SvgIcon2$G.default,
    props,
    _react2$2p.default.createElement('path', { d: 'M20 9H4v2h16V9zM4 15h16v-2H4v2z' })
  );
};
EditorDragHandle = (0, _pure2$F.default)(EditorDragHandle);
EditorDragHandle.displayName = 'EditorDragHandle';
EditorDragHandle.muiName = 'SvgIcon';

var _default$G = dragHandle.default = EditorDragHandle;

var email = {};

Object.defineProperty(email, "__esModule", {
  value: true
});

var _react$2t = react;

var _react2$2o = _interopRequireDefault$3j(_react$2t);

var _pure$E = pure$3;

var _pure2$E = _interopRequireDefault$3j(_pure$E);

var _SvgIcon$F = SvgIcon$6;

var _SvgIcon2$F = _interopRequireDefault$3j(_SvgIcon$F);

function _interopRequireDefault$3j(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CommunicationEmail = function CommunicationEmail(props) {
  return _react2$2o.default.createElement(
    _SvgIcon2$F.default,
    props,
    _react2$2o.default.createElement('path', { d: 'M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z' })
  );
};
CommunicationEmail = (0, _pure2$E.default)(CommunicationEmail);
CommunicationEmail.displayName = 'CommunicationEmail';
CommunicationEmail.muiName = 'SvgIcon';

var _default$F = email.default = CommunicationEmail;

var extension = {};

Object.defineProperty(extension, "__esModule", {
  value: true
});

var _react$2s = react;

var _react2$2n = _interopRequireDefault$3i(_react$2s);

var _pure$D = pure$3;

var _pure2$D = _interopRequireDefault$3i(_pure$D);

var _SvgIcon$E = SvgIcon$6;

var _SvgIcon2$E = _interopRequireDefault$3i(_SvgIcon$E);

function _interopRequireDefault$3i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionExtension = function ActionExtension(props) {
  return _react2$2n.default.createElement(
    _SvgIcon2$E.default,
    props,
    _react2$2n.default.createElement('path', { d: 'M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z' })
  );
};
ActionExtension = (0, _pure2$D.default)(ActionExtension);
ActionExtension.displayName = 'ActionExtension';
ActionExtension.muiName = 'SvgIcon';

var _default$E = extension.default = ActionExtension;

var fontDownload = {};

Object.defineProperty(fontDownload, "__esModule", {
  value: true
});

var _react$2r = react;

var _react2$2m = _interopRequireDefault$3h(_react$2r);

var _pure$C = pure$3;

var _pure2$C = _interopRequireDefault$3h(_pure$C);

var _SvgIcon$D = SvgIcon$6;

var _SvgIcon2$D = _interopRequireDefault$3h(_SvgIcon$D);

function _interopRequireDefault$3h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentFontDownload = function ContentFontDownload(props) {
  return _react2$2m.default.createElement(
    _SvgIcon2$D.default,
    props,
    _react2$2m.default.createElement('path', { d: 'M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z' })
  );
};
ContentFontDownload = (0, _pure2$C.default)(ContentFontDownload);
ContentFontDownload.displayName = 'ContentFontDownload';
ContentFontDownload.muiName = 'SvgIcon';

var _default$D = fontDownload.default = ContentFontDownload;

var group = {};

Object.defineProperty(group, "__esModule", {
  value: true
});

var _react$2q = react;

var _react2$2l = _interopRequireDefault$3g(_react$2q);

var _pure$B = pure$3;

var _pure2$B = _interopRequireDefault$3g(_pure$B);

var _SvgIcon$C = SvgIcon$6;

var _SvgIcon2$C = _interopRequireDefault$3g(_SvgIcon$C);

function _interopRequireDefault$3g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SocialGroup = function SocialGroup(props) {
  return _react2$2l.default.createElement(
    _SvgIcon2$C.default,
    props,
    _react2$2l.default.createElement('path', { d: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z' })
  );
};
SocialGroup = (0, _pure2$B.default)(SocialGroup);
SocialGroup.displayName = 'SocialGroup';
SocialGroup.muiName = 'SvgIcon';

var _default$C = group.default = SocialGroup;

var gridOn = {};

Object.defineProperty(gridOn, "__esModule", {
  value: true
});

var _react$2p = react;

var _react2$2k = _interopRequireDefault$3f(_react$2p);

var _pure$A = pure$3;

var _pure2$A = _interopRequireDefault$3f(_pure$A);

var _SvgIcon$B = SvgIcon$6;

var _SvgIcon2$B = _interopRequireDefault$3f(_SvgIcon$B);

function _interopRequireDefault$3f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ImageGridOn = function ImageGridOn(props) {
  return _react2$2k.default.createElement(
    _SvgIcon2$B.default,
    props,
    _react2$2k.default.createElement('path', { d: 'M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z' })
  );
};
ImageGridOn = (0, _pure2$A.default)(ImageGridOn);
ImageGridOn.displayName = 'ImageGridOn';
ImageGridOn.muiName = 'SvgIcon';

var _default$B = gridOn.default = ImageGridOn;

var info = {};

Object.defineProperty(info, "__esModule", {
  value: true
});

var _react$2o = react;

var _react2$2j = _interopRequireDefault$3e(_react$2o);

var _pure$z = pure$3;

var _pure2$z = _interopRequireDefault$3e(_pure$z);

var _SvgIcon$A = SvgIcon$6;

var _SvgIcon2$A = _interopRequireDefault$3e(_SvgIcon$A);

function _interopRequireDefault$3e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionInfo = function ActionInfo(props) {
  return _react2$2j.default.createElement(
    _SvgIcon2$A.default,
    props,
    _react2$2j.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z' })
  );
};
ActionInfo = (0, _pure2$z.default)(ActionInfo);
ActionInfo.displayName = 'ActionInfo';
ActionInfo.muiName = 'SvgIcon';

var _default$A = info.default = ActionInfo;

var infoOutline = {};

Object.defineProperty(infoOutline, "__esModule", {
  value: true
});

var _react$2n = react;

var _react2$2i = _interopRequireDefault$3d(_react$2n);

var _pure$y = pure$3;

var _pure2$y = _interopRequireDefault$3d(_pure$y);

var _SvgIcon$z = SvgIcon$6;

var _SvgIcon2$z = _interopRequireDefault$3d(_SvgIcon$z);

function _interopRequireDefault$3d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionInfoOutline = function ActionInfoOutline(props) {
  return _react2$2i.default.createElement(
    _SvgIcon2$z.default,
    props,
    _react2$2i.default.createElement('path', { d: 'M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z' })
  );
};
ActionInfoOutline = (0, _pure2$y.default)(ActionInfoOutline);
ActionInfoOutline.displayName = 'ActionInfoOutline';
ActionInfoOutline.muiName = 'SvgIcon';

var _default$z = infoOutline.default = ActionInfoOutline;

var insertChart = {};

Object.defineProperty(insertChart, "__esModule", {
  value: true
});

var _react$2m = react;

var _react2$2h = _interopRequireDefault$3c(_react$2m);

var _pure$x = pure$3;

var _pure2$x = _interopRequireDefault$3c(_pure$x);

var _SvgIcon$y = SvgIcon$6;

var _SvgIcon2$y = _interopRequireDefault$3c(_SvgIcon$y);

function _interopRequireDefault$3c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorInsertChart = function EditorInsertChart(props) {
  return _react2$2h.default.createElement(
    _SvgIcon2$y.default,
    props,
    _react2$2h.default.createElement('path', { d: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z' })
  );
};
EditorInsertChart = (0, _pure2$x.default)(EditorInsertChart);
EditorInsertChart.displayName = 'EditorInsertChart';
EditorInsertChart.muiName = 'SvgIcon';

var _default$y = insertChart.default = EditorInsertChart;

var list = {};

Object.defineProperty(list, "__esModule", {
  value: true
});

var _react$2l = react;

var _react2$2g = _interopRequireDefault$3b(_react$2l);

var _pure$w = pure$3;

var _pure2$w = _interopRequireDefault$3b(_pure$w);

var _SvgIcon$x = SvgIcon$6;

var _SvgIcon2$x = _interopRequireDefault$3b(_SvgIcon$x);

function _interopRequireDefault$3b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionList = function ActionList(props) {
  return _react2$2g.default.createElement(
    _SvgIcon2$x.default,
    props,
    _react2$2g.default.createElement('path', { d: 'M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z' })
  );
};
ActionList = (0, _pure2$w.default)(ActionList);
ActionList.displayName = 'ActionList';
ActionList.muiName = 'SvgIcon';

var _default$x = list.default = ActionList;

var launch = {};

Object.defineProperty(launch, "__esModule", {
  value: true
});

var _react$2k = react;

var _react2$2f = _interopRequireDefault$3a(_react$2k);

var _pure$v = pure$3;

var _pure2$v = _interopRequireDefault$3a(_pure$v);

var _SvgIcon$w = SvgIcon$6;

var _SvgIcon2$w = _interopRequireDefault$3a(_SvgIcon$w);

function _interopRequireDefault$3a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionLaunch = function ActionLaunch(props) {
  return _react2$2f.default.createElement(
    _SvgIcon2$w.default,
    props,
    _react2$2f.default.createElement('path', { d: 'M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z' })
  );
};
ActionLaunch = (0, _pure2$v.default)(ActionLaunch);
ActionLaunch.displayName = 'ActionLaunch';
ActionLaunch.muiName = 'SvgIcon';

var _default$w = launch.default = ActionLaunch;

var message = {};

Object.defineProperty(message, "__esModule", {
  value: true
});

var _react$2j = react;

var _react2$2e = _interopRequireDefault$39(_react$2j);

var _pure$u = pure$3;

var _pure2$u = _interopRequireDefault$39(_pure$u);

var _SvgIcon$v = SvgIcon$6;

var _SvgIcon2$v = _interopRequireDefault$39(_SvgIcon$v);

function _interopRequireDefault$39(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CommunicationMessage = function CommunicationMessage(props) {
  return _react2$2e.default.createElement(
    _SvgIcon2$v.default,
    props,
    _react2$2e.default.createElement('path', { d: 'M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z' })
  );
};
CommunicationMessage = (0, _pure2$u.default)(CommunicationMessage);
CommunicationMessage.displayName = 'CommunicationMessage';
CommunicationMessage.muiName = 'SvgIcon';

var _default$v = message.default = CommunicationMessage;

var moreVert = {};

Object.defineProperty(moreVert, "__esModule", {
  value: true
});

var _react$2i = react;

var _react2$2d = _interopRequireDefault$38(_react$2i);

var _pure$t = pure$3;

var _pure2$t = _interopRequireDefault$38(_pure$t);

var _SvgIcon$u = SvgIcon$6;

var _SvgIcon2$u = _interopRequireDefault$38(_SvgIcon$u);

function _interopRequireDefault$38(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationMoreVert = function NavigationMoreVert(props) {
  return _react2$2d.default.createElement(
    _SvgIcon2$u.default,
    props,
    _react2$2d.default.createElement('path', { d: 'M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z' })
  );
};
NavigationMoreVert = (0, _pure2$t.default)(NavigationMoreVert);
NavigationMoreVert.displayName = 'NavigationMoreVert';
NavigationMoreVert.muiName = 'SvgIcon';

var _default$u = moreVert.default = NavigationMoreVert;

var notInterested = {};

Object.defineProperty(notInterested, "__esModule", {
  value: true
});

var _react$2h = react;

var _react2$2c = _interopRequireDefault$37(_react$2h);

var _pure$s = pure$3;

var _pure2$s = _interopRequireDefault$37(_pure$s);

var _SvgIcon$t = SvgIcon$6;

var _SvgIcon2$t = _interopRequireDefault$37(_SvgIcon$t);

function _interopRequireDefault$37(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AvNotInterested = function AvNotInterested(props) {
  return _react2$2c.default.createElement(
    _SvgIcon2$t.default,
    props,
    _react2$2c.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z' })
  );
};
AvNotInterested = (0, _pure2$s.default)(AvNotInterested);
AvNotInterested.displayName = 'AvNotInterested';
AvNotInterested.muiName = 'SvgIcon';

var _default$t = notInterested.default = AvNotInterested;

var person = {};

Object.defineProperty(person, "__esModule", {
  value: true
});

var _react$2g = react;

var _react2$2b = _interopRequireDefault$36(_react$2g);

var _pure$r = pure$3;

var _pure2$r = _interopRequireDefault$36(_pure$r);

var _SvgIcon$s = SvgIcon$6;

var _SvgIcon2$s = _interopRequireDefault$36(_SvgIcon$s);

function _interopRequireDefault$36(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SocialPerson = function SocialPerson(props) {
  return _react2$2b.default.createElement(
    _SvgIcon2$s.default,
    props,
    _react2$2b.default.createElement('path', { d: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z' })
  );
};
SocialPerson = (0, _pure2$r.default)(SocialPerson);
SocialPerson.displayName = 'SocialPerson';
SocialPerson.muiName = 'SvgIcon';

var _default$s = person.default = SocialPerson;

var _public = {};

Object.defineProperty(_public, "__esModule", {
  value: true
});

var _react$2f = react;

var _react2$2a = _interopRequireDefault$35(_react$2f);

var _pure$q = pure$3;

var _pure2$q = _interopRequireDefault$35(_pure$q);

var _SvgIcon$r = SvgIcon$6;

var _SvgIcon2$r = _interopRequireDefault$35(_SvgIcon$r);

function _interopRequireDefault$35(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SocialPublic = function SocialPublic(props) {
  return _react2$2a.default.createElement(
    _SvgIcon2$r.default,
    props,
    _react2$2a.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z' })
  );
};
SocialPublic = (0, _pure2$q.default)(SocialPublic);
SocialPublic.displayName = 'SocialPublic';
SocialPublic.muiName = 'SvgIcon';

var _default$r = _public.default = SocialPublic;

var reply = {};

Object.defineProperty(reply, "__esModule", {
  value: true
});

var _react$2e = react;

var _react2$29 = _interopRequireDefault$34(_react$2e);

var _pure$p = pure$3;

var _pure2$p = _interopRequireDefault$34(_pure$p);

var _SvgIcon$q = SvgIcon$6;

var _SvgIcon2$q = _interopRequireDefault$34(_SvgIcon$q);

function _interopRequireDefault$34(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContentReply = function ContentReply(props) {
  return _react2$29.default.createElement(
    _SvgIcon2$q.default,
    props,
    _react2$29.default.createElement('path', { d: 'M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z' })
  );
};
ContentReply = (0, _pure2$p.default)(ContentReply);
ContentReply.displayName = 'ContentReply';
ContentReply.muiName = 'SvgIcon';

var _default$q = reply.default = ContentReply;

var room = {};

Object.defineProperty(room, "__esModule", {
  value: true
});

var _react$2d = react;

var _react2$28 = _interopRequireDefault$33(_react$2d);

var _pure$o = pure$3;

var _pure2$o = _interopRequireDefault$33(_pure$o);

var _SvgIcon$p = SvgIcon$6;

var _SvgIcon2$p = _interopRequireDefault$33(_SvgIcon$p);

function _interopRequireDefault$33(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionRoom = function ActionRoom(props) {
  return _react2$28.default.createElement(
    _SvgIcon2$p.default,
    props,
    _react2$28.default.createElement('path', { d: 'M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z' })
  );
};
ActionRoom = (0, _pure2$o.default)(ActionRoom);
ActionRoom.displayName = 'ActionRoom';
ActionRoom.muiName = 'SvgIcon';

var _default$p = room.default = ActionRoom;

var search = {};

Object.defineProperty(search, "__esModule", {
  value: true
});

var _react$2c = react;

var _react2$27 = _interopRequireDefault$32(_react$2c);

var _pure$n = pure$3;

var _pure2$n = _interopRequireDefault$32(_pure$n);

var _SvgIcon$o = SvgIcon$6;

var _SvgIcon2$o = _interopRequireDefault$32(_SvgIcon$o);

function _interopRequireDefault$32(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionSearch = function ActionSearch(props) {
  return _react2$27.default.createElement(
    _SvgIcon2$o.default,
    props,
    _react2$27.default.createElement('path', { d: 'M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' })
  );
};
ActionSearch = (0, _pure2$n.default)(ActionSearch);
ActionSearch.displayName = 'ActionSearch';
ActionSearch.muiName = 'SvgIcon';

var _default$o = search.default = ActionSearch;

var showChart = {};

Object.defineProperty(showChart, "__esModule", {
  value: true
});

var _react$2b = react;

var _react2$26 = _interopRequireDefault$31(_react$2b);

var _pure$m = pure$3;

var _pure2$m = _interopRequireDefault$31(_pure$m);

var _SvgIcon$n = SvgIcon$6;

var _SvgIcon2$n = _interopRequireDefault$31(_SvgIcon$n);

function _interopRequireDefault$31(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorShowChart = function EditorShowChart(props) {
  return _react2$26.default.createElement(
    _SvgIcon2$n.default,
    props,
    _react2$26.default.createElement('path', { d: 'M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z' })
  );
};
EditorShowChart = (0, _pure2$m.default)(EditorShowChart);
EditorShowChart.displayName = 'EditorShowChart';
EditorShowChart.muiName = 'SvgIcon';

var _default$n = showChart.default = EditorShowChart;

var starBorder = {};

Object.defineProperty(starBorder, "__esModule", {
  value: true
});

var _react$2a = react;

var _react2$25 = _interopRequireDefault$30(_react$2a);

var _pure$l = pure$3;

var _pure2$l = _interopRequireDefault$30(_pure$l);

var _SvgIcon$m = SvgIcon$6;

var _SvgIcon2$m = _interopRequireDefault$30(_SvgIcon$m);

function _interopRequireDefault$30(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleStarBorder = function ToggleStarBorder(props) {
  return _react2$25.default.createElement(
    _SvgIcon2$m.default,
    props,
    _react2$25.default.createElement('path', { d: 'M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z' })
  );
};
ToggleStarBorder = (0, _pure2$l.default)(ToggleStarBorder);
ToggleStarBorder.displayName = 'ToggleStarBorder';
ToggleStarBorder.muiName = 'SvgIcon';

var _default$m = starBorder.default = ToggleStarBorder;

var thumbUp = {};

Object.defineProperty(thumbUp, "__esModule", {
  value: true
});

var _react$29 = react;

var _react2$24 = _interopRequireDefault$2$(_react$29);

var _pure$k = pure$3;

var _pure2$k = _interopRequireDefault$2$(_pure$k);

var _SvgIcon$l = SvgIcon$6;

var _SvgIcon2$l = _interopRequireDefault$2$(_SvgIcon$l);

function _interopRequireDefault$2$(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionThumbUp = function ActionThumbUp(props) {
  return _react2$24.default.createElement(
    _SvgIcon2$l.default,
    props,
    _react2$24.default.createElement('path', { d: 'M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z' })
  );
};
ActionThumbUp = (0, _pure2$k.default)(ActionThumbUp);
ActionThumbUp.displayName = 'ActionThumbUp';
ActionThumbUp.muiName = 'SvgIcon';

var _default$l = thumbUp.default = ActionThumbUp;

var viewList = {};

Object.defineProperty(viewList, "__esModule", {
  value: true
});

var _react$28 = react;

var _react2$23 = _interopRequireDefault$2_(_react$28);

var _pure$j = pure$3;

var _pure2$j = _interopRequireDefault$2_(_pure$j);

var _SvgIcon$k = SvgIcon$6;

var _SvgIcon2$k = _interopRequireDefault$2_(_SvgIcon$k);

function _interopRequireDefault$2_(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionViewList = function ActionViewList(props) {
  return _react2$23.default.createElement(
    _SvgIcon2$k.default,
    props,
    _react2$23.default.createElement('path', { d: 'M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z' })
  );
};
ActionViewList = (0, _pure2$j.default)(ActionViewList);
ActionViewList.displayName = 'ActionViewList';
ActionViewList.muiName = 'SvgIcon';

var _default$k = viewList.default = ActionViewList;

var visibility = {};

Object.defineProperty(visibility, "__esModule", {
  value: true
});

var _react$27 = react;

var _react2$22 = _interopRequireDefault$2Z(_react$27);

var _pure$i = pure$3;

var _pure2$i = _interopRequireDefault$2Z(_pure$i);

var _SvgIcon$j = SvgIcon$6;

var _SvgIcon2$j = _interopRequireDefault$2Z(_SvgIcon$j);

function _interopRequireDefault$2Z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionVisibility = function ActionVisibility(props) {
  return _react2$22.default.createElement(
    _SvgIcon2$j.default,
    props,
    _react2$22.default.createElement('path', { d: 'M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z' })
  );
};
ActionVisibility = (0, _pure2$i.default)(ActionVisibility);
ActionVisibility.displayName = 'ActionVisibility';
ActionVisibility.muiName = 'SvgIcon';

var _default$j = visibility.default = ActionVisibility;

var visibilityOff = {};

Object.defineProperty(visibilityOff, "__esModule", {
  value: true
});

var _react$26 = react;

var _react2$21 = _interopRequireDefault$2Y(_react$26);

var _pure$h = pure$3;

var _pure2$h = _interopRequireDefault$2Y(_pure$h);

var _SvgIcon$i = SvgIcon$6;

var _SvgIcon2$i = _interopRequireDefault$2Y(_SvgIcon$i);

function _interopRequireDefault$2Y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionVisibilityOff = function ActionVisibilityOff(props) {
  return _react2$21.default.createElement(
    _SvgIcon2$i.default,
    props,
    _react2$21.default.createElement('path', { d: 'M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z' })
  );
};
ActionVisibilityOff = (0, _pure2$h.default)(ActionVisibilityOff);
ActionVisibilityOff.displayName = 'ActionVisibilityOff';
ActionVisibilityOff.muiName = 'SvgIcon';

var _default$i = visibilityOff.default = ActionVisibilityOff;

var sentimentDissatisfied = {};

Object.defineProperty(sentimentDissatisfied, "__esModule", {
  value: true
});

var _react$25 = react;

var _react2$20 = _interopRequireDefault$2X(_react$25);

var _pure$g = pure$3;

var _pure2$g = _interopRequireDefault$2X(_pure$g);

var _SvgIcon$h = SvgIcon$6;

var _SvgIcon2$h = _interopRequireDefault$2X(_SvgIcon$h);

function _interopRequireDefault$2X(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SocialSentimentDissatisfied = function SocialSentimentDissatisfied(props) {
  return _react2$20.default.createElement(
    _SvgIcon2$h.default,
    props,
    _react2$20.default.createElement('circle', { cx: '15.5', cy: '9.5', r: '1.5' }),
    _react2$20.default.createElement('circle', { cx: '8.5', cy: '9.5', r: '1.5' }),
    _react2$20.default.createElement('path', { d: 'M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z' })
  );
};
SocialSentimentDissatisfied = (0, _pure2$g.default)(SocialSentimentDissatisfied);
SocialSentimentDissatisfied.displayName = 'SocialSentimentDissatisfied';
SocialSentimentDissatisfied.muiName = 'SvgIcon';

var _default$h = sentimentDissatisfied.default = SocialSentimentDissatisfied;

var colors = {};

var darkBlack_1;
var white_1;
var grey600_1;
var grey400_1;
var grey200_1;
var grey100_1;
var orangeA200_1;
var orange500_1;
var blue700_1;
var blue100_1;

Object.defineProperty(colors, "__esModule", {
  value: true
});
colors.red50 = '#ffebee';
colors.red100 = '#ffcdd2';
colors.red200 = '#ef9a9a';
colors.red300 = '#e57373';
colors.red400 = '#ef5350';
colors.red500 = '#f44336';
colors.red600 = '#e53935';
colors.red700 = '#d32f2f';
colors.red800 = '#c62828';
colors.red900 = '#b71c1c';
colors.redA100 = '#ff8a80';
colors.redA200 = '#ff5252';
colors.redA400 = '#ff1744';
colors.redA700 = '#d50000';

colors.pink50 = '#fce4ec';
colors.pink100 = '#f8bbd0';
colors.pink200 = '#f48fb1';
colors.pink300 = '#f06292';
colors.pink400 = '#ec407a';
colors.pink500 = '#e91e63';
colors.pink600 = '#d81b60';
colors.pink700 = '#c2185b';
colors.pink800 = '#ad1457';
colors.pink900 = '#880e4f';
colors.pinkA100 = '#ff80ab';
colors.pinkA200 = '#ff4081';
colors.pinkA400 = '#f50057';
colors.pinkA700 = '#c51162';

colors.purple50 = '#f3e5f5';
colors.purple100 = '#e1bee7';
colors.purple200 = '#ce93d8';
colors.purple300 = '#ba68c8';
colors.purple400 = '#ab47bc';
colors.purple500 = '#9c27b0';
colors.purple600 = '#8e24aa';
colors.purple700 = '#7b1fa2';
colors.purple800 = '#6a1b9a';
colors.purple900 = '#4a148c';
colors.purpleA100 = '#ea80fc';
colors.purpleA200 = '#e040fb';
colors.purpleA400 = '#d500f9';
colors.purpleA700 = '#aa00ff';

colors.deepPurple50 = '#ede7f6';
colors.deepPurple100 = '#d1c4e9';
colors.deepPurple200 = '#b39ddb';
colors.deepPurple300 = '#9575cd';
colors.deepPurple400 = '#7e57c2';
colors.deepPurple500 = '#673ab7';
colors.deepPurple600 = '#5e35b1';
colors.deepPurple700 = '#512da8';
colors.deepPurple800 = '#4527a0';
colors.deepPurple900 = '#311b92';
colors.deepPurpleA100 = '#b388ff';
colors.deepPurpleA200 = '#7c4dff';
colors.deepPurpleA400 = '#651fff';
colors.deepPurpleA700 = '#6200ea';

colors.indigo50 = '#e8eaf6';
colors.indigo100 = '#c5cae9';
colors.indigo200 = '#9fa8da';
colors.indigo300 = '#7986cb';
colors.indigo400 = '#5c6bc0';
colors.indigo500 = '#3f51b5';
colors.indigo600 = '#3949ab';
colors.indigo700 = '#303f9f';
colors.indigo800 = '#283593';
colors.indigo900 = '#1a237e';
colors.indigoA100 = '#8c9eff';
colors.indigoA200 = '#536dfe';
colors.indigoA400 = '#3d5afe';
colors.indigoA700 = '#304ffe';

colors.blue50 = '#e3f2fd';
blue100_1 = colors.blue100 = '#bbdefb';
colors.blue200 = '#90caf9';
colors.blue300 = '#64b5f6';
colors.blue400 = '#42a5f5';
colors.blue500 = '#2196f3';
colors.blue600 = '#1e88e5';
blue700_1 = colors.blue700 = '#1976d2';
colors.blue800 = '#1565c0';
colors.blue900 = '#0d47a1';
colors.blueA100 = '#82b1ff';
colors.blueA200 = '#448aff';
colors.blueA400 = '#2979ff';
colors.blueA700 = '#2962ff';

colors.lightBlue50 = '#e1f5fe';
colors.lightBlue100 = '#b3e5fc';
colors.lightBlue200 = '#81d4fa';
colors.lightBlue300 = '#4fc3f7';
colors.lightBlue400 = '#29b6f6';
colors.lightBlue500 = '#03a9f4';
colors.lightBlue600 = '#039be5';
colors.lightBlue700 = '#0288d1';
colors.lightBlue800 = '#0277bd';
colors.lightBlue900 = '#01579b';
colors.lightBlueA100 = '#80d8ff';
colors.lightBlueA200 = '#40c4ff';
colors.lightBlueA400 = '#00b0ff';
colors.lightBlueA700 = '#0091ea';

colors.cyan50 = '#e0f7fa';
colors.cyan100 = '#b2ebf2';
colors.cyan200 = '#80deea';
colors.cyan300 = '#4dd0e1';
colors.cyan400 = '#26c6da';
colors.cyan500 = '#00bcd4';
colors.cyan600 = '#00acc1';
colors.cyan700 = '#0097a7';
colors.cyan800 = '#00838f';
colors.cyan900 = '#006064';
colors.cyanA100 = '#84ffff';
colors.cyanA200 = '#18ffff';
colors.cyanA400 = '#00e5ff';
colors.cyanA700 = '#00b8d4';

colors.teal50 = '#e0f2f1';
colors.teal100 = '#b2dfdb';
colors.teal200 = '#80cbc4';
colors.teal300 = '#4db6ac';
colors.teal400 = '#26a69a';
colors.teal500 = '#009688';
colors.teal600 = '#00897b';
colors.teal700 = '#00796b';
colors.teal800 = '#00695c';
colors.teal900 = '#004d40';
colors.tealA100 = '#a7ffeb';
colors.tealA200 = '#64ffda';
colors.tealA400 = '#1de9b6';
colors.tealA700 = '#00bfa5';

colors.green50 = '#e8f5e9';
colors.green100 = '#c8e6c9';
colors.green200 = '#a5d6a7';
colors.green300 = '#81c784';
colors.green400 = '#66bb6a';
colors.green500 = '#4caf50';
colors.green600 = '#43a047';
colors.green700 = '#388e3c';
colors.green800 = '#2e7d32';
colors.green900 = '#1b5e20';
colors.greenA100 = '#b9f6ca';
colors.greenA200 = '#69f0ae';
colors.greenA400 = '#00e676';
colors.greenA700 = '#00c853';

colors.lightGreen50 = '#f1f8e9';
colors.lightGreen100 = '#dcedc8';
colors.lightGreen200 = '#c5e1a5';
colors.lightGreen300 = '#aed581';
colors.lightGreen400 = '#9ccc65';
colors.lightGreen500 = '#8bc34a';
colors.lightGreen600 = '#7cb342';
colors.lightGreen700 = '#689f38';
colors.lightGreen800 = '#558b2f';
colors.lightGreen900 = '#33691e';
colors.lightGreenA100 = '#ccff90';
colors.lightGreenA200 = '#b2ff59';
colors.lightGreenA400 = '#76ff03';
colors.lightGreenA700 = '#64dd17';

colors.lime50 = '#f9fbe7';
colors.lime100 = '#f0f4c3';
colors.lime200 = '#e6ee9c';
colors.lime300 = '#dce775';
colors.lime400 = '#d4e157';
colors.lime500 = '#cddc39';
colors.lime600 = '#c0ca33';
colors.lime700 = '#afb42b';
colors.lime800 = '#9e9d24';
colors.lime900 = '#827717';
colors.limeA100 = '#f4ff81';
colors.limeA200 = '#eeff41';
colors.limeA400 = '#c6ff00';
colors.limeA700 = '#aeea00';

colors.yellow50 = '#fffde7';
colors.yellow100 = '#fff9c4';
colors.yellow200 = '#fff59d';
colors.yellow300 = '#fff176';
colors.yellow400 = '#ffee58';
colors.yellow500 = '#ffeb3b';
colors.yellow600 = '#fdd835';
colors.yellow700 = '#fbc02d';
colors.yellow800 = '#f9a825';
colors.yellow900 = '#f57f17';
colors.yellowA100 = '#ffff8d';
colors.yellowA200 = '#ffff00';
colors.yellowA400 = '#ffea00';
colors.yellowA700 = '#ffd600';

colors.amber50 = '#fff8e1';
colors.amber100 = '#ffecb3';
colors.amber200 = '#ffe082';
colors.amber300 = '#ffd54f';
colors.amber400 = '#ffca28';
colors.amber500 = '#ffc107';
colors.amber600 = '#ffb300';
colors.amber700 = '#ffa000';
colors.amber800 = '#ff8f00';
colors.amber900 = '#ff6f00';
colors.amberA100 = '#ffe57f';
colors.amberA200 = '#ffd740';
colors.amberA400 = '#ffc400';
colors.amberA700 = '#ffab00';

colors.orange50 = '#fff3e0';
colors.orange100 = '#ffe0b2';
colors.orange200 = '#ffcc80';
colors.orange300 = '#ffb74d';
colors.orange400 = '#ffa726';
orange500_1 = colors.orange500 = '#ff9800';
colors.orange600 = '#fb8c00';
colors.orange700 = '#f57c00';
colors.orange800 = '#ef6c00';
colors.orange900 = '#e65100';
colors.orangeA100 = '#ffd180';
orangeA200_1 = colors.orangeA200 = '#ffab40';
colors.orangeA400 = '#ff9100';
colors.orangeA700 = '#ff6d00';

colors.deepOrange50 = '#fbe9e7';
colors.deepOrange100 = '#ffccbc';
colors.deepOrange200 = '#ffab91';
colors.deepOrange300 = '#ff8a65';
colors.deepOrange400 = '#ff7043';
colors.deepOrange500 = '#ff5722';
colors.deepOrange600 = '#f4511e';
colors.deepOrange700 = '#e64a19';
colors.deepOrange800 = '#d84315';
colors.deepOrange900 = '#bf360c';
colors.deepOrangeA100 = '#ff9e80';
colors.deepOrangeA200 = '#ff6e40';
colors.deepOrangeA400 = '#ff3d00';
colors.deepOrangeA700 = '#dd2c00';

colors.brown50 = '#efebe9';
colors.brown100 = '#d7ccc8';
colors.brown200 = '#bcaaa4';
colors.brown300 = '#a1887f';
colors.brown400 = '#8d6e63';
colors.brown500 = '#795548';
colors.brown600 = '#6d4c41';
colors.brown700 = '#5d4037';
colors.brown800 = '#4e342e';
colors.brown900 = '#3e2723';

colors.blueGrey50 = '#eceff1';
colors.blueGrey100 = '#cfd8dc';
colors.blueGrey200 = '#b0bec5';
colors.blueGrey300 = '#90a4ae';
colors.blueGrey400 = '#78909c';
colors.blueGrey500 = '#607d8b';
colors.blueGrey600 = '#546e7a';
colors.blueGrey700 = '#455a64';
colors.blueGrey800 = '#37474f';
colors.blueGrey900 = '#263238';

colors.grey50 = '#fafafa';
grey100_1 = colors.grey100 = '#f5f5f5';
grey200_1 = colors.grey200 = '#eeeeee';
colors.grey300 = '#e0e0e0';
grey400_1 = colors.grey400 = '#bdbdbd';
colors.grey500 = '#9e9e9e';
grey600_1 = colors.grey600 = '#757575';
colors.grey700 = '#616161';
colors.grey800 = '#424242';
colors.grey900 = '#212121';

colors.black = '#000000';
white_1 = colors.white = '#ffffff';

colors.transparent = 'rgba(0, 0, 0, 0)';
colors.fullBlack = 'rgba(0, 0, 0, 1)';
darkBlack_1 = colors.darkBlack = 'rgba(0, 0, 0, 0.87)';
colors.lightBlack = 'rgba(0, 0, 0, 0.54)';
colors.minBlack = 'rgba(0, 0, 0, 0.26)';
colors.faintBlack = 'rgba(0, 0, 0, 0.12)';
colors.fullWhite = 'rgba(255, 255, 255, 1)';
colors.darkWhite = 'rgba(255, 255, 255, 0.87)';
colors.lightWhite = 'rgba(255, 255, 255, 0.54)';

var icons = {
    Add: _default$V,
    Apps: _default$U,
    ArrowDownward: _default$T,
    ArrowDropRight: _default$S,
    ArrowUpward: _default$R,
    Business: _default$Q,
    Cancel: _default$X,
    ChevronLeft: _default$P,
    ChevronRight: _default$O,
    Clear: _default$N,
    Close: _default$M,
    Create: _default$L,
    CropFree: _default$K,
    Delete: _default$J,
    Description: _default$I,
    Done: _default$H,
    DragHandle: _default$G,
    Email: _default$F,
    Extension: _default$E,
    FontDownload: _default$D,
    GridOn: _default$B,
    Group: _default$C,
    Info: _default$A,
    InfoOutline: _default$z,
    InsertChart: _default$y,
    List: _default$x,
    Launch: _default$w,
    Message: _default$v,
    MoreVert: _default$u,
    NotInterested: _default$t,
    Person: _default$s,
    Public: _default$r,
    Reply: _default$q,
    Room: _default$p,
    Search: _default$o,
    ShowChart: _default$n,
    Star: _default$Y,
    StarBorder: _default$m,
    ThumbUp: _default$l,
    ViewList: _default$k,
    Visibility: _default$j,
    VisibilityOff: _default$i
};

var SvgIcon$3 = function SvgIcon(_ref) {
    var icon = _ref.icon,
        children = _ref.children,
        className = _ref.className,
        disabled = _ref.disabled,
        style = _ref.style;

    var Icon = null;
    if (children && !icons[icon]) {
        Icon = _default$Z;
    } else {
        Icon = icons[icon] || _default$h;
    }

    return react.createElement(
        Icon,
        {
            className: className,
            style: _default$15({}, style, {
                fill: style.fill || (disabled ? grey200_1 : grey600_1)
            })
        },
        children
    );
};

SvgIcon$3.propTypes = {
    /**
     * Name of the material icon to render
     */
    icon: PropTypes$2.string,

    /**
     * A node representing a custom svg
     */
    children: PropTypes$2.node,

    /**
     * The class name to apply to the component
     */
    className: PropTypes$2.string,

    /**
     * Whether icon should have a disabled look
     */
    disabled: PropTypes$2.bool,

    /**
     * Pass inline styles to the root element
     */
    style: PropTypes$2.object
};

SvgIcon$3.defaultProps = {
    icon: '',
    children: null,
    className: '',
    disabled: false,
    style: {}
};

var styles$h = {
    root: {
        position: 'fixed',
        top: 48,
        left: 0,
        right: 0,
        background: 'white',
        boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 6px 3px',
        transition: 'all ease-out 75ms',
        zIndex: 10,
        overflow: 'hidden',
        boxSizing: 'border-box'
    },
    content: {
        position: 'relative',
        height: '100%',
        width: '100%'
    },
    endFlap: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        textAlign: 'center',
        transition: 'all ease-out 75ms'
    },
    dragHandle: {
        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        height: 10,
        cursor: 'ns-resize',
        transition: 'all ease-out 75ms'
        // borderTop: '1px solid rgba(0,0,0,0.3)',
    }
};

var BACKGROUND_RGB = '255,255,255';
var BACKGROUND_RGB_EDIT = '255,248,224';
var END_FLAP_HEIGHT = 7;

/**
 * The ControlBar component can be used to put an expandable horizontal bar underneath the DHIS header bar, useful for
 * UI elements that apply to the entire screen.
 */

var ControlBar = function (_React$Component) {
    _default$16(ControlBar, _React$Component);

    function ControlBar(props) {
        _default$17(this, ControlBar);

        var _this = _default$18(this, (ControlBar.__proto__ || _Object$getPrototypeOf(ControlBar)).call(this, props));

        _this.onStartDrag = function () {
            _this.setState({ dragging: true });
            window.addEventListener('mousemove', _this.onDrag);
            window.addEventListener('mouseup', _this.onEndDrag);
        };

        _this.onDrag = function (event) {
            event.preventDefault();
            event.stopPropagation();

            var newHeight = event.clientY - 52;

            if (_this.props.onChangeHeight && newHeight !== _this.props.height && newHeight > 0) {
                requestAnimationFrame(function () {
                    _this.props.onChangeHeight(newHeight);
                });
            }
        };

        _this.onEndDrag = function () {
            _this.setState({ dragging: false });
            window.removeEventListener('mousemove', _this.onDrag);
            window.removeEventListener('mouseup', _this.onEndDrag);

            if (_this.props.onEndDrag) {
                _this.props.onEndDrag();
            }
        };

        _this.state = {
            dragging: false
        };
        return _this;
    }

    _default$19(ControlBar, [{
        key: 'getEndFlapHeight',
        value: function getEndFlapHeight() {
            return this.showDragHandle() ? END_FLAP_HEIGHT : 0;
        }
    }, {
        key: 'showDragHandle',
        value: function showDragHandle() {
            return typeof this.props.onChangeHeight === 'function';
        }
    }, {
        key: 'renderEndFlap',
        value: function renderEndFlap() {
            var backgroundColor = this.props.editMode ? BACKGROUND_RGB_EDIT : BACKGROUND_RGB;

            var endFlapStyle = _default$15({}, styles$h.endFlap, {
                height: this.getEndFlapHeight(),
                backgroundColor: 'lightblue'
            });

            var dragFlapStyle = _default$15({}, styles$h.dragHandle, {
                cursor: this.props.expandable ? 'ns-resize' : 'auto',
                height: this.getEndFlapHeight(),
                backgroundColor: 'rgb(' + backgroundColor + ')'
            });

            var props = _Object$assign({}, this.showDragHandle() && this.props.expandable ? { onMouseDown: this.onStartDrag } : {});

            // Disable jsx-a11y no-role rule, because what's the alternative?
            /* eslint-disable jsx-a11y/no-static-element-interactions */
            return react.createElement(
                'div',
                { className: 'd2-ui-control-bar-endflap', style: endFlapStyle },
                react.createElement(
                    'div',
                    _default$15({
                        className: 'd2-ui-control-bar-dragflap',
                        style: dragFlapStyle
                    }, props),
                    react.createElement(SvgIcon$3, { className: 'd2-ui-control-bar-dragflap-icon', icon: 'DragHandle', style: { marginTop: -7, fill: 'rgba(0,0,0,0.3)' } })
                )
            );
            /* eslint-enable jsx-a11y/no-static-element-interactions */
        }
    }, {
        key: 'render',
        value: function render() {
            var className = createClassName('d2-ui-control-bar', this.props.selector);
            var contentClassName = createClassName('d2-ui-control-bar-contents', this.props.selector);

            var height = Math.max(this.props.height, 0) + this.getEndFlapHeight();

            var rootStyle = _Object$assign({}, styles$h.root,
            // Adjust height to make room for extra components
            { height: height },
            // Set background color for edit mode
            { background: this.props.editMode ? 'rgb(' + BACKGROUND_RGB_EDIT + ')' : 'white' },
            // Disable animations while dragging
            this.state.dragging ? { transition: 'none' } : {},
            // Make room for the end flap
            { paddingBottom: this.getEndFlapHeight() });

            return react.createElement(
                'div',
                { style: rootStyle, className: className },
                react.createElement(
                    'div',
                    { style: styles$h.content, className: contentClassName },
                    this.props.children
                ),
                this.renderEndFlap()
            );
        }
    }]);

    return ControlBar;
}(react.Component);

var positiveIntegerPropValidator = function positiveIntegerPropValidator(props, propName, componentName) {
    var propValue = props[propName];
    if (isNaN(parseFloat(propValue)) || !isFinite(propValue) || !_Number$isInteger(propValue) || props[propName] < 1) {
        // eslint-disable-next-line max-len
        return new Error('Invalid prop `' + propName + '` with value `' + propValue + '` supplied to component `' + componentName + '`: Must be a positive integer');
    }
    return undefined;
};

ControlBar.propTypes = {
    /**
     * The height of the control bar in number of lines. Must be a positive integer.
     */
    height: positiveIntegerPropValidator,

    /**
     * If true, the background color of the control bar changes to indicate that edit mode is active.
     */
    editMode: PropTypes$2.bool,

    /**
     * Callback function that is called when the control bar is resized.
     * The callback receives one argument: The new height in pixels.
     *
     * If no callback is specified the control bar will not have a drag handle.
     */
    onChangeHeight: PropTypes$2.func,

    /**
     * Callback function that is called when the control bar is dropped after being dragged.
     * The callback receives one argument: The new height in pixels.
     *
     * Ignored if no "onChangeHeight" function is provided.
     */
    onEndDrag: PropTypes$2.func,

    /**
     * The contents of the control bar.
     */
    children: PropTypes$2.node.isRequired,

    /**
     * If set, adds a class to the element in the format d2-ui-control-bar-selector
     */
    selector: PropTypes$2.string,

    /**
     * If set, the control bar is vertically expandable by dragging the end flap
     */
    expandable: PropTypes$2.bool
};

ControlBar.defaultProps = {
    height: 32,
    editMode: false,
    onChangeHeight: null,
    onEndDrag: null,
    selector: '',
    expandable: true
};

var AppBar$2 = {};

var AppBar$1 = {};

var IconButton$5 = {};

var IconButton$4 = {};

var Tooltip$3 = {};

Object.defineProperty(Tooltip$3, "__esModule", {
  value: true
});

var _extends2$1h = _extends$3;

var _extends3$1h = _interopRequireDefault$2W(_extends2$1h);

var _objectWithoutProperties2$1g = objectWithoutProperties$2;

var _objectWithoutProperties3$1g = _interopRequireDefault$2W(_objectWithoutProperties2$1g);

var _getPrototypeOf$1A = getPrototypeOf$1.exports;

var _getPrototypeOf2$1y = _interopRequireDefault$2W(_getPrototypeOf$1A);

var _classCallCheck2$1B = classCallCheck$3;

var _classCallCheck3$1B = _interopRequireDefault$2W(_classCallCheck2$1B);

var _createClass2$1A = createClass$2;

var _createClass3$1A = _interopRequireDefault$2W(_createClass2$1A);

var _possibleConstructorReturn2$1y = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1y = _interopRequireDefault$2W(_possibleConstructorReturn2$1y);

var _inherits2$1y = inherits$3;

var _inherits3$1y = _interopRequireDefault$2W(_inherits2$1y);

var _simpleAssign$1t = simpleAssign;

var _simpleAssign2$1t = _interopRequireDefault$2W(_simpleAssign$1t);

var _react$24 = react;

var _react2$1$ = _interopRequireDefault$2W(_react$24);

var _propTypes$1O = propTypes$5.exports;

var _propTypes2$1O = _interopRequireDefault$2W(_propTypes$1O);

var _transitions$D = transitions;

var _transitions2$D = _interopRequireDefault$2W(_transitions$D);

function _interopRequireDefault$2W(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$18(props, context, state) {
  var verticalPosition = props.verticalPosition;
  var horizontalPosition = props.horizontalPosition;
  var touchMarginOffset = props.touch ? 10 : 0;
  var touchOffsetTop = props.touch ? -20 : -10;
  var offset = verticalPosition === 'bottom' ? 14 + touchMarginOffset : -14 - touchMarginOffset;

  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      zIndex = _context$muiTheme.zIndex,
      tooltip = _context$muiTheme.tooltip,
      borderRadius = _context$muiTheme.borderRadius;


  var styles = {
    root: {
      position: 'absolute',
      fontFamily: baseTheme.fontFamily,
      fontSize: '10px',
      lineHeight: '22px',
      padding: '0 8px',
      zIndex: zIndex.tooltip,
      color: tooltip.color,
      overflow: 'hidden',
      top: -10000,
      borderRadius: borderRadius,
      userSelect: 'none',
      opacity: 0,
      right: horizontalPosition === 'left' ? 12 : null,
      left: horizontalPosition === 'center' ? (state.offsetWidth - 48) / 2 * -1 : horizontalPosition === 'right' ? 12 : null,
      transition: _transitions2$D.default.easeOut('0ms', 'top', '450ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'opacity', '0ms')
    },
    label: {
      position: 'relative',
      whiteSpace: 'nowrap'
    },
    ripple: {
      position: 'absolute',
      left: horizontalPosition === 'center' ? '50%' : horizontalPosition === 'left' ? '100%' : '0%',
      top: verticalPosition === 'bottom' ? 0 : '100%',
      transform: 'translate(-50%, -50%)',
      borderRadius: '50%',
      backgroundColor: 'transparent',
      transition: _transitions2$D.default.easeOut('0ms', 'width', '450ms') + ', ' + _transitions2$D.default.easeOut('0ms', 'height', '450ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'backgroundColor', '0ms')
    },
    rootWhenShown: {
      top: verticalPosition === 'top' ? touchOffsetTop : 36,
      opacity: tooltip.opacity,
      transform: 'translate(0px, ' + offset + 'px)',
      transition: _transitions2$D.default.easeOut('0ms', 'top', '0ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'opacity', '0ms')
    },
    rootWhenTouched: {
      fontSize: '14px',
      lineHeight: '32px',
      padding: '0 16px'
    },
    rippleWhenShown: {
      backgroundColor: tooltip.rippleBackgroundColor,
      transition: _transitions2$D.default.easeOut('450ms', 'width', '0ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'height', '0ms') + ', ' + _transitions2$D.default.easeOut('450ms', 'backgroundColor', '0ms')
    }
  };

  return styles;
}

var Tooltip$2 = function (_Component) {
  (0, _inherits3$1y.default)(Tooltip, _Component);

  function Tooltip() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1B.default)(this, Tooltip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1y.default)(this, (_ref = Tooltip.__proto__ || (0, _getPrototypeOf2$1y.default)(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      offsetWidth: null
    }, _temp), (0, _possibleConstructorReturn3$1y.default)(_this, _ret);
  }

  (0, _createClass3$1A.default)(Tooltip, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setRippleSize();
      this.setTooltipPosition();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      this.setTooltipPosition();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.setRippleSize();
    }
  }, {
    key: 'setRippleSize',
    value: function setRippleSize() {
      var ripple = this.refs.ripple;
      var tooltip = this.refs.tooltip;
      var tooltipWidth = parseInt(tooltip.offsetWidth, 10) / (this.props.horizontalPosition === 'center' ? 2 : 1);
      var tooltipHeight = parseInt(tooltip.offsetHeight, 10);

      var rippleDiameter = Math.ceil(Math.sqrt(Math.pow(tooltipHeight, 2) + Math.pow(tooltipWidth, 2)) * 2);
      if (this.props.show) {
        ripple.style.height = rippleDiameter + 'px';
        ripple.style.width = rippleDiameter + 'px';
      } else {
        ripple.style.width = '0px';
        ripple.style.height = '0px';
      }
    }
  }, {
    key: 'setTooltipPosition',
    value: function setTooltipPosition() {
      this.setState({ offsetWidth: this.refs.tooltip.offsetWidth });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.horizontalPosition;
          var label = _props.label;
          _props.show;
          _props.touch;
          _props.verticalPosition;
          var other = (0, _objectWithoutProperties3$1g.default)(_props, ['horizontalPosition', 'label', 'show', 'touch', 'verticalPosition']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$18(this.props, this.context, this.state);

      return _react2$1$.default.createElement(
        'div',
        (0, _extends3$1h.default)({}, other, {
          ref: 'tooltip',
          style: prepareStyles((0, _simpleAssign2$1t.default)(styles.root, this.props.show && styles.rootWhenShown, this.props.touch && styles.rootWhenTouched, this.props.style))
        }),
        _react2$1$.default.createElement('div', {
          ref: 'ripple',
          style: prepareStyles((0, _simpleAssign2$1t.default)(styles.ripple, this.props.show && styles.rippleWhenShown))
        }),
        _react2$1$.default.createElement(
          'span',
          { style: prepareStyles(styles.label) },
          label
        )
      );
    }
  }]);
  return Tooltip;
}(_react$24.Component);

Tooltip$2.contextTypes = {
  muiTheme: _propTypes2$1O.default.object.isRequired
};
Tooltip$2.propTypes = {
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1O.default.string,
  horizontalPosition: _propTypes2$1O.default.oneOf(['left', 'right', 'center']),
  label: _propTypes2$1O.default.node.isRequired,
  show: _propTypes2$1O.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1O.default.object,
  touch: _propTypes2$1O.default.bool,
  verticalPosition: _propTypes2$1O.default.oneOf(['top', 'bottom'])
} ;
Tooltip$3.default = Tooltip$2;

Object.defineProperty(IconButton$4, "__esModule", {
  value: true
});

var _extends2$1g = _extends$3;

var _extends3$1g = _interopRequireDefault$2V(_extends2$1g);

var _objectWithoutProperties2$1f = objectWithoutProperties$2;

var _objectWithoutProperties3$1f = _interopRequireDefault$2V(_objectWithoutProperties2$1f);

var _getPrototypeOf$1z = getPrototypeOf$1.exports;

var _getPrototypeOf2$1x = _interopRequireDefault$2V(_getPrototypeOf$1z);

var _classCallCheck2$1A = classCallCheck$3;

var _classCallCheck3$1A = _interopRequireDefault$2V(_classCallCheck2$1A);

var _createClass2$1z = createClass$2;

var _createClass3$1z = _interopRequireDefault$2V(_createClass2$1z);

var _possibleConstructorReturn2$1x = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1x = _interopRequireDefault$2V(_possibleConstructorReturn2$1x);

var _inherits2$1x = inherits$3;

var _inherits3$1x = _interopRequireDefault$2V(_inherits2$1x);

var _simpleAssign$1s = simpleAssign;

var _simpleAssign2$1s = _interopRequireDefault$2V(_simpleAssign$1s);

var _react$23 = react;

var _react2$1_ = _interopRequireDefault$2V(_react$23);

var _propTypes$1N = propTypes$5.exports;

var _propTypes2$1N = _interopRequireDefault$2V(_propTypes$1N);

var _transitions$C = transitions;

var _transitions2$C = _interopRequireDefault$2V(_transitions$C);

var _propTypes3$h = propTypes$3;

var _propTypes4$h = _interopRequireDefault$2V(_propTypes3$h);

var _EnhancedButton$8 = EnhancedButton$1;

var _EnhancedButton2$8 = _interopRequireDefault$2V(_EnhancedButton$8);

var _FontIcon$2 = FontIcon$5;

var _FontIcon2$2 = _interopRequireDefault$2V(_FontIcon$2);

var _Tooltip$2 = Tooltip$3;

var _Tooltip2$2 = _interopRequireDefault$2V(_Tooltip$2);

var _childUtils$1 = childUtils$1;

function _interopRequireDefault$2V(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$17(props, context) {
  var baseTheme = context.muiTheme.baseTheme;


  return {
    root: {
      boxSizing: 'border-box',
      overflow: 'visible',
      transition: _transitions2$C.default.easeOut(),
      padding: baseTheme.spacing.iconSize / 2,
      width: baseTheme.spacing.iconSize * 2,
      height: baseTheme.spacing.iconSize * 2,
      fontSize: 0
    },
    tooltip: {
      boxSizing: 'border-box'
    },
    disabled: {
      color: baseTheme.palette.disabledColor,
      fill: baseTheme.palette.disabledColor,
      cursor: 'default'
    }
  };
}

var IconButton$3 = function (_Component) {
  (0, _inherits3$1x.default)(IconButton, _Component);

  function IconButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1A.default)(this, IconButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1x.default)(this, (_ref = IconButton.__proto__ || (0, _getPrototypeOf2$1x.default)(IconButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      // Not to be confonded with the touch property.
      // This state is to determined if it's a mobile device.
      touch: false,
      tooltipShown: false
    }, _this.handleBlur = function (event) {
      _this.hideTooltip();
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleFocus = function (event) {
      _this.showTooltip();
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleMouseLeave = function (event) {
      if (!_this.button.isKeyboardFocused()) {
        _this.hideTooltip();
      }
      _this.setState({ hovered: false });
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseOut = function (event) {
      if (_this.props.disabled) _this.hideTooltip();
      if (_this.props.onMouseOut) _this.props.onMouseOut(event);
    }, _this.handleMouseEnter = function (event) {
      _this.showTooltip();

      // Cancel hover styles for touch devices
      if (!_this.state.touch) {
        _this.setState({ hovered: true });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });

      if (_this.props.onTouchStart) {
        _this.props.onTouchStart(event);
      }
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onFocus = _this$props.onFocus,
          onBlur = _this$props.onBlur,
          onKeyboardFocus = _this$props.onKeyboardFocus;

      if (isKeyboardFocused && !disabled) {
        _this.showTooltip();
        if (onFocus) {
          onFocus(event);
        }
      } else {
        _this.hideTooltip();
        if (onBlur) {
          onBlur(event);
        }
      }

      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      if (onKeyboardFocus) {
        onKeyboardFocus(event, isKeyboardFocused);
      }
    }, _temp), (0, _possibleConstructorReturn3$1x.default)(_this, _ret);
  }

  (0, _createClass3$1z.default)(IconButton, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled) {
        this.setState({ hovered: false });
      }
    }
  }, {
    key: 'setKeyboardFocus',
    value: function setKeyboardFocus() {
      this.button.setKeyboardFocus();
    }
  }, {
    key: 'showTooltip',
    value: function showTooltip() {
      if (this.props.tooltip) {
        this.setState({ tooltipShown: true });
      }
    }
  }, {
    key: 'hideTooltip',
    value: function hideTooltip() {
      if (this.props.tooltip) this.setState({ tooltipShown: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          disabled = _props.disabled,
          hoveredStyle = _props.hoveredStyle,
          disableTouchRipple = _props.disableTouchRipple,
          children = _props.children,
          iconClassName = _props.iconClassName,
          style = _props.style,
          tooltip = _props.tooltip,
          tooltipPositionProp = _props.tooltipPosition,
          tooltipStyles = _props.tooltipStyles,
          touch = _props.touch,
          iconStyle = _props.iconStyle,
          other = (0, _objectWithoutProperties3$1f.default)(_props, ['disabled', 'hoveredStyle', 'disableTouchRipple', 'children', 'iconClassName', 'style', 'tooltip', 'tooltipPosition', 'tooltipStyles', 'touch', 'iconStyle']);

      var fonticon = void 0;

      var styles = getStyles$17(this.props, this.context);
      var tooltipPosition = tooltipPositionProp.split('-');

      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

      var mergedRootStyles = (0, _simpleAssign2$1s.default)(styles.root, style, hovered ? hoveredStyle : {});

      var tooltipElement = tooltip ? _react2$1_.default.createElement(_Tooltip2$2.default, {
        label: tooltip,
        show: this.state.tooltipShown,
        touch: touch,
        style: (0, _simpleAssign2$1s.default)(styles.tooltip, tooltipStyles),
        verticalPosition: tooltipPosition[0],
        horizontalPosition: tooltipPosition[1]
      }) : null;

      if (iconClassName) {
        var iconHoverColor = iconStyle.iconHoverColor,
            iconStyleFontIcon = (0, _objectWithoutProperties3$1f.default)(iconStyle, ['iconHoverColor']);


        fonticon = _react2$1_.default.createElement(
          _FontIcon2$2.default,
          {
            className: iconClassName,
            hoverColor: disabled ? null : iconHoverColor,
            style: (0, _simpleAssign2$1s.default)({}, disabled && styles.disabled, iconStyleFontIcon),
            color: this.context.muiTheme.baseTheme.palette.textColor
          },
          children
        );
      }

      var childrenStyle = disabled ? (0, _simpleAssign2$1s.default)({}, iconStyle, styles.disabled) : iconStyle;

      return _react2$1_.default.createElement(
        _EnhancedButton2$8.default,
        (0, _extends3$1g.default)({
          ref: function ref(_ref2) {
            return _this2.button = _ref2;
          }
        }, other, {
          centerRipple: true,
          disabled: disabled,
          onTouchStart: this.handleTouchStart,
          style: mergedRootStyles,
          disableTouchRipple: disableTouchRipple,
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onMouseLeave: this.handleMouseLeave,
          onMouseEnter: this.handleMouseEnter,
          onMouseOut: this.handleMouseOut,
          onKeyboardFocus: this.handleKeyboardFocus
        }),
        tooltipElement,
        fonticon,
        (0, _childUtils$1.extendChildren)(children, {
          style: childrenStyle
        })
      );
    }
  }]);
  return IconButton;
}(_react$23.Component);

IconButton$3.muiName = 'IconButton';
IconButton$3.defaultProps = {
  disabled: false,
  disableTouchRipple: false,
  iconStyle: {},
  tooltipPosition: 'bottom-center',
  touch: false
};
IconButton$3.contextTypes = {
  muiTheme: _propTypes2$1N.default.object.isRequired
};
IconButton$3.propTypes = {
  /**
   * Can be used to pass a `FontIcon` element as the icon for the button.
   */
  children: _propTypes2$1N.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$1N.default.string,
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$1N.default.bool,
  /**
   * If true, the element will be disabled.
   */
  disabled: _propTypes2$1N.default.bool,
  /**
   * Override the inline-styles of the root element when the component is hovered.
   */
  hoveredStyle: _propTypes2$1N.default.object,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$1N.default.string,
  /**
   * The CSS class name of the icon. Used for setting the icon with a stylesheet.
   */
  iconClassName: _propTypes2$1N.default.string,
  /**
   * Override the inline-styles of the icon element.
   * Note: you can specify iconHoverColor as a String inside this object.
   */
  iconStyle: _propTypes2$1N.default.object,
  /** @ignore */
  onBlur: _propTypes2$1N.default.func,
  /**
   * Callback function fired when the button is clicked.
   *
   * @param {object} event Click event targeting the button.
   */
  onClick: _propTypes2$1N.default.func,
  /** @ignore */
  onFocus: _propTypes2$1N.default.func,
  /**
   * Callback function fired when the element is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the element.
   * @param {boolean} keyboardFocused Indicates whether the element is focused.
   */
  onKeyboardFocus: _propTypes2$1N.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1N.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1N.default.func,
  /** @ignore */
  onMouseOut: _propTypes2$1N.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1N.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1N.default.object,
  /**
   * The text to supply to the element's tooltip.
   */
  tooltip: _propTypes2$1N.default.node,
  /**
   * The vertical and horizontal positions, respectively, of the element's tooltip.
   * Possible values are: "bottom-center", "top-center", "bottom-right", "top-right",
   * "bottom-left", and "top-left".
   */
  tooltipPosition: _propTypes4$h.default.cornersAndCenter,
  /**
   * Override the inline-styles of the tooltip element.
   */
  tooltipStyles: _propTypes2$1N.default.object,
  /**
   * If true, increase the tooltip element's size. Useful for increasing tooltip
   * readability on mobile devices.
   */
  touch: _propTypes2$1N.default.bool
} ;
IconButton$4.default = IconButton$3;

Object.defineProperty(IconButton$5, "__esModule", {
  value: true
});
IconButton$5.default = undefined;

var _IconButton$7 = IconButton$4;

var _IconButton2$7 = _interopRequireDefault$2U(_IconButton$7);

function _interopRequireDefault$2U(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

IconButton$5.default = _IconButton2$7.default;

var menu = {};

Object.defineProperty(menu, "__esModule", {
  value: true
});

var _react$22 = react;

var _react2$1Z = _interopRequireDefault$2T(_react$22);

var _pure$f = pure$3;

var _pure2$f = _interopRequireDefault$2T(_pure$f);

var _SvgIcon$g = SvgIcon$6;

var _SvgIcon2$g = _interopRequireDefault$2T(_SvgIcon$g);

function _interopRequireDefault$2T(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationMenu = function NavigationMenu(props) {
  return _react2$1Z.default.createElement(
    _SvgIcon2$g.default,
    props,
    _react2$1Z.default.createElement('path', { d: 'M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' })
  );
};
NavigationMenu = (0, _pure2$f.default)(NavigationMenu);
NavigationMenu.displayName = 'NavigationMenu';
NavigationMenu.muiName = 'SvgIcon';

menu.default = NavigationMenu;

Object.defineProperty(AppBar$1, "__esModule", {
  value: true
});

var _extends2$1f = _extends$3;

var _extends3$1f = _interopRequireDefault$2S(_extends2$1f);

var _keys$1 = keys$5.exports;

var _keys2$1 = _interopRequireDefault$2S(_keys$1);

var _objectWithoutProperties2$1e = objectWithoutProperties$2;

var _objectWithoutProperties3$1e = _interopRequireDefault$2S(_objectWithoutProperties2$1e);

var _getPrototypeOf$1y = getPrototypeOf$1.exports;

var _getPrototypeOf2$1w = _interopRequireDefault$2S(_getPrototypeOf$1y);

var _classCallCheck2$1z = classCallCheck$3;

var _classCallCheck3$1z = _interopRequireDefault$2S(_classCallCheck2$1z);

var _createClass2$1y = createClass$2;

var _createClass3$1y = _interopRequireDefault$2S(_createClass2$1y);

var _possibleConstructorReturn2$1w = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1w = _interopRequireDefault$2S(_possibleConstructorReturn2$1w);

var _inherits2$1w = inherits$3;

var _inherits3$1w = _interopRequireDefault$2S(_inherits2$1w);

AppBar$1.getStyles = getStyles$16;

var _simpleAssign$1r = simpleAssign;

var _simpleAssign2$1r = _interopRequireDefault$2S(_simpleAssign$1r);

var _react$21 = react;

var _react2$1Y = _interopRequireDefault$2S(_react$21);

var _propTypes$1M = propTypes$5.exports;

var _propTypes2$1M = _interopRequireDefault$2S(_propTypes$1M);

var _IconButton$6 = IconButton$5;

var _IconButton2$6 = _interopRequireDefault$2S(_IconButton$6);

var _menu = menu;

var _menu2 = _interopRequireDefault$2S(_menu);

var _Paper$c = Paper$2;

var _Paper2$c = _interopRequireDefault$2S(_Paper$c);

var _propTypes3$g = propTypes$3;

var _propTypes4$g = _interopRequireDefault$2S(_propTypes3$g);

var _warning$c = warning_1$1;

var _warning2$c = _interopRequireDefault$2S(_warning$c);

function _interopRequireDefault$2S(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$16(props, context) {
  var _context$muiTheme = context.muiTheme,
      appBar = _context$muiTheme.appBar,
      iconButtonSize = _context$muiTheme.button.iconButtonSize,
      zIndex = _context$muiTheme.zIndex;


  var flatButtonSize = 36;

  var styles = {
    root: {
      position: 'relative',
      zIndex: zIndex.appBar,
      width: '100%',
      display: 'flex',
      backgroundColor: appBar.color,
      paddingLeft: appBar.padding,
      paddingRight: appBar.padding
    },
    title: {
      whiteSpace: 'nowrap',
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      margin: 0,
      paddingTop: 0,
      letterSpacing: 0,
      fontSize: 24,
      fontWeight: appBar.titleFontWeight,
      color: appBar.textColor,
      height: appBar.height,
      lineHeight: appBar.height + 'px'
    },
    mainElement: {
      boxFlex: 1,
      flex: '1'
    },
    iconButtonStyle: {
      marginTop: (appBar.height - iconButtonSize) / 2,
      marginRight: 8,
      marginLeft: -16
    },
    iconButtonIconStyle: {
      fill: appBar.textColor,
      color: appBar.textColor
    },
    flatButton: {
      color: appBar.textColor,
      marginTop: (iconButtonSize - flatButtonSize) / 2 + 1
    }
  };

  return styles;
}

var AppBar = function (_Component) {
  (0, _inherits3$1w.default)(AppBar, _Component);

  function AppBar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1z.default)(this, AppBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1w.default)(this, (_ref = AppBar.__proto__ || (0, _getPrototypeOf2$1w.default)(AppBar)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickLeftIconButton = function (event) {
      if (_this.props.onLeftIconButtonClick) {
        _this.props.onLeftIconButtonClick(event);
      }
    }, _this.handleClickRightIconButton = function (event) {
      if (_this.props.onRightIconButtonClick) {
        _this.props.onRightIconButtonClick(event);
      }
    }, _this.handleTitleClick = function (event) {
      if (_this.props.onTitleClick) {
        _this.props.onTitleClick(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1w.default)(_this, _ret);
  }

  (0, _createClass3$1y.default)(AppBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _warning2$c.default)(!this.props.iconElementLeft || !this.props.iconClassNameLeft, 'Material-UI: Properties iconElementLeft\n      and iconClassNameLeft cannot be simultaneously defined. Please use one or the other.') ;

      (0, _warning2$c.default)(!this.props.iconElementRight || !this.props.iconClassNameRight, 'Material-UI: Properties iconElementRight\n      and iconClassNameRight cannot be simultaneously defined. Please use one or the other.') ;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          titleStyle = _props.titleStyle,
          iconStyleLeft = _props.iconStyleLeft,
          iconStyleRight = _props.iconStyleRight;
          _props.onTitleClick;
          var showMenuIconButton = _props.showMenuIconButton,
          iconElementLeft = _props.iconElementLeft,
          iconElementRight = _props.iconElementRight,
          iconClassNameLeft = _props.iconClassNameLeft,
          iconClassNameRight = _props.iconClassNameRight;
          _props.onLeftIconButtonClick;
          _props.onRightIconButtonClick;
          var className = _props.className,
          style = _props.style,
          zDepth = _props.zDepth,
          children = _props.children,
          other = (0, _objectWithoutProperties3$1e.default)(_props, ['title', 'titleStyle', 'iconStyleLeft', 'iconStyleRight', 'onTitleClick', 'showMenuIconButton', 'iconElementLeft', 'iconElementRight', 'iconClassNameLeft', 'iconClassNameRight', 'onLeftIconButtonClick', 'onRightIconButtonClick', 'className', 'style', 'zDepth', 'children']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$16(this.props, this.context);

      var menuElementLeft = void 0;
      var menuElementRight = void 0;

      // If the title is a string, wrap in an h1 tag.
      // If not, wrap in a div tag.
      var titleComponent = typeof title === 'string' || title instanceof String ? 'h1' : 'div';

      var titleElement = _react2$1Y.default.createElement(titleComponent, {
        onClick: this.handleTitleClick,
        style: prepareStyles((0, _simpleAssign2$1r.default)(styles.title, styles.mainElement, titleStyle))
      }, title);

      var iconLeftStyle = (0, _simpleAssign2$1r.default)({}, styles.iconButtonStyle, iconStyleLeft);

      if (showMenuIconButton) {
        if (iconElementLeft) {
          var iconElementLeftProps = {};

          if (iconElementLeft.type.muiName === 'IconButton') {
            var iconElemLeftChildren = iconElementLeft.props.children;
            var iconButtonIconStyle = !(iconElemLeftChildren && iconElemLeftChildren.props && iconElemLeftChildren.props.color) ? styles.iconButtonIconStyle : null;

            iconElementLeftProps.iconStyle = (0, _simpleAssign2$1r.default)({}, iconButtonIconStyle, iconElementLeft.props.iconStyle);
          }

          if (!iconElementLeft.props.onClick && this.props.onLeftIconButtonClick) {
            iconElementLeftProps.onClick = this.handleClickLeftIconButton;
          }

          menuElementLeft = _react2$1Y.default.createElement(
            'div',
            { style: prepareStyles(iconLeftStyle) },
            (0, _keys2$1.default)(iconElementLeftProps).length > 0 ? (0, _react$21.cloneElement)(iconElementLeft, iconElementLeftProps) : iconElementLeft
          );
        } else {
          menuElementLeft = _react2$1Y.default.createElement(
            _IconButton2$6.default,
            {
              style: iconLeftStyle,
              iconStyle: styles.iconButtonIconStyle,
              iconClassName: iconClassNameLeft,
              onClick: this.handleClickLeftIconButton
            },
            iconClassNameLeft ? '' : _react2$1Y.default.createElement(_menu2.default, { style: (0, _simpleAssign2$1r.default)({}, styles.iconButtonIconStyle) })
          );
        }
      }

      var iconRightStyle = (0, _simpleAssign2$1r.default)({}, styles.iconButtonStyle, {
        marginRight: -16,
        marginLeft: 'auto'
      }, iconStyleRight);

      if (iconElementRight) {
        var iconElementRightProps = {};

        switch (iconElementRight.type.muiName) {
          case 'IconMenu':
          case 'IconButton':
            var iconElemRightChildren = iconElementRight.props.children;
            var _iconButtonIconStyle = !(iconElemRightChildren && iconElemRightChildren.props && iconElemRightChildren.props.color) ? styles.iconButtonIconStyle : null;

            iconElementRightProps.iconStyle = (0, _simpleAssign2$1r.default)({}, _iconButtonIconStyle, iconElementRight.props.iconStyle);
            break;

          case 'FlatButton':
            iconElementRightProps.style = (0, _simpleAssign2$1r.default)({}, styles.flatButton, iconElementRight.props.style);
            break;
        }

        if (!iconElementRight.props.onClick && this.props.onRightIconButtonClick) {
          iconElementRightProps.onClick = this.handleClickRightIconButton;
        }

        menuElementRight = _react2$1Y.default.createElement(
          'div',
          { style: prepareStyles(iconRightStyle) },
          (0, _keys2$1.default)(iconElementRightProps).length > 0 ? (0, _react$21.cloneElement)(iconElementRight, iconElementRightProps) : iconElementRight
        );
      } else if (iconClassNameRight) {
        menuElementRight = _react2$1Y.default.createElement(_IconButton2$6.default, {
          style: iconRightStyle,
          iconStyle: styles.iconButtonIconStyle,
          iconClassName: iconClassNameRight,
          onClick: this.handleClickRightIconButton
        });
      }

      return _react2$1Y.default.createElement(
        _Paper2$c.default,
        (0, _extends3$1f.default)({}, other, {
          rounded: false,
          className: className,
          style: (0, _simpleAssign2$1r.default)({}, styles.root, style),
          zDepth: zDepth
        }),
        menuElementLeft,
        titleElement,
        menuElementRight,
        children
      );
    }
  }]);
  return AppBar;
}(_react$21.Component);

AppBar.muiName = 'AppBar';
AppBar.defaultProps = {
  showMenuIconButton: true,
  title: '',
  zDepth: 1
};
AppBar.contextTypes = {
  muiTheme: _propTypes2$1M.default.object.isRequired
};
AppBar.propTypes = {
  /**
   * Can be used to render a tab inside an app bar for instance.
   */
  children: _propTypes2$1M.default.node,
  /**
   * Applied to the app bar's root element.
   */
  className: _propTypes2$1M.default.string,
  /**
   * The classname of the icon on the left of the app bar.
   * If you are using a stylesheet for your icons, enter the class name for the icon to be used here.
   */
  iconClassNameLeft: _propTypes2$1M.default.string,
  /**
   * Similiar to the iconClassNameLeft prop except that
   * it applies to the icon displayed on the right of the app bar.
   */
  iconClassNameRight: _propTypes2$1M.default.string,
  /**
   * The custom element to be displayed on the left side of the
   * app bar such as an SvgIcon.
   */
  iconElementLeft: _propTypes2$1M.default.element,
  /**
   * Similiar to the iconElementLeft prop except that this element is displayed on the right of the app bar.
   */
  iconElementRight: _propTypes2$1M.default.element,
  /**
   * Override the inline-styles of the element displayed on the left side of the app bar.
   */
  iconStyleLeft: _propTypes2$1M.default.object,
  /**
   * Override the inline-styles of the element displayed on the right side of the app bar.
   */
  iconStyleRight: _propTypes2$1M.default.object,
  /**
   * Callback function for when the left icon is selected via a click.
   *
   * @param {object} event Click event targeting the left `IconButton`.
   */
  onLeftIconButtonClick: _propTypes2$1M.default.func,
  /**
   * Callback function for when the right icon is selected via a click.
   *
   * @param {object} event Click event targeting the right `IconButton`.
   */
  onRightIconButtonClick: _propTypes2$1M.default.func,
  /**
   * Callback function for when the title text is selected via a click.
   *
   * @param {object} event Click event targeting the `title` node.
   */
  onTitleClick: _propTypes2$1M.default.func,
  /**
   * Determines whether or not to display the Menu icon next to the title.
   * Setting this prop to false will hide the icon.
   */
  showMenuIconButton: _propTypes2$1M.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1M.default.object,
  /**
   * The title to display on the app bar.
   */
  title: _propTypes2$1M.default.node,
  /**
   * Override the inline-styles of the app bar's title element.
   */
  titleStyle: _propTypes2$1M.default.object,
  /**
   * The zDepth of the component.
   * The shadow of the app bar is also dependent on this property.
   */
  zDepth: _propTypes4$g.default.zDepth
} ;
AppBar$1.default = AppBar;

Object.defineProperty(AppBar$2, "__esModule", {
  value: true
});
AppBar$2.default = undefined;

var _AppBar = AppBar$1;

var _AppBar2 = _interopRequireDefault$2R(_AppBar);

function _interopRequireDefault$2R(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

AppBar$2.default = _AppBar2.default;

var AutoComplete$5 = {};

var AutoComplete$4 = {};

var TextField$6 = {};

var TextField$5 = {};

var EnhancedTextarea$3 = {};

var reactEventListener_cjs = {};

function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var classCallCheck$1 = _classCallCheck$2;

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var createClass = _createClass$1;

function _typeof2$4(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2$4 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2$4 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2$4(obj); }

function _typeof$2(obj) {
  if (typeof Symbol === "function" && _typeof2$4(Symbol.iterator) === "symbol") {
    _typeof_1 = _typeof$2 = function _typeof(obj) {
      return _typeof2$4(obj);
    };
  } else {
    _typeof_1 = _typeof$2 = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2$4(obj);
    };
  }

  return _typeof$2(obj);
}

var _typeof_1 = _typeof$2;

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var assertThisInitialized$1 = _assertThisInitialized;

var _typeof$1 = _typeof_1;

var assertThisInitialized = assertThisInitialized$1;

function _possibleConstructorReturn$2(self, call) {
  if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

var possibleConstructorReturn$1 = _possibleConstructorReturn$2;

function _getPrototypeOf$1x(o) {
  getPrototypeOf = _getPrototypeOf$1x = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$1x(o);
}

var getPrototypeOf = _getPrototypeOf$1x;

function _setPrototypeOf(o, p) {
  setPrototypeOf$1 = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var setPrototypeOf$1 = _setPrototypeOf;

var setPrototypeOf = setPrototypeOf$1;

function _inherits$2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

var inherits$1 = _inherits$2;

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose$1 = _objectWithoutPropertiesLoose;

var objectWithoutPropertiesLoose = objectWithoutPropertiesLoose$1;

function _objectWithoutProperties$1(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties$1;

function _extends$2() {
  _extends_1 = _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$2.apply(this, arguments);
}

var _extends_1 = _extends$2;

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var warning$1 = function() {};

{
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning$1 = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

var warning_1 = warning$1;

Object.defineProperty(reactEventListener_cjs, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _classCallCheck$1 = _interopDefault(classCallCheck$1);
var _createClass = _interopDefault(createClass);
var _possibleConstructorReturn$1 = _interopDefault(possibleConstructorReturn$1);
var _getPrototypeOf$1w = _interopDefault(getPrototypeOf);
var _inherits$1 = _interopDefault(inherits$1);
var _typeof = _interopDefault(_typeof_1);
var _objectWithoutProperties = _interopDefault(objectWithoutProperties);
var _extends$1 = _interopDefault(_extends_1);
var React = _interopDefault(react);
var PropTypes = _interopDefault(propTypes$5.exports);
var warning = _interopDefault(warning_1);

function defineProperty$3(object, property, attr) {
  return Object.defineProperty(object, property, attr);
} // Passive options
// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js


var passiveOption = function () {
  var cache = null;
  return function () {
    if (cache !== null) {
      return cache;
    }

    var supportsPassiveOption = false;

    try {
      window.addEventListener('test', null, defineProperty$3({}, 'passive', {
        get: function get() {
          supportsPassiveOption = true;
        }
      }));
    } catch (err) {//
    }

    cache = supportsPassiveOption;
    return supportsPassiveOption;
  }();
}();

var defaultEventOptions = {
  capture: false,
  passive: false
};

function mergeDefaultEventOptions(options) {
  return _extends$1({}, defaultEventOptions, options);
}

function getEventListenerArgs(eventName, callback, options) {
  var args = [eventName, callback];
  args.push(passiveOption ? options : options.capture);
  return args;
}

function on(target, eventName, callback, options) {
  // eslint-disable-next-line prefer-spread
  target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
}

function off(target, eventName, callback, options) {
  // eslint-disable-next-line prefer-spread
  target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
}

function forEachListener(props, iteratee) {
  props.children;
      props.target;
      var eventProps = _objectWithoutProperties(props, ["children", "target"]);

  Object.keys(eventProps).forEach(function (name) {
    if (name.substring(0, 2) !== 'on') {
      return;
    }

    var prop = eventProps[name];

    var type = _typeof(prop);

    var isObject = type === 'object';
    var isFunction = type === 'function';

    if (!isObject && !isFunction) {
      return;
    }

    var capture = name.substr(-7).toLowerCase() === 'capture';
    var eventName = name.substring(2).toLowerCase();
    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;

    if (isObject) {
      iteratee(eventName, prop.handler, prop.options);
    } else {
      iteratee(eventName, prop, mergeDefaultEventOptions({
        capture: capture
      }));
    }
  });
}

function withOptions(handler, options) {
  warning(options, 'react-event-listener: should be specified options in withOptions.') ;
  return {
    handler: handler,
    options: mergeDefaultEventOptions(options)
  };
}

var EventListener =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits$1(EventListener, _React$PureComponent);

  function EventListener() {
    _classCallCheck$1(this, EventListener);

    return _possibleConstructorReturn$1(this, _getPrototypeOf$1w(EventListener).apply(this, arguments));
  }

  _createClass(EventListener, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.applyListeners(on);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      this.applyListeners(off, prevProps);
      this.applyListeners(on);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.applyListeners(off);
    }
  }, {
    key: "applyListeners",
    value: function applyListeners(onOrOff) {
      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
      var target = props.target;

      if (target) {
        var element = target;

        if (typeof target === 'string') {
          element = window[target];
        }

        forEachListener(props, onOrOff.bind(null, element));
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children || null;
    }
  }]);

  return EventListener;
}(React.PureComponent);

EventListener.propTypes = {
  /**
   * You can provide a single child too.
   */
  children: PropTypes.node,

  /**
   * The DOM target to listen to.
   */
  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired
} ;

reactEventListener_cjs.withOptions = withOptions;
reactEventListener_cjs.default = EventListener;

Object.defineProperty(EnhancedTextarea$3, "__esModule", {
  value: true
});

var _extends2$1e = _extends$3;

var _extends3$1e = _interopRequireDefault$2Q(_extends2$1e);

var _objectWithoutProperties2$1d = objectWithoutProperties$2;

var _objectWithoutProperties3$1d = _interopRequireDefault$2Q(_objectWithoutProperties2$1d);

var _getPrototypeOf$1v = getPrototypeOf$1.exports;

var _getPrototypeOf2$1v = _interopRequireDefault$2Q(_getPrototypeOf$1v);

var _classCallCheck2$1y = classCallCheck$3;

var _classCallCheck3$1y = _interopRequireDefault$2Q(_classCallCheck2$1y);

var _createClass2$1x = createClass$2;

var _createClass3$1x = _interopRequireDefault$2Q(_createClass2$1x);

var _possibleConstructorReturn2$1v = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1v = _interopRequireDefault$2Q(_possibleConstructorReturn2$1v);

var _inherits2$1v = inherits$3;

var _inherits3$1v = _interopRequireDefault$2Q(_inherits2$1v);

var _simpleAssign$1q = simpleAssign;

var _simpleAssign2$1q = _interopRequireDefault$2Q(_simpleAssign$1q);

var _react$20 = react;

var _react2$1X = _interopRequireDefault$2Q(_react$20);

var _propTypes$1L = propTypes$5.exports;

var _propTypes2$1L = _interopRequireDefault$2Q(_propTypes$1L);

var _reactEventListener$a = reactEventListener_cjs;

var _reactEventListener2$a = _interopRequireDefault$2Q(_reactEventListener$a);

function _interopRequireDefault$2Q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rowsHeight$1 = 24;

function getStyles$15(props, context, state) {
  return {
    root: {
      position: 'relative' // because the shadow has position: 'absolute'
    },
    textarea: {
      height: state.height,
      width: '100%',
      resize: 'none',
      font: 'inherit',
      padding: 0,
      cursor: 'inherit'
    },
    shadow: {
      resize: 'none',
      // Overflow also needed to here to remove the extra row
      // added to textareas in Firefox.
      overflow: 'hidden',
      // Visibility needed to hide the extra text area on ipads
      visibility: 'hidden',
      position: 'absolute',
      height: 'auto'
    }
  };
}

var EnhancedTextarea$2 = function (_Component) {
  (0, _inherits3$1v.default)(EnhancedTextarea, _Component);

  function EnhancedTextarea() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1y.default)(this, EnhancedTextarea);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1v.default)(this, (_ref = EnhancedTextarea.__proto__ || (0, _getPrototypeOf2$1v.default)(EnhancedTextarea)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      height: null
    }, _this.handleResize = function (event) {
      _this.syncHeightWithShadow(_this.props.value, event);
    }, _this.handleChange = function (event) {
      if (!_this.props.hasOwnProperty('value')) {
        _this.syncHeightWithShadow(event.target.value);
      }

      if (_this.props.hasOwnProperty('valueLink')) {
        _this.props.valueLink.requestChange(event.target.value);
      }

      if (_this.props.onChange) {
        _this.props.onChange(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1v.default)(_this, _ret);
  }

  (0, _createClass3$1x.default)(EnhancedTextarea, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        height: this.props.rows * rowsHeight$1
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.syncHeightWithShadow(this.props.value);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== this.props.value || nextProps.rowsMax !== this.props.rowsMax) {
        this.syncHeightWithShadow(nextProps.value, null, nextProps);
      }
    }
  }, {
    key: 'getInputNode',
    value: function getInputNode() {
      return this.refs.input;
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      this.getInputNode().value = value;
      this.syncHeightWithShadow(value);
    }
  }, {
    key: 'syncHeightWithShadow',
    value: function syncHeightWithShadow(newValue, event, props) {
      var shadow = this.refs.shadow;
      var displayText = this.props.hintText && (newValue === '' || newValue === undefined || newValue === null) ? this.props.hintText : newValue;

      if (displayText !== undefined) {
        shadow.value = displayText;
      }

      var newHeight = shadow.scrollHeight;

      // Guarding for jsdom, where scrollHeight isn't present.
      // See https://github.com/tmpvar/jsdom/issues/1013
      if (newHeight === undefined) return;

      props = props || this.props;

      if (props.rowsMax >= props.rows) {
        newHeight = Math.min(props.rowsMax * rowsHeight$1, newHeight);
      }

      newHeight = Math.max(newHeight, rowsHeight$1);

      if (this.state.height !== newHeight) {
        var input = this.refs.input;
        var cursorPosition = input.selectionEnd;
        this.setState({
          height: newHeight
        }, function () {
          input.setSelectionRange(cursorPosition, cursorPosition);
        });

        if (props.onHeightChange) {
          props.onHeightChange(event, newHeight);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.onChange;
          _props.onHeightChange;
          _props.rows;
          _props.rowsMax;
          var shadowStyle = _props.shadowStyle,
          style = _props.style;
          _props.hintText;
          var textareaStyle = _props.textareaStyle,
          valueLink = _props.valueLink,
          other = (0, _objectWithoutProperties3$1d.default)(_props, ['onChange', 'onHeightChange', 'rows', 'rowsMax', 'shadowStyle', 'style', 'hintText', 'textareaStyle', 'valueLink']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$15(this.props, this.context, this.state);
      var rootStyles = (0, _simpleAssign2$1q.default)(styles.root, style);
      var textareaStyles = (0, _simpleAssign2$1q.default)(styles.textarea, textareaStyle);
      var shadowStyles = (0, _simpleAssign2$1q.default)({}, textareaStyles, styles.shadow, shadowStyle);
      var props = {};

      if (this.props.hasOwnProperty('valueLink')) {
        other.value = valueLink.value;
        props.valueLink = valueLink;
      }

      return _react2$1X.default.createElement(
        'div',
        { style: prepareStyles(rootStyles) },
        _react2$1X.default.createElement(_reactEventListener2$a.default, { target: 'window', onResize: this.handleResize }),
        _react2$1X.default.createElement('textarea', (0, _extends3$1e.default)({
          ref: 'shadow',
          style: prepareStyles(shadowStyles),
          tabIndex: '-1',
          rows: this.props.rows,
          defaultValue: this.props.defaultValue,
          readOnly: true,
          value: this.props.value
        }, props)),
        _react2$1X.default.createElement('textarea', (0, _extends3$1e.default)({}, other, {
          ref: 'input',
          rows: this.props.rows,
          style: prepareStyles(textareaStyles),
          onChange: this.handleChange
        }))
      );
    }
  }]);
  return EnhancedTextarea;
}(_react$20.Component);

EnhancedTextarea$2.defaultProps = {
  rows: 1
};
EnhancedTextarea$2.contextTypes = {
  muiTheme: _propTypes2$1L.default.object.isRequired
};
EnhancedTextarea$2.propTypes = {
  defaultValue: _propTypes2$1L.default.any,
  disabled: _propTypes2$1L.default.bool,
  hintText: _propTypes2$1L.default.node,
  onChange: _propTypes2$1L.default.func,
  onHeightChange: _propTypes2$1L.default.func,
  rows: _propTypes2$1L.default.number,
  rowsMax: _propTypes2$1L.default.number,
  shadowStyle: _propTypes2$1L.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1L.default.object,
  textareaStyle: _propTypes2$1L.default.object,
  value: _propTypes2$1L.default.string,
  valueLink: _propTypes2$1L.default.object
} ;
EnhancedTextarea$3.default = EnhancedTextarea$2;

var TextFieldHint$3 = {};

Object.defineProperty(TextFieldHint$3, "__esModule", {
  value: true
});

var _simpleAssign$1p = simpleAssign;

var _simpleAssign2$1p = _interopRequireDefault$2P(_simpleAssign$1p);

var _react$1$ = react;

var _react2$1W = _interopRequireDefault$2P(_react$1$);

var _propTypes$1K = propTypes$5.exports;

var _propTypes2$1K = _interopRequireDefault$2P(_propTypes$1K);

var _transitions$B = transitions;

var _transitions2$B = _interopRequireDefault$2P(_transitions$B);

function _interopRequireDefault$2P(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$14(props) {
  var hintColor = props.muiTheme.textField.hintColor,
      show = props.show;


  return {
    root: {
      position: 'absolute',
      opacity: show ? 1 : 0,
      color: hintColor,
      transition: _transitions2$B.default.easeOut(),
      bottom: 12
    }
  };
}

var TextFieldHint$2 = function TextFieldHint(props) {
  var prepareStyles = props.muiTheme.prepareStyles,
      style = props.style,
      text = props.text;


  var styles = getStyles$14(props);

  return _react2$1W.default.createElement(
    'div',
    { style: prepareStyles((0, _simpleAssign2$1p.default)(styles.root, style)) },
    text
  );
};

TextFieldHint$2.propTypes = {
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$1K.default.object.isRequired,
  /**
   * True if the hint text should be visible.
   */
  show: _propTypes2$1K.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1K.default.object,
  /**
   * The hint text displayed.
   */
  text: _propTypes2$1K.default.node
} ;

TextFieldHint$2.defaultProps = {
  show: true
};

TextFieldHint$3.default = TextFieldHint$2;

var TextFieldLabel$3 = {};

Object.defineProperty(TextFieldLabel$3, "__esModule", {
  value: true
});

var _simpleAssign$1o = simpleAssign;

var _simpleAssign2$1o = _interopRequireDefault$2O(_simpleAssign$1o);

var _react$1_ = react;

var _react2$1V = _interopRequireDefault$2O(_react$1_);

var _propTypes$1J = propTypes$5.exports;

var _propTypes2$1J = _interopRequireDefault$2O(_propTypes$1J);

var _transitions$A = transitions;

var _transitions2$A = _interopRequireDefault$2O(_transitions$A);

function _interopRequireDefault$2O(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$13(props) {
  var defaultStyles = {
    position: 'absolute',
    lineHeight: '22px',
    top: 38,
    transition: _transitions2$A.default.easeOut(),
    zIndex: 1, // Needed to display label above Chrome's autocomplete field background
    transform: 'scale(1) translate(0, 0)',
    transformOrigin: 'left top',
    pointerEvents: 'auto',
    userSelect: 'none'
  };

  var shrinkStyles = props.shrink ? (0, _simpleAssign2$1o.default)({
    transform: 'scale(0.75) translate(0, -28px)',
    pointerEvents: 'none'
  }, props.shrinkStyle) : null;

  return {
    root: (0, _simpleAssign2$1o.default)(defaultStyles, props.style, shrinkStyles)
  };
}

var TextFieldLabel$2 = function TextFieldLabel(props) {
  var muiTheme = props.muiTheme,
      className = props.className,
      children = props.children,
      htmlFor = props.htmlFor,
      onClick = props.onClick;
  var prepareStyles = muiTheme.prepareStyles;

  var styles = getStyles$13(props);

  return _react2$1V.default.createElement(
    'label',
    {
      className: className,
      style: prepareStyles(styles.root),
      htmlFor: htmlFor,
      onClick: onClick
    },
    children
  );
};

TextFieldLabel$2.propTypes = {
  /**
   * The label contents.
   */
  children: _propTypes2$1J.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1J.default.string,
  /**
   * Disables the label if set to true.
   */
  disabled: _propTypes2$1J.default.bool,
  /**
   * The id of the target element that this label should refer to.
   */
  htmlFor: _propTypes2$1J.default.string,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$1J.default.object.isRequired,
  /**
   * Callback function for when the label is selected via a click.
   *
   * @param {object} event Click event targeting the text field label.
   */
  onClick: _propTypes2$1J.default.func,
  /**
   * True if the floating label should shrink.
   */
  shrink: _propTypes2$1J.default.bool,
  /**
   * Override the inline-styles of the root element when shrunk.
   */
  shrinkStyle: _propTypes2$1J.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1J.default.object
} ;

TextFieldLabel$2.defaultProps = {
  disabled: false,
  shrink: false
};

TextFieldLabel$3.default = TextFieldLabel$2;

var TextFieldUnderline$3 = {};

Object.defineProperty(TextFieldUnderline$3, "__esModule", {
  value: true
});

var _simpleAssign$1n = simpleAssign;

var _simpleAssign2$1n = _interopRequireDefault$2N(_simpleAssign$1n);

var _react$1Z = react;

var _react2$1U = _interopRequireDefault$2N(_react$1Z);

var _propTypes$1I = propTypes$5.exports;

var _propTypes2$1I = _interopRequireDefault$2N(_propTypes$1I);

var _transitions$z = transitions;

var _transitions2$z = _interopRequireDefault$2N(_transitions$z);

function _interopRequireDefault$2N(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes$2 = {
  /**
   * True if the parent `TextField` is disabled.
   */
  disabled: _propTypes2$1I.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is disabled.
   */
  disabledStyle: _propTypes2$1I.default.object,
  /**
   * True if the parent `TextField` has an error.
   */
  error: _propTypes2$1I.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` has an error.
   */
  errorStyle: _propTypes2$1I.default.object,
  /**
   * True if the parent `TextField` is focused.
   */
  focus: _propTypes2$1I.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is focused.
   */
  focusStyle: _propTypes2$1I.default.object,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$1I.default.object.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1I.default.object
};

var defaultProps$1 = {
  disabled: false,
  disabledStyle: {},
  error: false,
  errorStyle: {},
  focus: false,
  focusStyle: {},
  style: {}
};

var TextFieldUnderline$2 = function TextFieldUnderline(props) {
  var disabled = props.disabled,
      disabledStyle = props.disabledStyle,
      error = props.error,
      errorStyle = props.errorStyle,
      focus = props.focus,
      focusStyle = props.focusStyle,
      muiTheme = props.muiTheme,
      style = props.style;
  var errorStyleColor = errorStyle.color;
  var prepareStyles = muiTheme.prepareStyles,
      _muiTheme$textField = muiTheme.textField,
      borderColor = _muiTheme$textField.borderColor,
      disabledTextColor = _muiTheme$textField.disabledTextColor,
      errorColor = _muiTheme$textField.errorColor,
      focusColor = _muiTheme$textField.focusColor;


  var styles = {
    root: {
      borderTop: 'none',
      borderLeft: 'none',
      borderRight: 'none',
      borderBottomStyle: 'solid',
      borderBottomWidth: 1,
      borderColor: borderColor,
      bottom: 8,
      boxSizing: 'content-box',
      margin: 0,
      position: 'absolute',
      width: '100%'
    },
    disabled: {
      borderBottomStyle: 'dotted',
      borderBottomWidth: 2,
      borderColor: disabledTextColor
    },
    focus: {
      borderBottomStyle: 'solid',
      borderBottomWidth: 2,
      borderColor: focusColor,
      transform: 'scaleX(0)',
      transition: _transitions2$z.default.easeOut()
    },
    error: {
      borderColor: errorStyleColor ? errorStyleColor : errorColor,
      transform: 'scaleX(1)'
    }
  };

  var underline = (0, _simpleAssign2$1n.default)({}, styles.root, style);
  var focusedUnderline = (0, _simpleAssign2$1n.default)({}, underline, styles.focus, focusStyle);

  if (disabled) underline = (0, _simpleAssign2$1n.default)({}, underline, styles.disabled, disabledStyle);
  if (focus) focusedUnderline = (0, _simpleAssign2$1n.default)({}, focusedUnderline, { transform: 'scaleX(1)' });
  if (error) focusedUnderline = (0, _simpleAssign2$1n.default)({}, focusedUnderline, styles.error);

  return _react2$1U.default.createElement(
    'div',
    null,
    _react2$1U.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(underline) }),
    _react2$1U.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(focusedUnderline) })
  );
};

TextFieldUnderline$2.propTypes = propTypes$2 ;
TextFieldUnderline$2.defaultProps = defaultProps$1;

TextFieldUnderline$3.default = TextFieldUnderline$2;

Object.defineProperty(TextField$5, "__esModule", {
  value: true
});

var _extends2$1d = _extends$3;

var _extends3$1d = _interopRequireDefault$2M(_extends2$1d);

var _objectWithoutProperties2$1c = objectWithoutProperties$2;

var _objectWithoutProperties3$1c = _interopRequireDefault$2M(_objectWithoutProperties2$1c);

var _getPrototypeOf$1u = getPrototypeOf$1.exports;

var _getPrototypeOf2$1u = _interopRequireDefault$2M(_getPrototypeOf$1u);

var _classCallCheck2$1x = classCallCheck$3;

var _classCallCheck3$1x = _interopRequireDefault$2M(_classCallCheck2$1x);

var _createClass2$1w = createClass$2;

var _createClass3$1w = _interopRequireDefault$2M(_createClass2$1w);

var _possibleConstructorReturn2$1u = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1u = _interopRequireDefault$2M(_possibleConstructorReturn2$1u);

var _inherits2$1u = inherits$3;

var _inherits3$1u = _interopRequireDefault$2M(_inherits2$1u);

var _simpleAssign$1m = simpleAssign;

var _simpleAssign2$1m = _interopRequireDefault$2M(_simpleAssign$1m);

var _react$1Y = react;

var _react2$1T = _interopRequireDefault$2M(_react$1Y);

var _propTypes$1H = propTypes$5.exports;

var _propTypes2$1H = _interopRequireDefault$2M(_propTypes$1H);

var _reactDom$l = reactDom;

var _reactDom2$k = _interopRequireDefault$2M(_reactDom$l);

var _shallowEqual$8 = shallowEqual;

var _shallowEqual2$8 = _interopRequireDefault$2M(_shallowEqual$8);

var _transitions$y = transitions;

var _transitions2$y = _interopRequireDefault$2M(_transitions$y);

var _EnhancedTextarea$1 = EnhancedTextarea$3;

var _EnhancedTextarea2$1 = _interopRequireDefault$2M(_EnhancedTextarea$1);

var _TextFieldHint$1 = TextFieldHint$3;

var _TextFieldHint2$1 = _interopRequireDefault$2M(_TextFieldHint$1);

var _TextFieldLabel$1 = TextFieldLabel$3;

var _TextFieldLabel2$1 = _interopRequireDefault$2M(_TextFieldLabel$1);

var _TextFieldUnderline$1 = TextFieldUnderline$3;

var _TextFieldUnderline2$1 = _interopRequireDefault$2M(_TextFieldUnderline$1);

var _warning$b = warning_1$1;

var _warning2$b = _interopRequireDefault$2M(_warning$b);

function _interopRequireDefault$2M(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStyles$12 = function getStyles(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      _context$muiTheme$tex = _context$muiTheme.textField,
      floatingLabelColor = _context$muiTheme$tex.floatingLabelColor,
      focusColor = _context$muiTheme$tex.focusColor,
      textColor = _context$muiTheme$tex.textColor,
      disabledTextColor = _context$muiTheme$tex.disabledTextColor,
      backgroundColor = _context$muiTheme$tex.backgroundColor,
      errorColor = _context$muiTheme$tex.errorColor;


  var styles = {
    root: {
      fontSize: 16,
      lineHeight: '24px',
      width: props.fullWidth ? '100%' : 256,
      height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),
      display: 'inline-block',
      position: 'relative',
      backgroundColor: backgroundColor,
      fontFamily: baseTheme.fontFamily,
      transition: _transitions2$y.default.easeOut('200ms', 'height'),
      cursor: props.disabled ? 'not-allowed' : 'auto'
    },
    error: {
      position: 'relative',
      bottom: 2,
      fontSize: 12,
      lineHeight: '12px',
      color: errorColor,
      transition: _transitions2$y.default.easeOut()
    },
    floatingLabel: {
      color: props.disabled ? disabledTextColor : floatingLabelColor,
      pointerEvents: 'none'
    },
    input: {
      padding: 0,
      position: 'relative',
      width: '100%',
      border: 'none',
      outline: 'none',
      backgroundColor: 'rgba(0,0,0,0)',
      color: props.disabled ? disabledTextColor : textColor,
      cursor: 'inherit',
      font: 'inherit',
      WebkitOpacity: 1,
      WebkitTapHighlightColor: 'rgba(0,0,0,0)' // Remove mobile color flashing (deprecated style).
    },
    inputNative: {
      appearance: 'textfield' // Improve type search style.
    }
  };

  styles.textarea = (0, _simpleAssign2$1m.default)({}, styles.input, {
    marginTop: props.floatingLabelText ? 36 : 12,
    marginBottom: props.floatingLabelText ? -36 : -12,
    boxSizing: 'border-box',
    font: 'inherit'
  });

  // Do not assign a height to the textarea as he handles it on his own.
  styles.input.height = '100%';

  if (state.isFocused) {
    styles.floatingLabel.color = focusColor;
  }

  if (props.floatingLabelText) {
    styles.input.boxSizing = 'border-box';

    if (!props.multiLine) {
      styles.input.marginTop = 14;
    }

    if (state.errorText) {
      styles.error.bottom = !props.multiLine ? styles.error.fontSize + 3 : 3;
    }
  }

  if (state.errorText) {
    if (state.isFocused) {
      styles.floatingLabel.color = styles.error.color;
    }
  }

  return styles;
};

/**
 * Check if a value is valid to be displayed inside an input.
 *
 * @param The value to check.
 * @returns True if the string provided is valid, false otherwise.
 */
function isValid$1(value) {
  return value !== '' && value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);
}

var TextField$4 = function (_Component) {
  (0, _inherits3$1u.default)(TextField, _Component);

  function TextField() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1x.default)(this, TextField);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1u.default)(this, (_ref = TextField.__proto__ || (0, _getPrototypeOf2$1u.default)(TextField)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isFocused: false,
      errorText: undefined,
      hasValue: false
    }, _this.handleInputBlur = function (event) {
      _this.setState({ isFocused: false });
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleInputChange = function (event) {
      if (!_this.props.hasOwnProperty('value')) {
        _this.setState({ hasValue: isValid$1(event.target.value) });
      }
      if (_this.props.onChange) {
        _this.props.onChange(event, event.target.value);
      }
    }, _this.handleInputFocus = function (event) {
      if (_this.props.disabled) {
        return;
      }
      _this.setState({ isFocused: true });
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleHeightChange = function (event, height) {
      var newHeight = height + 24;
      if (_this.props.floatingLabelText) {
        newHeight += 24;
      }
      _reactDom2$k.default.findDOMNode(_this).style.height = newHeight + 'px';
    }, _temp), (0, _possibleConstructorReturn3$1u.default)(_this, _ret);
  }

  (0, _createClass3$1w.default)(TextField, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          children = _props.children,
          name = _props.name,
          hintText = _props.hintText,
          floatingLabelText = _props.floatingLabelText,
          id = _props.id;


      var propsLeaf = children ? children.props : this.props;

      this.setState({
        errorText: this.props.errorText,
        hasValue: isValid$1(propsLeaf.value) || isValid$1(propsLeaf.defaultValue)
      });

      (0, _warning2$b.default)(name || hintText || floatingLabelText || id, 'Material-UI: We don\'t have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.') ;

      var uniqueId = name + '-' + hintText + '-' + floatingLabelText + '-' + Math.floor(Math.random() * 0xFFFF);
      this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled && !this.props.disabled) {
        this.setState({
          isFocused: false
        });
      }

      if (nextProps.errorText !== this.props.errorText) {
        this.setState({
          errorText: nextProps.errorText
        });
      }

      if (nextProps.children && nextProps.children.props) {
        nextProps = nextProps.children.props;
      }

      if (nextProps.hasOwnProperty('value')) {
        var hasValue = isValid$1(nextProps.value);

        this.setState({
          hasValue: hasValue
        });
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$8.default)(this.props, nextProps) || !(0, _shallowEqual2$8.default)(this.state, nextState) || !(0, _shallowEqual2$8.default)(this.context, nextContext);
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this.input) {
        this.getInputNode().blur();
      }
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (this.input) {
        this.getInputNode().focus();
      }
    }
  }, {
    key: 'select',
    value: function select() {
      if (this.input) {
        this.getInputNode().select();
      }
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.input ? this.getInputNode().value : undefined;
    }
  }, {
    key: 'getInputNode',
    value: function getInputNode() {
      return this.props.children || this.props.multiLine ? this.input.getInputNode() : _reactDom2$k.default.findDOMNode(this.input);
    }
  }, {
    key: '_isControlled',
    value: function _isControlled() {
      return this.props.hasOwnProperty('value');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          disabled = _props2.disabled,
          errorStyle = _props2.errorStyle;
          _props2.errorText;
          var floatingLabelFixed = _props2.floatingLabelFixed,
          floatingLabelFocusStyle = _props2.floatingLabelFocusStyle,
          floatingLabelShrinkStyle = _props2.floatingLabelShrinkStyle,
          floatingLabelStyle = _props2.floatingLabelStyle,
          floatingLabelText = _props2.floatingLabelText;
          _props2.fullWidth;
          var hintText = _props2.hintText,
          hintStyle = _props2.hintStyle,
          id = _props2.id,
          inputStyle = _props2.inputStyle,
          multiLine = _props2.multiLine;
          _props2.onBlur;
          _props2.onChange;
          _props2.onFocus;
          var style = _props2.style,
          type = _props2.type,
          underlineDisabledStyle = _props2.underlineDisabledStyle,
          underlineFocusStyle = _props2.underlineFocusStyle,
          underlineShow = _props2.underlineShow,
          underlineStyle = _props2.underlineStyle,
          rows = _props2.rows,
          rowsMax = _props2.rowsMax,
          textareaStyle = _props2.textareaStyle,
          other = (0, _objectWithoutProperties3$1c.default)(_props2, ['children', 'className', 'disabled', 'errorStyle', 'errorText', 'floatingLabelFixed', 'floatingLabelFocusStyle', 'floatingLabelShrinkStyle', 'floatingLabelStyle', 'floatingLabelText', 'fullWidth', 'hintText', 'hintStyle', 'id', 'inputStyle', 'multiLine', 'onBlur', 'onChange', 'onFocus', 'style', 'type', 'underlineDisabledStyle', 'underlineFocusStyle', 'underlineShow', 'underlineStyle', 'rows', 'rowsMax', 'textareaStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$12(this.props, this.context, this.state);
      var inputId = id || this.uniqueId;

      var errorTextElement = this.state.errorText && _react2$1T.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$1m.default)(styles.error, errorStyle)) },
        this.state.errorText
      );

      var floatingLabelTextElement = floatingLabelText && _react2$1T.default.createElement(
        _TextFieldLabel2$1.default,
        {
          muiTheme: this.context.muiTheme,
          style: (0, _simpleAssign2$1m.default)(styles.floatingLabel, floatingLabelStyle, this.state.isFocused ? floatingLabelFocusStyle : null),
          shrinkStyle: floatingLabelShrinkStyle,
          htmlFor: inputId,
          shrink: this.state.hasValue || this.state.isFocused || floatingLabelFixed,
          disabled: disabled
        },
        floatingLabelText
      );

      var inputProps = {
        id: inputId,
        ref: function ref(elem) {
          return _this2.input = elem;
        },
        disabled: this.props.disabled,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onFocus: this.handleInputFocus
      };

      var childStyleMerged = (0, _simpleAssign2$1m.default)(styles.input, inputStyle);

      var inputElement = void 0;
      if (children) {
        inputElement = _react2$1T.default.cloneElement(children, (0, _extends3$1d.default)({}, inputProps, children.props, {
          style: (0, _simpleAssign2$1m.default)(childStyleMerged, children.props.style)
        }));
      } else {
        inputElement = multiLine ? _react2$1T.default.createElement(_EnhancedTextarea2$1.default, (0, _extends3$1d.default)({
          style: childStyleMerged,
          textareaStyle: (0, _simpleAssign2$1m.default)(styles.textarea, styles.inputNative, textareaStyle),
          rows: rows,
          rowsMax: rowsMax,
          hintText: hintText
        }, other, inputProps, {
          onHeightChange: this.handleHeightChange
        })) : _react2$1T.default.createElement('input', (0, _extends3$1d.default)({
          type: type,
          style: prepareStyles((0, _simpleAssign2$1m.default)(styles.inputNative, childStyleMerged))
        }, other, inputProps));
      }

      var rootProps = {};

      if (children) {
        rootProps = other;
      }

      return _react2$1T.default.createElement(
        'div',
        (0, _extends3$1d.default)({}, rootProps, {
          className: className,
          style: prepareStyles((0, _simpleAssign2$1m.default)(styles.root, style))
        }),
        floatingLabelTextElement,
        hintText ? _react2$1T.default.createElement(_TextFieldHint2$1.default, {
          muiTheme: this.context.muiTheme,
          show: !(this.state.hasValue || floatingLabelText && !this.state.isFocused) || !this.state.hasValue && floatingLabelText && floatingLabelFixed && !this.state.isFocused,
          style: hintStyle,
          text: hintText
        }) : null,
        inputElement,
        underlineShow ? _react2$1T.default.createElement(_TextFieldUnderline2$1.default, {
          disabled: disabled,
          disabledStyle: underlineDisabledStyle,
          error: !!this.state.errorText,
          errorStyle: errorStyle,
          focus: this.state.isFocused,
          focusStyle: underlineFocusStyle,
          muiTheme: this.context.muiTheme,
          style: underlineStyle
        }) : null,
        errorTextElement
      );
    }
  }]);
  return TextField;
}(_react$1Y.Component);

TextField$4.defaultProps = {
  disabled: false,
  floatingLabelFixed: false,
  multiLine: false,
  fullWidth: false,
  type: 'text',
  underlineShow: true,
  rows: 1
};
TextField$4.contextTypes = {
  muiTheme: _propTypes2$1H.default.object.isRequired
};
TextField$4.propTypes = {
  children: _propTypes2$1H.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1H.default.string,
  /**
   * The text string to use for the default value.
   */
  defaultValue: _propTypes2$1H.default.any,
  /**
   * Disables the text field if set to true.
   */
  disabled: _propTypes2$1H.default.bool,
  /**
   * The style object to use to override error styles.
   */
  errorStyle: _propTypes2$1H.default.object,
  /**
   * The error content to display.
   */
  errorText: _propTypes2$1H.default.node,
  /**
   * If true, the floating label will float even when there is no value.
   */
  floatingLabelFixed: _propTypes2$1H.default.bool,
  /**
   * The style object to use to override floating label styles when focused.
   */
  floatingLabelFocusStyle: _propTypes2$1H.default.object,
  /**
   * The style object to use to override floating label styles when shrunk.
   */
  floatingLabelShrinkStyle: _propTypes2$1H.default.object,
  /**
   * The style object to use to override floating label styles.
   */
  floatingLabelStyle: _propTypes2$1H.default.object,
  /**
   * The content to use for the floating label element.
   */
  floatingLabelText: _propTypes2$1H.default.node,
  /**
   * If true, the field receives the property width 100%.
   */
  fullWidth: _propTypes2$1H.default.bool,
  /**
   * Override the inline-styles of the TextField's hint text element.
   */
  hintStyle: _propTypes2$1H.default.object,
  /**
   * The hint content to display.
   */
  hintText: _propTypes2$1H.default.node,
  /**
   * The id prop for the text field.
   */
  id: _propTypes2$1H.default.string,
  /**
   * Override the inline-styles of the TextField's input element.
   * When multiLine is false: define the style of the input element.
   * When multiLine is true: define the style of the container of the textarea.
   */
  inputStyle: _propTypes2$1H.default.object,
  /**
   * If true, a textarea element will be rendered.
   * The textarea also grows and shrinks according to the number of lines.
   */
  multiLine: _propTypes2$1H.default.bool,
  /**
   * Name applied to the input.
   */
  name: _propTypes2$1H.default.string,
  /** @ignore */
  onBlur: _propTypes2$1H.default.func,
  /**
   * Callback function that is fired when the textfield's value changes.
   *
   * @param {object} event Change event targeting the text field.
   * @param {string} newValue The new value of the text field.
   */
  onChange: _propTypes2$1H.default.func,
  /** @ignore */
  onFocus: _propTypes2$1H.default.func,
  /**
   * Number of rows to display when multiLine option is set to true.
   */
  rows: _propTypes2$1H.default.number,
  /**
   * Maximum number of rows to display when
   * multiLine option is set to true.
   */
  rowsMax: _propTypes2$1H.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1H.default.object,
  /**
   * Override the inline-styles of the TextField's textarea element.
   * The TextField use either a textarea or an input,
   * this property has effects only when multiLine is true.
   */
  textareaStyle: _propTypes2$1H.default.object,
  /**
   * Specifies the type of input to display
   * such as "password" or "text".
   */
  type: _propTypes2$1H.default.string,
  /**
   * Override the inline-styles of the
   * TextField's underline element when disabled.
   */
  underlineDisabledStyle: _propTypes2$1H.default.object,
  /**
   * Override the inline-styles of the TextField's
   * underline element when focussed.
   */
  underlineFocusStyle: _propTypes2$1H.default.object,
  /**
   * If true, shows the underline for the text field.
   */
  underlineShow: _propTypes2$1H.default.bool,
  /**
   * Override the inline-styles of the TextField's underline element.
   */
  underlineStyle: _propTypes2$1H.default.object,
  /**
   * The value of the text field.
   */
  value: _propTypes2$1H.default.any
} ;
var _default$g = TextField$5.default = TextField$4;

Object.defineProperty(TextField$6, "__esModule", {
  value: true
});
var _default$f = TextField$6.default = undefined;

var _TextField$6 = TextField$5;

var _TextField2$6 = _interopRequireDefault$2L(_TextField$6);

function _interopRequireDefault$2L(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$f = TextField$6.default = _TextField2$6.default;

var Menu$5 = {};

var Menu$4 = {};

var ClickAwayListener$1 = {};

Object.defineProperty(ClickAwayListener$1, "__esModule", {
  value: true
});

var _getPrototypeOf$1t = getPrototypeOf$1.exports;

var _getPrototypeOf2$1t = _interopRequireDefault$2K(_getPrototypeOf$1t);

var _classCallCheck2$1w = classCallCheck$3;

var _classCallCheck3$1w = _interopRequireDefault$2K(_classCallCheck2$1w);

var _createClass2$1v = createClass$2;

var _createClass3$1v = _interopRequireDefault$2K(_createClass2$1v);

var _possibleConstructorReturn2$1t = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1t = _interopRequireDefault$2K(_possibleConstructorReturn2$1t);

var _inherits2$1t = inherits$3;

var _inherits3$1t = _interopRequireDefault$2K(_inherits2$1t);

var _react$1X = react;

var _propTypes$1G = propTypes$5.exports;

var _propTypes2$1G = _interopRequireDefault$2K(_propTypes$1G);

var _reactDom$k = reactDom;

var _reactDom2$j = _interopRequireDefault$2K(_reactDom$k);

var _events$2 = events;

var _events2$2 = _interopRequireDefault$2K(_events$2);

function _interopRequireDefault$2K(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDescendant = function isDescendant(el, target) {
  if (target !== null) {
    return el === target || isDescendant(el, target.parentNode);
  }
  return false;
};

var clickAwayEvents = ['mouseup', 'touchend'];
var bind = function bind(callback) {
  return clickAwayEvents.forEach(function (event) {
    return _events2$2.default.on(document, event, callback);
  });
};
var unbind = function unbind(callback) {
  return clickAwayEvents.forEach(function (event) {
    return _events2$2.default.off(document, event, callback);
  });
};

var ClickAwayListener = function (_Component) {
  (0, _inherits3$1t.default)(ClickAwayListener, _Component);

  function ClickAwayListener() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1w.default)(this, ClickAwayListener);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1t.default)(this, (_ref = ClickAwayListener.__proto__ || (0, _getPrototypeOf2$1t.default)(ClickAwayListener)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickAway = function (event) {
      if (event.defaultPrevented) {
        return;
      }

      // IE11 support, which trigger the handleClickAway even after the unbind
      if (_this.isCurrentlyMounted) {
        var el = _reactDom2$j.default.findDOMNode(_this);

        if (document.documentElement.contains(event.target) && !isDescendant(el, event.target)) {
          _this.props.onClickAway(event);
        }
      }
    }, _temp), (0, _possibleConstructorReturn3$1t.default)(_this, _ret);
  }

  (0, _createClass3$1v.default)(ClickAwayListener, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.isCurrentlyMounted = true;
      if (this.props.onClickAway) {
        bind(this.handleClickAway);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.onClickAway !== this.props.onClickAway) {
        unbind(this.handleClickAway);
        if (this.props.onClickAway) {
          bind(this.handleClickAway);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.isCurrentlyMounted = false;
      unbind(this.handleClickAway);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);
  return ClickAwayListener;
}(_react$1X.Component);

ClickAwayListener.propTypes = {
  children: _propTypes2$1G.default.element,
  onClickAway: _propTypes2$1G.default.func
} ;
ClickAwayListener$1.default = ClickAwayListener;

var List$4 = {};

var Subheader$2 = {};

var Subheader$1 = {};

Object.defineProperty(Subheader$1, "__esModule", {
  value: true
});

var _extends2$1c = _extends$3;

var _extends3$1c = _interopRequireDefault$2J(_extends2$1c);

var _objectWithoutProperties2$1b = objectWithoutProperties$2;

var _objectWithoutProperties3$1b = _interopRequireDefault$2J(_objectWithoutProperties2$1b);

var _simpleAssign$1l = simpleAssign;

var _simpleAssign2$1l = _interopRequireDefault$2J(_simpleAssign$1l);

var _react$1W = react;

var _react2$1S = _interopRequireDefault$2J(_react$1W);

var _propTypes$1F = propTypes$5.exports;

var _propTypes2$1F = _interopRequireDefault$2J(_propTypes$1F);

function _interopRequireDefault$2J(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Subheader = function Subheader(props, context) {
  var children = props.children,
      inset = props.inset,
      style = props.style,
      other = (0, _objectWithoutProperties3$1b.default)(props, ['children', 'inset', 'style']);
  var _context$muiTheme = context.muiTheme,
      prepareStyles = _context$muiTheme.prepareStyles,
      subheader = _context$muiTheme.subheader;


  var styles = {
    root: {
      boxSizing: 'border-box',
      color: subheader.color,
      fontSize: 14,
      fontWeight: subheader.fontWeight,
      lineHeight: '48px',
      paddingLeft: inset ? 72 : 16,
      width: '100%'
    }
  };

  return _react2$1S.default.createElement(
    'div',
    (0, _extends3$1c.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1l.default)(styles.root, style)) }),
    children
  );
};

Subheader.muiName = 'Subheader';

Subheader.propTypes = {
  /**
   * Node that will be placed inside the `Subheader`.
   */
  children: _propTypes2$1F.default.node,
  /**
   * If true, the `Subheader` will be indented.
   */
  inset: _propTypes2$1F.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1F.default.object
} ;

Subheader.defaultProps = {
  inset: false
};

Subheader.contextTypes = {
  muiTheme: _propTypes2$1F.default.object.isRequired
};

Subheader$1.default = Subheader;

Object.defineProperty(Subheader$2, "__esModule", {
  value: true
});
Subheader$2.default = undefined;

var _Subheader$2 = Subheader$1;

var _Subheader2$2 = _interopRequireDefault$2I(_Subheader$2);

function _interopRequireDefault$2I(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Subheader$2.default = _Subheader2$2.default;

Object.defineProperty(List$4, "__esModule", {
  value: true
});

var _extends2$1b = _extends$3;

var _extends3$1b = _interopRequireDefault$2H(_extends2$1b);

var _objectWithoutProperties2$1a = objectWithoutProperties$2;

var _objectWithoutProperties3$1a = _interopRequireDefault$2H(_objectWithoutProperties2$1a);

var _getPrototypeOf$1s = getPrototypeOf$1.exports;

var _getPrototypeOf2$1s = _interopRequireDefault$2H(_getPrototypeOf$1s);

var _classCallCheck2$1v = classCallCheck$3;

var _classCallCheck3$1v = _interopRequireDefault$2H(_classCallCheck2$1v);

var _createClass2$1u = createClass$2;

var _createClass3$1u = _interopRequireDefault$2H(_createClass2$1u);

var _possibleConstructorReturn2$1s = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1s = _interopRequireDefault$2H(_possibleConstructorReturn2$1s);

var _inherits2$1s = inherits$3;

var _inherits3$1s = _interopRequireDefault$2H(_inherits2$1s);

var _simpleAssign$1k = simpleAssign;

var _simpleAssign2$1k = _interopRequireDefault$2H(_simpleAssign$1k);

var _react$1V = react;

var _react2$1R = _interopRequireDefault$2H(_react$1V);

var _propTypes$1E = propTypes$5.exports;

var _propTypes2$1E = _interopRequireDefault$2H(_propTypes$1E);

var _Subheader$1 = Subheader$2;

var _Subheader2$1 = _interopRequireDefault$2H(_Subheader$1);

function _interopRequireDefault$2H(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var List$3 = function (_Component) {
  (0, _inherits3$1s.default)(List, _Component);

  function List() {
    (0, _classCallCheck3$1v.default)(this, List);
    return (0, _possibleConstructorReturn3$1s.default)(this, (List.__proto__ || (0, _getPrototypeOf2$1s.default)(List)).apply(this, arguments));
  }

  (0, _createClass3$1u.default)(List, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          other = (0, _objectWithoutProperties3$1a.default)(_props, ['children', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var hasSubheader = false;

      var firstChild = _react$1V.Children.toArray(children)[0];
      if ((0, _react$1V.isValidElement)(firstChild) && firstChild.type === _Subheader2$1.default) {
        hasSubheader = true;
      }

      var styles = {
        root: {
          padding: (hasSubheader ? 0 : 8) + 'px 0px 8px 0px'
        }
      };

      return _react2$1R.default.createElement(
        'div',
        (0, _extends3$1b.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1k.default)(styles.root, style)) }),
        children
      );
    }
  }]);
  return List;
}(_react$1V.Component);

List$3.contextTypes = {
  muiTheme: _propTypes2$1E.default.object.isRequired
};
List$3.propTypes = {
  /**
   * These are usually `ListItem`s that are passed to
   * be part of the list.
   */
  children: _propTypes2$1E.default.node,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1E.default.object
} ;
var _default$e = List$4.default = List$3;

var menuUtils$1 = {};

Object.defineProperty(menuUtils$1, "__esModule", {
  value: true
});
menuUtils$1.HotKeyHolder = undefined;

var _classCallCheck2$1u = classCallCheck$3;

var _classCallCheck3$1u = _interopRequireDefault$2G(_classCallCheck2$1u);

var _createClass2$1t = createClass$2;

var _createClass3$1t = _interopRequireDefault$2G(_createClass2$1t);

function _interopRequireDefault$2G(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

menuUtils$1.HotKeyHolder = function () {
  function HotKeyHolder() {
    var _this = this;

    (0, _classCallCheck3$1u.default)(this, HotKeyHolder);

    this.clear = function () {
      _this.timerId = null;
      _this.lastKeys = null;
    };
  }

  (0, _createClass3$1t.default)(HotKeyHolder, [{
    key: 'append',
    value: function append(key) {
      clearTimeout(this.timerId);
      this.timerId = setTimeout(this.clear, 500);
      return this.lastKeys = (this.lastKeys || '') + key;
    }
  }]);
  return HotKeyHolder;
}();

Object.defineProperty(Menu$4, "__esModule", {
  value: true
});

var _extends2$1a = _extends$3;

var _extends3$1a = _interopRequireDefault$2F(_extends2$1a);

var _objectWithoutProperties2$19 = objectWithoutProperties$2;

var _objectWithoutProperties3$19 = _interopRequireDefault$2F(_objectWithoutProperties2$19);

var _toArray2$1 = toArray;

var _toArray3$1 = _interopRequireDefault$2F(_toArray2$1);

var _getPrototypeOf$1r = getPrototypeOf$1.exports;

var _getPrototypeOf2$1r = _interopRequireDefault$2F(_getPrototypeOf$1r);

var _classCallCheck2$1t = classCallCheck$3;

var _classCallCheck3$1t = _interopRequireDefault$2F(_classCallCheck2$1t);

var _createClass2$1s = createClass$2;

var _createClass3$1s = _interopRequireDefault$2F(_createClass2$1s);

var _possibleConstructorReturn2$1r = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1r = _interopRequireDefault$2F(_possibleConstructorReturn2$1r);

var _inherits2$1r = inherits$3;

var _inherits3$1r = _interopRequireDefault$2F(_inherits2$1r);

var _simpleAssign$1j = simpleAssign;

var _simpleAssign2$1j = _interopRequireDefault$2F(_simpleAssign$1j);

var _react$1U = react;

var _react2$1Q = _interopRequireDefault$2F(_react$1U);

var _propTypes$1D = propTypes$5.exports;

var _propTypes2$1D = _interopRequireDefault$2F(_propTypes$1D);

var _reactDom$j = reactDom;

var _reactDom2$i = _interopRequireDefault$2F(_reactDom$j);

var _shallowEqual$7 = shallowEqual;

var _shallowEqual2$7 = _interopRequireDefault$2F(_shallowEqual$7);

var _ClickAwayListener$3 = ClickAwayListener$1;

var _ClickAwayListener2$3 = _interopRequireDefault$2F(_ClickAwayListener$3);

var _keycode$b = keycode.exports;

var _keycode2$b = _interopRequireDefault$2F(_keycode$b);

var _propTypes3$f = propTypes$3;

var _propTypes4$f = _interopRequireDefault$2F(_propTypes3$f);

var _List$3 = List$4;

var _List2$4 = _interopRequireDefault$2F(_List$3);

var _menuUtils$1 = menuUtils$1;

function _interopRequireDefault$2F(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$11(props, context) {
  var desktop = props.desktop,
      maxHeight = props.maxHeight,
      width = props.width;
  var muiTheme = context.muiTheme;


  var styles = {
    root: {
      // Nested div because the List scales x faster than it scales y
      zIndex: muiTheme.zIndex.menu,
      maxHeight: maxHeight,
      overflowY: maxHeight ? 'auto' : null
    },
    divider: {
      marginTop: 7,
      marginBottom: 8
    },
    list: {
      display: 'table-cell',
      paddingBottom: desktop ? 16 : 8,
      paddingTop: desktop ? 16 : 8,
      userSelect: 'none',
      width: width
    },
    selectedMenuItem: {
      color: muiTheme.menuItem.selectedTextColor
    }
  };

  return styles;
}

var Menu$3 = function (_Component) {
  (0, _inherits3$1r.default)(Menu, _Component);

  function Menu(props, context) {
    (0, _classCallCheck3$1t.default)(this, Menu);

    var _this = (0, _possibleConstructorReturn3$1r.default)(this, (Menu.__proto__ || (0, _getPrototypeOf2$1r.default)(Menu)).call(this, props, context));

    _initialiseProps$2.call(_this);

    var filteredChildren = _this.getFilteredChildren(props.children);
    var selectedIndex = _this.getLastSelectedIndex(props, filteredChildren);

    var newFocusIndex = props.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
    if (newFocusIndex !== -1 && props.onMenuItemFocusChange) {
      props.onMenuItemFocusChange(null, newFocusIndex);
    }
    _this.state = {
      focusIndex: newFocusIndex,
      isKeyboardFocused: props.initiallyKeyboardFocused,
      keyWidth: props.desktop ? 64 : 56
    };

    _this.hotKeyHolder = new _menuUtils$1.HotKeyHolder();
    return _this;
  }

  (0, _createClass3$1s.default)(Menu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.autoWidth) {
        this.setWidth();
      }
      this.setScollPosition();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var selectedIndex = void 0;
      var filteredChildren = this.getFilteredChildren(nextProps.children);

      if (this.props.multiple !== true) {
        selectedIndex = this.getLastSelectedIndex(nextProps, filteredChildren);
      } else {
        selectedIndex = this.state.focusIndex;
      }

      var newFocusIndex = nextProps.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
      if (newFocusIndex !== this.state.focusIndex && this.props.onMenuItemFocusChange) {
        this.props.onMenuItemFocusChange(null, newFocusIndex);
      }
      this.setState({
        focusIndex: newFocusIndex,
        keyWidth: nextProps.desktop ? 64 : 56
      });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$7.default)(this.props, nextProps) || !(0, _shallowEqual2$7.default)(this.state, nextState) || !(0, _shallowEqual2$7.default)(this.context, nextContext);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.autoWidth) this.setWidth();
    }
  }, {
    key: 'getValueLink',


    // Do not use outside of this component, it will be removed once valueLink is deprecated
    value: function getValueLink(props) {
      return props.valueLink || {
        value: props.value,
        requestChange: props.onChange
      };
    }
  }, {
    key: 'setKeyboardFocused',
    value: function setKeyboardFocused(keyboardFocused) {
      this.setState({
        isKeyboardFocused: keyboardFocused
      });
    }
  }, {
    key: 'getFilteredChildren',
    value: function getFilteredChildren(children) {
      var filteredChildren = [];
      _react2$1Q.default.Children.forEach(children, function (child) {
        if (child) {
          filteredChildren.push(child);
        }
      });
      return filteredChildren;
    }
  }, {
    key: 'cloneMenuItem',
    value: function cloneMenuItem(child, childIndex, styles, index) {
      var _this2 = this;

      var childIsDisabled = child.props.disabled;

      var selectedChildStyles = {};
      if (!childIsDisabled) {
        var selected = this.isChildSelected(child, this.props);

        if (selected) {
          (0, _simpleAssign2$1j.default)(selectedChildStyles, styles.selectedMenuItem, this.props.selectedMenuItemStyle);
        }
      }
      var mergedChildStyles = (0, _simpleAssign2$1j.default)({}, child.props.style, this.props.menuItemStyle, selectedChildStyles);

      var extraProps = {
        desktop: this.props.desktop,
        style: mergedChildStyles
      };
      if (!childIsDisabled) {
        var isFocused = childIndex === this.state.focusIndex;
        var focusState = 'none';
        if (isFocused) {
          focusState = this.state.isKeyboardFocused ? 'keyboard-focused' : 'focused';
        }

        (0, _simpleAssign2$1j.default)(extraProps, {
          focusState: focusState,
          onClick: function onClick(event) {
            _this2.handleMenuItemClick(event, child, index);
            if (child.props.onClick) child.props.onClick(event);
          },
          ref: isFocused ? 'focusedMenuItem' : null
        });
      }
      return _react2$1Q.default.cloneElement(child, extraProps);
    }
  }, {
    key: 'decrementKeyboardFocusIndex',
    value: function decrementKeyboardFocusIndex(event) {
      var index = this.state.focusIndex;

      index--;
      if (index < 0) index = 0;

      this.setFocusIndex(event, index, true);
    }
  }, {
    key: 'getMenuItemCount',
    value: function getMenuItemCount(filteredChildren) {
      var menuItemCount = 0;
      filteredChildren.forEach(function (child) {
        var childIsADivider = child.type && child.type.muiName === 'Divider';
        var childIsDisabled = child.props.disabled;
        if (!childIsADivider && !childIsDisabled) menuItemCount++;
      });
      return menuItemCount;
    }
  }, {
    key: 'getLastSelectedIndex',
    value: function getLastSelectedIndex(props, filteredChildren) {
      var _this3 = this;

      var selectedIndex = -1;
      var menuItemIndex = 0;

      filteredChildren.forEach(function (child) {
        var childIsADivider = child.type && child.type.muiName === 'Divider';

        if (_this3.isChildSelected(child, props)) selectedIndex = menuItemIndex;
        if (!childIsADivider) menuItemIndex++;
      });

      return selectedIndex;
    }
  }, {
    key: 'setFocusIndexStartsWith',
    value: function setFocusIndexStartsWith(event, keys, filteredChildren) {
      var foundIndex = -1;
      _react2$1Q.default.Children.forEach(filteredChildren, function (child, index) {
        if (foundIndex >= 0) {
          return;
        }
        var primaryText = child.props.primaryText;

        if (typeof primaryText === 'string' && primaryText.substr(0, keys.length).toLowerCase() === keys.toLowerCase()) {
          foundIndex = index;
        }
      });
      if (foundIndex >= 0) {
        this.setFocusIndex(event, foundIndex, true);
        return true;
      }
      return false;
    }
  }, {
    key: 'handleMenuItemClick',
    value: function handleMenuItemClick(event, item, index) {
      var children = this.props.children;
      var multiple = this.props.multiple;
      var valueLink = this.getValueLink(this.props);
      var menuValue = valueLink.value;
      var itemValue = item.props.value;
      var focusIndex = _react2$1Q.default.isValidElement(children) ? 0 : children.indexOf(item);

      this.setFocusIndex(event, focusIndex, false);

      if (multiple) {
        menuValue = menuValue || [];

        var itemIndex = menuValue.indexOf(itemValue);

        var _menuValue = menuValue,
            _menuValue2 = (0, _toArray3$1.default)(_menuValue),
            newMenuValue = _menuValue2.slice(0);

        if (itemIndex === -1) {
          newMenuValue.push(itemValue);
        } else {
          newMenuValue.splice(itemIndex, 1);
        }

        valueLink.requestChange(event, newMenuValue);
      } else if (!multiple && itemValue !== menuValue) {
        valueLink.requestChange(event, itemValue);
      }

      this.props.onItemClick(event, item, index);
    }
  }, {
    key: 'incrementKeyboardFocusIndex',
    value: function incrementKeyboardFocusIndex(event, filteredChildren) {
      var index = this.state.focusIndex;
      var maxIndex = this.getMenuItemCount(filteredChildren) - 1;

      index++;
      if (index > maxIndex) index = maxIndex;

      this.setFocusIndex(event, index, true);
    }
  }, {
    key: 'isChildSelected',
    value: function isChildSelected(child, props) {
      var menuValue = this.getValueLink(props).value;
      var childValue = child.props.value;

      if (props.multiple) {
        return menuValue && menuValue.length && menuValue.indexOf(childValue) !== -1;
      } else {
        return child.props.hasOwnProperty('value') && menuValue === childValue;
      }
    }
  }, {
    key: 'setFocusIndex',
    value: function setFocusIndex(event, newIndex, isKeyboardFocused) {
      if (this.props.onMenuItemFocusChange) {
        // Do this even if `newIndex === this.state.focusIndex` to allow users
        // to detect up-arrow on the first MenuItem or down-arrow on the last.
        this.props.onMenuItemFocusChange(event, newIndex);
      }
      this.setState({
        focusIndex: newIndex,
        isKeyboardFocused: isKeyboardFocused
      });
    }
  }, {
    key: 'setScollPosition',
    value: function setScollPosition() {
      var desktop = this.props.desktop;
      var focusedMenuItem = this.refs.focusedMenuItem;
      var menuItemHeight = desktop ? 32 : 48;

      if (focusedMenuItem) {
        var selectedOffSet = _reactDom2$i.default.findDOMNode(focusedMenuItem).offsetTop;

        // Make the focused item be the 2nd item in the list the user sees
        var scrollTop = selectedOffSet - menuItemHeight;
        if (scrollTop < menuItemHeight) scrollTop = 0;

        _reactDom2$i.default.findDOMNode(this.refs.scrollContainer).scrollTop = scrollTop;
      }
    }
  }, {
    key: 'cancelScrollEvent',
    value: function cancelScrollEvent(event) {
      event.stopPropagation();
      event.preventDefault();
      return false;
    }
  }, {
    key: 'setWidth',
    value: function setWidth() {
      var el = _reactDom2$i.default.findDOMNode(this);
      var listEl = _reactDom2$i.default.findDOMNode(this.refs.list);
      var elWidth = el.offsetWidth;
      var keyWidth = this.state.keyWidth;
      var minWidth = keyWidth * 1.5;
      var keyIncrements = elWidth / keyWidth;
      var newWidth = void 0;

      keyIncrements = keyIncrements <= 1.5 ? 1.5 : Math.ceil(keyIncrements);
      newWidth = keyIncrements * keyWidth;

      if (newWidth < minWidth) newWidth = minWidth;

      el.style.width = newWidth + 'px';
      listEl.style.width = newWidth + 'px';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props = this.props;
          _props.autoWidth;
          var children = _props.children;
          _props.desktop;
          _props.disableAutoFocus;
          _props.initiallyKeyboardFocused;
          var listStyle = _props.listStyle;
          _props.maxHeight;
          _props.multiple;
          _props.onItemClick;
          _props.onEscKeyDown;
          _props.onMenuItemFocusChange;
          _props.selectedMenuItemStyle;
          _props.menuItemStyle;
          var style = _props.style;
          _props.value;
          _props.valueLink;
          _props.width;
          var other = (0, _objectWithoutProperties3$19.default)(_props, ['autoWidth', 'children', 'desktop', 'disableAutoFocus', 'initiallyKeyboardFocused', 'listStyle', 'maxHeight', 'multiple', 'onItemClick', 'onEscKeyDown', 'onMenuItemFocusChange', 'selectedMenuItemStyle', 'menuItemStyle', 'style', 'value', 'valueLink', 'width']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$11(this.props, this.context);

      var mergedRootStyles = (0, _simpleAssign2$1j.default)(styles.root, style);
      var mergedListStyles = (0, _simpleAssign2$1j.default)(styles.list, listStyle);

      var filteredChildren = this.getFilteredChildren(children);

      var menuItemIndex = 0;
      var newChildren = _react2$1Q.default.Children.map(filteredChildren, function (child, index) {
        var childIsDisabled = child.props.disabled;
        var childName = child.type ? child.type.muiName : '';
        var newChild = child;

        switch (childName) {
          case 'MenuItem':
            newChild = _this4.cloneMenuItem(child, menuItemIndex, styles, index);
            break;

          case 'Divider':
            newChild = _react2$1Q.default.cloneElement(child, {
              style: (0, _simpleAssign2$1j.default)({}, styles.divider, child.props.style)
            });
            break;
        }

        if (childName === 'MenuItem' && !childIsDisabled) {
          menuItemIndex++;
        }

        return newChild;
      });

      return _react2$1Q.default.createElement(
        _ClickAwayListener2$3.default,
        { onClickAway: this.handleClickAway },
        _react2$1Q.default.createElement(
          'div',
          {
            onKeyDown: this.handleKeyDown,
            onWheel: this.handleOnWheel,
            style: prepareStyles(mergedRootStyles),
            ref: 'scrollContainer',
            role: 'presentation'
          },
          _react2$1Q.default.createElement(
            _List2$4.default,
            (0, _extends3$1a.default)({}, other, {
              ref: 'list',
              style: mergedListStyles,
              role: 'menu'
            }),
            newChildren
          )
        )
      );
    }
  }]);
  return Menu;
}(_react$1U.Component);

Menu$3.defaultProps = {
  autoWidth: true,
  desktop: false,
  disableAutoFocus: false,
  initiallyKeyboardFocused: false,
  maxHeight: null,
  multiple: false,
  onChange: function onChange() {},
  onEscKeyDown: function onEscKeyDown() {},
  onItemClick: function onItemClick() {},
  onKeyDown: function onKeyDown() {}
};
Menu$3.contextTypes = {
  muiTheme: _propTypes2$1D.default.object.isRequired
};

var _initialiseProps$2 = function _initialiseProps() {
  var _this5 = this;

  this.handleClickAway = function (event) {
    if (event.defaultPrevented) {
      return;
    }

    var focusIndex = _this5.state.focusIndex;

    if (focusIndex < 0) {
      return;
    }

    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
    var focusedItem = filteredChildren[focusIndex];
    if (!!focusedItem && focusedItem.props.menuItems && focusedItem.props.menuItems.length > 0) {
      return;
    }

    _this5.setFocusIndex(event, -1, false);
  };

  this.handleKeyDown = function (event) {
    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
    var key = (0, _keycode2$b.default)(event);
    switch (key) {
      case 'down':
        event.preventDefault();
        _this5.incrementKeyboardFocusIndex(event, filteredChildren);
        break;
      case 'esc':
        _this5.props.onEscKeyDown(event);
        break;
      case 'tab':
        event.preventDefault();
        if (event.shiftKey) {
          _this5.decrementKeyboardFocusIndex(event);
        } else {
          _this5.incrementKeyboardFocusIndex(event, filteredChildren);
        }
        break;
      case 'up':
        event.preventDefault();
        _this5.decrementKeyboardFocusIndex(event);
        break;
      default:
        if (key && key.length === 1) {
          var hotKeys = _this5.hotKeyHolder.append(key);
          if (_this5.setFocusIndexStartsWith(event, hotKeys, filteredChildren)) {
            event.preventDefault();
          }
        }
    }
    _this5.props.onKeyDown(event);
  };

  this.handleOnWheel = function (event) {
    var scrollContainer = _this5.refs.scrollContainer;
    // Only scroll lock if the the Menu is scrollable.
    if (scrollContainer.scrollHeight <= scrollContainer.clientHeight) return;

    var scrollTop = scrollContainer.scrollTop,
        scrollHeight = scrollContainer.scrollHeight,
        clientHeight = scrollContainer.clientHeight;

    var wheelDelta = event.deltaY;
    var isDeltaPositive = wheelDelta > 0;

    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {
      scrollContainer.scrollTop = scrollHeight;
      return _this5.cancelScrollEvent(event);
    } else if (!isDeltaPositive && -wheelDelta > scrollTop) {
      scrollContainer.scrollTop = 0;
      return _this5.cancelScrollEvent(event);
    }
  };
};

Menu$3.propTypes = {
  /**
   * If true, the width of the menu will be set automatically
   * according to the widths of its children,
   * using proper keyline increments (64px for desktop,
   * 56px otherwise).
   */
  autoWidth: _propTypes2$1D.default.bool,
  /**
   * The content of the menu. This is usually used to pass `MenuItem`
   * elements.
   */
  children: _propTypes2$1D.default.node,
  /**
   * If true, the menu item will render with compact desktop styles.
   */
  desktop: _propTypes2$1D.default.bool,
  /**
   * If true, the menu will not be auto-focused.
   */
  disableAutoFocus: _propTypes2$1D.default.bool,
  /**
   * If true, the menu will be keyboard-focused initially.
   */
  initiallyKeyboardFocused: _propTypes2$1D.default.bool,
  /**
   * Override the inline-styles of the underlying `List` element.
   */
  listStyle: _propTypes2$1D.default.object,
  /**
   * The maximum height of the menu in pixels. If specified,
   * the menu will be scrollable if it is taller than the provided
   * height.
   */
  maxHeight: _propTypes2$1D.default.number,
  /**
   * Override the inline-styles of menu items.
   */
  menuItemStyle: _propTypes2$1D.default.object,
  /**
   * If true, `value` must be an array and the menu will support
   * multiple selections.
   */
  multiple: _propTypes2$1D.default.bool,
  /**
   * Callback function fired when a menu item with `value` not
   * equal to the current `value` of the menu is clicked.
   *
   * @param {object} event Click event targeting the menu item.
   * @param {any}  value If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   */
  onChange: _propTypes2$1D.default.func,
  /**
   * Callback function fired when the menu is focused and the *Esc* key
   * is pressed.
   *
   * @param {object} event `keydown` event targeting the menu.
   */
  onEscKeyDown: _propTypes2$1D.default.func,
  /**
   * Callback function fired when a menu item is clicked.
   *
   * @param {object} event Click event targeting the menu item.
   * @param {object} menuItem The menu item.
   * @param {number} index The index of the menu item.
   */
  onItemClick: _propTypes2$1D.default.func,
  /** @ignore */
  onKeyDown: _propTypes2$1D.default.func,
  /**
   * Callback function fired when the focus on a `MenuItem` is changed.
   * There will be some "duplicate" changes reported if two different
   * focusing event happen, for example if a `MenuItem` is focused via
   * the keyboard and then it is clicked on.
   *
   * @param {object} event The event that triggered the focus change.
   * The event can be null since the focus can be changed for non-event
   * reasons such as prop changes.
   * @param {number} newFocusIndex The index of the newly focused
   * `MenuItem` or `-1` if focus was lost.
   */
  onMenuItemFocusChange: _propTypes2$1D.default.func,
  /**
   * Override the inline-styles of selected menu items.
   */
  selectedMenuItemStyle: _propTypes2$1D.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1D.default.object,
  /**
   * If `multiple` is true, an array of the `value`s of the selected
   * menu items. Otherwise, the `value` of the selected menu item.
   * If provided, the menu will be a controlled component.
   * This component also supports valueLink.
   */
  value: _propTypes2$1D.default.any,
  /**
   * ValueLink for the menu's `value`.
   */
  valueLink: _propTypes2$1D.default.object,
  /**
   * The width of the menu. If not specified, the menu's width
   * will be set according to the widths of its children, using
   * proper keyline increments (64px for desktop, 56px otherwise).
   */
  width: _propTypes4$f.default.stringOrNumber
} ;
Menu$4.default = Menu$3;

var MenuItem$5 = {};

var MenuItem$4 = {};

var Popover$5 = {};

var RenderToLayer$1 = {};

Object.defineProperty(RenderToLayer$1, "__esModule", {
  value: true
});

var _getPrototypeOf$1q = getPrototypeOf$1.exports;

var _getPrototypeOf2$1q = _interopRequireDefault$2E(_getPrototypeOf$1q);

var _classCallCheck2$1s = classCallCheck$3;

var _classCallCheck3$1s = _interopRequireDefault$2E(_classCallCheck2$1s);

var _createClass2$1r = createClass$2;

var _createClass3$1r = _interopRequireDefault$2E(_createClass2$1r);

var _possibleConstructorReturn2$1q = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1q = _interopRequireDefault$2E(_possibleConstructorReturn2$1q);

var _inherits2$1q = inherits$3;

var _inherits3$1q = _interopRequireDefault$2E(_inherits2$1q);

var _react$1T = react;

var _propTypes$1C = propTypes$5.exports;

var _propTypes2$1C = _interopRequireDefault$2E(_propTypes$1C);

var _reactDom$i = reactDom;

var _dom = dom;

var _dom2 = _interopRequireDefault$2E(_dom);

function _interopRequireDefault$2E(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// heavily inspired by https://github.com/Khan/react-components/blob/master/js/layered-component-mixin.jsx
var RenderToLayer = function (_Component) {
  (0, _inherits3$1q.default)(RenderToLayer, _Component);

  function RenderToLayer() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1s.default)(this, RenderToLayer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1q.default)(this, (_ref = RenderToLayer.__proto__ || (0, _getPrototypeOf2$1q.default)(RenderToLayer)).call.apply(_ref, [this].concat(args))), _this), _this.onClickAway = function (event) {
      if (event.defaultPrevented) {
        return;
      }

      if (!_this.props.componentClickAway) {
        return;
      }

      if (!_this.props.open) {
        return;
      }

      var el = _this.layer;
      if (event.target !== el && event.target === window || document.documentElement.contains(event.target) && !_dom2.default.isDescendant(el, event.target)) {
        _this.props.componentClickAway(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1q.default)(_this, _ret);
  }

  (0, _createClass3$1r.default)(RenderToLayer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.renderLayer();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.renderLayer();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unrenderLayer();
    }
  }, {
    key: 'getLayer',
    value: function getLayer() {
      return this.layer;
    }
  }, {
    key: 'unrenderLayer',
    value: function unrenderLayer() {
      if (!this.layer) {
        return;
      }

      if (this.props.useLayerForClickAway) {
        this.layer.style.position = 'relative';
        this.layer.removeEventListener('click', this.onClickAway);
      } else {
        window.removeEventListener('click', this.onClickAway);
      }

      (0, _reactDom$i.unmountComponentAtNode)(this.layer);
      document.body.removeChild(this.layer);
      this.layer = null;
    }

    /**
     * By calling this method in componentDidMount() and
     * componentDidUpdate(), you're effectively creating a "wormhole" that
     * funnels React's hierarchical updates through to a DOM node on an
     * entirely different part of the page.
     */

  }, {
    key: 'renderLayer',
    value: function renderLayer() {
      var _this2 = this;

      var _props = this.props,
          open = _props.open,
          render = _props.render;


      if (open) {
        if (!this.layer) {
          this.layer = document.createElement('div');
          document.body.appendChild(this.layer);

          if (this.props.useLayerForClickAway) {
            this.layer.addEventListener('click', this.onClickAway);
            this.layer.style.position = 'fixed';
            this.layer.style.top = 0;
            this.layer.style.bottom = 0;
            this.layer.style.left = 0;
            this.layer.style.right = 0;
            this.layer.style.zIndex = this.context.muiTheme.zIndex.layer;
          } else {
            setTimeout(function () {
              window.addEventListener('click', _this2.onClickAway);
            }, 0);
          }
        }

        var layerElement = render();
        this.layerElement = (0, _reactDom$i.unstable_renderSubtreeIntoContainer)(this, layerElement, this.layer);
      } else {
        this.unrenderLayer();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return RenderToLayer;
}(_react$1T.Component);

RenderToLayer.defaultProps = {
  useLayerForClickAway: true
};
RenderToLayer.contextTypes = {
  muiTheme: _propTypes2$1C.default.object.isRequired
};
RenderToLayer.propTypes = {
  componentClickAway: _propTypes2$1C.default.func,
  open: _propTypes2$1C.default.bool.isRequired,
  render: _propTypes2$1C.default.func.isRequired,
  useLayerForClickAway: _propTypes2$1C.default.bool
} ;
RenderToLayer$1.default = RenderToLayer;

var PopoverAnimationDefault$3 = {};

Object.defineProperty(PopoverAnimationDefault$3, "__esModule", {
  value: true
});

var _getPrototypeOf$1p = getPrototypeOf$1.exports;

var _getPrototypeOf2$1p = _interopRequireDefault$2D(_getPrototypeOf$1p);

var _classCallCheck2$1r = classCallCheck$3;

var _classCallCheck3$1r = _interopRequireDefault$2D(_classCallCheck2$1r);

var _createClass2$1q = createClass$2;

var _createClass3$1q = _interopRequireDefault$2D(_createClass2$1q);

var _possibleConstructorReturn2$1p = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1p = _interopRequireDefault$2D(_possibleConstructorReturn2$1p);

var _inherits2$1p = inherits$3;

var _inherits3$1p = _interopRequireDefault$2D(_inherits2$1p);

var _simpleAssign$1i = simpleAssign;

var _simpleAssign2$1i = _interopRequireDefault$2D(_simpleAssign$1i);

var _transitions$x = transitions;

var _transitions2$x = _interopRequireDefault$2D(_transitions$x);

var _react$1S = react;

var _react2$1P = _interopRequireDefault$2D(_react$1S);

var _propTypes$1B = propTypes$5.exports;

var _propTypes2$1B = _interopRequireDefault$2D(_propTypes$1B);

var _propTypes3$e = propTypes$3;

var _propTypes4$e = _interopRequireDefault$2D(_propTypes3$e);

var _Paper$b = Paper$2;

var _Paper2$b = _interopRequireDefault$2D(_Paper$b);

function _interopRequireDefault$2D(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$10(props, context, state) {
  var targetOrigin = props.targetOrigin;
  var open = state.open;
  var muiTheme = context.muiTheme;

  var horizontal = targetOrigin.horizontal.replace('middle', 'vertical');

  return {
    root: {
      position: 'fixed',
      zIndex: muiTheme.zIndex.popover,
      opacity: open ? 1 : 0,
      transform: open ? 'scale(1, 1)' : 'scale(0, 0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$x.default.easeOut('250ms', ['transform', 'opacity']),
      maxHeight: '100%'
    },
    horizontal: {
      maxHeight: '100%',
      overflowY: 'auto',
      transform: open ? 'scaleX(1)' : 'scaleX(0)',
      opacity: open ? 1 : 0,
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$x.default.easeOut('250ms', ['transform', 'opacity'])
    },
    vertical: {
      opacity: open ? 1 : 0,
      transform: open ? 'scaleY(1)' : 'scaleY(0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$x.default.easeOut('500ms', ['transform', 'opacity'])
    }
  };
}

var PopoverAnimationDefault$2 = function (_Component) {
  (0, _inherits3$1p.default)(PopoverAnimationDefault, _Component);

  function PopoverAnimationDefault() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1r.default)(this, PopoverAnimationDefault);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1p.default)(this, (_ref = PopoverAnimationDefault.__proto__ || (0, _getPrototypeOf2$1p.default)(PopoverAnimationDefault)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _temp), (0, _possibleConstructorReturn3$1p.default)(_this, _ret);
  }

  (0, _createClass3$1q.default)(PopoverAnimationDefault, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        open: nextProps.open
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          zDepth = _props.zDepth;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$10(this.props, this.context, this.state);

      return _react2$1P.default.createElement(
        _Paper2$b.default,
        {
          style: (0, _simpleAssign2$1i.default)(styles.root, style),
          zDepth: zDepth,
          className: className
        },
        _react2$1P.default.createElement(
          'div',
          { style: prepareStyles(styles.horizontal) },
          _react2$1P.default.createElement(
            'div',
            { style: prepareStyles(styles.vertical) },
            this.props.children
          )
        )
      );
    }
  }]);
  return PopoverAnimationDefault;
}(_react$1S.Component);

PopoverAnimationDefault$2.defaultProps = {
  style: {},
  zDepth: 1
};
PopoverAnimationDefault$2.contextTypes = {
  muiTheme: _propTypes2$1B.default.object.isRequired
};
PopoverAnimationDefault$2.propTypes = {
  children: _propTypes2$1B.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1B.default.string,
  open: _propTypes2$1B.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1B.default.object,
  targetOrigin: _propTypes4$e.default.origin.isRequired,
  zDepth: _propTypes4$e.default.zDepth
} ;
PopoverAnimationDefault$3.default = PopoverAnimationDefault$2;

Object.defineProperty(Popover$5, "__esModule", {
  value: true
});

var _extends2$19 = _extends$3;

var _extends3$19 = _interopRequireDefault$2C(_extends2$19);

var _objectWithoutProperties2$18 = objectWithoutProperties$2;

var _objectWithoutProperties3$18 = _interopRequireDefault$2C(_objectWithoutProperties2$18);

var _getPrototypeOf$1o = getPrototypeOf$1.exports;

var _getPrototypeOf2$1o = _interopRequireDefault$2C(_getPrototypeOf$1o);

var _classCallCheck2$1q = classCallCheck$3;

var _classCallCheck3$1q = _interopRequireDefault$2C(_classCallCheck2$1q);

var _createClass2$1p = createClass$2;

var _createClass3$1p = _interopRequireDefault$2C(_createClass2$1p);

var _possibleConstructorReturn2$1o = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1o = _interopRequireDefault$2C(_possibleConstructorReturn2$1o);

var _inherits2$1o = inherits$3;

var _inherits3$1o = _interopRequireDefault$2C(_inherits2$1o);

var _simpleAssign$1h = simpleAssign;

var _simpleAssign2$1h = _interopRequireDefault$2C(_simpleAssign$1h);

var _react$1R = react;

var _react2$1O = _interopRequireDefault$2C(_react$1R);

var _propTypes$1A = propTypes$5.exports;

var _propTypes2$1A = _interopRequireDefault$2C(_propTypes$1A);

var _reactDom$h = reactDom;

var _reactDom2$h = _interopRequireDefault$2C(_reactDom$h);

var _reactEventListener$9 = reactEventListener_cjs;

var _reactEventListener2$9 = _interopRequireDefault$2C(_reactEventListener$9);

var _RenderToLayer$2 = RenderToLayer$1;

var _RenderToLayer2$2 = _interopRequireDefault$2C(_RenderToLayer$2);

var _propTypes3$d = propTypes$3;

var _propTypes4$d = _interopRequireDefault$2C(_propTypes3$d);

var _Paper$a = Paper$2;

var _Paper2$a = _interopRequireDefault$2C(_Paper$a);

var _lodash$2 = lodash_throttle;

var _lodash2$2 = _interopRequireDefault$2C(_lodash$2);

var _PopoverAnimationDefault$1 = PopoverAnimationDefault$3;

var _PopoverAnimationDefault2$1 = _interopRequireDefault$2C(_PopoverAnimationDefault$1);

function _interopRequireDefault$2C(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$g = {
  root: {
    display: 'none'
  }
};

var Popover$4 = function (_Component) {
  (0, _inherits3$1o.default)(Popover, _Component);

  function Popover(props, context) {
    (0, _classCallCheck3$1q.default)(this, Popover);

    var _this = (0, _possibleConstructorReturn3$1o.default)(this, (Popover.__proto__ || (0, _getPrototypeOf2$1o.default)(Popover)).call(this, props, context));

    _this.timeout = null;

    _this.renderLayer = function () {
      var _this$props = _this.props,
          animated = _this$props.animated,
          animation = _this$props.animation;
          _this$props.anchorEl;
          _this$props.anchorOrigin;
          _this$props.autoCloseWhenOffScreen;
          _this$props.canAutoPosition;
          var children = _this$props.children;
          _this$props.onRequestClose;
          var style = _this$props.style,
          targetOrigin = _this$props.targetOrigin;
          _this$props.useLayerForClickAway;
          _this$props.scrollableContainer;
          var other = (0, _objectWithoutProperties3$18.default)(_this$props, ['animated', 'animation', 'anchorEl', 'anchorOrigin', 'autoCloseWhenOffScreen', 'canAutoPosition', 'children', 'onRequestClose', 'style', 'targetOrigin', 'useLayerForClickAway', 'scrollableContainer']);


      var styleRoot = style;

      if (!animated) {
        styleRoot = {
          position: 'fixed',
          zIndex: _this.context.muiTheme.zIndex.popover
        };

        if (!_this.state.open) {
          return null;
        }

        return _react2$1O.default.createElement(
          _Paper2$a.default,
          (0, _extends3$19.default)({ style: (0, _simpleAssign2$1h.default)(styleRoot, style) }, other),
          children
        );
      }

      var Animation = animation || _PopoverAnimationDefault2$1.default;

      return _react2$1O.default.createElement(
        Animation,
        (0, _extends3$19.default)({
          targetOrigin: targetOrigin,
          style: styleRoot
        }, other, {
          open: _this.state.open && !_this.state.closing
        }),
        children
      );
    };

    _this.componentClickAway = function () {
      _this.requestClose('clickAway');
    };

    _this.setPlacement = function (scrolling) {
      if (!_this.state.open) {
        return;
      }

      if (!_this.popoverRefs.layer.getLayer()) {
        return;
      }

      var targetEl = _this.popoverRefs.layer.getLayer().children[0];
      if (!targetEl) {
        return;
      }

      var _this$props2 = _this.props,
          targetOrigin = _this$props2.targetOrigin,
          anchorOrigin = _this$props2.anchorOrigin;

      var anchorEl = _this.props.anchorEl || _this.anchorEl;

      var anchor = _this.getAnchorPosition(anchorEl);
      var target = _this.getTargetPosition(targetEl);

      var targetPosition = {
        top: anchor[anchorOrigin.vertical] - target[targetOrigin.vertical],
        left: anchor[anchorOrigin.horizontal] - target[targetOrigin.horizontal]
      };

      if (scrolling && _this.props.autoCloseWhenOffScreen) {
        _this.autoCloseWhenOffScreen(anchor);
      }

      if (_this.props.canAutoPosition) {
        target = _this.getTargetPosition(targetEl); // update as height may have changed
        targetPosition = _this.applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition);
      }

      targetEl.style.top = targetPosition.top + 'px';
      targetEl.style.left = targetPosition.left + 'px';
      targetEl.style.maxHeight = window.innerHeight + 'px';
    };

    _this.handleResize = (0, _lodash2$2.default)(_this.setPlacement, 100);
    _this.handleScroll = (0, _lodash2$2.default)(_this.setPlacement.bind(_this, true), 50);

    _this.popoverRefs = {};

    _this.state = {
      open: props.open,
      closing: false
    };
    return _this;
  }

  (0, _createClass3$1p.default)(Popover, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.placementTimeout = setTimeout(this.setPlacement);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (nextProps.open === this.props.open) {
        return;
      }

      if (nextProps.open) {
        clearTimeout(this.timeout);
        this.timeout = null;
        this.anchorEl = nextProps.anchorEl || this.props.anchorEl;
        this.setState({
          open: true,
          closing: false
        });
      } else {
        if (nextProps.animated) {
          if (this.timeout !== null) return;
          this.setState({ closing: true });
          this.timeout = setTimeout(function () {
            _this2.setState({
              open: false
            }, function () {
              _this2.timeout = null;
            });
          }, 500);
        } else {
          this.setState({
            open: false
          });
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      clearTimeout(this.placementTimeout);
      this.placementTimeout = setTimeout(this.setPlacement);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.handleResize.cancel();
      this.handleScroll.cancel();

      if (this.placementTimeout) {
        clearTimeout(this.placementTimeout);
        this.placementTimeout = null;
      }

      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
    }
  }, {
    key: 'requestClose',
    value: function requestClose(reason) {
      if (this.props.onRequestClose) {
        this.props.onRequestClose(reason);
      }
    }
  }, {
    key: 'getAnchorPosition',
    value: function getAnchorPosition(el) {
      if (!el) {
        el = _reactDom2$h.default.findDOMNode(this);
      }

      var rect = el.getBoundingClientRect();
      var a = {
        top: rect.top,
        left: rect.left,
        width: el.offsetWidth,
        height: el.offsetHeight
      };

      a.right = rect.right || a.left + a.width;
      a.bottom = rect.bottom || a.top + a.height;
      a.middle = a.left + (a.right - a.left) / 2;
      a.center = a.top + (a.bottom - a.top) / 2;

      return a;
    }
  }, {
    key: 'getTargetPosition',
    value: function getTargetPosition(targetEl) {
      return {
        top: 0,
        center: targetEl.offsetHeight / 2,
        bottom: targetEl.offsetHeight,
        left: 0,
        middle: targetEl.offsetWidth / 2,
        right: targetEl.offsetWidth
      };
    }
  }, {
    key: 'autoCloseWhenOffScreen',
    value: function autoCloseWhenOffScreen(anchorPosition) {
      if (anchorPosition.top < 0 || anchorPosition.top > window.innerHeight || anchorPosition.left < 0 || anchorPosition.left > window.innerWidth) {
        this.requestClose('offScreen');
      }
    }
  }, {
    key: 'getOverlapMode',
    value: function getOverlapMode(anchor, target, median) {
      if ([anchor, target].indexOf(median) >= 0) return 'auto';
      if (anchor === target) return 'inclusive';
      return 'exclusive';
    }
  }, {
    key: 'getPositions',
    value: function getPositions(anchor, target) {
      var a = (0, _extends3$19.default)({}, anchor);
      var t = (0, _extends3$19.default)({}, target);

      var positions = {
        x: ['left', 'right'].filter(function (p) {
          return p !== t.horizontal;
        }),
        y: ['top', 'bottom'].filter(function (p) {
          return p !== t.vertical;
        })
      };

      var overlap = {
        x: this.getOverlapMode(a.horizontal, t.horizontal, 'middle'),
        y: this.getOverlapMode(a.vertical, t.vertical, 'center')
      };

      positions.x.splice(overlap.x === 'auto' ? 0 : 1, 0, 'middle');
      positions.y.splice(overlap.y === 'auto' ? 0 : 1, 0, 'center');

      if (overlap.y !== 'auto') {
        a.vertical = a.vertical === 'top' ? 'bottom' : 'top';
        if (overlap.y === 'inclusive') {
          t.vertical = t.vertical;
        }
      }

      if (overlap.x !== 'auto') {
        a.horizontal = a.horizontal === 'left' ? 'right' : 'left';
        if (overlap.y === 'inclusive') {
          t.horizontal = t.horizontal;
        }
      }

      return {
        positions: positions,
        anchorPos: a
      };
    }
  }, {
    key: 'applyAutoPositionIfNeeded',
    value: function applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition) {
      var _getPositions = this.getPositions(anchorOrigin, targetOrigin),
          positions = _getPositions.positions,
          anchorPos = _getPositions.anchorPos;

      if (targetPosition.top < 0 || targetPosition.top + target.bottom > window.innerHeight) {
        var newTop = anchor[anchorPos.vertical] - target[positions.y[0]];
        if (newTop + target.bottom <= window.innerHeight) {
          targetPosition.top = Math.max(0, newTop);
        } else {
          newTop = anchor[anchorPos.vertical] - target[positions.y[1]];
          if (newTop + target.bottom <= window.innerHeight) {
            targetPosition.top = Math.max(0, newTop);
          }
        }
      }

      if (targetPosition.left < 0 || targetPosition.left + target.right > window.innerWidth) {
        var newLeft = anchor[anchorPos.horizontal] - target[positions.x[0]];
        if (newLeft + target.right <= window.innerWidth) {
          targetPosition.left = Math.max(0, newLeft);
        } else {
          newLeft = anchor[anchorPos.horizontal] - target[positions.x[1]];
          if (newLeft + target.right <= window.innerWidth) {
            targetPosition.left = Math.max(0, newLeft);
          }
        }
      }

      return targetPosition;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var eventListener = this.state.open ? _react2$1O.default.createElement(_reactEventListener2$9.default, {
        target: this.props.scrollableContainer,
        onScroll: this.handleScroll,
        onResize: this.handleResize
      }) : null;
      return _react2$1O.default.createElement(
        'div',
        { style: styles$g.root },
        eventListener,
        _react2$1O.default.createElement(_RenderToLayer2$2.default, {
          ref: function ref(_ref) {
            return _this3.popoverRefs.layer = _ref;
          },
          open: this.state.open,
          componentClickAway: this.componentClickAway,
          useLayerForClickAway: this.props.useLayerForClickAway,
          render: this.renderLayer
        })
      );
    }
  }]);
  return Popover;
}(_react$1R.Component);

Popover$4.defaultProps = {
  anchorOrigin: {
    vertical: 'bottom',
    horizontal: 'left'
  },
  animated: true,
  autoCloseWhenOffScreen: true,
  canAutoPosition: true,
  onRequestClose: function onRequestClose() {},
  open: false,
  scrollableContainer: 'window',
  style: {
    overflowY: 'auto'
  },
  targetOrigin: {
    vertical: 'top',
    horizontal: 'left'
  },
  useLayerForClickAway: true,
  zDepth: 1
};
Popover$4.contextTypes = {
  muiTheme: _propTypes2$1A.default.object.isRequired
};
Popover$4.propTypes = {
  /**
   * This is the DOM element that will be used to set the position of the
   * popover.
   */
  anchorEl: _propTypes2$1A.default.object,
  /**
   * This is the point on the anchor where the popover's
   * `targetOrigin` will attach to.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  anchorOrigin: _propTypes4$d.default.origin,
  /**
   * If true, the popover will apply transitions when
   * it is added to the DOM.
   */
  animated: _propTypes2$1A.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$1A.default.func,
  /**
   * If true, the popover will hide when the anchor is scrolled off the screen.
   */
  autoCloseWhenOffScreen: _propTypes2$1A.default.bool,
  /**
   * If true, the popover (potentially) ignores `targetOrigin`
   * and `anchorOrigin` to make itself fit on screen,
   * which is useful for mobile devices.
   */
  canAutoPosition: _propTypes2$1A.default.bool,
  /**
   * The content of the popover.
   */
  children: _propTypes2$1A.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$1A.default.string,
  /**
   * Callback function fired when the popover is requested to be closed.
   *
   * @param {string} reason The reason for the close request. Possibles values
   * are 'clickAway' and 'offScreen'.
   */
  onRequestClose: _propTypes2$1A.default.func,
  /**
   * If true, the popover is visible.
   */
  open: _propTypes2$1A.default.bool,
  /**
   * Represents the parent scrollable container.
   * It can be an element or a string like `window`.
   */
  scrollableContainer: _propTypes2$1A.default.oneOfType([_propTypes2$1A.default.object, _propTypes2$1A.default.string]),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1A.default.object,
  /**
   * This is the point on the popover which will attach to
   * the anchor's origin.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  targetOrigin: _propTypes4$d.default.origin,
  /**
   * If true, the popover will render on top of an invisible
   * layer, which will prevent clicks to the underlying
   * elements, and trigger an `onRequestClose('clickAway')` call.
   */
  useLayerForClickAway: _propTypes2$1A.default.bool,
  /**
   * The zDepth of the popover.
   */
  zDepth: _propTypes4$d.default.zDepth
} ;
Popover$5.default = Popover$4;

var check$1 = {};

Object.defineProperty(check$1, "__esModule", {
  value: true
});

var _react$1Q = react;

var _react2$1N = _interopRequireDefault$2B(_react$1Q);

var _pure$e = pure$3;

var _pure2$e = _interopRequireDefault$2B(_pure$e);

var _SvgIcon$f = SvgIcon$6;

var _SvgIcon2$f = _interopRequireDefault$2B(_SvgIcon$f);

function _interopRequireDefault$2B(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationCheck$1 = function NavigationCheck(props) {
  return _react2$1N.default.createElement(
    _SvgIcon2$f.default,
    props,
    _react2$1N.default.createElement('path', { d: 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z' })
  );
};
NavigationCheck$1 = (0, _pure2$e.default)(NavigationCheck$1);
NavigationCheck$1.displayName = 'NavigationCheck';
NavigationCheck$1.muiName = 'SvgIcon';

check$1.default = NavigationCheck$1;

var ListItem$3 = {};

var expandLess$1 = {};

Object.defineProperty(expandLess$1, "__esModule", {
  value: true
});

var _react$1P = react;

var _react2$1M = _interopRequireDefault$2A(_react$1P);

var _pure$d = pure$3;

var _pure2$d = _interopRequireDefault$2A(_pure$d);

var _SvgIcon$e = SvgIcon$6;

var _SvgIcon2$e = _interopRequireDefault$2A(_SvgIcon$e);

function _interopRequireDefault$2A(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationExpandLess$1 = function NavigationExpandLess(props) {
  return _react2$1M.default.createElement(
    _SvgIcon2$e.default,
    props,
    _react2$1M.default.createElement('path', { d: 'M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z' })
  );
};
NavigationExpandLess$1 = (0, _pure2$d.default)(NavigationExpandLess$1);
NavigationExpandLess$1.displayName = 'NavigationExpandLess';
NavigationExpandLess$1.muiName = 'SvgIcon';

expandLess$1.default = NavigationExpandLess$1;

var expandMore$1 = {};

Object.defineProperty(expandMore$1, "__esModule", {
  value: true
});

var _react$1O = react;

var _react2$1L = _interopRequireDefault$2z(_react$1O);

var _pure$c = pure$3;

var _pure2$c = _interopRequireDefault$2z(_pure$c);

var _SvgIcon$d = SvgIcon$6;

var _SvgIcon2$d = _interopRequireDefault$2z(_SvgIcon$d);

function _interopRequireDefault$2z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationExpandMore$1 = function NavigationExpandMore(props) {
  return _react2$1L.default.createElement(
    _SvgIcon2$d.default,
    props,
    _react2$1L.default.createElement('path', { d: 'M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' })
  );
};
NavigationExpandMore$1 = (0, _pure2$c.default)(NavigationExpandMore$1);
NavigationExpandMore$1.displayName = 'NavigationExpandMore';
NavigationExpandMore$1.muiName = 'SvgIcon';

expandMore$1.default = NavigationExpandMore$1;

var NestedList$3 = {};

Object.defineProperty(NestedList$3, "__esModule", {
  value: true
});

var _react$1N = react;

var _react2$1K = _interopRequireDefault$2y(_react$1N);

var _propTypes$1z = propTypes$5.exports;

var _propTypes2$1z = _interopRequireDefault$2y(_propTypes$1z);

var _List$2 = List$4;

var _List2$3 = _interopRequireDefault$2y(_List$2);

function _interopRequireDefault$2y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NestedList$2 = function NestedList(props) {
  var children = props.children,
      open = props.open,
      nestedLevel = props.nestedLevel,
      style = props.style;


  if (!open) {
    return null;
  }

  return _react2$1K.default.createElement(
    _List2$3.default,
    { style: style },
    _react$1N.Children.map(children, function (child) {
      return (0, _react$1N.isValidElement)(child) ? (0, _react$1N.cloneElement)(child, {
        nestedLevel: nestedLevel + 1
      }) : child;
    })
  );
};

NestedList$2.propTypes = {
  children: _propTypes2$1z.default.node,
  nestedLevel: _propTypes2$1z.default.number.isRequired,
  open: _propTypes2$1z.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1z.default.object
} ;

NestedList$3.default = NestedList$2;

Object.defineProperty(ListItem$3, "__esModule", {
  value: true
});

var _objectWithoutProperties2$17 = objectWithoutProperties$2;

var _objectWithoutProperties3$17 = _interopRequireDefault$2x(_objectWithoutProperties2$17);

var _extends2$18 = _extends$3;

var _extends3$18 = _interopRequireDefault$2x(_extends2$18);

var _getPrototypeOf$1n = getPrototypeOf$1.exports;

var _getPrototypeOf2$1n = _interopRequireDefault$2x(_getPrototypeOf$1n);

var _classCallCheck2$1p = classCallCheck$3;

var _classCallCheck3$1p = _interopRequireDefault$2x(_classCallCheck2$1p);

var _createClass2$1o = createClass$2;

var _createClass3$1o = _interopRequireDefault$2x(_createClass2$1o);

var _possibleConstructorReturn2$1n = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1n = _interopRequireDefault$2x(_possibleConstructorReturn2$1n);

var _inherits2$1n = inherits$3;

var _inherits3$1n = _interopRequireDefault$2x(_inherits2$1n);

var _simpleAssign$1g = simpleAssign;

var _simpleAssign2$1g = _interopRequireDefault$2x(_simpleAssign$1g);

var _react$1M = react;

var _react2$1J = _interopRequireDefault$2x(_react$1M);

var _propTypes$1y = propTypes$5.exports;

var _propTypes2$1y = _interopRequireDefault$2x(_propTypes$1y);

var _reactDom$g = reactDom;

var _reactDom2$g = _interopRequireDefault$2x(_reactDom$g);

var _shallowEqual$6 = shallowEqual;

var _shallowEqual2$6 = _interopRequireDefault$2x(_shallowEqual$6);

var _colorManipulator$4 = colorManipulator;

var _transitions$w = transitions;

var _transitions2$w = _interopRequireDefault$2x(_transitions$w);

var _EnhancedButton$7 = EnhancedButton$1;

var _EnhancedButton2$7 = _interopRequireDefault$2x(_EnhancedButton$7);

var _IconButton$5 = IconButton$5;

var _IconButton2$5 = _interopRequireDefault$2x(_IconButton$5);

var _expandLess$1 = expandLess$1;

var _expandLess2$1 = _interopRequireDefault$2x(_expandLess$1);

var _expandMore$1 = expandMore$1;

var _expandMore2$1 = _interopRequireDefault$2x(_expandMore$1);

var _NestedList$1 = NestedList$3;

var _NestedList2$1 = _interopRequireDefault$2x(_NestedList$1);

function _interopRequireDefault$2x(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$$(props, context, state) {
  var autoGenerateNestedIndicator = props.autoGenerateNestedIndicator,
      insetChildren = props.insetChildren,
      leftAvatar = props.leftAvatar,
      leftCheckbox = props.leftCheckbox,
      leftIcon = props.leftIcon,
      nestedItems = props.nestedItems,
      nestedLevel = props.nestedLevel,
      rightAvatar = props.rightAvatar,
      rightIcon = props.rightIcon,
      rightIconButton = props.rightIconButton,
      rightToggle = props.rightToggle,
      secondaryText = props.secondaryText,
      secondaryTextLines = props.secondaryTextLines;
  var muiTheme = context.muiTheme;
  var listItem = muiTheme.listItem;


  var textColor = muiTheme.baseTheme.palette.textColor;
  var hoverColor = props.hoverColor || (0, _colorManipulator$4.fade)(textColor, 0.1);
  var singleAvatar = !secondaryText && (leftAvatar || rightAvatar);
  var singleNoAvatar = !secondaryText && !(leftAvatar || rightAvatar);
  var twoLine = secondaryText && secondaryTextLines === 1;
  var threeLine = secondaryText && secondaryTextLines > 1;

  var isKeyboardFocused = (props.isKeyboardFocused !== undefined ? props : state).isKeyboardFocused;

  var styles = {
    root: {
      backgroundColor: (isKeyboardFocused || state.hovered) && !state.rightIconButtonHovered && !state.rightIconButtonKeyboardFocused ? hoverColor : null,
      color: textColor,
      display: 'block',
      fontSize: 16,
      lineHeight: '16px',
      position: 'relative',
      transition: _transitions2$w.default.easeOut()
    },

    // This inner div is needed so that ripples will span the entire container
    innerDiv: {
      marginLeft: nestedLevel * listItem.nestedLevelDepth,
      paddingLeft: leftIcon || leftAvatar || leftCheckbox || insetChildren ? 72 : 16,
      paddingRight: rightIcon || rightAvatar || rightIconButton || nestedItems.length && autoGenerateNestedIndicator ? 56 : rightToggle ? 72 : 16,
      paddingBottom: singleAvatar ? 20 : 16,
      paddingTop: singleNoAvatar || threeLine ? 16 : 20,
      position: 'relative'
    },

    icons: {
      height: 24,
      width: 24,
      display: 'block',
      position: 'absolute',
      top: twoLine ? 12 : singleAvatar ? 4 : 0,
      margin: 12
    },

    leftIcon: {
      left: 4
    },

    rightIcon: {
      right: 4
    },

    avatars: {
      position: 'absolute',
      top: singleAvatar ? 8 : 16
    },

    label: {
      cursor: 'pointer'
    },

    leftAvatar: {
      left: 16
    },

    rightAvatar: {
      right: 16
    },

    leftCheckbox: {
      position: 'absolute',
      display: 'block',
      width: 24,
      top: twoLine ? 24 : singleAvatar ? 16 : 12,
      left: 16
    },

    primaryText: {},

    rightIconButton: {
      position: 'absolute',
      display: 'block',
      top: twoLine ? 12 : singleAvatar ? 4 : 0,
      right: 4
    },

    rightToggle: {
      position: 'absolute',
      display: 'block',
      width: 54,
      top: twoLine ? 25 : singleAvatar ? 17 : 13,
      right: 8
    },

    secondaryText: {
      fontSize: 14,
      lineHeight: threeLine ? '18px' : '16px',
      height: threeLine ? 36 : 16,
      margin: 0,
      marginTop: 4,
      color: listItem.secondaryTextColor,

      // needed for 2 and 3 line ellipsis
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: threeLine ? null : 'nowrap',
      display: threeLine ? '-webkit-box' : null,
      WebkitLineClamp: threeLine ? 2 : null,
      WebkitBoxOrient: threeLine ? 'vertical' : null
    }
  };

  return styles;
}

var ListItem$2 = function (_Component) {
  (0, _inherits3$1n.default)(ListItem, _Component);

  function ListItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1p.default)(this, ListItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1n.default)(this, (_ref = ListItem.__proto__ || (0, _getPrototypeOf2$1n.default)(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      open: false,
      rightIconButtonHovered: false,
      rightIconButtonKeyboardFocused: false,
      touch: false
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      _this.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleMouseEnter = function (event) {
      if (!_this.state.touch) _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event);
      }

      if (_this.props.primaryTogglesNestedList) {
        _this.handleNestedListToggle(event);
      }
    }, _this.handleNestedListToggle = function (event) {
      if (_this.props.leftCheckbox) {
        event.preventDefault();
      }
      event.stopPropagation();

      if (_this.props.open === null) {
        _this.setState({ open: !_this.state.open }, function () {
          _this.props.onNestedListToggle(_this);
        });
      } else {
        // Exposing `this` in the callback is quite a bad API.
        // I'm doing a one level deep clone to expose a fake state.open.
        _this.props.onNestedListToggle((0, _extends3$18.default)({}, _this, {
          state: {
            open: !_this.state.open
          }
        }));
      }
    }, _this.handleRightIconButtonKeyboardFocus = function (event, isKeyboardFocused) {
      if (isKeyboardFocused) {
        _this.setState({
          isKeyboardFocused: false,
          rightIconButtonKeyboardFocused: isKeyboardFocused
        });
      }

      var iconButton = _this.props.rightIconButton;

      if (iconButton && iconButton.props.onKeyboardFocus) iconButton.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleRightIconButtonMouseLeave = function (event) {
      var iconButton = _this.props.rightIconButton;
      _this.setState({ rightIconButtonHovered: false });
      if (iconButton && iconButton.props.onMouseLeave) iconButton.props.onMouseLeave(event);
    }, _this.handleRightIconButtonMouseEnter = function (event) {
      var iconButton = _this.props.rightIconButton;
      _this.setState({ rightIconButtonHovered: true });
      if (iconButton && iconButton.props.onMouseEnter) iconButton.props.onMouseEnter(event);
    }, _this.handleRightIconButtonMouseUp = function (event) {
      var iconButton = _this.props.rightIconButton;
      event.stopPropagation();
      if (iconButton && iconButton.props.onMouseUp) iconButton.props.onMouseUp(event);
    }, _this.handleRightIconButtonClick = function (event) {
      var iconButton = _this.props.rightIconButton;

      // Stop the event from bubbling up to the list-item
      event.stopPropagation();
      if (iconButton && iconButton.props.onClick) iconButton.props.onClick(event);
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchStart(event);
    }, _this.handleTouchEnd = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchEnd(event);
    }, _temp), (0, _possibleConstructorReturn3$1n.default)(_this, _ret);
  }

  (0, _createClass3$1o.default)(ListItem, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        open: this.props.open === null ? this.props.initiallyOpen === true : this.props.open
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      // update the state when the component is controlled.
      if (nextProps.open !== null) this.setState({ open: nextProps.open });
      if (nextProps.disabled && this.state.hovered) this.setState({ hovered: false });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$6.default)(this.props, nextProps) || !(0, _shallowEqual2$6.default)(this.state, nextState) || !(0, _shallowEqual2$6.default)(this.context, nextContext);
    }

    // This method is needed by the `MenuItem` component.

  }, {
    key: 'applyFocusState',
    value: function applyFocusState(focusState) {
      if (this.button) {
        var buttonEl = _reactDom2$g.default.findDOMNode(this.button);

        switch (focusState) {
          case 'none':
            buttonEl.blur();
            break;
          case 'focused':
            buttonEl.focus();
            break;
          case 'keyboard-focused':
            this.button.setKeyboardFocus();
            buttonEl.focus();
            break;
        }
      }
    }
  }, {
    key: 'createDisabledElement',
    value: function createDisabledElement(styles, contentChildren, additionalProps) {
      var _props = this.props,
          innerDivStyle = _props.innerDivStyle,
          style = _props.style;


      var mergedDivStyles = (0, _simpleAssign2$1g.default)({}, styles.root, styles.innerDiv, innerDivStyle, style);

      return _react2$1J.default.createElement(
        'div',
        (0, _extends3$18.default)({}, additionalProps, {
          style: this.context.muiTheme.prepareStyles(mergedDivStyles)
        }),
        contentChildren
      );
    }
  }, {
    key: 'createLabelElement',
    value: function createLabelElement(styles, contentChildren, additionalProps) {
      var _props2 = this.props,
          innerDivStyle = _props2.innerDivStyle,
          style = _props2.style;


      var mergedLabelStyles = (0, _simpleAssign2$1g.default)({}, styles.root, styles.innerDiv, innerDivStyle, styles.label, style);

      return _react2$1J.default.createElement(
        'label',
        (0, _extends3$18.default)({}, additionalProps, {
          style: this.context.muiTheme.prepareStyles(mergedLabelStyles)
        }),
        contentChildren
      );
    }
  }, {
    key: 'createTextElement',
    value: function createTextElement(styles, data, key) {
      var prepareStyles = this.context.muiTheme.prepareStyles;

      if (_react2$1J.default.isValidElement(data)) {
        var style = (0, _simpleAssign2$1g.default)({}, styles, data.props.style);
        if (typeof data.type === 'string') {
          // if element is a native dom node
          style = prepareStyles(style);
        }
        return _react2$1J.default.cloneElement(data, {
          key: key,
          style: style
        });
      }

      return _react2$1J.default.createElement(
        'div',
        { key: key, style: prepareStyles(styles) },
        data
      );
    }
  }, {
    key: 'pushElement',
    value: function pushElement(children, element, baseStyles, additionalProps) {
      if (element) {
        var styles = (0, _simpleAssign2$1g.default)({}, baseStyles, element.props.style);
        children.push(_react2$1J.default.cloneElement(element, (0, _extends3$18.default)({
          key: children.length,
          style: styles
        }, additionalProps)));
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          autoGenerateNestedIndicator = _props3.autoGenerateNestedIndicator,
          children = _props3.children,
          containerElement = _props3.containerElement,
          disabled = _props3.disabled,
          disableKeyboardFocus = _props3.disableKeyboardFocus;
          _props3.hoverColor;
          _props3.initiallyOpen;
          var innerDivStyle = _props3.innerDivStyle;
          _props3.insetChildren;
          var leftAvatar = _props3.leftAvatar,
          leftCheckbox = _props3.leftCheckbox,
          leftIcon = _props3.leftIcon,
          nestedItems = _props3.nestedItems,
          nestedLevel = _props3.nestedLevel,
          nestedListStyle = _props3.nestedListStyle;
          _props3.onKeyboardFocus;
          _props3.isKeyboardFocused;
          _props3.onMouseEnter;
          _props3.onMouseLeave;
          _props3.onNestedListToggle;
          _props3.onTouchStart;
          _props3.onClick;
          var rightAvatar = _props3.rightAvatar,
          rightIcon = _props3.rightIcon,
          rightIconButton = _props3.rightIconButton,
          rightToggle = _props3.rightToggle,
          primaryText = _props3.primaryText,
          primaryTogglesNestedList = _props3.primaryTogglesNestedList,
          secondaryText = _props3.secondaryText;
          _props3.secondaryTextLines;
          var style = _props3.style,
          other = (0, _objectWithoutProperties3$17.default)(_props3, ['autoGenerateNestedIndicator', 'children', 'containerElement', 'disabled', 'disableKeyboardFocus', 'hoverColor', 'initiallyOpen', 'innerDivStyle', 'insetChildren', 'leftAvatar', 'leftCheckbox', 'leftIcon', 'nestedItems', 'nestedLevel', 'nestedListStyle', 'onKeyboardFocus', 'isKeyboardFocused', 'onMouseEnter', 'onMouseLeave', 'onNestedListToggle', 'onTouchStart', 'onClick', 'rightAvatar', 'rightIcon', 'rightIconButton', 'rightToggle', 'primaryText', 'primaryTogglesNestedList', 'secondaryText', 'secondaryTextLines', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$$(this.props, this.context, this.state);
      var contentChildren = [children];

      if (leftIcon) {
        var additionalProps = {
          color: leftIcon.props.color || this.context.muiTheme.listItem.leftIconColor
        };
        this.pushElement(contentChildren, leftIcon, (0, _simpleAssign2$1g.default)({}, styles.icons, styles.leftIcon), additionalProps);
      }

      if (rightIcon) {
        var _additionalProps = {
          color: rightIcon.props.color || this.context.muiTheme.listItem.rightIconColor
        };
        this.pushElement(contentChildren, rightIcon, (0, _simpleAssign2$1g.default)({}, styles.icons, styles.rightIcon), _additionalProps);
      }

      if (leftAvatar) {
        this.pushElement(contentChildren, leftAvatar, (0, _simpleAssign2$1g.default)({}, styles.avatars, styles.leftAvatar));
      }

      if (rightAvatar) {
        this.pushElement(contentChildren, rightAvatar, (0, _simpleAssign2$1g.default)({}, styles.avatars, styles.rightAvatar));
      }

      if (leftCheckbox) {
        this.pushElement(contentChildren, leftCheckbox, (0, _simpleAssign2$1g.default)({}, styles.leftCheckbox));
      }

      // RightIconButtonElement
      var hasNestListItems = nestedItems.length;
      var hasRightElement = rightAvatar || rightIcon || rightIconButton || rightToggle;
      var needsNestedIndicator = hasNestListItems && autoGenerateNestedIndicator && !hasRightElement;

      if (rightIconButton || needsNestedIndicator) {
        var rightIconButtonElement = rightIconButton;
        var rightIconButtonHandlers = {
          onKeyboardFocus: this.handleRightIconButtonKeyboardFocus,
          onMouseEnter: this.handleRightIconButtonMouseEnter,
          onMouseLeave: this.handleRightIconButtonMouseLeave,
          onClick: this.handleRightIconButtonClick,
          onMouseDown: this.handleRightIconButtonMouseUp,
          onMouseUp: this.handleRightIconButtonMouseUp
        };

        // Create a nested list indicator icon if we don't have an icon on the right
        if (needsNestedIndicator) {
          rightIconButtonElement = this.state.open ? _react2$1J.default.createElement(
            _IconButton2$5.default,
            null,
            _react2$1J.default.createElement(_expandLess2$1.default, null)
          ) : _react2$1J.default.createElement(
            _IconButton2$5.default,
            null,
            _react2$1J.default.createElement(_expandMore2$1.default, null)
          );
          rightIconButtonHandlers.onClick = this.handleNestedListToggle;
        }

        this.pushElement(contentChildren, rightIconButtonElement, (0, _simpleAssign2$1g.default)({}, styles.rightIconButton), rightIconButtonHandlers);
      }

      if (rightToggle) {
        this.pushElement(contentChildren, rightToggle, (0, _simpleAssign2$1g.default)({}, styles.rightToggle));
      }

      if (primaryText) {
        var primaryTextElement = this.createTextElement(styles.primaryText, primaryText, 'primaryText');
        contentChildren.push(primaryTextElement);
      }

      if (secondaryText) {
        var secondaryTextElement = this.createTextElement(styles.secondaryText, secondaryText, 'secondaryText');
        contentChildren.push(secondaryTextElement);
      }

      var nestedList = nestedItems.length ? _react2$1J.default.createElement(
        _NestedList2$1.default,
        { nestedLevel: nestedLevel, open: this.state.open, style: nestedListStyle },
        nestedItems
      ) : undefined;

      var simpleLabel = !primaryTogglesNestedList && (leftCheckbox || rightToggle);

      return _react2$1J.default.createElement(
        'div',
        null,
        simpleLabel ? this.createLabelElement(styles, contentChildren, other) : disabled ? this.createDisabledElement(styles, contentChildren, other) : _react2$1J.default.createElement(
          _EnhancedButton2$7.default,
          (0, _extends3$18.default)({
            containerElement: containerElement
          }, other, {
            disableKeyboardFocus: disableKeyboardFocus || this.state.rightIconButtonKeyboardFocused,
            onKeyboardFocus: this.handleKeyboardFocus,
            onMouseLeave: this.handleMouseLeave,
            onMouseEnter: this.handleMouseEnter,
            onTouchStart: this.handleTouchStart,
            onTouchEnd: this.handleTouchEnd,
            onClick: this.handleClick,
            disabled: disabled,
            ref: function ref(node) {
              return _this2.button = node;
            },
            style: (0, _simpleAssign2$1g.default)({}, styles.root, style)
          }),
          _react2$1J.default.createElement(
            'div',
            { style: prepareStyles((0, _simpleAssign2$1g.default)(styles.innerDiv, innerDivStyle)) },
            contentChildren
          )
        ),
        nestedList
      );
    }
  }]);
  return ListItem;
}(_react$1M.Component);

ListItem$2.muiName = 'ListItem';
ListItem$2.defaultProps = {
  autoGenerateNestedIndicator: true,
  containerElement: 'span',
  disableKeyboardFocus: false,
  disabled: false,
  initiallyOpen: false,
  insetChildren: false,
  nestedItems: [],
  nestedLevel: 0,
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onNestedListToggle: function onNestedListToggle() {},
  onTouchEnd: function onTouchEnd() {},
  onTouchStart: function onTouchStart() {},
  open: null,
  primaryTogglesNestedList: false,
  secondaryTextLines: 1
};
ListItem$2.contextTypes = {
  muiTheme: _propTypes2$1y.default.object.isRequired
};
ListItem$2.propTypes = {
  /**
   * If true, generate a nested-list-indicator icon when nested list
   * items are detected. Note that an indicator will not be created
   * if a `rightIcon` or `rightIconButton` has been provided to
   * the element.
   */
  autoGenerateNestedIndicator: _propTypes2$1y.default.bool,
  /**
   * Children passed into the `ListItem`.
   */
  children: _propTypes2$1y.default.node,
  /**
   * The element to use as the container for the ListItem. Either a string to
   * use a DOM element or a ReactElement. This is useful for wrapping the
   * ListItem in a custom Link component. If a ReactElement is given, ensure
   * that it passes all of its given props through to the underlying DOM
   * element and renders its children prop for proper integration.
   */
  containerElement: _propTypes2$1y.default.oneOfType([_propTypes2$1y.default.string, _propTypes2$1y.default.element]),
  /**
   * If true, the element will not be able to be focused by the keyboard.
   */
  disableKeyboardFocus: _propTypes2$1y.default.bool,
  /**
   * If true, the element will not be clickable
   * and will not display hover effects.
   * This is automatically disabled if either `leftCheckbox`
   * or `rightToggle` is set.
   */
  disabled: _propTypes2$1y.default.bool,
  /**
  * Override the hover background color.
  */
  hoverColor: _propTypes2$1y.default.string,
  /**
   * If true, the nested `ListItem`s are initially displayed.
   */
  initiallyOpen: _propTypes2$1y.default.bool,
  /**
   * Override the inline-styles of the inner div element.
   */
  innerDivStyle: _propTypes2$1y.default.object,
  /**
   * If true, the children will be indented by 72px.
   * This is useful if there is no left avatar or left icon.
   */
  insetChildren: _propTypes2$1y.default.bool,
  /**
   * Use to control if the list item should render as keyboard focused.  If
   * undefined (default), this will be automatically managed.  If provided,
   * it will change the components style.  Note that this will not change the
   * actual focus - and should only be used when you want to simulate
   * keyboard focus (eg. in a rich text input autocomplete).
   */
  isKeyboardFocused: _propTypes2$1y.default.bool,
  /**
   * This is the `Avatar` element to be displayed on the left side.
   */
  leftAvatar: _propTypes2$1y.default.element,
  /**
   * This is the `Checkbox` element to be displayed on the left side.
   */
  leftCheckbox: _propTypes2$1y.default.element,
  /**
   * This is the `SvgIcon` or `FontIcon` to be displayed on the left side.
   */
  leftIcon: _propTypes2$1y.default.element,
  /**
   * An array of `ListItem`s to nest underneath the current `ListItem`.
   */
  nestedItems: _propTypes2$1y.default.arrayOf(_propTypes2$1y.default.element),
  /**
   * Controls how deep a `ListItem` appears.
   * This property is automatically managed, so modify at your own risk.
   */
  nestedLevel: _propTypes2$1y.default.number,
  /**
   * Override the inline-styles of the nested items' `NestedList`.
   */
  nestedListStyle: _propTypes2$1y.default.object,
  /**
   * Callback function fired when the list item is clicked.
   *
   * @param {object} event Click event targeting the list item.
   */
  onClick: _propTypes2$1y.default.func,
  /**
   * Callback function fired when the `ListItem` is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the `ListItem`.
   * @param {boolean} isKeyboardFocused If true, the `ListItem` is focused.
   */
  onKeyboardFocus: _propTypes2$1y.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$1y.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$1y.default.func,
  /**
   * Callback function fired when the `ListItem` toggles its nested list.
   *
   * @param {object} listItem The `ListItem`.
   */
  onNestedListToggle: _propTypes2$1y.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$1y.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$1y.default.func,
  /**
   * Control toggle state of nested list.
   */
  open: _propTypes2$1y.default.bool,
  /**
   * This is the block element that contains the primary text.
   * If a string is passed in, a div tag will be rendered.
   */
  primaryText: _propTypes2$1y.default.node,
  /**
   * If true, clicking or tapping the primary text of the `ListItem`
   * toggles the nested list.
   */
  primaryTogglesNestedList: _propTypes2$1y.default.bool,
  /**
   * This is the `Avatar` element to be displayed on the right side.
   */
  rightAvatar: _propTypes2$1y.default.element,
  /**
   * This is the `SvgIcon` or `FontIcon` to be displayed on the right side.
   */
  rightIcon: _propTypes2$1y.default.element,
  /**
   * This is the `IconButton` to be displayed on the right side.
   * Hovering over this button will remove the `ListItem` hover.
   * Also, clicking on this button will not trigger a
   * ripple on the `ListItem`; the event will be stopped and prevented
   * from bubbling up to cause a `ListItem` click.
   */
  rightIconButton: _propTypes2$1y.default.element,
  /**
   * This is the `Toggle` element to display on the right side.
   */
  rightToggle: _propTypes2$1y.default.element,
  /**
   * This is the block element that contains the secondary text.
   * If a string is passed in, a div tag will be rendered.
   */
  secondaryText: _propTypes2$1y.default.node,
  /**
   * Can be 1 or 2. This is the number of secondary
   * text lines before ellipsis will show.
   */
  secondaryTextLines: _propTypes2$1y.default.oneOf([1, 2]),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1y.default.object
} ;
var _default$d = ListItem$3.default = ListItem$2;

Object.defineProperty(MenuItem$4, "__esModule", {
  value: true
});

var _extends2$17 = _extends$3;

var _extends3$17 = _interopRequireDefault$2w(_extends2$17);

var _objectWithoutProperties2$16 = objectWithoutProperties$2;

var _objectWithoutProperties3$16 = _interopRequireDefault$2w(_objectWithoutProperties2$16);

var _getPrototypeOf$1m = getPrototypeOf$1.exports;

var _getPrototypeOf2$1m = _interopRequireDefault$2w(_getPrototypeOf$1m);

var _classCallCheck2$1o = classCallCheck$3;

var _classCallCheck3$1o = _interopRequireDefault$2w(_classCallCheck2$1o);

var _createClass2$1n = createClass$2;

var _createClass3$1n = _interopRequireDefault$2w(_createClass2$1n);

var _possibleConstructorReturn2$1m = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1m = _interopRequireDefault$2w(_possibleConstructorReturn2$1m);

var _inherits2$1m = inherits$3;

var _inherits3$1m = _interopRequireDefault$2w(_inherits2$1m);

var _simpleAssign$1f = simpleAssign;

var _simpleAssign2$1f = _interopRequireDefault$2w(_simpleAssign$1f);

var _react$1L = react;

var _react2$1I = _interopRequireDefault$2w(_react$1L);

var _propTypes$1x = propTypes$5.exports;

var _propTypes2$1x = _interopRequireDefault$2w(_propTypes$1x);

var _reactDom$f = reactDom;

var _reactDom2$f = _interopRequireDefault$2w(_reactDom$f);

var _shallowEqual$5 = shallowEqual;

var _shallowEqual2$5 = _interopRequireDefault$2w(_shallowEqual$5);

var _Popover$6 = Popover$5;

var _Popover2$8 = _interopRequireDefault$2w(_Popover$6);

var _check$1 = check$1;

var _check2$1 = _interopRequireDefault$2w(_check$1);

var _ListItem$1 = ListItem$3;

var _ListItem2$2 = _interopRequireDefault$2w(_ListItem$1);

var _Menu$5 = Menu$4;

var _Menu2$7 = _interopRequireDefault$2w(_Menu$5);

var _propTypes3$c = propTypes$3;

var _propTypes4$c = _interopRequireDefault$2w(_propTypes3$c);

function _interopRequireDefault$2w(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var nestedMenuStyle$1 = {
  position: 'relative'
};

function getStyles$_(props, context) {
  var disabledColor = context.muiTheme.baseTheme.palette.disabledColor;
  var textColor = context.muiTheme.baseTheme.palette.textColor;
  var indent = props.desktop ? 64 : 72;
  var sidePadding = props.desktop ? 24 : 16;

  var styles = {
    root: {
      color: props.disabled ? disabledColor : textColor,
      cursor: props.disabled ? 'default' : 'pointer',
      minHeight: props.desktop ? '32px' : '48px',
      lineHeight: props.desktop ? '32px' : '48px',
      fontSize: props.desktop ? 15 : 16,
      whiteSpace: 'nowrap'
    },

    innerDivStyle: {
      paddingLeft: props.leftIcon || props.insetChildren || props.checked ? indent : sidePadding,
      paddingRight: props.rightIcon ? indent : sidePadding,
      paddingBottom: 0,
      paddingTop: 0
    },

    secondaryText: {
      float: 'right'
    },

    leftIconDesktop: {
      margin: 0,
      left: 24,
      top: 4
    },

    rightIconDesktop: {
      margin: 0,
      right: 24,
      top: 4,
      fill: context.muiTheme.menuItem.rightIconDesktopFill
    }
  };

  return styles;
}

var MenuItem$3 = function (_Component) {
  (0, _inherits3$1m.default)(MenuItem, _Component);

  function MenuItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1o.default)(this, MenuItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1m.default)(this, (_ref = MenuItem.__proto__ || (0, _getPrototypeOf2$1m.default)(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.cloneMenuItem = function (item) {
      return _react2$1I.default.cloneElement(item, {
        onClick: function onClick(event) {
          if (!item.props.menuItems) {
            _this.handleRequestClose();
          }

          if (item.props.onClick) {
            item.props.onClick(event);
          }
        }
      });
    }, _this.handleClick = function (event) {
      event.preventDefault();

      _this.setState({
        open: true,
        anchorEl: _reactDom2$f.default.findDOMNode(_this)
      });

      if (_this.props.onClick) {
        _this.props.onClick(event);
      }
    }, _this.handleRequestClose = function () {
      _this.setState({
        open: false,
        anchorEl: null
      });
    }, _temp), (0, _possibleConstructorReturn3$1m.default)(_this, _ret);
  }

  (0, _createClass3$1n.default)(MenuItem, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.applyFocusState();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.open && nextProps.focusState === 'none') {
        this.handleRequestClose();
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$5.default)(this.props, nextProps) || !(0, _shallowEqual2$5.default)(this.state, nextState) || !(0, _shallowEqual2$5.default)(this.context, nextContext);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.applyFocusState();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.state.open) {
        this.setState({
          open: false
        });
      }
    }
  }, {
    key: 'applyFocusState',
    value: function applyFocusState() {
      this.refs.listItem.applyFocusState(this.props.focusState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          checked = _props.checked,
          children = _props.children,
          desktop = _props.desktop,
          disabled = _props.disabled;
          _props.focusState;
          var innerDivStyle = _props.innerDivStyle,
          insetChildren = _props.insetChildren,
          leftIcon = _props.leftIcon,
          menuItems = _props.menuItems,
          rightIcon = _props.rightIcon,
          secondaryText = _props.secondaryText,
          style = _props.style,
          animation = _props.animation,
          anchorOrigin = _props.anchorOrigin,
          targetOrigin = _props.targetOrigin;
          _props.value;
          var other = (0, _objectWithoutProperties3$16.default)(_props, ['checked', 'children', 'desktop', 'disabled', 'focusState', 'innerDivStyle', 'insetChildren', 'leftIcon', 'menuItems', 'rightIcon', 'secondaryText', 'style', 'animation', 'anchorOrigin', 'targetOrigin', 'value']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$_(this.props, this.context);
      var mergedRootStyles = (0, _simpleAssign2$1f.default)(styles.root, style);
      var mergedInnerDivStyles = (0, _simpleAssign2$1f.default)(styles.innerDivStyle, innerDivStyle);

      // Left Icon
      var leftIconElement = leftIcon ? leftIcon : checked ? _react2$1I.default.createElement(_check2$1.default, null) : null;
      if (leftIconElement) {
        var mergedLeftIconStyles = desktop ? (0, _simpleAssign2$1f.default)(styles.leftIconDesktop, leftIconElement.props.style) : leftIconElement.props.style;
        leftIconElement = _react2$1I.default.cloneElement(leftIconElement, { style: mergedLeftIconStyles });
      }

      // Right Icon
      var rightIconElement = void 0;
      if (rightIcon) {
        var mergedRightIconStyles = desktop ? (0, _simpleAssign2$1f.default)(styles.rightIconDesktop, rightIcon.props.style) : rightIcon.props.style;
        rightIconElement = _react2$1I.default.cloneElement(rightIcon, { style: mergedRightIconStyles });
      }

      // Secondary Text
      var secondaryTextElement = void 0;
      if (secondaryText) {
        var secondaryTextIsAnElement = _react2$1I.default.isValidElement(secondaryText);
        var mergedSecondaryTextStyles = secondaryTextIsAnElement ? (0, _simpleAssign2$1f.default)(styles.secondaryText, secondaryText.props.style) : null;

        secondaryTextElement = secondaryTextIsAnElement ? _react2$1I.default.cloneElement(secondaryText, { style: mergedSecondaryTextStyles }) : _react2$1I.default.createElement(
          'div',
          { style: prepareStyles(styles.secondaryText) },
          secondaryText
        );
      }
      var childMenuPopover = void 0;
      if (menuItems) {
        childMenuPopover = _react2$1I.default.createElement(
          _Popover2$8.default,
          {
            animation: animation,
            anchorOrigin: anchorOrigin,
            anchorEl: this.state.anchorEl,
            open: this.state.open,
            targetOrigin: targetOrigin,
            useLayerForClickAway: false,
            onRequestClose: this.handleRequestClose
          },
          _react2$1I.default.createElement(
            _Menu2$7.default,
            { desktop: desktop, disabled: disabled, style: nestedMenuStyle$1 },
            _react2$1I.default.Children.map(menuItems, this.cloneMenuItem)
          )
        );
        other.onClick = this.handleClick;
      }

      return _react2$1I.default.createElement(
        _ListItem2$2.default,
        (0, _extends3$17.default)({}, other, {
          disabled: disabled,
          hoverColor: this.context.muiTheme.menuItem.hoverColor,
          innerDivStyle: mergedInnerDivStyles,
          insetChildren: insetChildren,
          leftIcon: leftIconElement,
          ref: 'listItem',
          rightIcon: rightIconElement,
          role: 'menuitem',
          style: mergedRootStyles
        }),
        children,
        secondaryTextElement,
        childMenuPopover
      );
    }
  }]);
  return MenuItem;
}(_react$1L.Component);

MenuItem$3.muiName = 'MenuItem';
MenuItem$3.defaultProps = {
  anchorOrigin: { horizontal: 'right', vertical: 'top' },
  checked: false,
  desktop: false,
  disabled: false,
  focusState: 'none',
  insetChildren: false,
  targetOrigin: { horizontal: 'left', vertical: 'top' }
};
MenuItem$3.contextTypes = {
  muiTheme: _propTypes2$1x.default.object.isRequired
};
MenuItem$3.propTypes = {
  /**
   * Location of the anchor for the popover of nested `MenuItem`
   * elements.
   * Options:
   * horizontal: [left, middle, right]
   * vertical: [top, center, bottom].
   */
  anchorOrigin: _propTypes4$c.default.origin,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$1x.default.func,
  /**
   * If true, a left check mark will be rendered.
   */
  checked: _propTypes2$1x.default.bool,
  /**
   * Elements passed as children to the underlying `ListItem`.
   */
  children: _propTypes2$1x.default.node,
  /**
   * @ignore
   * If true, the menu item will render with compact desktop
   * styles.
   */
  desktop: _propTypes2$1x.default.bool,
  /**
   * If true, the menu item will be disabled.
   */
  disabled: _propTypes2$1x.default.bool,
  /**
   * The focus state of the menu item. This prop is used to set the focus
   * state of the underlying `ListItem`.
   */
  focusState: _propTypes2$1x.default.oneOf(['none', 'focused', 'keyboard-focused']),
  /**
   * Override the inline-styles of the inner div.
   */
  innerDivStyle: _propTypes2$1x.default.object,
  /**
   * If true, the children will be indented.
   * This is only needed when there is no `leftIcon`.
   */
  insetChildren: _propTypes2$1x.default.bool,
  /**
   * The `SvgIcon` or `FontIcon` to be displayed on the left side.
   */
  leftIcon: _propTypes2$1x.default.element,
  /**
   * `MenuItem` elements to nest within the menu item.
   */
  menuItems: _propTypes2$1x.default.node,
  /**
   * Callback function fired when the menu item is clicked.
   *
   * @param {object} event Click event targeting the menu item.
   */
  onClick: _propTypes2$1x.default.func,
  /**
   * Can be used to render primary text within the menu item.
   */
  primaryText: _propTypes2$1x.default.node,
  /**
   * The `SvgIcon` or `FontIcon` to be displayed on the right side.
   */
  rightIcon: _propTypes2$1x.default.element,
  /**
   * Can be used to render secondary text within the menu item.
   */
  secondaryText: _propTypes2$1x.default.node,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1x.default.object,
  /**
   * Location on the popover of nested `MenuItem` elements that will attach
   * to the anchor's origin.
   * Options:
   * horizontal: [left, middle, right]
   * vertical: [top, center, bottom].
   */
  targetOrigin: _propTypes4$c.default.origin,
  /**
   * The value of the menu item.
   */
  value: _propTypes2$1x.default.any
} ;
MenuItem$4.default = MenuItem$3;

Object.defineProperty(MenuItem$5, "__esModule", {
  value: true
});
var _default$c = MenuItem$5.default = undefined;

var _MenuItem$3 = MenuItem$4;

var _MenuItem2$7 = _interopRequireDefault$2v(_MenuItem$3);

function _interopRequireDefault$2v(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$c = MenuItem$5.default = _MenuItem2$7.default;

Object.defineProperty(Menu$5, "__esModule", {
  value: true
});
Menu$5.default = Menu$5.MenuItem = Menu$5.Menu = undefined;

var _Menu2$6 = Menu$4;

var _Menu3$1 = _interopRequireDefault$2u(_Menu2$6);

var _MenuItem2$6 = MenuItem$5;

var _MenuItem3$3 = _interopRequireDefault$2u(_MenuItem2$6);

function _interopRequireDefault$2u(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Menu$5.Menu = _Menu3$1.default;
Menu$5.MenuItem = _MenuItem3$3.default;
Menu$5.default = _Menu3$1.default;

var Divider$2 = {};

var Divider$1 = {};

Object.defineProperty(Divider$1, "__esModule", {
  value: true
});

var _extends2$16 = _extends$3;

var _extends3$16 = _interopRequireDefault$2t(_extends2$16);

var _objectWithoutProperties2$15 = objectWithoutProperties$2;

var _objectWithoutProperties3$15 = _interopRequireDefault$2t(_objectWithoutProperties2$15);

var _simpleAssign$1e = simpleAssign;

var _simpleAssign2$1e = _interopRequireDefault$2t(_simpleAssign$1e);

var _react$1K = react;

var _react2$1H = _interopRequireDefault$2t(_react$1K);

var _propTypes$1w = propTypes$5.exports;

var _propTypes2$1w = _interopRequireDefault$2t(_propTypes$1w);

function _interopRequireDefault$2t(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Divider = function Divider(props, context) {
  var inset = props.inset,
      style = props.style,
      other = (0, _objectWithoutProperties3$15.default)(props, ['inset', 'style']);
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      prepareStyles = _context$muiTheme.prepareStyles;


  var styles = {
    root: {
      margin: 0,
      marginTop: -1,
      marginLeft: inset ? 72 : 0,
      height: 1,
      border: 'none',
      backgroundColor: baseTheme.palette.borderColor
    }
  };

  return _react2$1H.default.createElement('hr', (0, _extends3$16.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1e.default)(styles.root, style)) }));
};

Divider.muiName = 'Divider';

Divider.propTypes = {
  /**
   * If true, the `Divider` will be indented.
   */
  inset: _propTypes2$1w.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1w.default.object
} ;

Divider.defaultProps = {
  inset: false
};

Divider.contextTypes = {
  muiTheme: _propTypes2$1w.default.object.isRequired
};

Divider$1.default = Divider;

Object.defineProperty(Divider$2, "__esModule", {
  value: true
});
Divider$2.default = undefined;

var _Divider$2 = Divider$1;

var _Divider2$2 = _interopRequireDefault$2s(_Divider$2);

function _interopRequireDefault$2s(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Divider$2.default = _Divider2$2.default;

Object.defineProperty(AutoComplete$4, "__esModule", {
  value: true
});

var _extends2$15 = _extends$3;

var _extends3$15 = _interopRequireDefault$2r(_extends2$15);

var _typeof2$3 = _typeof$6;

var _typeof3$3 = _interopRequireDefault$2r(_typeof2$3);

var _objectWithoutProperties2$14 = objectWithoutProperties$2;

var _objectWithoutProperties3$14 = _interopRequireDefault$2r(_objectWithoutProperties2$14);

var _getPrototypeOf$1l = getPrototypeOf$1.exports;

var _getPrototypeOf2$1l = _interopRequireDefault$2r(_getPrototypeOf$1l);

var _classCallCheck2$1n = classCallCheck$3;

var _classCallCheck3$1n = _interopRequireDefault$2r(_classCallCheck2$1n);

var _createClass2$1m = createClass$2;

var _createClass3$1m = _interopRequireDefault$2r(_createClass2$1m);

var _possibleConstructorReturn2$1l = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1l = _interopRequireDefault$2r(_possibleConstructorReturn2$1l);

var _inherits2$1l = inherits$3;

var _inherits3$1l = _interopRequireDefault$2r(_inherits2$1l);

var _simpleAssign$1d = simpleAssign;

var _simpleAssign2$1d = _interopRequireDefault$2r(_simpleAssign$1d);

var _react$1J = react;

var _react2$1G = _interopRequireDefault$2r(_react$1J);

var _propTypes$1v = propTypes$5.exports;

var _propTypes2$1v = _interopRequireDefault$2r(_propTypes$1v);

var _reactDom$e = reactDom;

var _reactDom2$e = _interopRequireDefault$2r(_reactDom$e);

var _keycode$a = keycode.exports;

var _keycode2$a = _interopRequireDefault$2r(_keycode$a);

var _TextField$5 = TextField$6;

var _TextField2$5 = _interopRequireDefault$2r(_TextField$5);

var _Menu$4 = Menu$5;

var _Menu2$5 = _interopRequireDefault$2r(_Menu$4);

var _MenuItem$2 = MenuItem$5;

var _MenuItem2$5 = _interopRequireDefault$2r(_MenuItem$2);

var _Divider$1 = Divider$2;

var _Divider2$1 = _interopRequireDefault$2r(_Divider$1);

var _Popover$5 = Popover$5;

var _Popover2$7 = _interopRequireDefault$2r(_Popover$5);

var _propTypes3$b = propTypes$3;

var _propTypes4$b = _interopRequireDefault$2r(_propTypes3$b);

function _interopRequireDefault$2r(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$Z(props, context, state) {
  var anchorEl = state.anchorEl;
  var fullWidth = props.fullWidth;


  var styles = {
    root: {
      display: 'inline-block',
      position: 'relative',
      width: fullWidth ? '100%' : 256
    },
    menu: {
      width: '100%'
    },
    list: {
      display: 'block',
      width: fullWidth ? '100%' : 256
    },
    innerDiv: {
      overflow: 'hidden'
    }
  };

  if (anchorEl && fullWidth) {
    styles.popover = {
      width: anchorEl.clientWidth
    };
  }

  return styles;
}

var AutoComplete$3 = function (_Component) {
  (0, _inherits3$1l.default)(AutoComplete, _Component);

  function AutoComplete() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1n.default)(this, AutoComplete);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1l.default)(this, (_ref = AutoComplete.__proto__ || (0, _getPrototypeOf2$1l.default)(AutoComplete)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      anchorEl: null,
      focusTextField: true,
      open: false,
      searchText: undefined
    }, _this.handleRequestClose = function () {
      // Only take into account the Popover clickAway when we are
      // not focusing the TextField.
      if (!_this.state.focusTextField) {
        _this.close();
      }
    }, _this.handleMouseDown = function (event) {
      // Keep the TextField focused
      event.preventDefault();
    }, _this.handleItemClick = function (event, child) {
      var dataSource = _this.props.dataSource;
      var index = parseInt(child.key, 10);
      var chosenRequest = dataSource[index];
      var searchText = _this.chosenRequestText(chosenRequest);

      var updateInput = function updateInput() {
        return _this.props.onUpdateInput(searchText, _this.props.dataSource, {
          source: 'click'
        });
      };
      _this.timerClickCloseId = function () {
        return setTimeout(function () {
          _this.timerClickCloseId = null;
          _this.close();
          _this.props.onNewRequest(chosenRequest, index);
        }, _this.props.menuCloseDelay);
      };

      if (typeof _this.props.searchText !== 'undefined') {
        updateInput();
        _this.timerClickCloseId();
      } else {
        _this.setState({
          searchText: searchText
        }, function () {
          updateInput();
          _this.timerClickCloseId();
        });
      }
    }, _this.chosenRequestText = function (chosenRequest) {
      if (typeof chosenRequest === 'string') {
        return chosenRequest;
      } else {
        return chosenRequest[_this.props.dataSourceConfig.text];
      }
    }, _this.handleEscKeyDown = function () {
      _this.close();
    }, _this.handleKeyDown = function (event) {
      if (_this.props.onKeyDown) _this.props.onKeyDown(event);

      switch ((0, _keycode2$a.default)(event)) {
        case 'enter':
          _this.close();
          var searchText = _this.state.searchText;
          if (searchText !== '') {
            _this.props.onNewRequest(searchText, -1);
          }
          break;

        case 'esc':
          _this.close();
          break;

        case 'down':
          event.preventDefault();
          _this.setState({
            open: true,
            focusTextField: false,
            anchorEl: _reactDom2$e.default.findDOMNode(_this.refs.searchTextField)
          });
          break;
      }
    }, _this.handleChange = function (event) {
      var searchText = event.target.value;

      // Make sure that we have a new searchText.
      // Fix an issue with a Cordova Webview
      if (searchText === _this.state.searchText) {
        return;
      }

      var state = {
        open: true,
        anchorEl: _reactDom2$e.default.findDOMNode(_this.refs.searchTextField)
      };

      if (_this.props.searchText === undefined) {
        state.searchText = searchText;
      }

      _this.setState(state);

      _this.props.onUpdateInput(searchText, _this.props.dataSource, {
        source: 'change'
      });
    }, _this.handleBlur = function (event) {
      if (_this.state.focusTextField && _this.timerClickCloseId === null) {
        _this.timerBlurClose = setTimeout(function () {
          _this.close();
        }, 0);
      }

      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleFocus = function (event) {
      if (!_this.state.open && _this.props.openOnFocus) {
        _this.setState({
          open: true,
          anchorEl: _reactDom2$e.default.findDOMNode(_this.refs.searchTextField)
        });
      }

      _this.setState({
        focusTextField: true
      });

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1l.default)(_this, _ret);
  }

  (0, _createClass3$1m.default)(AutoComplete, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.requestsList = [];
      this.setState({
        open: this.props.open,
        searchText: this.props.searchText || ''
      });
      this.timerClickCloseId = null;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.searchText !== nextProps.searchText) {
        this.setState({
          searchText: nextProps.searchText
        });
      }
      if (this.props.open !== nextProps.open) {
        this.setState({
          open: nextProps.open,
          anchorEl: _reactDom2$e.default.findDOMNode(this.refs.searchTextField)
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timerClickCloseId);
      clearTimeout(this.timerBlurClose);
    }
  }, {
    key: 'close',
    value: function close() {
      this.setState({
        open: false,
        anchorEl: null
      });

      if (this.props.onClose) {
        this.props.onClose();
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      this.refs.searchTextField.blur();
    }
  }, {
    key: 'focus',
    value: function focus() {
      this.refs.searchTextField.focus();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          anchorOrigin = _props.anchorOrigin,
          animated = _props.animated,
          animation = _props.animation,
          dataSource = _props.dataSource;
          _props.dataSourceConfig;
          var disableFocusRipple = _props.disableFocusRipple,
          errorStyle = _props.errorStyle,
          floatingLabelText = _props.floatingLabelText,
          filter = _props.filter,
          fullWidth = _props.fullWidth,
          style = _props.style,
          hintText = _props.hintText,
          maxSearchResults = _props.maxSearchResults;
          _props.menuCloseDelay;
          var textFieldStyle = _props.textFieldStyle,
          menuStyle = _props.menuStyle,
          menuProps = _props.menuProps,
          listStyle = _props.listStyle,
          targetOrigin = _props.targetOrigin;
          _props.onBlur;
          _props.onClose;
          _props.onFocus;
          _props.onKeyDown;
          _props.onNewRequest;
          _props.onUpdateInput;
          _props.openOnFocus;
          var popoverProps = _props.popoverProps;
          _props.searchText;
          var other = (0, _objectWithoutProperties3$14.default)(_props, ['anchorOrigin', 'animated', 'animation', 'dataSource', 'dataSourceConfig', 'disableFocusRipple', 'errorStyle', 'floatingLabelText', 'filter', 'fullWidth', 'style', 'hintText', 'maxSearchResults', 'menuCloseDelay', 'textFieldStyle', 'menuStyle', 'menuProps', 'listStyle', 'targetOrigin', 'onBlur', 'onClose', 'onFocus', 'onKeyDown', 'onNewRequest', 'onUpdateInput', 'openOnFocus', 'popoverProps', 'searchText']);

      var _ref2 = popoverProps || {},
          popoverStyle = _ref2.style,
          popoverOther = (0, _objectWithoutProperties3$14.default)(_ref2, ['style']);

      var _state = this.state,
          open = _state.open,
          anchorEl = _state.anchorEl,
          searchText = _state.searchText,
          focusTextField = _state.focusTextField;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$Z(this.props, this.context, this.state);

      var requestsList = [];

      dataSource.every(function (item, index) {
        switch (typeof item === 'undefined' ? 'undefined' : (0, _typeof3$3.default)(item)) {
          case 'string':
            if (filter(searchText, item, item)) {
              requestsList.push({
                text: item,
                value: _react2$1G.default.createElement(_MenuItem2$5.default, {
                  innerDivStyle: styles.innerDiv,
                  value: item,
                  primaryText: item,
                  disableFocusRipple: disableFocusRipple,
                  key: index
                })
              });
            }
            break;

          case 'object':
            if (item && typeof item[_this2.props.dataSourceConfig.text] === 'string') {
              var itemText = item[_this2.props.dataSourceConfig.text];
              if (!_this2.props.filter(searchText, itemText, item)) break;

              var itemValue = item[_this2.props.dataSourceConfig.value];
              if (itemValue && itemValue.type && (itemValue.type.muiName === _MenuItem2$5.default.muiName || itemValue.type.muiName === _Divider2$1.default.muiName)) {
                requestsList.push({
                  text: itemText,
                  value: _react2$1G.default.cloneElement(itemValue, {
                    key: index,
                    disableFocusRipple: disableFocusRipple
                  })
                });
              } else {
                requestsList.push({
                  text: itemText,
                  value: _react2$1G.default.createElement(_MenuItem2$5.default, {
                    innerDivStyle: styles.innerDiv,
                    primaryText: itemText,
                    disableFocusRipple: disableFocusRipple,
                    key: index
                  })
                });
              }
            }
            break;
          // Do nothing
        }

        return !(maxSearchResults && maxSearchResults > 0 && requestsList.length === maxSearchResults);
      });

      this.requestsList = requestsList;

      var menu = open && requestsList.length > 0 && _react2$1G.default.createElement(
        _Menu2$5.default,
        (0, _extends3$15.default)({
          ref: 'menu',
          autoWidth: false,
          disableAutoFocus: focusTextField,
          onEscKeyDown: this.handleEscKeyDown,
          initiallyKeyboardFocused: true,
          onItemClick: this.handleItemClick,
          onMouseDown: this.handleMouseDown,
          style: (0, _simpleAssign2$1d.default)(styles.menu, menuStyle),
          listStyle: (0, _simpleAssign2$1d.default)(styles.list, listStyle)
        }, menuProps),
        requestsList.map(function (i) {
          return i.value;
        })
      );

      return _react2$1G.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$1d.default)(styles.root, style)) },
        _react2$1G.default.createElement(_TextField2$5.default, (0, _extends3$15.default)({
          ref: 'searchTextField',
          autoComplete: 'off',
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onKeyDown: this.handleKeyDown,
          floatingLabelText: floatingLabelText,
          hintText: hintText,
          fullWidth: fullWidth,
          multiLine: false,
          errorStyle: errorStyle,
          style: textFieldStyle
        }, other, {
          // value and onChange are idiomatic properties often leaked.
          // We prevent their overrides in order to reduce potential bugs.
          value: searchText,
          onChange: this.handleChange
        })),
        _react2$1G.default.createElement(
          _Popover2$7.default,
          (0, _extends3$15.default)({
            style: (0, _simpleAssign2$1d.default)({}, styles.popover, popoverStyle),
            canAutoPosition: false,
            anchorOrigin: anchorOrigin,
            targetOrigin: targetOrigin,
            open: open,
            anchorEl: anchorEl,
            useLayerForClickAway: false,
            onRequestClose: this.handleRequestClose,
            animated: animated,
            animation: animation
          }, popoverOther),
          menu
        )
      );
    }
  }]);
  return AutoComplete;
}(_react$1J.Component);

AutoComplete$3.defaultProps = {
  anchorOrigin: {
    vertical: 'bottom',
    horizontal: 'left'
  },
  animated: true,
  dataSourceConfig: {
    text: 'text',
    value: 'value'
  },
  disableFocusRipple: true,
  filter: function filter(searchText, key) {
    return searchText !== '' && key.indexOf(searchText) !== -1;
  },
  fullWidth: false,
  open: false,
  openOnFocus: false,
  onUpdateInput: function onUpdateInput() {},
  onNewRequest: function onNewRequest() {},
  menuCloseDelay: 300,
  targetOrigin: {
    vertical: 'top',
    horizontal: 'left'
  }
};
AutoComplete$3.contextTypes = {
  muiTheme: _propTypes2$1v.default.object.isRequired
};
AutoComplete$3.propTypes = {
  /**
   * Location of the anchor for the auto complete.
   */
  anchorOrigin: _propTypes4$b.default.origin,
  /**
   * If true, the auto complete is animated as it is toggled.
   */
  animated: _propTypes2$1v.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$1v.default.func,
  /**
   * Array of strings or nodes used to populate the list.
   */
  dataSource: _propTypes2$1v.default.array.isRequired,
  /**
   * Config for objects list dataSource.
   *
   * @typedef {Object} dataSourceConfig
   *
   * @property {string} text `dataSource` element key used to find a string to be matched for search
   * and shown as a `TextField` input value after choosing the result.
   * @property {string} value `dataSource` element key used to find a string to be shown in search results.
   */
  dataSourceConfig: _propTypes2$1v.default.object,
  /**
   * Disables focus ripple when true.
   */
  disableFocusRipple: _propTypes2$1v.default.bool,
  /**
   * Override style prop for error.
   */
  errorStyle: _propTypes2$1v.default.object,
  /**
   * The error content to display.
   */
  errorText: _propTypes2$1v.default.node,
  /**
   * Callback function used to filter the auto complete.
   *
   * @param {string} searchText The text to search for within `dataSource`.
   * @param {string} key `dataSource` element, or `text` property on that element if it's not a string.
   * @returns {boolean} `true` indicates the auto complete list will include `key` when the input is `searchText`.
   */
  filter: _propTypes2$1v.default.func,
  /**
   * The content to use for adding floating label element.
   */
  floatingLabelText: _propTypes2$1v.default.node,
  /**
   * If true, the field receives the property `width: 100%`.
   */
  fullWidth: _propTypes2$1v.default.bool,
  /**
   * The hint content to display.
   */
  hintText: _propTypes2$1v.default.node,
  /**
   * Override style for list.
   */
  listStyle: _propTypes2$1v.default.object,
  /**
   * The max number of search results to be shown.
   * By default it shows all the items which matches filter.
   */
  maxSearchResults: _propTypes2$1v.default.number,
  /**
   * Delay for closing time of the menu.
   */
  menuCloseDelay: _propTypes2$1v.default.number,
  /**
   * Props to be passed to menu.
   */
  menuProps: _propTypes2$1v.default.object,
  /**
   * Override style for menu.
   */
  menuStyle: _propTypes2$1v.default.object,
  /** @ignore */
  onBlur: _propTypes2$1v.default.func,
  /**
   * Callback function fired when the menu is closed.
   */
  onClose: _propTypes2$1v.default.func,
  /** @ignore */
  onFocus: _propTypes2$1v.default.func,
  /** @ignore */
  onKeyDown: _propTypes2$1v.default.func,
  /**
   * Callback function that is fired when a list item is selected, or enter is pressed in the `TextField`.
   *
   * @param {string} chosenRequest Either the `TextField` input value, if enter is pressed in the `TextField`,
   * or the dataSource object corresponding to the list item that was selected.
   * @param {number} index The index in `dataSource` of the list item selected, or `-1` if enter is pressed in the
   * `TextField`.
   */
  onNewRequest: _propTypes2$1v.default.func,
  /**
   * Callback function that is fired when the user updates the `TextField`.
   *
   * @param {string} searchText The auto-complete's `searchText` value.
   * @param {array} dataSource The auto-complete's `dataSource` array.
   * @param {object} params Additional information linked the update.
   */
  onUpdateInput: _propTypes2$1v.default.func,
  /**
   * Auto complete menu is open if true.
   */
  open: _propTypes2$1v.default.bool,
  /**
   * If true, the list item is showed when a focus event triggers.
   */
  openOnFocus: _propTypes2$1v.default.bool,
  /**
   * Props to be passed to popover.
   */
  popoverProps: _propTypes2$1v.default.object,
  /**
   * Text being input to auto complete.
   */
  searchText: _propTypes2$1v.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1v.default.object,
  /**
   * Origin for location of target.
   */
  targetOrigin: _propTypes4$b.default.origin,
  /**
   * Override the inline-styles of AutoComplete's TextField element.
   */
  textFieldStyle: _propTypes2$1v.default.object
} ;


AutoComplete$3.levenshteinDistance = function (searchText, key) {
  var current = [];
  var prev = void 0;
  var value = void 0;

  for (var i = 0; i <= key.length; i++) {
    for (var j = 0; j <= searchText.length; j++) {
      if (i && j) {
        if (searchText.charAt(j - 1) === key.charAt(i - 1)) value = prev;else value = Math.min(current[j], current[j - 1], prev) + 1;
      } else {
        value = i + j;
      }
      prev = current[j];
      current[j] = value;
    }
  }
  return current.pop();
};

AutoComplete$3.noFilter = function () {
  return true;
};

AutoComplete$3.defaultFilter = AutoComplete$3.caseSensitiveFilter = function (searchText, key) {
  return searchText !== '' && key.indexOf(searchText) !== -1;
};

AutoComplete$3.caseInsensitiveFilter = function (searchText, key) {
  return key.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
};

AutoComplete$3.levenshteinDistanceFilter = function (distanceLessThan) {
  if (distanceLessThan === undefined) {
    return AutoComplete$3.levenshteinDistance;
  } else if (typeof distanceLessThan !== 'number') {
    throw 'Error: AutoComplete.levenshteinDistanceFilter is a filter generator, not a filter!';
  }

  return function (s, k) {
    return AutoComplete$3.levenshteinDistance(s, k) < distanceLessThan;
  };
};

AutoComplete$3.fuzzyFilter = function (searchText, key) {
  var compareString = key.toLowerCase();
  searchText = searchText.toLowerCase();

  var searchTextIndex = 0;
  for (var index = 0; index < key.length; index++) {
    if (compareString[index] === searchText[searchTextIndex]) {
      searchTextIndex += 1;
    }
  }

  return searchTextIndex === searchText.length;
};

AutoComplete$3.Item = _MenuItem2$5.default;
AutoComplete$3.Divider = _Divider2$1.default;

AutoComplete$4.default = AutoComplete$3;

Object.defineProperty(AutoComplete$5, "__esModule", {
  value: true
});
AutoComplete$5.default = undefined;

var _AutoComplete$1 = AutoComplete$4;

var _AutoComplete2$1 = _interopRequireDefault$2q(_AutoComplete$1);

function _interopRequireDefault$2q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

AutoComplete$5.default = _AutoComplete2$1.default;

var Badge$2 = {};

var Badge$1 = {};

Object.defineProperty(Badge$1, "__esModule", {
  value: true
});

var _extends2$14 = _extends$3;

var _extends3$14 = _interopRequireDefault$2p(_extends2$14);

var _objectWithoutProperties2$13 = objectWithoutProperties$2;

var _objectWithoutProperties3$13 = _interopRequireDefault$2p(_objectWithoutProperties2$13);

var _getPrototypeOf$1k = getPrototypeOf$1.exports;

var _getPrototypeOf2$1k = _interopRequireDefault$2p(_getPrototypeOf$1k);

var _classCallCheck2$1m = classCallCheck$3;

var _classCallCheck3$1m = _interopRequireDefault$2p(_classCallCheck2$1m);

var _createClass2$1l = createClass$2;

var _createClass3$1l = _interopRequireDefault$2p(_createClass2$1l);

var _possibleConstructorReturn2$1k = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1k = _interopRequireDefault$2p(_possibleConstructorReturn2$1k);

var _inherits2$1k = inherits$3;

var _inherits3$1k = _interopRequireDefault$2p(_inherits2$1k);

var _simpleAssign$1c = simpleAssign;

var _simpleAssign2$1c = _interopRequireDefault$2p(_simpleAssign$1c);

var _react$1I = react;

var _react2$1F = _interopRequireDefault$2p(_react$1I);

var _propTypes$1u = propTypes$5.exports;

var _propTypes2$1u = _interopRequireDefault$2p(_propTypes$1u);

function _interopRequireDefault$2p(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$Y(props, context) {
  var primary = props.primary,
      secondary = props.secondary;
  var badge = context.muiTheme.badge;


  var badgeBackgroundColor = void 0;
  var badgeTextColor = void 0;

  if (primary) {
    badgeBackgroundColor = badge.primaryColor;
    badgeTextColor = badge.primaryTextColor;
  } else if (secondary) {
    badgeBackgroundColor = badge.secondaryColor;
    badgeTextColor = badge.secondaryTextColor;
  } else {
    badgeBackgroundColor = badge.color;
    badgeTextColor = badge.textColor;
  }

  var radius = 12;
  var radius2x = Math.floor(2 * radius);

  return {
    root: {
      position: 'relative',
      display: 'inline-block',
      padding: radius2x + 'px ' + radius2x + 'px ' + radius + 'px ' + radius + 'px'
    },
    badge: {
      display: 'flex',
      flexDirection: 'row',
      flexWrap: 'wrap',
      justifyContent: 'center',
      alignContent: 'center',
      alignItems: 'center',
      position: 'absolute',
      top: 0,
      right: 0,
      fontWeight: badge.fontWeight,
      fontSize: radius,
      width: radius2x,
      height: radius2x,
      borderRadius: '50%',
      backgroundColor: badgeBackgroundColor,
      color: badgeTextColor
    }
  };
}

var Badge = function (_Component) {
  (0, _inherits3$1k.default)(Badge, _Component);

  function Badge() {
    (0, _classCallCheck3$1m.default)(this, Badge);
    return (0, _possibleConstructorReturn3$1k.default)(this, (Badge.__proto__ || (0, _getPrototypeOf2$1k.default)(Badge)).apply(this, arguments));
  }

  (0, _createClass3$1l.default)(Badge, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          badgeContent = _props.badgeContent,
          badgeStyle = _props.badgeStyle,
          children = _props.children;
          _props.primary;
          _props.secondary;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$13.default)(_props, ['badgeContent', 'badgeStyle', 'children', 'primary', 'secondary', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$Y(this.props, this.context);

      return _react2$1F.default.createElement(
        'div',
        (0, _extends3$14.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1c.default)({}, styles.root, style)) }),
        children,
        _react2$1F.default.createElement(
          'span',
          { style: prepareStyles((0, _simpleAssign2$1c.default)({}, styles.badge, badgeStyle)) },
          badgeContent
        )
      );
    }
  }]);
  return Badge;
}(_react$1I.Component);

Badge.defaultProps = {
  primary: false,
  secondary: false
};
Badge.contextTypes = {
  muiTheme: _propTypes2$1u.default.object.isRequired
};
Badge.propTypes = {
  /**
   * This is the content rendered within the badge.
   */
  badgeContent: _propTypes2$1u.default.node.isRequired,
  /**
   * Override the inline-styles of the badge element.
   */
  badgeStyle: _propTypes2$1u.default.object,
  /**
   * The badge will be added relativelty to this node.
   */
  children: _propTypes2$1u.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1u.default.string,
  /**
   * If true, the badge will use the primary badge colors.
   */
  primary: _propTypes2$1u.default.bool,
  /**
   * If true, the badge will use the secondary badge colors.
   */
  secondary: _propTypes2$1u.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1u.default.object
} ;
Badge$1.default = Badge;

Object.defineProperty(Badge$2, "__esModule", {
  value: true
});
Badge$2.default = undefined;

var _Badge = Badge$1;

var _Badge2 = _interopRequireDefault$2o(_Badge);

function _interopRequireDefault$2o(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Badge$2.default = _Badge2.default;

var BottomNavigation$2 = {};

var BottomNavigation$1 = {};

Object.defineProperty(BottomNavigation$1, "__esModule", {
  value: true
});

var _extends2$13 = _extends$3;

var _extends3$13 = _interopRequireDefault$2n(_extends2$13);

var _objectWithoutProperties2$12 = objectWithoutProperties$2;

var _objectWithoutProperties3$12 = _interopRequireDefault$2n(_objectWithoutProperties2$12);

var _simpleAssign$1b = simpleAssign;

var _simpleAssign2$1b = _interopRequireDefault$2n(_simpleAssign$1b);

var _react$1H = react;

var _react2$1E = _interopRequireDefault$2n(_react$1H);

var _propTypes$1t = propTypes$5.exports;

var _propTypes2$1t = _interopRequireDefault$2n(_propTypes$1t);

function _interopRequireDefault$2n(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$X(props, context) {
  var bottomNavigation = context.muiTheme.bottomNavigation;


  var styles = {
    root: {
      position: 'relative',
      width: '100%',
      display: 'flex',
      justifyContent: 'center',
      backgroundColor: bottomNavigation.backgroundColor,
      height: bottomNavigation.height
    },
    item: {
      flex: '1'
    }
  };

  return styles;
}

var BottomNavigation = function BottomNavigation(props, context) {
  var children = props.children,
      style = props.style,
      selectedIndex = props.selectedIndex,
      other = (0, _objectWithoutProperties3$12.default)(props, ['children', 'style', 'selectedIndex']);
  var prepareStyles = context.muiTheme.prepareStyles;

  var styles = getStyles$X(props, context);

  var preparedChildren = _react$1H.Children.map(children, function (child, index) {
    if (!child) {
      return null;
    }

    return (0, _react$1H.cloneElement)(child, {
      style: (0, _simpleAssign2$1b.default)({}, styles.item, child.props.style),
      selected: index === selectedIndex
    });
  });

  return _react2$1E.default.createElement(
    'div',
    (0, _extends3$13.default)({}, other, { style: prepareStyles((0, _simpleAssign2$1b.default)({}, styles.root, style)) }),
    preparedChildren
  );
};

BottomNavigation.propTypes = {
  /**
   * The `BottomNavigationItem`s to populate the element with.
   */
  children: _propTypes2$1t.default.node,
  /**
   * The index of the currently selected navigation item.
   */
  selectedIndex: _propTypes2$1t.default.number,
  /**
   * @ignore
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1t.default.object
} ;

BottomNavigation.contextTypes = {
  muiTheme: _propTypes2$1t.default.object.isRequired
};

BottomNavigation$1.default = BottomNavigation;

var BottomNavigationItem$1 = {};

Object.defineProperty(BottomNavigationItem$1, "__esModule", {
  value: true
});

var _extends2$12 = _extends$3;

var _extends3$12 = _interopRequireDefault$2m(_extends2$12);

var _objectWithoutProperties2$11 = objectWithoutProperties$2;

var _objectWithoutProperties3$11 = _interopRequireDefault$2m(_objectWithoutProperties2$11);

var _simpleAssign$1a = simpleAssign;

var _simpleAssign2$1a = _interopRequireDefault$2m(_simpleAssign$1a);

var _react$1G = react;

var _react2$1D = _interopRequireDefault$2m(_react$1G);

var _propTypes$1s = propTypes$5.exports;

var _propTypes2$1s = _interopRequireDefault$2m(_propTypes$1s);

var _EnhancedButton$6 = EnhancedButton$1;

var _EnhancedButton2$6 = _interopRequireDefault$2m(_EnhancedButton$6);

function _interopRequireDefault$2m(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$W(props, context) {
  var selected = props.selected;
  var bottomNavigation = context.muiTheme.bottomNavigation;


  var color = selected ? bottomNavigation.selectedColor : bottomNavigation.unselectedColor;

  var styles = {
    root: {
      transition: 'padding-top 0.3s',
      paddingTop: selected ? 6 : 8,
      paddingBottom: 10,
      paddingLeft: 12,
      paddingRight: 12,
      minWidth: 80,
      maxWidth: 168
    },
    label: {
      fontSize: selected ? bottomNavigation.selectedFontSize : bottomNavigation.unselectedFontSize,
      transition: 'color 0.3s, font-size 0.3s',
      color: color
    },
    icon: {
      display: 'block',
      /**
       * Used to ensure SVG icons are centered
       */
      width: '100%'
    },
    iconColor: color
  };

  return styles;
}

var BottomNavigationItem = function BottomNavigationItem(props, context) {
  var label = props.label,
      icon = props.icon,
      style = props.style,
      other = (0, _objectWithoutProperties3$11.default)(props, ['label', 'icon', 'style']);
  var prepareStyles = context.muiTheme.prepareStyles;

  var styles = getStyles$W(props, context);

  var styledIcon = (0, _react$1G.cloneElement)(icon, {
    style: (0, _simpleAssign2$1a.default)({}, styles.icon, icon.props.style),
    color: icon.props.color || styles.iconColor
  });

  return _react2$1D.default.createElement(
    _EnhancedButton2$6.default,
    (0, _extends3$12.default)({}, other, { style: (0, _simpleAssign2$1a.default)({}, styles.root, style) }),
    styledIcon,
    _react2$1D.default.createElement(
      'div',
      { style: prepareStyles(styles.label) },
      label
    )
  );
};

BottomNavigationItem.propTypes = {
  /**
   * Set the icon representing the view for this item.
   */
  icon: _propTypes2$1s.default.node,
  /**
   * Set the label describing the view for this item.
   */
  label: _propTypes2$1s.default.node,
  /**
   * @ignore
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1s.default.object
} ;

BottomNavigationItem.contextTypes = {
  muiTheme: _propTypes2$1s.default.object.isRequired
};

BottomNavigationItem$1.default = BottomNavigationItem;

Object.defineProperty(BottomNavigation$2, "__esModule", {
  value: true
});
BottomNavigation$2.default = BottomNavigation$2.BottomNavigationItem = BottomNavigation$2.BottomNavigation = undefined;

var _BottomNavigation2 = BottomNavigation$1;

var _BottomNavigation3 = _interopRequireDefault$2l(_BottomNavigation2);

var _BottomNavigationItem2 = BottomNavigationItem$1;

var _BottomNavigationItem3 = _interopRequireDefault$2l(_BottomNavigationItem2);

function _interopRequireDefault$2l(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

BottomNavigation$2.BottomNavigation = _BottomNavigation3.default;
BottomNavigation$2.BottomNavigationItem = _BottomNavigationItem3.default;
BottomNavigation$2.default = _BottomNavigation3.default;

var Card$2 = {};

var Card$1 = {};

var CardExpandable$1 = {};

var keyboardArrowUp = {};

Object.defineProperty(keyboardArrowUp, "__esModule", {
  value: true
});

var _react$1F = react;

var _react2$1C = _interopRequireDefault$2k(_react$1F);

var _pure$b = pure$3;

var _pure2$b = _interopRequireDefault$2k(_pure$b);

var _SvgIcon$c = SvgIcon$6;

var _SvgIcon2$c = _interopRequireDefault$2k(_SvgIcon$c);

function _interopRequireDefault$2k(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HardwareKeyboardArrowUp = function HardwareKeyboardArrowUp(props) {
  return _react2$1C.default.createElement(
    _SvgIcon2$c.default,
    props,
    _react2$1C.default.createElement('path', { d: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z' })
  );
};
HardwareKeyboardArrowUp = (0, _pure2$b.default)(HardwareKeyboardArrowUp);
HardwareKeyboardArrowUp.displayName = 'HardwareKeyboardArrowUp';
HardwareKeyboardArrowUp.muiName = 'SvgIcon';

keyboardArrowUp.default = HardwareKeyboardArrowUp;

var keyboardArrowDown = {};

Object.defineProperty(keyboardArrowDown, "__esModule", {
  value: true
});

var _react$1E = react;

var _react2$1B = _interopRequireDefault$2j(_react$1E);

var _pure$a = pure$3;

var _pure2$a = _interopRequireDefault$2j(_pure$a);

var _SvgIcon$b = SvgIcon$6;

var _SvgIcon2$b = _interopRequireDefault$2j(_SvgIcon$b);

function _interopRequireDefault$2j(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HardwareKeyboardArrowDown = function HardwareKeyboardArrowDown(props) {
  return _react2$1B.default.createElement(
    _SvgIcon2$b.default,
    props,
    _react2$1B.default.createElement('path', { d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z' })
  );
};
HardwareKeyboardArrowDown = (0, _pure2$a.default)(HardwareKeyboardArrowDown);
HardwareKeyboardArrowDown.displayName = 'HardwareKeyboardArrowDown';
HardwareKeyboardArrowDown.muiName = 'SvgIcon';

keyboardArrowDown.default = HardwareKeyboardArrowDown;

Object.defineProperty(CardExpandable$1, "__esModule", {
  value: true
});

var _getPrototypeOf$1j = getPrototypeOf$1.exports;

var _getPrototypeOf2$1j = _interopRequireDefault$2i(_getPrototypeOf$1j);

var _classCallCheck2$1l = classCallCheck$3;

var _classCallCheck3$1l = _interopRequireDefault$2i(_classCallCheck2$1l);

var _createClass2$1k = createClass$2;

var _createClass3$1k = _interopRequireDefault$2i(_createClass2$1k);

var _possibleConstructorReturn2$1j = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1j = _interopRequireDefault$2i(_possibleConstructorReturn2$1j);

var _inherits2$1j = inherits$3;

var _inherits3$1j = _interopRequireDefault$2i(_inherits2$1j);

var _simpleAssign$19 = simpleAssign;

var _simpleAssign2$19 = _interopRequireDefault$2i(_simpleAssign$19);

var _react$1D = react;

var _react2$1A = _interopRequireDefault$2i(_react$1D);

var _propTypes$1r = propTypes$5.exports;

var _propTypes2$1r = _interopRequireDefault$2i(_propTypes$1r);

var _keyboardArrowUp = keyboardArrowUp;

var _keyboardArrowUp2 = _interopRequireDefault$2i(_keyboardArrowUp);

var _keyboardArrowDown = keyboardArrowDown;

var _keyboardArrowDown2 = _interopRequireDefault$2i(_keyboardArrowDown);

var _IconButton$4 = IconButton$5;

var _IconButton2$4 = _interopRequireDefault$2i(_IconButton$4);

function _interopRequireDefault$2i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$V() {
  return {
    root: {
      top: 0,
      bottom: 0,
      right: 4,
      margin: 'auto',
      position: 'absolute'
    }
  };
}

var CardExpandable = function (_Component) {
  (0, _inherits3$1j.default)(CardExpandable, _Component);

  function CardExpandable() {
    (0, _classCallCheck3$1l.default)(this, CardExpandable);
    return (0, _possibleConstructorReturn3$1j.default)(this, (CardExpandable.__proto__ || (0, _getPrototypeOf2$1j.default)(CardExpandable)).apply(this, arguments));
  }

  (0, _createClass3$1k.default)(CardExpandable, [{
    key: 'render',
    value: function render() {
      var styles = getStyles$V(this.props, this.context);

      return _react2$1A.default.createElement(
        _IconButton2$4.default,
        {
          style: (0, _simpleAssign2$19.default)(styles.root, this.props.style),
          onClick: this.props.onExpanding,
          iconStyle: this.props.iconStyle
        },
        this.props.expanded ? this.props.openIcon : this.props.closeIcon
      );
    }
  }]);
  return CardExpandable;
}(_react$1D.Component);

CardExpandable.contextTypes = {
  muiTheme: _propTypes2$1r.default.object.isRequired
};
CardExpandable.defaultProps = {
  closeIcon: _react2$1A.default.createElement(_keyboardArrowDown2.default, null),
  openIcon: _react2$1A.default.createElement(_keyboardArrowUp2.default, null)
};
CardExpandable.propTypes = {
  closeIcon: _propTypes2$1r.default.node,
  expanded: _propTypes2$1r.default.bool,
  iconStyle: _propTypes2$1r.default.object,
  onExpanding: _propTypes2$1r.default.func.isRequired,
  openIcon: _propTypes2$1r.default.node,
  style: _propTypes2$1r.default.object
} ;
CardExpandable$1.default = CardExpandable;

Object.defineProperty(Card$1, "__esModule", {
  value: true
});

var _extends2$11 = _extends$3;

var _extends3$11 = _interopRequireDefault$2h(_extends2$11);

var _objectWithoutProperties2$10 = objectWithoutProperties$2;

var _objectWithoutProperties3$10 = _interopRequireDefault$2h(_objectWithoutProperties2$10);

var _getPrototypeOf$1i = getPrototypeOf$1.exports;

var _getPrototypeOf2$1i = _interopRequireDefault$2h(_getPrototypeOf$1i);

var _classCallCheck2$1k = classCallCheck$3;

var _classCallCheck3$1k = _interopRequireDefault$2h(_classCallCheck2$1k);

var _createClass2$1j = createClass$2;

var _createClass3$1j = _interopRequireDefault$2h(_createClass2$1j);

var _possibleConstructorReturn2$1i = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1i = _interopRequireDefault$2h(_possibleConstructorReturn2$1i);

var _inherits2$1i = inherits$3;

var _inherits3$1i = _interopRequireDefault$2h(_inherits2$1i);

var _simpleAssign$18 = simpleAssign;

var _simpleAssign2$18 = _interopRequireDefault$2h(_simpleAssign$18);

var _react$1C = react;

var _react2$1z = _interopRequireDefault$2h(_react$1C);

var _propTypes$1q = propTypes$5.exports;

var _propTypes2$1q = _interopRequireDefault$2h(_propTypes$1q);

var _Paper$9 = Paper$2;

var _Paper2$9 = _interopRequireDefault$2h(_Paper$9);

var _CardExpandable = CardExpandable$1;

var _CardExpandable2$1 = _interopRequireDefault$2h(_CardExpandable);

function _interopRequireDefault$2h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Card = function (_Component) {
  (0, _inherits3$1i.default)(Card, _Component);

  function Card() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1k.default)(this, Card);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1i.default)(this, (_ref = Card.__proto__ || (0, _getPrototypeOf2$1i.default)(Card)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      expanded: null
    }, _this.handleExpanding = function (event) {
      event.preventDefault();
      var newExpandedState = !_this.state.expanded;
      // no automatic state update when the component is controlled
      if (_this.props.expanded === null) {
        _this.setState({ expanded: newExpandedState });
      }
      if (_this.props.onExpandChange) {
        _this.props.onExpandChange(newExpandedState);
      }
    }, _temp), (0, _possibleConstructorReturn3$1i.default)(_this, _ret);
  }

  (0, _createClass3$1j.default)(Card, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        expanded: this.props.expanded === null ? this.props.initiallyExpanded === true : this.props.expanded
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      // update the state when the component is controlled.
      if (nextProps.expanded !== null) this.setState({ expanded: nextProps.expanded });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          style = _props.style,
          containerStyle = _props.containerStyle,
          children = _props.children;
          _props.expandable;
          _props.expanded;
          _props.initiallyExpanded;
          _props.onExpandChange;
          var other = (0, _objectWithoutProperties3$10.default)(_props, ['style', 'containerStyle', 'children', 'expandable', 'expanded', 'initiallyExpanded', 'onExpandChange']);


      var lastElement = void 0;
      var expanded = this.state.expanded;
      var newChildren = _react2$1z.default.Children.map(children, function (currentChild) {
        var doClone = false;
        var newChild = undefined;
        var newProps = {};
        var element = currentChild;
        if (!currentChild || !currentChild.props) {
          return null;
        }
        if (expanded === false && currentChild.props.expandable === true) return;
        if (currentChild.props.actAsExpander === true) {
          doClone = true;
          newProps.onClick = _this2.handleExpanding;
          newProps.style = (0, _simpleAssign2$18.default)({ cursor: 'pointer' }, currentChild.props.style);
        }
        if (currentChild.props.showExpandableButton === true) {
          doClone = true;
          newChild = _react2$1z.default.createElement(_CardExpandable2$1.default, {
            closeIcon: currentChild.props.closeIcon,
            expanded: expanded,
            onExpanding: _this2.handleExpanding,
            openIcon: currentChild.props.openIcon,
            iconStyle: currentChild.props.iconStyle
          });
        }
        if (doClone) {
          element = _react2$1z.default.cloneElement(currentChild, newProps, currentChild.props.children, newChild);
        }
        lastElement = element;
        return element;
      }, this);

      // If the last element is text or a title we should add
      // 8px padding to the bottom of the card
      var addBottomPadding = lastElement && (lastElement.type.muiName === 'CardText' || lastElement.type.muiName === 'CardTitle');

      var mergedStyles = (0, _simpleAssign2$18.default)({
        zIndex: 1
      }, style);
      var containerMergedStyles = (0, _simpleAssign2$18.default)({
        paddingBottom: addBottomPadding ? 8 : 0
      }, containerStyle);

      return _react2$1z.default.createElement(
        _Paper2$9.default,
        (0, _extends3$11.default)({}, other, { style: mergedStyles }),
        _react2$1z.default.createElement(
          'div',
          { style: containerMergedStyles },
          newChildren
        )
      );
    }
  }]);
  return Card;
}(_react$1C.Component);

Card.defaultProps = {
  expandable: false,
  expanded: null,
  initiallyExpanded: false
};
Card.propTypes = {
  /**
   * Can be used to render elements inside the Card.
   */
  children: _propTypes2$1q.default.node,
  /**
   * Override the inline-styles of the container element.
   */
  containerStyle: _propTypes2$1q.default.object,
  /**
   * If true, this card component is expandable. Can be set on any child of the `Card` component.
   */
  expandable: _propTypes2$1q.default.bool,
  /**
   * Whether this card is expanded.
   * If `true` or `false` the component is controlled.
   * if `null` the component is uncontrolled.
   */
  expanded: _propTypes2$1q.default.bool,
  /**
   * Whether this card is initially expanded.
   */
  initiallyExpanded: _propTypes2$1q.default.bool,
  /**
   * Callback function fired when the `expandable` state of the card has changed.
   *
   * @param {boolean} newExpandedState Represents the new `expanded` state of the card.
   */
  onExpandChange: _propTypes2$1q.default.func,
  /**
   * If true, this card component will include a button to expand the card. `CardTitle`,
   * `CardHeader` and `CardActions` implement `showExpandableButton`. Any child component
   * of `Card` can implements `showExpandableButton` or forwards the property to a child
   * component supporting it.
   */
  showExpandableButton: _propTypes2$1q.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1q.default.object
} ;
Card$1.default = Card;

var CardHeader$1 = {};

Object.defineProperty(CardHeader$1, "__esModule", {
  value: true
});

var _extends2$10 = _extends$3;

var _extends3$10 = _interopRequireDefault$2g(_extends2$10);

var _objectWithoutProperties2$$ = objectWithoutProperties$2;

var _objectWithoutProperties3$$ = _interopRequireDefault$2g(_objectWithoutProperties2$$);

var _getPrototypeOf$1h = getPrototypeOf$1.exports;

var _getPrototypeOf2$1h = _interopRequireDefault$2g(_getPrototypeOf$1h);

var _classCallCheck2$1j = classCallCheck$3;

var _classCallCheck3$1j = _interopRequireDefault$2g(_classCallCheck2$1j);

var _createClass2$1i = createClass$2;

var _createClass3$1i = _interopRequireDefault$2g(_createClass2$1i);

var _possibleConstructorReturn2$1h = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1h = _interopRequireDefault$2g(_possibleConstructorReturn2$1h);

var _inherits2$1h = inherits$3;

var _inherits3$1h = _interopRequireDefault$2g(_inherits2$1h);

var _simpleAssign$17 = simpleAssign;

var _simpleAssign2$17 = _interopRequireDefault$2g(_simpleAssign$17);

var _react$1B = react;

var _react2$1y = _interopRequireDefault$2g(_react$1B);

var _propTypes$1p = propTypes$5.exports;

var _propTypes2$1p = _interopRequireDefault$2g(_propTypes$1p);

var _Avatar = Avatar$2;

var _Avatar2 = _interopRequireDefault$2g(_Avatar);

function _interopRequireDefault$2g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$U(props, context) {
  var card = context.muiTheme.card;


  return {
    root: {
      padding: 16,
      fontWeight: card.fontWeight,
      boxSizing: 'border-box',
      position: 'relative',
      whiteSpace: 'nowrap'
    },
    text: {
      display: 'inline-block',
      verticalAlign: 'top',
      whiteSpace: 'normal',
      paddingRight: '90px'
    },
    avatar: {
      marginRight: 16
    },
    title: {
      color: props.titleColor || card.titleColor,
      display: 'block',
      fontSize: 15
    },
    subtitle: {
      color: props.subtitleColor || card.subtitleColor,
      display: 'block',
      fontSize: 14
    }
  };
}

var CardHeader = function (_Component) {
  (0, _inherits3$1h.default)(CardHeader, _Component);

  function CardHeader() {
    (0, _classCallCheck3$1j.default)(this, CardHeader);
    return (0, _possibleConstructorReturn3$1h.default)(this, (CardHeader.__proto__ || (0, _getPrototypeOf2$1h.default)(CardHeader)).apply(this, arguments));
  }

  (0, _createClass3$1i.default)(CardHeader, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.actAsExpander;
          var avatarProp = _props.avatar,
          children = _props.children;
          _props.closeIcon;
          _props.expandable;
          _props.openIcon;
          _props.showExpandableButton;
          var style = _props.style,
          subtitle = _props.subtitle;
          _props.subtitleColor;
          var subtitleStyle = _props.subtitleStyle,
          textStyle = _props.textStyle,
          title = _props.title;
          _props.titleColor;
          var titleStyle = _props.titleStyle;
          _props.iconStyle;
          var other = (0, _objectWithoutProperties3$$.default)(_props, ['actAsExpander', 'avatar', 'children', 'closeIcon', 'expandable', 'openIcon', 'showExpandableButton', 'style', 'subtitle', 'subtitleColor', 'subtitleStyle', 'textStyle', 'title', 'titleColor', 'titleStyle', 'iconStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$U(this.props, this.context);

      var avatar = avatarProp;

      if ((0, _react$1B.isValidElement)(avatarProp)) {
        avatar = _react2$1y.default.cloneElement(avatar, {
          style: (0, _simpleAssign2$17.default)(styles.avatar, avatar.props.style)
        });
      } else if (avatar !== null) {
        avatar = _react2$1y.default.createElement(_Avatar2.default, { src: avatarProp, style: styles.avatar });
      }

      return _react2$1y.default.createElement(
        'div',
        (0, _extends3$10.default)({}, other, { style: prepareStyles((0, _simpleAssign2$17.default)(styles.root, style)) }),
        avatar,
        _react2$1y.default.createElement(
          'div',
          { style: prepareStyles((0, _simpleAssign2$17.default)(styles.text, textStyle)) },
          _react2$1y.default.createElement(
            'span',
            { style: prepareStyles((0, _simpleAssign2$17.default)(styles.title, titleStyle)) },
            title
          ),
          _react2$1y.default.createElement(
            'span',
            { style: prepareStyles((0, _simpleAssign2$17.default)(styles.subtitle, subtitleStyle)) },
            subtitle
          )
        ),
        children
      );
    }
  }]);
  return CardHeader;
}(_react$1B.Component);

CardHeader.muiName = 'CardHeader';
CardHeader.defaultProps = {
  avatar: null
};
CardHeader.contextTypes = {
  muiTheme: _propTypes2$1p.default.object.isRequired
};
CardHeader.propTypes = {
  /**
   * If true, a click on this card component expands the card.
   */
  actAsExpander: _propTypes2$1p.default.bool,
  /**
   * This is the [Avatar](/#/components/avatar) element to be displayed on the Card Header.
   * If `avatar` is an `Avatar` or other element, it will be rendered.
   * If `avatar` is a string, it will be used as the image `src` for an `Avatar`.
   */
  avatar: _propTypes2$1p.default.node,
  /**
   * Can be used to render elements inside the Card Header.
   */
  children: _propTypes2$1p.default.node,
  /**
   * Can be used to pass a closeIcon if you don't like the default expandable close Icon.
   */
  closeIcon: _propTypes2$1p.default.node,
  /**
   * If true, this card component is expandable.
   */
  expandable: _propTypes2$1p.default.bool,
  /**
   * Override the iconStyle of the Icon Button.
   */
  iconStyle: _propTypes2$1p.default.object,
  /**
   * Can be used to pass a openIcon if you don't like the default expandable open Icon.
   */
  openIcon: _propTypes2$1p.default.node,
  /**
   * If true, this card component will include a button to expand the card.
   */
  showExpandableButton: _propTypes2$1p.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1p.default.object,
  /**
   * Can be used to render a subtitle in Card Header.
   */
  subtitle: _propTypes2$1p.default.node,
  /**
   * Override the subtitle color.
   */
  subtitleColor: _propTypes2$1p.default.string,
  /**
   * Override the inline-styles of the subtitle.
   */
  subtitleStyle: _propTypes2$1p.default.object,
  /**
   * Override the inline-styles of the text.
   */
  textStyle: _propTypes2$1p.default.object,
  /**
   * Can be used to render a title in Card Header.
   */
  title: _propTypes2$1p.default.node,
  /**
   * Override the title color.
   */
  titleColor: _propTypes2$1p.default.string,
  /**
   * Override the inline-styles of the title.
   */
  titleStyle: _propTypes2$1p.default.object
} ;
CardHeader$1.default = CardHeader;

var CardTitle$1 = {};

Object.defineProperty(CardTitle$1, "__esModule", {
  value: true
});

var _extends2$$ = _extends$3;

var _extends3$$ = _interopRequireDefault$2f(_extends2$$);

var _objectWithoutProperties2$_ = objectWithoutProperties$2;

var _objectWithoutProperties3$_ = _interopRequireDefault$2f(_objectWithoutProperties2$_);

var _getPrototypeOf$1g = getPrototypeOf$1.exports;

var _getPrototypeOf2$1g = _interopRequireDefault$2f(_getPrototypeOf$1g);

var _classCallCheck2$1i = classCallCheck$3;

var _classCallCheck3$1i = _interopRequireDefault$2f(_classCallCheck2$1i);

var _createClass2$1h = createClass$2;

var _createClass3$1h = _interopRequireDefault$2f(_createClass2$1h);

var _possibleConstructorReturn2$1g = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1g = _interopRequireDefault$2f(_possibleConstructorReturn2$1g);

var _inherits2$1g = inherits$3;

var _inherits3$1g = _interopRequireDefault$2f(_inherits2$1g);

var _simpleAssign$16 = simpleAssign;

var _simpleAssign2$16 = _interopRequireDefault$2f(_simpleAssign$16);

var _react$1A = react;

var _react2$1x = _interopRequireDefault$2f(_react$1A);

var _propTypes$1o = propTypes$5.exports;

var _propTypes2$1o = _interopRequireDefault$2f(_propTypes$1o);

function _interopRequireDefault$2f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$T(props, context) {
  var card = context.muiTheme.card;


  return {
    root: {
      padding: 16,
      position: 'relative'
    },
    title: {
      fontSize: 24,
      color: props.titleColor || card.titleColor,
      display: 'block',
      lineHeight: '36px'
    },
    subtitle: {
      fontSize: 14,
      color: props.subtitleColor || card.subtitleColor,
      display: 'block'
    }
  };
}

var CardTitle = function (_Component) {
  (0, _inherits3$1g.default)(CardTitle, _Component);

  function CardTitle() {
    (0, _classCallCheck3$1i.default)(this, CardTitle);
    return (0, _possibleConstructorReturn3$1g.default)(this, (CardTitle.__proto__ || (0, _getPrototypeOf2$1g.default)(CardTitle)).apply(this, arguments));
  }

  (0, _createClass3$1h.default)(CardTitle, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.actAsExpander;
          var children = _props.children;
          _props.closeIcon;
          _props.expandable;
          _props.showExpandableButton;
          var style = _props.style,
          subtitle = _props.subtitle;
          _props.subtitleColor;
          var subtitleStyle = _props.subtitleStyle,
          title = _props.title;
          _props.titleColor;
          var titleStyle = _props.titleStyle,
          other = (0, _objectWithoutProperties3$_.default)(_props, ['actAsExpander', 'children', 'closeIcon', 'expandable', 'showExpandableButton', 'style', 'subtitle', 'subtitleColor', 'subtitleStyle', 'title', 'titleColor', 'titleStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$T(this.props, this.context);
      var rootStyle = (0, _simpleAssign2$16.default)({}, styles.root, style);
      var extendedTitleStyle = (0, _simpleAssign2$16.default)({}, styles.title, titleStyle);
      var extendedSubtitleStyle = (0, _simpleAssign2$16.default)({}, styles.subtitle, subtitleStyle);

      return _react2$1x.default.createElement(
        'div',
        (0, _extends3$$.default)({}, other, { style: prepareStyles(rootStyle) }),
        _react2$1x.default.createElement(
          'span',
          { style: prepareStyles(extendedTitleStyle) },
          title
        ),
        _react2$1x.default.createElement(
          'span',
          { style: prepareStyles(extendedSubtitleStyle) },
          subtitle
        ),
        children
      );
    }
  }]);
  return CardTitle;
}(_react$1A.Component);

CardTitle.muiName = 'CardTitle';
CardTitle.contextTypes = {
  muiTheme: _propTypes2$1o.default.object.isRequired
};
CardTitle.propTypes = {
  /**
   * If true, a click on this card component expands the card.
   */
  actAsExpander: _propTypes2$1o.default.bool,
  /**
   * Can be used to render elements inside the Card Title.
   */
  children: _propTypes2$1o.default.node,
  /**
   * Can be used to pass a closeIcon if you don't like the default expandable close Icon.
   */
  closeIcon: _propTypes2$1o.default.node,
  /**
   * If true, this card component is expandable.
   */
  expandable: _propTypes2$1o.default.bool,
  /**
   * If true, this card component will include a button to expand the card.
   */
  showExpandableButton: _propTypes2$1o.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1o.default.object,
  /**
   * Can be used to render a subtitle in the Card Title.
   */
  subtitle: _propTypes2$1o.default.node,
  /**
   * Override the subtitle color.
   */
  subtitleColor: _propTypes2$1o.default.string,
  /**
   * Override the inline-styles of the subtitle.
   */
  subtitleStyle: _propTypes2$1o.default.object,
  /**
   * Can be used to render a title in the Card Title.
   */
  title: _propTypes2$1o.default.node,
  /**
   * Override the title color.
   */
  titleColor: _propTypes2$1o.default.string,
  /**
   * Override the inline-styles of the title.
   */
  titleStyle: _propTypes2$1o.default.object
} ;
CardTitle$1.default = CardTitle;

var CardMedia$1 = {};

Object.defineProperty(CardMedia$1, "__esModule", {
  value: true
});

var _extends2$_ = _extends$3;

var _extends3$_ = _interopRequireDefault$2e(_extends2$_);

var _objectWithoutProperties2$Z = objectWithoutProperties$2;

var _objectWithoutProperties3$Z = _interopRequireDefault$2e(_objectWithoutProperties2$Z);

var _getPrototypeOf$1f = getPrototypeOf$1.exports;

var _getPrototypeOf2$1f = _interopRequireDefault$2e(_getPrototypeOf$1f);

var _classCallCheck2$1h = classCallCheck$3;

var _classCallCheck3$1h = _interopRequireDefault$2e(_classCallCheck2$1h);

var _createClass2$1g = createClass$2;

var _createClass3$1g = _interopRequireDefault$2e(_createClass2$1g);

var _possibleConstructorReturn2$1f = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1f = _interopRequireDefault$2e(_possibleConstructorReturn2$1f);

var _inherits2$1f = inherits$3;

var _inherits3$1f = _interopRequireDefault$2e(_inherits2$1f);

var _simpleAssign$15 = simpleAssign;

var _simpleAssign2$15 = _interopRequireDefault$2e(_simpleAssign$15);

var _react$1z = react;

var _react2$1w = _interopRequireDefault$2e(_react$1z);

var _propTypes$1n = propTypes$5.exports;

var _propTypes2$1n = _interopRequireDefault$2e(_propTypes$1n);

function _interopRequireDefault$2e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$S(props, context) {
  var cardMedia = context.muiTheme.cardMedia;


  return {
    root: {
      position: 'relative'
    },
    overlayContainer: {
      position: 'absolute',
      top: 0,
      bottom: 0,
      right: 0,
      left: 0
    },
    overlay: {
      height: '100%',
      position: 'relative'
    },
    overlayContent: {
      position: 'absolute',
      bottom: 0,
      right: 0,
      left: 0,
      paddingTop: 8,
      background: cardMedia.overlayContentBackground
    },
    media: {},
    mediaChild: {
      verticalAlign: 'top',
      maxWidth: '100%',
      minWidth: '100%',
      width: '100%'
    }
  };
}

var CardMedia = function (_Component) {
  (0, _inherits3$1f.default)(CardMedia, _Component);

  function CardMedia() {
    (0, _classCallCheck3$1h.default)(this, CardMedia);
    return (0, _possibleConstructorReturn3$1f.default)(this, (CardMedia.__proto__ || (0, _getPrototypeOf2$1f.default)(CardMedia)).apply(this, arguments));
  }

  (0, _createClass3$1g.default)(CardMedia, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.actAsExpander;
          var children = _props.children;
          _props.expandable;
          var mediaStyle = _props.mediaStyle,
          overlay = _props.overlay,
          overlayContainerStyle = _props.overlayContainerStyle,
          overlayContentStyle = _props.overlayContentStyle,
          overlayStyle = _props.overlayStyle,
          style = _props.style,
          other = (0, _objectWithoutProperties3$Z.default)(_props, ['actAsExpander', 'children', 'expandable', 'mediaStyle', 'overlay', 'overlayContainerStyle', 'overlayContentStyle', 'overlayStyle', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$S(this.props, this.context);
      var rootStyle = (0, _simpleAssign2$15.default)(styles.root, style);
      var extendedMediaStyle = (0, _simpleAssign2$15.default)(styles.media, mediaStyle);
      var extendedOverlayContainerStyle = (0, _simpleAssign2$15.default)(styles.overlayContainer, overlayContainerStyle);
      var extendedOverlayContentStyle = (0, _simpleAssign2$15.default)(styles.overlayContent, overlayContentStyle);
      var extendedOverlayStyle = (0, _simpleAssign2$15.default)(styles.overlay, overlayStyle);
      var titleColor = this.context.muiTheme.cardMedia.titleColor;
      var subtitleColor = this.context.muiTheme.cardMedia.subtitleColor;
      var color = this.context.muiTheme.cardMedia.color;

      var styledChildren = _react2$1w.default.Children.map(children, function (child) {
        if (!child) {
          return child;
        }

        return _react2$1w.default.cloneElement(child, {
          style: prepareStyles((0, _simpleAssign2$15.default)({}, styles.mediaChild, child.props.style))
        });
      });

      var overlayChildren = _react2$1w.default.Children.map(overlay, function (child) {
        var childMuiName = child && child.type ? child.type.muiName : null;

        if (childMuiName === 'CardHeader' || childMuiName === 'CardTitle') {
          return _react2$1w.default.cloneElement(child, {
            titleColor: titleColor,
            subtitleColor: subtitleColor
          });
        } else if (childMuiName === 'CardText') {
          return _react2$1w.default.cloneElement(child, {
            color: color
          });
        } else {
          return child;
        }
      });

      return _react2$1w.default.createElement(
        'div',
        (0, _extends3$_.default)({}, other, { style: prepareStyles(rootStyle) }),
        _react2$1w.default.createElement(
          'div',
          { style: prepareStyles(extendedMediaStyle) },
          styledChildren
        ),
        overlay ? _react2$1w.default.createElement(
          'div',
          { style: prepareStyles(extendedOverlayContainerStyle) },
          _react2$1w.default.createElement(
            'div',
            { style: prepareStyles(extendedOverlayStyle) },
            _react2$1w.default.createElement(
              'div',
              { style: prepareStyles(extendedOverlayContentStyle) },
              overlayChildren
            )
          )
        ) : ''
      );
    }
  }]);
  return CardMedia;
}(_react$1z.Component);

CardMedia.contextTypes = {
  muiTheme: _propTypes2$1n.default.object.isRequired
};
CardMedia.propTypes = {
  /**
   * If true, a click on this card component expands the card.
   */
  actAsExpander: _propTypes2$1n.default.bool,
  /**
   * Can be used to render elements inside the Card Media.
   */
  children: _propTypes2$1n.default.node,
  /**
   * If true, this card component is expandable.
   */
  expandable: _propTypes2$1n.default.bool,
  /**
   * Override the inline-styles of the Card Media.
   */
  mediaStyle: _propTypes2$1n.default.object,
  /**
   * Can be used to render overlay element in Card Media.
   */
  overlay: _propTypes2$1n.default.node,
  /**
   * Override the inline-styles of the overlay container.
   */
  overlayContainerStyle: _propTypes2$1n.default.object,
  /**
   * Override the inline-styles of the overlay content.
   */
  overlayContentStyle: _propTypes2$1n.default.object,
  /**
   * Override the inline-styles of the overlay element.
   */
  overlayStyle: _propTypes2$1n.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1n.default.object
} ;
CardMedia$1.default = CardMedia;

var CardText$1 = {};

Object.defineProperty(CardText$1, "__esModule", {
  value: true
});

var _extends2$Z = _extends$3;

var _extends3$Z = _interopRequireDefault$2d(_extends2$Z);

var _objectWithoutProperties2$Y = objectWithoutProperties$2;

var _objectWithoutProperties3$Y = _interopRequireDefault$2d(_objectWithoutProperties2$Y);

var _getPrototypeOf$1e = getPrototypeOf$1.exports;

var _getPrototypeOf2$1e = _interopRequireDefault$2d(_getPrototypeOf$1e);

var _classCallCheck2$1g = classCallCheck$3;

var _classCallCheck3$1g = _interopRequireDefault$2d(_classCallCheck2$1g);

var _createClass2$1f = createClass$2;

var _createClass3$1f = _interopRequireDefault$2d(_createClass2$1f);

var _possibleConstructorReturn2$1e = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1e = _interopRequireDefault$2d(_possibleConstructorReturn2$1e);

var _inherits2$1e = inherits$3;

var _inherits3$1e = _interopRequireDefault$2d(_inherits2$1e);

var _simpleAssign$14 = simpleAssign;

var _simpleAssign2$14 = _interopRequireDefault$2d(_simpleAssign$14);

var _react$1y = react;

var _react2$1v = _interopRequireDefault$2d(_react$1y);

var _propTypes$1m = propTypes$5.exports;

var _propTypes2$1m = _interopRequireDefault$2d(_propTypes$1m);

function _interopRequireDefault$2d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$R(props, context) {
  var cardText = context.muiTheme.cardText;


  return {
    root: {
      padding: 16,
      fontSize: 14,
      color: props.color || cardText.textColor
    }
  };
}

var CardText = function (_Component) {
  (0, _inherits3$1e.default)(CardText, _Component);

  function CardText() {
    (0, _classCallCheck3$1g.default)(this, CardText);
    return (0, _possibleConstructorReturn3$1e.default)(this, (CardText.__proto__ || (0, _getPrototypeOf2$1e.default)(CardText)).apply(this, arguments));
  }

  (0, _createClass3$1f.default)(CardText, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.actAsExpander;
          var children = _props.children;
          _props.color;
          _props.expandable;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$Y.default)(_props, ['actAsExpander', 'children', 'color', 'expandable', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$R(this.props, this.context);
      var rootStyle = (0, _simpleAssign2$14.default)(styles.root, style);

      return _react2$1v.default.createElement(
        'div',
        (0, _extends3$Z.default)({}, other, { style: prepareStyles(rootStyle) }),
        children
      );
    }
  }]);
  return CardText;
}(_react$1y.Component);

CardText.muiName = 'CardText';
CardText.contextTypes = {
  muiTheme: _propTypes2$1m.default.object.isRequired
};
CardText.propTypes = {
  /**
   * If true, a click on this card component expands the card.
   */
  actAsExpander: _propTypes2$1m.default.bool,
  /**
   * Can be used to render elements inside the Card Text.
   */
  children: _propTypes2$1m.default.node,
  /**
   * Override the CardText color.
   */
  color: _propTypes2$1m.default.string,
  /**
   * If true, this card component is expandable.
   */
  expandable: _propTypes2$1m.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1m.default.object
} ;
CardText$1.default = CardText;

var CardActions$1 = {};

Object.defineProperty(CardActions$1, "__esModule", {
  value: true
});

var _extends2$Y = _extends$3;

var _extends3$Y = _interopRequireDefault$2c(_extends2$Y);

var _objectWithoutProperties2$X = objectWithoutProperties$2;

var _objectWithoutProperties3$X = _interopRequireDefault$2c(_objectWithoutProperties2$X);

var _getPrototypeOf$1d = getPrototypeOf$1.exports;

var _getPrototypeOf2$1d = _interopRequireDefault$2c(_getPrototypeOf$1d);

var _classCallCheck2$1f = classCallCheck$3;

var _classCallCheck3$1f = _interopRequireDefault$2c(_classCallCheck2$1f);

var _createClass2$1e = createClass$2;

var _createClass3$1e = _interopRequireDefault$2c(_createClass2$1e);

var _possibleConstructorReturn2$1d = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1d = _interopRequireDefault$2c(_possibleConstructorReturn2$1d);

var _inherits2$1d = inherits$3;

var _inherits3$1d = _interopRequireDefault$2c(_inherits2$1d);

var _simpleAssign$13 = simpleAssign;

var _simpleAssign2$13 = _interopRequireDefault$2c(_simpleAssign$13);

var _react$1x = react;

var _react2$1u = _interopRequireDefault$2c(_react$1x);

var _propTypes$1l = propTypes$5.exports;

var _propTypes2$1l = _interopRequireDefault$2c(_propTypes$1l);

function _interopRequireDefault$2c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$Q() {
  return {
    root: {
      padding: 8,
      position: 'relative'
    },
    action: {
      marginRight: 8
    }
  };
}

var CardActions = function (_Component) {
  (0, _inherits3$1d.default)(CardActions, _Component);

  function CardActions() {
    (0, _classCallCheck3$1f.default)(this, CardActions);
    return (0, _possibleConstructorReturn3$1d.default)(this, (CardActions.__proto__ || (0, _getPrototypeOf2$1d.default)(CardActions)).apply(this, arguments));
  }

  (0, _createClass3$1e.default)(CardActions, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.actAsExpander;
          var children = _props.children;
          _props.expandable;
          _props.showExpandableButton;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$X.default)(_props, ['actAsExpander', 'children', 'expandable', 'showExpandableButton', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$Q(this.props, this.context);

      var styledChildren = _react2$1u.default.Children.map(children, function (child) {
        if (_react2$1u.default.isValidElement(child)) {
          return _react2$1u.default.cloneElement(child, {
            style: (0, _simpleAssign2$13.default)({}, styles.action, child.props.style)
          });
        }
      });

      return _react2$1u.default.createElement(
        'div',
        (0, _extends3$Y.default)({}, other, { style: prepareStyles((0, _simpleAssign2$13.default)(styles.root, style)) }),
        styledChildren
      );
    }
  }]);
  return CardActions;
}(_react$1x.Component);

CardActions.contextTypes = {
  muiTheme: _propTypes2$1l.default.object.isRequired
};
CardActions.propTypes = {
  /**
   * If true, a click on this card component expands the card.
   */
  actAsExpander: _propTypes2$1l.default.bool,
  /**
   * Can be used to render elements inside the Card Action.
   */
  children: _propTypes2$1l.default.node,
  /**
   * If true, this card component is expandable.
   */
  expandable: _propTypes2$1l.default.bool,
  /**
   * If true, this card component will include a button to expand the card.
   */
  showExpandableButton: _propTypes2$1l.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1l.default.object
} ;
CardActions$1.default = CardActions;

Object.defineProperty(Card$2, "__esModule", {
  value: true
});
Card$2.default = Card$2.CardExpandable = Card$2.CardActions = Card$2.CardText = Card$2.CardMedia = Card$2.CardTitle = Card$2.CardHeader = Card$2.Card = undefined;

var _Card2 = Card$1;

var _Card3 = _interopRequireDefault$2b(_Card2);

var _CardHeader2 = CardHeader$1;

var _CardHeader3 = _interopRequireDefault$2b(_CardHeader2);

var _CardTitle2 = CardTitle$1;

var _CardTitle3 = _interopRequireDefault$2b(_CardTitle2);

var _CardMedia2 = CardMedia$1;

var _CardMedia3 = _interopRequireDefault$2b(_CardMedia2);

var _CardText2 = CardText$1;

var _CardText3 = _interopRequireDefault$2b(_CardText2);

var _CardActions2 = CardActions$1;

var _CardActions3 = _interopRequireDefault$2b(_CardActions2);

var _CardExpandable2 = CardExpandable$1;

var _CardExpandable3 = _interopRequireDefault$2b(_CardExpandable2);

function _interopRequireDefault$2b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Card$2.Card = _Card3.default;
Card$2.CardHeader = _CardHeader3.default;
Card$2.CardTitle = _CardTitle3.default;
Card$2.CardMedia = _CardMedia3.default;
Card$2.CardText = _CardText3.default;
Card$2.CardActions = _CardActions3.default;
Card$2.CardExpandable = _CardExpandable3.default;
Card$2.default = _Card3.default;

var Checkbox$2 = {};

var Checkbox$1 = {};

var EnhancedSwitch$1 = {};

Object.defineProperty(EnhancedSwitch$1, "__esModule", {
  value: true
});

var _extends2$X = _extends$3;

var _extends3$X = _interopRequireDefault$2a(_extends2$X);

var _objectWithoutProperties2$W = objectWithoutProperties$2;

var _objectWithoutProperties3$W = _interopRequireDefault$2a(_objectWithoutProperties2$W);

var _getPrototypeOf$1c = getPrototypeOf$1.exports;

var _getPrototypeOf2$1c = _interopRequireDefault$2a(_getPrototypeOf$1c);

var _classCallCheck2$1e = classCallCheck$3;

var _classCallCheck3$1e = _interopRequireDefault$2a(_classCallCheck2$1e);

var _createClass2$1d = createClass$2;

var _createClass3$1d = _interopRequireDefault$2a(_createClass2$1d);

var _possibleConstructorReturn2$1c = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1c = _interopRequireDefault$2a(_possibleConstructorReturn2$1c);

var _inherits2$1c = inherits$3;

var _inherits3$1c = _interopRequireDefault$2a(_inherits2$1c);

var _simpleAssign$12 = simpleAssign;

var _simpleAssign2$12 = _interopRequireDefault$2a(_simpleAssign$12);

var _react$1w = react;

var _react2$1t = _interopRequireDefault$2a(_react$1w);

var _propTypes$1k = propTypes$5.exports;

var _propTypes2$1k = _interopRequireDefault$2a(_propTypes$1k);

var _reactEventListener$8 = reactEventListener_cjs;

var _reactEventListener2$8 = _interopRequireDefault$2a(_reactEventListener$8);

var _keycode$9 = keycode.exports;

var _keycode2$9 = _interopRequireDefault$2a(_keycode$9);

var _transitions$v = transitions;

var _transitions2$v = _interopRequireDefault$2a(_transitions$v);

var _FocusRipple$1 = FocusRipple$1;

var _FocusRipple2$1 = _interopRequireDefault$2a(_FocusRipple$1);

var _TouchRipple = TouchRipple$1;

var _TouchRipple2 = _interopRequireDefault$2a(_TouchRipple);

var _Paper$8 = Paper$2;

var _Paper2$8 = _interopRequireDefault$2a(_Paper$8);

var _warning$a = warning_1$1;

var _warning2$a = _interopRequireDefault$2a(_warning$a);

function _interopRequireDefault$2a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$P(props, context) {
  var baseTheme = context.muiTheme.baseTheme;


  return {
    root: {
      cursor: props.disabled ? 'not-allowed' : 'pointer',
      position: 'relative',
      overflow: 'visible',
      display: 'table',
      height: 'auto',
      width: '100%'
    },
    input: {
      position: 'absolute',
      cursor: 'inherit',
      pointerEvents: 'all',
      opacity: 0,
      width: '100%',
      height: '100%',
      zIndex: 2,
      left: 0,
      boxSizing: 'border-box',
      padding: 0,
      margin: 0
    },
    controls: {
      display: 'flex',
      width: '100%',
      height: '100%'
    },
    label: {
      float: 'left',
      position: 'relative',
      display: 'block',
      width: 'calc(100% - 60px)',
      lineHeight: '24px',
      color: baseTheme.palette.textColor,
      fontFamily: baseTheme.fontFamily
    },
    wrap: {
      transition: _transitions2$v.default.easeOut(),
      float: 'left',
      position: 'relative',
      display: 'block',
      flexShrink: 0,
      width: 60 - baseTheme.spacing.desktopGutterLess,
      marginRight: props.labelPosition === 'right' ? baseTheme.spacing.desktopGutterLess : 0,
      marginLeft: props.labelPosition === 'left' ? baseTheme.spacing.desktopGutterLess : 0
    },
    ripple: {
      color: props.rippleColor || baseTheme.palette.primary1Color,
      height: '200%',
      width: '200%',
      top: -12,
      left: -12
    }
  };
}

var EnhancedSwitch = function (_Component) {
  (0, _inherits3$1c.default)(EnhancedSwitch, _Component);

  function EnhancedSwitch() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1e.default)(this, EnhancedSwitch);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1c.default)(this, (_ref = EnhancedSwitch.__proto__ || (0, _getPrototypeOf2$1c.default)(EnhancedSwitch)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isKeyboardFocused: false
    }, _this.handleChange = function (event) {
      _this.tabPressed = false;
      _this.setState({
        isKeyboardFocused: false
      });

      var isInputChecked = _this.refs.checkbox.checked;

      if (!_this.props.hasOwnProperty('checked') && _this.props.onParentShouldUpdate) {
        _this.props.onParentShouldUpdate(isInputChecked);
      }

      if (_this.props.onSwitch) {
        _this.props.onSwitch(event, isInputChecked);
      }
    }, _this.handleKeyDown = function (event) {
      var code = (0, _keycode2$9.default)(event);

      if (code === 'tab') {
        _this.tabPressed = true;
      }
      if (_this.state.isKeyboardFocused && code === 'space') {
        _this.handleChange(event);
      }
    }, _this.handleKeyUp = function (event) {
      if (_this.state.isKeyboardFocused && (0, _keycode2$9.default)(event) === 'space') {
        _this.handleChange(event);
      }
    }, _this.handleMouseDown = function (event) {
      // only listen to left clicks
      if (event.button === 0) {
        _this.refs.touchRipple.start(event);
      }
    }, _this.handleMouseUp = function () {
      _this.refs.touchRipple.end();
    }, _this.handleMouseLeave = function () {
      _this.refs.touchRipple.end();
    }, _this.handleTouchStart = function (event) {
      _this.refs.touchRipple.start(event);
    }, _this.handleTouchEnd = function () {
      _this.refs.touchRipple.end();
    }, _this.handleBlur = function (event) {
      _this.setState({
        isKeyboardFocused: false
      });

      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleFocus = function (event) {
      // setTimeout is needed becuase the focus event fires first
      // Wait so that we can capture if this was a keyboard focus
      // or touch focus
      setTimeout(function () {
        if (_this.tabPressed) {
          _this.setState({
            isKeyboardFocused: true
          });
        }
      }, 150);

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1c.default)(_this, _ret);
  }

  (0, _createClass3$1d.default)(EnhancedSwitch, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.componentWillReceiveProps(this.props);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var inputNode = this.refs.checkbox;
      if ((!this.props.switched || inputNode.checked !== this.props.switched) && this.props.onParentShouldUpdate) {
        this.props.onParentShouldUpdate(inputNode.checked);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var hasCheckedProp = nextProps.hasOwnProperty('checked');
      var hasNewDefaultProp = nextProps.hasOwnProperty('defaultChecked') && nextProps.defaultChecked !== this.props.defaultChecked;

      if (hasCheckedProp || hasNewDefaultProp) {
        var switched = nextProps.checked || nextProps.defaultChecked || false;

        this.setState({
          switched: switched
        });

        if (this.props.onParentShouldUpdate && switched !== this.props.switched) {
          this.props.onParentShouldUpdate(switched);
        }
      }
    }
  }, {
    key: 'isSwitched',
    value: function isSwitched() {
      return this.refs.checkbox.checked;
    }

    // no callback here because there is no event

  }, {
    key: 'setSwitched',
    value: function setSwitched(newSwitchedValue) {
      if (!this.props.hasOwnProperty('checked') || this.props.checked === false) {
        if (this.props.onParentShouldUpdate) {
          this.props.onParentShouldUpdate(newSwitchedValue);
        }
        this.refs.checkbox.checked = newSwitchedValue;
      } else {
        (0, _warning2$a.default)(false, 'Material-UI: Cannot call set method while checked is defined as a property.') ;
      }
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.refs.checkbox.value;
    }

    // Checkbox inputs only use SPACE to change their state. Using ENTER will
    // update the ui but not the input.


    /**
     * Because both the ripples and the checkbox input cannot share pointer
     * events, the checkbox input takes control of pointer events and calls
     * ripple animations manually.
     */

  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          value = _props.value;
          _props.checked;
          var iconStyle = _props.iconStyle,
          inputStyle = _props.inputStyle,
          inputType = _props.inputType,
          label = _props.label,
          labelStyle = _props.labelStyle,
          labelPosition = _props.labelPosition;
          _props.onSwitch;
          _props.onBlur;
          _props.onFocus;
          _props.onMouseUp;
          _props.onMouseDown;
          _props.onMouseLeave;
          _props.onTouchStart;
          _props.onTouchEnd;
          _props.onParentShouldUpdate;
          var disabled = _props.disabled,
          disableTouchRipple = _props.disableTouchRipple,
          disableFocusRipple = _props.disableFocusRipple,
          className = _props.className;
          _props.rippleColor;
          var rippleStyle = _props.rippleStyle,
          style = _props.style;
          _props.switched;
          var switchElement = _props.switchElement,
          thumbStyle = _props.thumbStyle,
          trackStyle = _props.trackStyle,
          other = (0, _objectWithoutProperties3$W.default)(_props, ['name', 'value', 'checked', 'iconStyle', 'inputStyle', 'inputType', 'label', 'labelStyle', 'labelPosition', 'onSwitch', 'onBlur', 'onFocus', 'onMouseUp', 'onMouseDown', 'onMouseLeave', 'onTouchStart', 'onTouchEnd', 'onParentShouldUpdate', 'disabled', 'disableTouchRipple', 'disableFocusRipple', 'className', 'rippleColor', 'rippleStyle', 'style', 'switched', 'switchElement', 'thumbStyle', 'trackStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$P(this.props, this.context);
      var wrapStyles = (0, _simpleAssign2$12.default)(styles.wrap, iconStyle);
      var mergedRippleStyle = (0, _simpleAssign2$12.default)(styles.ripple, rippleStyle);

      if (thumbStyle) {
        wrapStyles.marginLeft /= 2;
        wrapStyles.marginRight /= 2;
      }

      var labelElement = label && _react2$1t.default.createElement(
        'label',
        { style: prepareStyles((0, _simpleAssign2$12.default)(styles.label, labelStyle)) },
        label
      );

      var showTouchRipple = !disabled && !disableTouchRipple;
      var showFocusRipple = !disabled && !disableFocusRipple;

      var touchRipple = _react2$1t.default.createElement(_TouchRipple2.default, {
        ref: 'touchRipple',
        key: 'touchRipple',
        style: mergedRippleStyle,
        color: mergedRippleStyle.color,
        muiTheme: this.context.muiTheme,
        centerRipple: true
      });

      var focusRipple = _react2$1t.default.createElement(_FocusRipple2$1.default, {
        key: 'focusRipple',
        innerStyle: mergedRippleStyle,
        color: mergedRippleStyle.color,
        muiTheme: this.context.muiTheme,
        show: this.state.isKeyboardFocused
      });

      var ripples = [showTouchRipple ? touchRipple : null, showFocusRipple ? focusRipple : null];

      var touchHandlers = showTouchRipple ? {
        onMouseUp: this.handleMouseUp,
        onMouseDown: this.handleMouseDown,
        onMouseLeave: this.handleMouseLeave,
        onTouchStart: this.handleTouchStart,
        onTouchEnd: this.handleTouchEnd
      } : {};

      var inputElement = _react2$1t.default.createElement('input', (0, _extends3$X.default)({}, other, {
        ref: 'checkbox',
        type: inputType,
        style: prepareStyles((0, _simpleAssign2$12.default)(styles.input, inputStyle)),
        name: name,
        value: value,
        checked: this.state.switched,
        disabled: disabled,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onChange: this.handleChange
      }, touchHandlers));

      // If toggle component (indicated by whether the style includes thumb) manually lay out
      // elements in order to nest ripple elements
      var switchOrThumbElement = !thumbStyle ? _react2$1t.default.createElement(
        'div',
        { style: prepareStyles(wrapStyles) },
        switchElement,
        ripples
      ) : _react2$1t.default.createElement(
        'div',
        { style: prepareStyles(wrapStyles) },
        _react2$1t.default.createElement('div', { style: prepareStyles((0, _simpleAssign2$12.default)({}, trackStyle)) }),
        _react2$1t.default.createElement(
          _Paper2$8.default,
          { style: thumbStyle, zDepth: 1, circle: true },
          ' ',
          ripples,
          ' '
        )
      );

      var elementsInOrder = labelPosition === 'right' ? _react2$1t.default.createElement(
        'div',
        { style: styles.controls },
        switchOrThumbElement,
        labelElement
      ) : _react2$1t.default.createElement(
        'div',
        { style: styles.controls },
        labelElement,
        switchOrThumbElement
      );

      return _react2$1t.default.createElement(
        'div',
        { ref: 'root', className: className, style: prepareStyles((0, _simpleAssign2$12.default)(styles.root, style)) },
        _react2$1t.default.createElement(_reactEventListener2$8.default, {
          target: 'window',
          onKeyDown: this.handleKeyDown,
          onKeyUp: this.handleKeyUp
        }),
        inputElement,
        elementsInOrder
      );
    }
  }]);
  return EnhancedSwitch;
}(_react$1w.Component);

EnhancedSwitch.contextTypes = {
  muiTheme: _propTypes2$1k.default.object.isRequired
};
EnhancedSwitch.propTypes = {
  checked: _propTypes2$1k.default.bool,
  className: _propTypes2$1k.default.string,
  defaultChecked: _propTypes2$1k.default.bool,
  disableFocusRipple: _propTypes2$1k.default.bool,
  disableTouchRipple: _propTypes2$1k.default.bool,
  disabled: _propTypes2$1k.default.bool,
  iconStyle: _propTypes2$1k.default.object,
  inputStyle: _propTypes2$1k.default.object,
  inputType: _propTypes2$1k.default.string.isRequired,
  label: _propTypes2$1k.default.node,
  labelPosition: _propTypes2$1k.default.oneOf(['left', 'right']),
  labelStyle: _propTypes2$1k.default.object,
  name: _propTypes2$1k.default.string,
  onBlur: _propTypes2$1k.default.func,
  onFocus: _propTypes2$1k.default.func,
  onMouseDown: _propTypes2$1k.default.func,
  onMouseLeave: _propTypes2$1k.default.func,
  onMouseUp: _propTypes2$1k.default.func,
  onParentShouldUpdate: _propTypes2$1k.default.func,
  onSwitch: _propTypes2$1k.default.func,
  onTouchEnd: _propTypes2$1k.default.func,
  onTouchStart: _propTypes2$1k.default.func,
  rippleColor: _propTypes2$1k.default.string,
  rippleStyle: _propTypes2$1k.default.object,
  style: _propTypes2$1k.default.object,
  switchElement: _propTypes2$1k.default.element.isRequired,
  switched: _propTypes2$1k.default.bool.isRequired,
  thumbStyle: _propTypes2$1k.default.object,
  trackStyle: _propTypes2$1k.default.object,
  value: _propTypes2$1k.default.any
} ;
EnhancedSwitch$1.default = EnhancedSwitch;

var checkBoxOutlineBlank = {};

Object.defineProperty(checkBoxOutlineBlank, "__esModule", {
  value: true
});

var _react$1v = react;

var _react2$1s = _interopRequireDefault$29(_react$1v);

var _pure$9 = pure$3;

var _pure2$9 = _interopRequireDefault$29(_pure$9);

var _SvgIcon$a = SvgIcon$6;

var _SvgIcon2$a = _interopRequireDefault$29(_SvgIcon$a);

function _interopRequireDefault$29(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleCheckBoxOutlineBlank = function ToggleCheckBoxOutlineBlank(props) {
  return _react2$1s.default.createElement(
    _SvgIcon2$a.default,
    props,
    _react2$1s.default.createElement('path', { d: 'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z' })
  );
};
ToggleCheckBoxOutlineBlank = (0, _pure2$9.default)(ToggleCheckBoxOutlineBlank);
ToggleCheckBoxOutlineBlank.displayName = 'ToggleCheckBoxOutlineBlank';
ToggleCheckBoxOutlineBlank.muiName = 'SvgIcon';

checkBoxOutlineBlank.default = ToggleCheckBoxOutlineBlank;

var checkBox = {};

Object.defineProperty(checkBox, "__esModule", {
  value: true
});

var _react$1u = react;

var _react2$1r = _interopRequireDefault$28(_react$1u);

var _pure$8 = pure$3;

var _pure2$8 = _interopRequireDefault$28(_pure$8);

var _SvgIcon$9 = SvgIcon$6;

var _SvgIcon2$9 = _interopRequireDefault$28(_SvgIcon$9);

function _interopRequireDefault$28(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleCheckBox = function ToggleCheckBox(props) {
  return _react2$1r.default.createElement(
    _SvgIcon2$9.default,
    props,
    _react2$1r.default.createElement('path', { d: 'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' })
  );
};
ToggleCheckBox = (0, _pure2$8.default)(ToggleCheckBox);
ToggleCheckBox.displayName = 'ToggleCheckBox';
ToggleCheckBox.muiName = 'SvgIcon';

checkBox.default = ToggleCheckBox;

Object.defineProperty(Checkbox$1, "__esModule", {
  value: true
});

var _extends2$W = _extends$3;

var _extends3$W = _interopRequireDefault$27(_extends2$W);

var _objectWithoutProperties2$V = objectWithoutProperties$2;

var _objectWithoutProperties3$V = _interopRequireDefault$27(_objectWithoutProperties2$V);

var _getPrototypeOf$1b = getPrototypeOf$1.exports;

var _getPrototypeOf2$1b = _interopRequireDefault$27(_getPrototypeOf$1b);

var _classCallCheck2$1d = classCallCheck$3;

var _classCallCheck3$1d = _interopRequireDefault$27(_classCallCheck2$1d);

var _createClass2$1c = createClass$2;

var _createClass3$1c = _interopRequireDefault$27(_createClass2$1c);

var _possibleConstructorReturn2$1b = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1b = _interopRequireDefault$27(_possibleConstructorReturn2$1b);

var _inherits2$1b = inherits$3;

var _inherits3$1b = _interopRequireDefault$27(_inherits2$1b);

var _simpleAssign$11 = simpleAssign;

var _simpleAssign2$11 = _interopRequireDefault$27(_simpleAssign$11);

var _react$1t = react;

var _react2$1q = _interopRequireDefault$27(_react$1t);

var _propTypes$1j = propTypes$5.exports;

var _propTypes2$1j = _interopRequireDefault$27(_propTypes$1j);

var _EnhancedSwitch$2 = EnhancedSwitch$1;

var _EnhancedSwitch2$2 = _interopRequireDefault$27(_EnhancedSwitch$2);

var _transitions$u = transitions;

var _transitions2$u = _interopRequireDefault$27(_transitions$u);

var _checkBoxOutlineBlank = checkBoxOutlineBlank;

var _checkBoxOutlineBlank2 = _interopRequireDefault$27(_checkBoxOutlineBlank);

var _checkBox = checkBox;

var _checkBox2 = _interopRequireDefault$27(_checkBox);

function _interopRequireDefault$27(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$O(props, context) {
  var checkbox = context.muiTheme.checkbox;

  var checkboxSize = 24;

  return {
    icon: {
      height: checkboxSize,
      width: checkboxSize
    },
    check: {
      position: 'absolute',
      opacity: 0,
      transform: 'scale(0)',
      transitionOrigin: '50% 50%',
      transition: _transitions2$u.default.easeOut('450ms', 'opacity', '0ms') + ', ' + _transitions2$u.default.easeOut('0ms', 'transform', '450ms'),
      fill: checkbox.checkedColor
    },
    checkWhenSwitched: {
      opacity: 1,
      transform: 'scale(1)',
      transition: _transitions2$u.default.easeOut('0ms', 'opacity', '0ms') + ', ' + _transitions2$u.default.easeOut('800ms', 'transform', '0ms')
    },
    checkWhenDisabled: {
      fill: checkbox.disabledColor
    },
    box: {
      position: 'absolute',
      opacity: 1,
      fill: checkbox.boxColor,
      transition: _transitions2$u.default.easeOut('1000ms', 'opacity', '200ms')
    },
    boxWhenSwitched: {
      opacity: 0,
      transition: _transitions2$u.default.easeOut('650ms', 'opacity', '150ms'),
      fill: checkbox.checkedColor
    },
    boxWhenDisabled: {
      fill: props.checked ? 'transparent' : checkbox.disabledColor
    },
    label: {
      color: props.disabled ? checkbox.labelDisabledColor : checkbox.labelColor
    }
  };
}

var Checkbox = function (_Component) {
  (0, _inherits3$1b.default)(Checkbox, _Component);

  function Checkbox() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1d.default)(this, Checkbox);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1b.default)(this, (_ref = Checkbox.__proto__ || (0, _getPrototypeOf2$1b.default)(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      switched: false
    }, _this.handleStateChange = function (newSwitched) {
      _this.setState({
        switched: newSwitched
      });
    }, _this.handleCheck = function (event, isInputChecked) {
      if (_this.props.onCheck) {
        _this.props.onCheck(event, isInputChecked);
      }
    }, _temp), (0, _possibleConstructorReturn3$1b.default)(_this, _ret);
  }

  (0, _createClass3$1c.default)(Checkbox, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          checked = _props.checked,
          defaultChecked = _props.defaultChecked,
          valueLink = _props.valueLink;


      if (checked || defaultChecked || valueLink && valueLink.value) {
        this.setState({
          switched: true
        });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.checked !== nextProps.checked) {
        this.setState({
          switched: nextProps.checked
        });
      }
    }
  }, {
    key: 'isChecked',
    value: function isChecked() {
      return this.refs.enhancedSwitch.isSwitched();
    }
  }, {
    key: 'setChecked',
    value: function setChecked(newCheckedValue) {
      this.refs.enhancedSwitch.setSwitched(newCheckedValue);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          iconStyle = _props2.iconStyle;
          _props2.onCheck;
          var checkedIcon = _props2.checkedIcon,
          uncheckedIcon = _props2.uncheckedIcon,
          other = (0, _objectWithoutProperties3$V.default)(_props2, ['iconStyle', 'onCheck', 'checkedIcon', 'uncheckedIcon']);

      var styles = getStyles$O(this.props, this.context);
      var boxStyles = (0, _simpleAssign2$11.default)(styles.box, this.state.switched && styles.boxWhenSwitched, iconStyle, this.props.disabled && styles.boxWhenDisabled);
      var checkStyles = (0, _simpleAssign2$11.default)(styles.check, this.state.switched && styles.checkWhenSwitched, iconStyle, this.props.disabled && styles.checkWhenDisabled);

      var checkedElement = checkedIcon ? _react2$1q.default.cloneElement(checkedIcon, {
        style: (0, _simpleAssign2$11.default)(checkStyles, checkedIcon.props.style)
      }) : _react2$1q.default.createElement(_checkBox2.default, {
        style: checkStyles
      });

      var unCheckedElement = uncheckedIcon ? _react2$1q.default.cloneElement(uncheckedIcon, {
        style: (0, _simpleAssign2$11.default)(boxStyles, uncheckedIcon.props.style)
      }) : _react2$1q.default.createElement(_checkBoxOutlineBlank2.default, {
        style: boxStyles
      });

      var checkboxElement = _react2$1q.default.createElement(
        'div',
        null,
        unCheckedElement,
        checkedElement
      );

      var rippleColor = this.state.switched ? checkStyles.fill : boxStyles.fill;
      var mergedIconStyle = (0, _simpleAssign2$11.default)(styles.icon, iconStyle);

      var labelStyle = (0, _simpleAssign2$11.default)(styles.label, this.props.labelStyle);

      var enhancedSwitchProps = {
        ref: 'enhancedSwitch',
        inputType: 'checkbox',
        switched: this.state.switched,
        switchElement: checkboxElement,
        rippleColor: rippleColor,
        iconStyle: mergedIconStyle,
        onSwitch: this.handleCheck,
        labelStyle: labelStyle,
        onParentShouldUpdate: this.handleStateChange,
        labelPosition: this.props.labelPosition
      };

      return _react2$1q.default.createElement(_EnhancedSwitch2$2.default, (0, _extends3$W.default)({}, other, enhancedSwitchProps));
    }
  }]);
  return Checkbox;
}(_react$1t.Component);

Checkbox.defaultProps = {
  labelPosition: 'right',
  disabled: false
};
Checkbox.contextTypes = {
  muiTheme: _propTypes2$1j.default.object.isRequired
};
Checkbox.propTypes = {
  /**
   * Checkbox is checked if true.
   */
  checked: _propTypes2$1j.default.bool,
  /**
   * The SvgIcon to use for the checked state.
   * This is useful to create icon toggles.
   */
  checkedIcon: _propTypes2$1j.default.element,
  /**
   * The default state of our checkbox component.
   * **Warning:** This cannot be used in conjunction with `checked`.
   * Decide between using a controlled or uncontrolled input element and remove one of these props.
   * More info: https://fb.me/react-controlled-components
   */
  defaultChecked: _propTypes2$1j.default.bool,
  /**
   * Disabled if true.
   */
  disabled: _propTypes2$1j.default.bool,
  /**
   * Overrides the inline-styles of the icon element.
   */
  iconStyle: _propTypes2$1j.default.object,
  /**
   * Overrides the inline-styles of the input element.
   */
  inputStyle: _propTypes2$1j.default.object,
  /**
   * Where the label will be placed next to the checkbox.
   */
  labelPosition: _propTypes2$1j.default.oneOf(['left', 'right']),
  /**
   * Overrides the inline-styles of the Checkbox element label.
   */
  labelStyle: _propTypes2$1j.default.object,
  /**
   * Callback function that is fired when the checkbox is checked.
   *
   * @param {object} event `change` event targeting the underlying checkbox `input`.
   * @param {boolean} isInputChecked The `checked` value of the underlying checkbox `input`.
   */
  onCheck: _propTypes2$1j.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1j.default.object,
  /**
   * The SvgIcon to use for the unchecked state.
   * This is useful to create icon toggles.
   */
  uncheckedIcon: _propTypes2$1j.default.element,
  /**
   * ValueLink for when using controlled checkbox.
   */
  valueLink: _propTypes2$1j.default.object
} ;
Checkbox$1.default = Checkbox;

Object.defineProperty(Checkbox$2, "__esModule", {
  value: true
});
var _default$b = Checkbox$2.default = undefined;

var _Checkbox$2 = Checkbox$1;

var _Checkbox2$2 = _interopRequireDefault$26(_Checkbox$2);

function _interopRequireDefault$26(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$b = Checkbox$2.default = _Checkbox2$2.default;

var CircularProgress = {};

Object.defineProperty(CircularProgress, "__esModule", {
  value: true
});
var _default$a = CircularProgress.default = undefined;

var _CircularProgress = CircularProgress$3;

var _CircularProgress2 = _interopRequireDefault$25(_CircularProgress);

function _interopRequireDefault$25(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$a = CircularProgress.default = _CircularProgress2.default;

var DatePicker$3 = {};

var DatePicker$2 = {};

var dateUtils = {};

Object.defineProperty(dateUtils, "__esModule", {
  value: true
});
dateUtils.defaultUtils = undefined;
dateUtils.dateTimeFormat = dateTimeFormat;
dateUtils.getYear = getYear$1;
dateUtils.setYear = setYear;
dateUtils.addDays = addDays;
dateUtils.addMonths = addMonths;
dateUtils.addYears = addYears;
dateUtils.cloneDate = cloneDate;
dateUtils.cloneAsDate = cloneAsDate;
dateUtils.getDaysInMonth = getDaysInMonth;
dateUtils.getFirstDayOfMonth = getFirstDayOfMonth;
dateUtils.getFirstDayOfWeek = getFirstDayOfWeek;
dateUtils.getWeekArray = getWeekArray;
dateUtils.localizedWeekday = localizedWeekday;
dateUtils.formatIso = formatIso;
dateUtils.isEqualDate = isEqualDate;
dateUtils.isBeforeDate = isBeforeDate;
dateUtils.isAfterDate = isAfterDate;
dateUtils.isBetweenDates = isBetweenDates;
dateUtils.monthDiff = monthDiff;
dateUtils.yearDiff = yearDiff;

var _warning$9 = warning_1$1;

var _warning2$9 = _interopRequireDefault$24(_warning$9);

function _interopRequireDefault$24(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dayAbbreviation = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];
var dayList = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
var monthLongList = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

function dateTimeFormat(locale, options) {
  (0, _warning2$9.default)(locale === 'en-US', 'Material-UI: The ' + locale + ' locale is not supported by the built-in DateTimeFormat.\n  Use the `DateTimeFormat` prop to supply an alternative implementation.') ;

  this.format = function (date) {
    if (options.month === 'short' && options.weekday === 'short' && options.day === '2-digit') {
      return dayList[date.getDay()] + ', ' + monthList[date.getMonth()] + ' ' + date.getDate();
    } else if (options.year === 'numeric' && options.month === 'numeric' && options.day === 'numeric') {
      return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();
    } else if (options.year === 'numeric' && options.month === 'long') {
      return monthLongList[date.getMonth()] + ' ' + date.getFullYear();
    } else if (options.weekday === 'narrow') {
      return dayAbbreviation[date.getDay()];
    } else if (options.year === 'numeric') {
      return date.getFullYear().toString();
    } else if (options.day === 'numeric') {
      return date.getDate();
    } else {
      (0, _warning2$9.default)(false, 'Material-UI: Wrong usage of DateTimeFormat') ;
    }
  };
}

function getYear$1(d) {
  return d.getFullYear();
}

function setYear(d, year) {
  var newDate = cloneDate(d);
  newDate.setFullYear(year);
  return newDate;
}

function addDays(d, days) {
  var newDate = cloneDate(d);
  newDate.setDate(d.getDate() + days);
  return newDate;
}

function addMonths(d, months) {
  var newDate = cloneDate(d);
  newDate.setMonth(d.getMonth() + months);
  return newDate;
}

function addYears(d, years) {
  var newDate = cloneDate(d);
  newDate.setFullYear(d.getFullYear() + years);
  return newDate;
}

function cloneDate(d) {
  return new Date(d.getTime());
}

function cloneAsDate(d) {
  var clonedDate = cloneDate(d);
  clonedDate.setHours(0, 0, 0, 0);
  return clonedDate;
}

function getDaysInMonth(d) {
  var resultDate = getFirstDayOfMonth(d);

  resultDate.setMonth(resultDate.getMonth() + 1);
  resultDate.setDate(resultDate.getDate() - 1);

  return resultDate.getDate();
}

function getFirstDayOfMonth(d) {
  return new Date(d.getFullYear(), d.getMonth(), 1);
}

function getFirstDayOfWeek() {
  var now = new Date();
  return new Date(now.setDate(now.getDate() - now.getDay()));
}

function getWeekArray(d, firstDayOfWeek) {
  var dayArray = [];
  var daysInMonth = getDaysInMonth(d);
  var weekArray = [];
  var week = [];

  for (var i = 1; i <= daysInMonth; i++) {
    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i));
  }

  var addWeek = function addWeek(week) {
    var emptyDays = 7 - week.length;
    for (var _i = 0; _i < emptyDays; ++_i) {
      week[weekArray.length ? 'push' : 'unshift'](null);
    }
    weekArray.push(week);
  };

  dayArray.forEach(function (day) {
    if (week.length > 0 && day.getDay() === firstDayOfWeek) {
      addWeek(week);
      week = [];
    }
    week.push(day);
    if (dayArray.indexOf(day) === dayArray.length - 1) {
      addWeek(week);
    }
  });

  return weekArray;
}

function localizedWeekday(DateTimeFormat, locale, day, firstDayOfWeek) {
  var weekdayFormatter = new DateTimeFormat(locale, { weekday: 'narrow' });
  var firstDayDate = getFirstDayOfWeek();

  return weekdayFormatter.format(addDays(firstDayDate, day + firstDayOfWeek));
}

// Convert date to ISO 8601 (YYYY-MM-DD) date string, accounting for current timezone
function formatIso(date) {
  return new Date(date.toDateString() + ' 12:00:00 +0000').toISOString().substring(0, 10);
}

function isEqualDate(d1, d2) {
  return d1 && d2 && d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();
}

function isBeforeDate(d1, d2) {
  var date1 = cloneAsDate(d1);
  var date2 = cloneAsDate(d2);

  return date1.getTime() < date2.getTime();
}

function isAfterDate(d1, d2) {
  var date1 = cloneAsDate(d1);
  var date2 = cloneAsDate(d2);

  return date1.getTime() > date2.getTime();
}

function isBetweenDates(dateToCheck, startDate, endDate) {
  return !isBeforeDate(dateToCheck, startDate) && !isAfterDate(dateToCheck, endDate);
}

function monthDiff(d1, d2) {
  var m = void 0;
  m = (d1.getFullYear() - d2.getFullYear()) * 12;
  m += d1.getMonth();
  m -= d2.getMonth();
  return m;
}

function yearDiff(d1, d2) {
  return ~~(monthDiff(d1, d2) / 12);
}

dateUtils.defaultUtils = {
  getYear: getYear$1,
  setYear: setYear,
  addDays: addDays,
  addMonths: addMonths,
  addYears: addYears,
  getFirstDayOfMonth: getFirstDayOfMonth,
  getWeekArray: getWeekArray,
  monthDiff: monthDiff
};

var DatePickerDialog$1 = {};

var Calendar$1 = {};

var CalendarActionButtons = {};

Object.defineProperty(CalendarActionButtons, "__esModule", {
  value: true
});

var _getPrototypeOf$1a = getPrototypeOf$1.exports;

var _getPrototypeOf2$1a = _interopRequireDefault$23(_getPrototypeOf$1a);

var _classCallCheck2$1c = classCallCheck$3;

var _classCallCheck3$1c = _interopRequireDefault$23(_classCallCheck2$1c);

var _createClass2$1b = createClass$2;

var _createClass3$1b = _interopRequireDefault$23(_createClass2$1b);

var _possibleConstructorReturn2$1a = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1a = _interopRequireDefault$23(_possibleConstructorReturn2$1a);

var _inherits2$1a = inherits$3;

var _inherits3$1a = _interopRequireDefault$23(_inherits2$1a);

var _react$1s = react;

var _react2$1p = _interopRequireDefault$23(_react$1s);

var _propTypes$1i = propTypes$5.exports;

var _propTypes2$1i = _interopRequireDefault$23(_propTypes$1i);

var _FlatButton$2 = FlatButton$2;

var _FlatButton2$2 = _interopRequireDefault$23(_FlatButton$2);

function _interopRequireDefault$23(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CalendarActionButton = function (_Component) {
  (0, _inherits3$1a.default)(CalendarActionButton, _Component);

  function CalendarActionButton() {
    (0, _classCallCheck3$1c.default)(this, CalendarActionButton);
    return (0, _possibleConstructorReturn3$1a.default)(this, (CalendarActionButton.__proto__ || (0, _getPrototypeOf2$1a.default)(CalendarActionButton)).apply(this, arguments));
  }

  (0, _createClass3$1b.default)(CalendarActionButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          cancelLabel = _props.cancelLabel,
          okLabel = _props.okLabel;


      var styles = {
        root: {
          display: 'flex',
          flexDirection: 'row',
          justifyContent: 'flex-end',
          margin: 0,
          maxHeight: 48,
          padding: 0
        },
        flatButtons: {
          fontsize: 14,
          margin: '4px 8px 8px 0px',
          maxHeight: 36,
          minWidth: 64,
          padding: 0
        }
      };

      return _react2$1p.default.createElement(
        'div',
        { style: styles.root },
        _react2$1p.default.createElement(_FlatButton2$2.default, {
          label: cancelLabel,
          onClick: this.props.onClickCancel,
          primary: true,
          style: styles.flatButtons
        }),
        !this.props.autoOk && _react2$1p.default.createElement(_FlatButton2$2.default, {
          disabled: this.refs.calendar !== undefined && this.refs.calendar.isSelectedDateDisabled(),
          label: okLabel,
          onClick: this.props.onClickOk,
          primary: true,
          style: styles.flatButtons
        })
      );
    }
  }]);
  return CalendarActionButton;
}(_react$1s.Component);

CalendarActionButton.propTypes = {
  autoOk: _propTypes2$1i.default.bool,
  cancelLabel: _propTypes2$1i.default.node,
  okLabel: _propTypes2$1i.default.node,
  onClickCancel: _propTypes2$1i.default.func,
  onClickOk: _propTypes2$1i.default.func
} ;
CalendarActionButtons.default = CalendarActionButton;

var CalendarMonth$1 = {};

var DayButton$1 = {};

Object.defineProperty(DayButton$1, "__esModule", {
  value: true
});

var _extends2$V = _extends$3;

var _extends3$V = _interopRequireDefault$22(_extends2$V);

var _objectWithoutProperties2$U = objectWithoutProperties$2;

var _objectWithoutProperties3$U = _interopRequireDefault$22(_objectWithoutProperties2$U);

var _getPrototypeOf$19 = getPrototypeOf$1.exports;

var _getPrototypeOf2$19 = _interopRequireDefault$22(_getPrototypeOf$19);

var _classCallCheck2$1b = classCallCheck$3;

var _classCallCheck3$1b = _interopRequireDefault$22(_classCallCheck2$1b);

var _createClass2$1a = createClass$2;

var _createClass3$1a = _interopRequireDefault$22(_createClass2$1a);

var _possibleConstructorReturn2$19 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$19 = _interopRequireDefault$22(_possibleConstructorReturn2$19);

var _inherits2$19 = inherits$3;

var _inherits3$19 = _interopRequireDefault$22(_inherits2$19);

var _react$1r = react;

var _react2$1o = _interopRequireDefault$22(_react$1r);

var _propTypes$1h = propTypes$5.exports;

var _propTypes2$1h = _interopRequireDefault$22(_propTypes$1h);

var _transitions$t = transitions;

var _transitions2$t = _interopRequireDefault$22(_transitions$t);

var _dateUtils$4 = dateUtils;

var _EnhancedButton$5 = EnhancedButton$1;

var _EnhancedButton2$5 = _interopRequireDefault$22(_EnhancedButton$5);

function _interopRequireDefault$22(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$N(props, context, state) {
  var date = props.date,
      disabled = props.disabled,
      selected = props.selected;
  var hover = state.hover;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      datePicker = _context$muiTheme.datePicker;


  var labelColor = baseTheme.palette.textColor;
  var buttonStateOpacity = 0;
  var buttonStateTransform = 'scale(0)';

  if (hover || selected) {
    labelColor = datePicker.selectTextColor;
    buttonStateOpacity = selected ? 1 : 0.6;
    buttonStateTransform = 'scale(1)';
  } else if ((0, _dateUtils$4.isEqualDate)(date, new Date())) {
    labelColor = datePicker.color;
  }

  return {
    root: {
      boxSizing: 'border-box',
      fontWeight: '400',
      opacity: disabled && '0.4',
      padding: '4px 0px',
      position: 'relative',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      width: 42
    },
    label: {
      color: labelColor,
      fontWeight: '400',
      position: 'relative'
    },
    buttonState: {
      backgroundColor: datePicker.selectColor,
      borderRadius: '50%',
      height: 34,
      left: 4,
      opacity: buttonStateOpacity,
      position: 'absolute',
      top: 0,
      transform: buttonStateTransform,
      transition: _transitions2$t.default.easeOut(),
      width: 34
    }
  };
}

var DayButton = function (_Component) {
  (0, _inherits3$19.default)(DayButton, _Component);

  function DayButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1b.default)(this, DayButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$19.default)(this, (_ref = DayButton.__proto__ || (0, _getPrototypeOf2$19.default)(DayButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hover: false
    }, _this.handleMouseEnter = function () {
      if (!_this.props.disabled) {
        _this.setState({ hover: true });
      }
    }, _this.handleMouseLeave = function () {
      if (!_this.props.disabled) {
        _this.setState({ hover: false });
      }
    }, _this.handleClick = function (event) {
      if (!_this.props.disabled && _this.props.onClick) {
        _this.props.onClick(event, _this.props.date);
      }
    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
      if (!_this.props.disabled && _this.props.onKeyboardFocus) {
        _this.props.onKeyboardFocus(event, keyboardFocused, _this.props.date);
      }
    }, _temp), (0, _possibleConstructorReturn3$19.default)(_this, _ret);
  }

  (0, _createClass3$1a.default)(DayButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          date = _props.date,
          disabled = _props.disabled,
          locale = _props.locale;
          _props.onClick;
          _props.selected;
          var other = (0, _objectWithoutProperties3$U.default)(_props, ['DateTimeFormat', 'date', 'disabled', 'locale', 'onClick', 'selected']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$N(this.props, this.context, this.state);

      return date ? _react2$1o.default.createElement(
        _EnhancedButton2$5.default,
        (0, _extends3$V.default)({}, other, {
          disabled: disabled,
          disableFocusRipple: true,
          disableTouchRipple: true,
          onKeyboardFocus: this.handleKeyboardFocus,
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave,
          onClick: this.handleClick,
          style: styles.root
        }),
        _react2$1o.default.createElement('div', { style: prepareStyles(styles.buttonState) }),
        _react2$1o.default.createElement(
          'span',
          { style: prepareStyles(styles.label) },
          new DateTimeFormat(locale, {
            day: 'numeric'
          }).format(date)
        )
      ) : _react2$1o.default.createElement('span', { style: prepareStyles(styles.root) });
    }
  }]);
  return DayButton;
}(_react$1r.Component);

DayButton.defaultProps = {
  selected: false,
  disabled: false
};
DayButton.contextTypes = {
  muiTheme: _propTypes2$1h.default.object.isRequired
};
DayButton.propTypes = {
  DateTimeFormat: _propTypes2$1h.default.func.isRequired,
  date: _propTypes2$1h.default.object,
  disabled: _propTypes2$1h.default.bool,
  locale: _propTypes2$1h.default.string.isRequired,
  onClick: _propTypes2$1h.default.func,
  onKeyboardFocus: _propTypes2$1h.default.func,
  selected: _propTypes2$1h.default.bool
} ;
DayButton$1.default = DayButton;

Object.defineProperty(CalendarMonth$1, "__esModule", {
  value: true
});

var _getPrototypeOf$18 = getPrototypeOf$1.exports;

var _getPrototypeOf2$18 = _interopRequireDefault$21(_getPrototypeOf$18);

var _classCallCheck2$1a = classCallCheck$3;

var _classCallCheck3$1a = _interopRequireDefault$21(_classCallCheck2$1a);

var _createClass2$19 = createClass$2;

var _createClass3$19 = _interopRequireDefault$21(_createClass2$19);

var _possibleConstructorReturn2$18 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$18 = _interopRequireDefault$21(_possibleConstructorReturn2$18);

var _inherits2$18 = inherits$3;

var _inherits3$18 = _interopRequireDefault$21(_inherits2$18);

var _react$1q = react;

var _react2$1n = _interopRequireDefault$21(_react$1q);

var _propTypes$1g = propTypes$5.exports;

var _propTypes2$1g = _interopRequireDefault$21(_propTypes$1g);

var _dateUtils$3 = dateUtils;

var _DayButton = DayButton$1;

var _DayButton2 = _interopRequireDefault$21(_DayButton);

function _interopRequireDefault$21(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$f = {
  root: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    fontWeight: 400,
    height: 228,
    lineHeight: 2,
    position: 'relative',
    textAlign: 'center',
    MozPaddingStart: 0
  },
  week: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-around',
    height: 34,
    marginBottom: 2
  }
};

var CalendarMonth = function (_Component) {
  (0, _inherits3$18.default)(CalendarMonth, _Component);

  function CalendarMonth() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1a.default)(this, CalendarMonth);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$18.default)(this, (_ref = CalendarMonth.__proto__ || (0, _getPrototypeOf2$18.default)(CalendarMonth)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickDay = function (event, date) {
      if (_this.props.onClickDay) {
        _this.props.onClickDay(event, date);
      }
    }, _temp), (0, _possibleConstructorReturn3$18.default)(_this, _ret);
  }

  (0, _createClass3$19.default)(CalendarMonth, [{
    key: 'isSelectedDateDisabled',
    value: function isSelectedDateDisabled() {
      return this.selectedDateDisabled;
    }
  }, {
    key: 'shouldDisableDate',
    value: function shouldDisableDate(day) {
      if (day === null) return false;
      var disabled = !(0, _dateUtils$3.isBetweenDates)(day, this.props.minDate, this.props.maxDate);
      if (!disabled && this.props.shouldDisableDate) disabled = this.props.shouldDisableDate(day);

      return disabled;
    }
  }, {
    key: 'getWeekElements',
    value: function getWeekElements() {
      var _this2 = this;

      var weekArray = this.props.utils.getWeekArray(this.props.displayDate, this.props.firstDayOfWeek);

      return weekArray.map(function (week, i) {
        return _react2$1n.default.createElement(
          'div',
          { key: i, style: styles$f.week },
          _this2.getDayElements(week, i)
        );
      }, this);
    }
  }, {
    key: 'getDayElements',
    value: function getDayElements(week, i) {
      var _this3 = this;

      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          locale = _props.locale,
          selectedDate = _props.selectedDate;


      return week.map(function (day, j) {
        var isSameDate = (0, _dateUtils$3.isEqualDate)(selectedDate, day);
        var disabled = _this3.shouldDisableDate(day);
        var selected = !disabled && isSameDate;

        if (isSameDate) {
          _this3.selectedDateDisabled = disabled;
        }

        return _react2$1n.default.createElement(_DayButton2.default, {
          DateTimeFormat: DateTimeFormat,
          locale: locale,
          date: day,
          disabled: disabled,
          key: 'db' + (i + j),
          onClick: _this3.handleClickDay,
          selected: selected
        });
      }, this);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2$1n.default.createElement(
        'div',
        { style: styles$f.root },
        this.getWeekElements()
      );
    }
  }]);
  return CalendarMonth;
}(_react$1q.Component);

CalendarMonth.propTypes = {
  DateTimeFormat: _propTypes2$1g.default.func.isRequired,
  autoOk: _propTypes2$1g.default.bool,
  displayDate: _propTypes2$1g.default.object.isRequired,
  firstDayOfWeek: _propTypes2$1g.default.number,
  locale: _propTypes2$1g.default.string.isRequired,
  maxDate: _propTypes2$1g.default.object,
  minDate: _propTypes2$1g.default.object,
  onClickDay: _propTypes2$1g.default.func,
  selectedDate: _propTypes2$1g.default.object.isRequired,
  shouldDisableDate: _propTypes2$1g.default.func,
  utils: _propTypes2$1g.default.object.isRequired
} ;
CalendarMonth$1.default = CalendarMonth;

var CalendarYear$1 = {};

var YearButton$1 = {};

Object.defineProperty(YearButton$1, "__esModule", {
  value: true
});

var _extends2$U = _extends$3;

var _extends3$U = _interopRequireDefault$20(_extends2$U);

var _objectWithoutProperties2$T = objectWithoutProperties$2;

var _objectWithoutProperties3$T = _interopRequireDefault$20(_objectWithoutProperties2$T);

var _getPrototypeOf$17 = getPrototypeOf$1.exports;

var _getPrototypeOf2$17 = _interopRequireDefault$20(_getPrototypeOf$17);

var _classCallCheck2$19 = classCallCheck$3;

var _classCallCheck3$19 = _interopRequireDefault$20(_classCallCheck2$19);

var _createClass2$18 = createClass$2;

var _createClass3$18 = _interopRequireDefault$20(_createClass2$18);

var _possibleConstructorReturn2$17 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$17 = _interopRequireDefault$20(_possibleConstructorReturn2$17);

var _inherits2$17 = inherits$3;

var _inherits3$17 = _interopRequireDefault$20(_inherits2$17);

var _react$1p = react;

var _react2$1m = _interopRequireDefault$20(_react$1p);

var _propTypes$1f = propTypes$5.exports;

var _propTypes2$1f = _interopRequireDefault$20(_propTypes$1f);

var _EnhancedButton$4 = EnhancedButton$1;

var _EnhancedButton2$4 = _interopRequireDefault$20(_EnhancedButton$4);

function _interopRequireDefault$20(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$M(props, context, state) {
  var selected = props.selected,
      year = props.year,
      utils = props.utils;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      datePicker = _context$muiTheme.datePicker;
  var hover = state.hover;


  return {
    root: {
      boxSizing: 'border-box',
      color: year === utils.getYear(new Date()) && datePicker.color,
      display: 'block',
      fontSize: 14,
      margin: '0 auto',
      position: 'relative',
      textAlign: 'center',
      lineHeight: 'inherit',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)' // Remove mobile color flashing (deprecated)
    },
    label: {
      alignSelf: 'center',
      color: hover || selected ? datePicker.color : baseTheme.palette.textColor,
      fontSize: selected ? 26 : 17,
      fontWeight: hover ? 450 : selected ? 500 : 400,
      position: 'relative',
      top: -1
    }
  };
}

var YearButton = function (_Component) {
  (0, _inherits3$17.default)(YearButton, _Component);

  function YearButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$19.default)(this, YearButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$17.default)(this, (_ref = YearButton.__proto__ || (0, _getPrototypeOf2$17.default)(YearButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hover: false
    }, _this.handleMouseEnter = function () {
      _this.setState({ hover: true });
    }, _this.handleMouseLeave = function () {
      _this.setState({ hover: false });
    }, _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.year);
      }
    }, _temp), (0, _possibleConstructorReturn3$17.default)(_this, _ret);
  }

  (0, _createClass3$18.default)(YearButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.className;
          _props.onClick;
          _props.selected;
          _props.year;
          _props.utils;
          var other = (0, _objectWithoutProperties3$T.default)(_props, ['children', 'className', 'onClick', 'selected', 'year', 'utils']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$M(this.props, this.context, this.state);

      return _react2$1m.default.createElement(
        _EnhancedButton2$4.default,
        (0, _extends3$U.default)({}, other, {
          disableFocusRipple: true,
          disableTouchRipple: true,
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave,
          onClick: this.handleClick,
          style: styles.root
        }),
        _react2$1m.default.createElement(
          'span',
          { style: prepareStyles(styles.label) },
          children
        )
      );
    }
  }]);
  return YearButton;
}(_react$1p.Component);

YearButton.defaultProps = {
  selected: false
};
YearButton.contextTypes = {
  muiTheme: _propTypes2$1f.default.object.isRequired
};
YearButton.propTypes = {
  children: _propTypes2$1f.default.node.isRequired,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$1f.default.string,
  onClick: _propTypes2$1f.default.func,
  selected: _propTypes2$1f.default.bool,
  utils: _propTypes2$1f.default.object.isRequired,
  year: _propTypes2$1f.default.number.isRequired
} ;
YearButton$1.default = YearButton;

Object.defineProperty(CalendarYear$1, "__esModule", {
  value: true
});

var _extends2$T = _extends$3;

var _extends3$T = _interopRequireDefault$1$(_extends2$T);

var _getPrototypeOf$16 = getPrototypeOf$1.exports;

var _getPrototypeOf2$16 = _interopRequireDefault$1$(_getPrototypeOf$16);

var _classCallCheck2$18 = classCallCheck$3;

var _classCallCheck3$18 = _interopRequireDefault$1$(_classCallCheck2$18);

var _createClass2$17 = createClass$2;

var _createClass3$17 = _interopRequireDefault$1$(_createClass2$17);

var _possibleConstructorReturn2$16 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$16 = _interopRequireDefault$1$(_possibleConstructorReturn2$16);

var _inherits2$16 = inherits$3;

var _inherits3$16 = _interopRequireDefault$1$(_inherits2$16);

var _react$1o = react;

var _react2$1l = _interopRequireDefault$1$(_react$1o);

var _propTypes$1e = propTypes$5.exports;

var _propTypes2$1e = _interopRequireDefault$1$(_propTypes$1e);

var _reactDom$d = reactDom;

var _reactDom2$d = _interopRequireDefault$1$(_reactDom$d);

var _YearButton = YearButton$1;

var _YearButton2 = _interopRequireDefault$1$(_YearButton);

function _interopRequireDefault$1$(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CalendarYear = function (_Component) {
  (0, _inherits3$16.default)(CalendarYear, _Component);

  function CalendarYear() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$18.default)(this, CalendarYear);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$16.default)(this, (_ref = CalendarYear.__proto__ || (0, _getPrototypeOf2$16.default)(CalendarYear)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickYear = function (event, year) {
      if (_this.props.onClickYear) {
        _this.props.onClickYear(event, year);
      }
    }, _temp), (0, _possibleConstructorReturn3$16.default)(_this, _ret);
  }

  (0, _createClass3$17.default)(CalendarYear, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.scrollToSelectedYear();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.scrollToSelectedYear();
    }
  }, {
    key: 'getYears',
    value: function getYears() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          locale = _props.locale,
          minDate = _props.minDate,
          maxDate = _props.maxDate,
          selectedDate = _props.selectedDate,
          utils = _props.utils;


      var minYear = utils.getYear(minDate);
      var maxYear = utils.getYear(maxDate);
      var years = [];

      for (var year = minYear; year <= maxYear; year++) {
        var selected = utils.getYear(selectedDate) === year;
        var selectedProps = {};
        if (selected) {
          selectedProps.ref = 'selectedYearButton';
        }

        var yearFormated = new DateTimeFormat(locale, {
          year: 'numeric'
        }).format(utils.setYear(selectedDate, year));

        var yearButton = _react2$1l.default.createElement(
          _YearButton2.default,
          (0, _extends3$T.default)({
            key: 'yb' + year,
            onClick: this.handleClickYear,
            selected: selected,
            year: year,
            utils: utils
          }, selectedProps),
          yearFormated
        );

        years.push(yearButton);
      }

      return years;
    }
  }, {
    key: 'scrollToSelectedYear',
    value: function scrollToSelectedYear() {
      if (this.refs.selectedYearButton === undefined) {
        return;
      }

      var container = _reactDom2$d.default.findDOMNode(this);
      var yearButtonNode = _reactDom2$d.default.findDOMNode(this.refs.selectedYearButton);

      var containerHeight = container.clientHeight;
      var yearButtonNodeHeight = yearButtonNode.clientHeight || 32;

      var scrollYOffset = yearButtonNode.offsetTop + yearButtonNodeHeight / 2 - containerHeight / 2;
      container.scrollTop = scrollYOffset;
    }
  }, {
    key: 'render',
    value: function render() {
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          calendarYearBackgroundColor = _context$muiTheme.datePicker.calendarYearBackgroundColor;


      var styles = {
        root: {
          backgroundColor: calendarYearBackgroundColor,
          height: 'inherit',
          lineHeight: '35px',
          overflowX: 'hidden',
          overflowY: 'scroll',
          position: 'relative'
        },
        child: {
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
          minHeight: '100%'
        }
      };

      return _react2$1l.default.createElement(
        'div',
        { style: prepareStyles(styles.root) },
        _react2$1l.default.createElement(
          'div',
          { style: prepareStyles(styles.child) },
          this.getYears()
        )
      );
    }
  }]);
  return CalendarYear;
}(_react$1o.Component);

CalendarYear.contextTypes = {
  muiTheme: _propTypes2$1e.default.object.isRequired
};
CalendarYear.propTypes = {
  DateTimeFormat: _propTypes2$1e.default.func.isRequired,
  locale: _propTypes2$1e.default.string.isRequired,
  maxDate: _propTypes2$1e.default.object.isRequired,
  minDate: _propTypes2$1e.default.object.isRequired,
  onClickYear: _propTypes2$1e.default.func,
  selectedDate: _propTypes2$1e.default.object.isRequired,
  utils: _propTypes2$1e.default.object.isRequired,
  wordings: _propTypes2$1e.default.object
} ;
CalendarYear$1.default = CalendarYear;

var CalendarToolbar$1 = {};

var SlideIn$1 = {};

var SlideInChild$1 = {};

Object.defineProperty(SlideInChild$1, "__esModule", {
  value: true
});

var _extends2$S = _extends$3;

var _extends3$S = _interopRequireDefault$1_(_extends2$S);

var _objectWithoutProperties2$S = objectWithoutProperties$2;

var _objectWithoutProperties3$S = _interopRequireDefault$1_(_objectWithoutProperties2$S);

var _getPrototypeOf$15 = getPrototypeOf$1.exports;

var _getPrototypeOf2$15 = _interopRequireDefault$1_(_getPrototypeOf$15);

var _classCallCheck2$17 = classCallCheck$3;

var _classCallCheck3$17 = _interopRequireDefault$1_(_classCallCheck2$17);

var _createClass2$16 = createClass$2;

var _createClass3$16 = _interopRequireDefault$1_(_createClass2$16);

var _possibleConstructorReturn2$15 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$15 = _interopRequireDefault$1_(_possibleConstructorReturn2$15);

var _inherits2$15 = inherits$3;

var _inherits3$15 = _interopRequireDefault$1_(_inherits2$15);

var _simpleAssign$10 = simpleAssign;

var _simpleAssign2$10 = _interopRequireDefault$1_(_simpleAssign$10);

var _react$1n = react;

var _react2$1k = _interopRequireDefault$1_(_react$1n);

var _propTypes$1d = propTypes$5.exports;

var _propTypes2$1d = _interopRequireDefault$1_(_propTypes$1d);

var _reactDom$c = reactDom;

var _reactDom2$c = _interopRequireDefault$1_(_reactDom$c);

var _autoPrefix$2 = autoPrefix;

var _autoPrefix2$2 = _interopRequireDefault$1_(_autoPrefix$2);

var _transitions$s = transitions;

var _transitions2$s = _interopRequireDefault$1_(_transitions$s);

function _interopRequireDefault$1_(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SlideInChild = function (_Component) {
  (0, _inherits3$15.default)(SlideInChild, _Component);

  function SlideInChild() {
    (0, _classCallCheck3$17.default)(this, SlideInChild);
    return (0, _possibleConstructorReturn3$15.default)(this, (SlideInChild.__proto__ || (0, _getPrototypeOf2$15.default)(SlideInChild)).apply(this, arguments));
  }

  (0, _createClass3$16.default)(SlideInChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      var style = _reactDom2$c.default.findDOMNode(this).style;
      var x = this.props.direction === 'left' ? '100%' : this.props.direction === 'right' ? '-100%' : '0';
      var y = this.props.direction === 'up' ? '100%' : this.props.direction === 'down' ? '-100%' : '0';

      style.opacity = '0';
      _autoPrefix2$2.default.set(style, 'transform', 'translate(' + x + ', ' + y + ')');

      this.enterTimer = setTimeout(callback, this.props.enterDelay);
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      var style = _reactDom2$c.default.findDOMNode(this).style;
      style.opacity = '1';
      _autoPrefix2$2.default.set(style, 'transform', 'translate(0,0)');
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var style = _reactDom2$c.default.findDOMNode(this).style;
      var direction = this.props.getLeaveDirection();
      var x = direction === 'left' ? '-100%' : direction === 'right' ? '100%' : '0';
      var y = direction === 'up' ? '-100%' : direction === 'down' ? '100%' : '0';

      style.opacity = '0';
      _autoPrefix2$2.default.set(style, 'transform', 'translate(' + x + ', ' + y + ')');

      this.leaveTimer = setTimeout(callback, 450);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children;
          _props.enterDelay;
          _props.getLeaveDirection;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$S.default)(_props, ['children', 'enterDelay', 'getLeaveDirection', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$10.default)({}, {
        position: 'absolute',
        height: '100%',
        width: '100%',
        top: 0,
        left: 0,
        transition: _transitions2$s.default.easeOut(null, ['transform', 'opacity'])
      }, style);

      return _react2$1k.default.createElement(
        'div',
        (0, _extends3$S.default)({}, other, { style: prepareStyles(mergedRootStyles) }),
        children
      );
    }
  }]);
  return SlideInChild;
}(_react$1n.Component);

SlideInChild.defaultProps = {
  enterDelay: 0
};
SlideInChild.contextTypes = {
  muiTheme: _propTypes2$1d.default.object.isRequired
};
SlideInChild.propTypes = {
  children: _propTypes2$1d.default.node,
  direction: _propTypes2$1d.default.string,
  enterDelay: _propTypes2$1d.default.number,
  // This callback is needed bacause the direction could change when leaving the DOM
  getLeaveDirection: _propTypes2$1d.default.func.isRequired,
  style: _propTypes2$1d.default.object
} ;
SlideInChild$1.default = SlideInChild;

Object.defineProperty(SlideIn$1, "__esModule", {
  value: true
});

var _extends2$R = _extends$3;

var _extends3$R = _interopRequireDefault$1Z(_extends2$R);

var _objectWithoutProperties2$R = objectWithoutProperties$2;

var _objectWithoutProperties3$R = _interopRequireDefault$1Z(_objectWithoutProperties2$R);

var _getPrototypeOf$14 = getPrototypeOf$1.exports;

var _getPrototypeOf2$14 = _interopRequireDefault$1Z(_getPrototypeOf$14);

var _classCallCheck2$16 = classCallCheck$3;

var _classCallCheck3$16 = _interopRequireDefault$1Z(_classCallCheck2$16);

var _createClass2$15 = createClass$2;

var _createClass3$15 = _interopRequireDefault$1Z(_createClass2$15);

var _possibleConstructorReturn2$14 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$14 = _interopRequireDefault$1Z(_possibleConstructorReturn2$14);

var _inherits2$14 = inherits$3;

var _inherits3$14 = _interopRequireDefault$1Z(_inherits2$14);

var _simpleAssign$$ = simpleAssign;

var _simpleAssign2$$ = _interopRequireDefault$1Z(_simpleAssign$$);

var _react$1m = react;

var _react2$1j = _interopRequireDefault$1Z(_react$1m);

var _propTypes$1c = propTypes$5.exports;

var _propTypes2$1c = _interopRequireDefault$1Z(_propTypes$1c);

var _TransitionGroup$2 = TransitionGroup.exports;

var _TransitionGroup2$2 = _interopRequireDefault$1Z(_TransitionGroup$2);

var _SlideInChild = SlideInChild$1;

var _SlideInChild2 = _interopRequireDefault$1Z(_SlideInChild);

function _interopRequireDefault$1Z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SlideIn = function (_Component) {
  (0, _inherits3$14.default)(SlideIn, _Component);

  function SlideIn() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$16.default)(this, SlideIn);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$14.default)(this, (_ref = SlideIn.__proto__ || (0, _getPrototypeOf2$14.default)(SlideIn)).call.apply(_ref, [this].concat(args))), _this), _this.getLeaveDirection = function () {
      return _this.props.direction;
    }, _temp), (0, _possibleConstructorReturn3$14.default)(_this, _ret);
  }

  (0, _createClass3$15.default)(SlideIn, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          enterDelay = _props.enterDelay,
          children = _props.children,
          childStyle = _props.childStyle,
          direction = _props.direction,
          style = _props.style,
          other = (0, _objectWithoutProperties3$R.default)(_props, ['enterDelay', 'children', 'childStyle', 'direction', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$$.default)({}, {
        position: 'relative',
        overflow: 'hidden',
        height: '100%'
      }, style);

      var newChildren = _react2$1j.default.Children.map(children, function (child) {
        return _react2$1j.default.createElement(
          _SlideInChild2.default,
          {
            key: child.key,
            direction: direction,
            enterDelay: enterDelay,
            getLeaveDirection: _this2.getLeaveDirection,
            style: childStyle
          },
          child
        );
      }, this);

      return _react2$1j.default.createElement(
        _TransitionGroup2$2.default,
        (0, _extends3$R.default)({}, other, {
          style: prepareStyles(mergedRootStyles),
          component: 'div'
        }),
        newChildren
      );
    }
  }]);
  return SlideIn;
}(_react$1m.Component);

SlideIn.defaultProps = {
  enterDelay: 0,
  direction: 'left'
};
SlideIn.contextTypes = {
  muiTheme: _propTypes2$1c.default.object.isRequired
};
SlideIn.propTypes = {
  childStyle: _propTypes2$1c.default.object,
  children: _propTypes2$1c.default.node,
  direction: _propTypes2$1c.default.oneOf(['left', 'right', 'up', 'down']),
  enterDelay: _propTypes2$1c.default.number,
  style: _propTypes2$1c.default.object
} ;
SlideIn$1.default = SlideIn;

Object.defineProperty(CalendarToolbar$1, "__esModule", {
  value: true
});

var _getPrototypeOf$13 = getPrototypeOf$1.exports;

var _getPrototypeOf2$13 = _interopRequireDefault$1Y(_getPrototypeOf$13);

var _classCallCheck2$15 = classCallCheck$3;

var _classCallCheck3$15 = _interopRequireDefault$1Y(_classCallCheck2$15);

var _createClass2$14 = createClass$2;

var _createClass3$14 = _interopRequireDefault$1Y(_createClass2$14);

var _possibleConstructorReturn2$13 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$13 = _interopRequireDefault$1Y(_possibleConstructorReturn2$13);

var _inherits2$13 = inherits$3;

var _inherits3$13 = _interopRequireDefault$1Y(_inherits2$13);

var _react$1l = react;

var _react2$1i = _interopRequireDefault$1Y(_react$1l);

var _propTypes$1b = propTypes$5.exports;

var _propTypes2$1b = _interopRequireDefault$1Y(_propTypes$1b);

var _IconButton$3 = IconButton$5;

var _IconButton2$3 = _interopRequireDefault$1Y(_IconButton$3);

var _chevronLeft = chevronLeft;

var _chevronLeft2 = _interopRequireDefault$1Y(_chevronLeft);

var _chevronRight = chevronRight;

var _chevronRight2 = _interopRequireDefault$1Y(_chevronRight);

var _SlideIn$2 = SlideIn$1;

var _SlideIn2$2 = _interopRequireDefault$1Y(_SlideIn$2);

function _interopRequireDefault$1Y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$e = {
  root: {
    display: 'flex',
    justifyContent: 'space-between',
    backgroundColor: 'inherit',
    height: 48
  },
  titleDiv: {
    fontSize: 14,
    fontWeight: '500',
    textAlign: 'center',
    width: '100%'
  },
  titleText: {
    height: 'inherit',
    paddingTop: 12
  }
};

var CalendarToolbar = function (_Component) {
  (0, _inherits3$13.default)(CalendarToolbar, _Component);

  function CalendarToolbar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$15.default)(this, CalendarToolbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$13.default)(this, (_ref = CalendarToolbar.__proto__ || (0, _getPrototypeOf2$13.default)(CalendarToolbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      transitionDirection: 'up'
    }, _this.handleClickPrevMonth = function () {
      if (_this.props.onMonthChange) {
        _this.props.onMonthChange(-1);
      }
    }, _this.handleClickNextMonth = function () {
      if (_this.props.onMonthChange) {
        _this.props.onMonthChange(1);
      }
    }, _temp), (0, _possibleConstructorReturn3$13.default)(_this, _ret);
  }

  (0, _createClass3$14.default)(CalendarToolbar, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.displayDate !== this.props.displayDate) {
        var nextDirection = this.context.muiTheme.isRtl ? 'right' : 'left';
        var prevDirection = this.context.muiTheme.isRtl ? 'left' : 'right';
        var direction = nextProps.displayDate > this.props.displayDate ? nextDirection : prevDirection;
        this.setState({
          transitionDirection: direction
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          locale = _props.locale,
          displayDate = _props.displayDate;


      var dateTimeFormatted = new DateTimeFormat(locale, {
        month: 'long',
        year: 'numeric'
      }).format(displayDate);

      var nextButtonIcon = this.context.muiTheme.isRtl ? _react2$1i.default.createElement(_chevronLeft2.default, null) : _react2$1i.default.createElement(_chevronRight2.default, null);
      var prevButtonIcon = this.context.muiTheme.isRtl ? _react2$1i.default.createElement(_chevronRight2.default, null) : _react2$1i.default.createElement(_chevronLeft2.default, null);

      return _react2$1i.default.createElement(
        'div',
        { style: styles$e.root },
        _react2$1i.default.createElement(
          _IconButton2$3.default,
          {
            disabled: !this.props.prevMonth,
            onClick: this.handleClickPrevMonth
          },
          prevButtonIcon
        ),
        _react2$1i.default.createElement(
          _SlideIn2$2.default,
          {
            direction: this.state.transitionDirection,
            style: styles$e.titleDiv
          },
          _react2$1i.default.createElement(
            'div',
            { key: dateTimeFormatted, style: styles$e.titleText },
            dateTimeFormatted
          )
        ),
        _react2$1i.default.createElement(
          _IconButton2$3.default,
          {
            disabled: !this.props.nextMonth,
            onClick: this.handleClickNextMonth
          },
          nextButtonIcon
        )
      );
    }
  }]);
  return CalendarToolbar;
}(_react$1l.Component);

CalendarToolbar.defaultProps = {
  nextMonth: true,
  prevMonth: true
};
CalendarToolbar.contextTypes = {
  muiTheme: _propTypes2$1b.default.object.isRequired
};
CalendarToolbar.propTypes = {
  DateTimeFormat: _propTypes2$1b.default.func.isRequired,
  displayDate: _propTypes2$1b.default.object.isRequired,
  locale: _propTypes2$1b.default.string.isRequired,
  nextMonth: _propTypes2$1b.default.bool,
  onMonthChange: _propTypes2$1b.default.func,
  prevMonth: _propTypes2$1b.default.bool
} ;
CalendarToolbar$1.default = CalendarToolbar;

var DateDisplay$1 = {};

Object.defineProperty(DateDisplay$1, "__esModule", {
  value: true
});

var _extends2$Q = _extends$3;

var _extends3$Q = _interopRequireDefault$1X(_extends2$Q);

var _objectWithoutProperties2$Q = objectWithoutProperties$2;

var _objectWithoutProperties3$Q = _interopRequireDefault$1X(_objectWithoutProperties2$Q);

var _getPrototypeOf$12 = getPrototypeOf$1.exports;

var _getPrototypeOf2$12 = _interopRequireDefault$1X(_getPrototypeOf$12);

var _classCallCheck2$14 = classCallCheck$3;

var _classCallCheck3$14 = _interopRequireDefault$1X(_classCallCheck2$14);

var _createClass2$13 = createClass$2;

var _createClass3$13 = _interopRequireDefault$1X(_createClass2$13);

var _possibleConstructorReturn2$12 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$12 = _interopRequireDefault$1X(_possibleConstructorReturn2$12);

var _inherits2$12 = inherits$3;

var _inherits3$12 = _interopRequireDefault$1X(_inherits2$12);

var _react$1k = react;

var _react2$1h = _interopRequireDefault$1X(_react$1k);

var _propTypes$1a = propTypes$5.exports;

var _propTypes2$1a = _interopRequireDefault$1X(_propTypes$1a);

var _transitions$r = transitions;

var _transitions2$r = _interopRequireDefault$1X(_transitions$r);

var _SlideIn$1 = SlideIn$1;

var _SlideIn2$1 = _interopRequireDefault$1X(_SlideIn$1);

function _interopRequireDefault$1X(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$L(props, context, state) {
  var datePicker = context.muiTheme.datePicker;
  var selectedYear = state.selectedYear;

  var isLandscape = props.mode === 'landscape';

  var styles = {
    root: {
      width: isLandscape ? 165 : '100%',
      height: isLandscape ? 330 : 'auto',
      float: isLandscape ? 'left' : 'none',
      fontWeight: 700,
      display: 'inline-block',
      backgroundColor: datePicker.headerColor,
      borderTopLeftRadius: 2,
      borderTopRightRadius: isLandscape ? 0 : 2,
      borderBottomLeftRadius: isLandscape ? 2 : 0,
      color: datePicker.textColor,
      padding: 20,
      boxSizing: 'border-box'
    },
    monthDay: {
      display: 'block',
      fontSize: 36,
      lineHeight: '36px',
      height: props.mode === 'landscape' ? '100%' : 38,
      opacity: selectedYear ? 0.7 : 1,
      transition: _transitions2$r.default.easeOut(),
      width: '100%',
      fontWeight: '500'
    },
    monthDayTitle: {
      cursor: !selectedYear ? 'default' : 'pointer',
      width: '100%',
      display: 'block'
    },
    year: {
      margin: 0,
      fontSize: 16,
      fontWeight: '500',
      lineHeight: '16px',
      height: 16,
      opacity: selectedYear ? 1 : 0.7,
      transition: _transitions2$r.default.easeOut(),
      marginBottom: 10
    },
    yearTitle: {
      cursor: props.disableYearSelection || selectedYear ? 'default' : 'pointer'
    }
  };

  return styles;
}

var DateDisplay = function (_Component) {
  (0, _inherits3$12.default)(DateDisplay, _Component);

  function DateDisplay() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$14.default)(this, DateDisplay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$12.default)(this, (_ref = DateDisplay.__proto__ || (0, _getPrototypeOf2$12.default)(DateDisplay)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      selectedYear: false,
      transitionDirection: 'up'
    }, _this.handleClickMonthDay = function () {
      if (_this.props.onClickMonthDay && _this.state.selectedYear) {
        _this.props.onClickMonthDay();
      }

      _this.setState({ selectedYear: false });
    }, _this.handleClickYear = function () {
      if (_this.props.onClickYear && !_this.props.disableYearSelection && !_this.state.selectedYear) {
        _this.props.onClickYear();
      }

      if (!_this.props.disableYearSelection) {
        _this.setState({ selectedYear: true });
      }
    }, _temp), (0, _possibleConstructorReturn3$12.default)(_this, _ret);
  }

  (0, _createClass3$13.default)(DateDisplay, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (!this.props.monthDaySelected) {
        this.setState({ selectedYear: true });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.selectedDate !== this.props.selectedDate) {
        var direction = nextProps.selectedDate > this.props.selectedDate ? 'up' : 'down';
        this.setState({
          transitionDirection: direction
        });
      }

      if (nextProps.monthDaySelected !== undefined) {
        this.setState({
          selectedYear: !nextProps.monthDaySelected
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat;
          _props.disableYearSelection;
          var locale = _props.locale;
          _props.mode;
          _props.monthDaySelected;
          _props.onClickMonthDay;
          _props.onClickYear;
          var selectedDate = _props.selectedDate,
          style = _props.style,
          other = (0, _objectWithoutProperties3$Q.default)(_props, ['DateTimeFormat', 'disableYearSelection', 'locale', 'mode', 'monthDaySelected', 'onClickMonthDay', 'onClickYear', 'selectedDate', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$L(this.props, this.context, this.state);

      var year = new DateTimeFormat(locale, {
        year: 'numeric'
      }).format(selectedDate);

      var dateTime = new DateTimeFormat(locale, {
        month: 'short',
        weekday: 'short',
        day: '2-digit'
      }).format(selectedDate);

      return _react2$1h.default.createElement(
        'div',
        (0, _extends3$Q.default)({}, other, { style: prepareStyles(styles.root, style) }),
        _react2$1h.default.createElement(
          _SlideIn2$1.default,
          { style: styles.year, direction: this.state.transitionDirection },
          _react2$1h.default.createElement(
            'div',
            { key: year, style: styles.yearTitle, onClick: this.handleClickYear },
            year
          )
        ),
        _react2$1h.default.createElement(
          _SlideIn2$1.default,
          { style: styles.monthDay, direction: this.state.transitionDirection },
          _react2$1h.default.createElement(
            'div',
            {
              key: dateTime,
              onClick: this.handleClickMonthDay,
              style: styles.monthDayTitle
            },
            dateTime
          )
        )
      );
    }
  }]);
  return DateDisplay;
}(_react$1k.Component);

DateDisplay.defaultProps = {
  disableYearSelection: false,
  monthDaySelected: true
};
DateDisplay.contextTypes = {
  muiTheme: _propTypes2$1a.default.object.isRequired
};
DateDisplay.propTypes = {
  DateTimeFormat: _propTypes2$1a.default.func.isRequired,
  disableYearSelection: _propTypes2$1a.default.bool,
  locale: _propTypes2$1a.default.string.isRequired,
  mode: _propTypes2$1a.default.oneOf(['portrait', 'landscape']),
  monthDaySelected: _propTypes2$1a.default.bool,
  onClickMonthDay: _propTypes2$1a.default.func,
  onClickYear: _propTypes2$1a.default.func,
  selectedDate: _propTypes2$1a.default.object.isRequired,
  style: _propTypes2$1a.default.object
} ;
DateDisplay$1.default = DateDisplay;

Object.defineProperty(Calendar$1, "__esModule", {
  value: true
});

var _getPrototypeOf$11 = getPrototypeOf$1.exports;

var _getPrototypeOf2$11 = _interopRequireDefault$1W(_getPrototypeOf$11);

var _classCallCheck2$13 = classCallCheck$3;

var _classCallCheck3$13 = _interopRequireDefault$1W(_classCallCheck2$13);

var _createClass2$12 = createClass$2;

var _createClass3$12 = _interopRequireDefault$1W(_createClass2$12);

var _possibleConstructorReturn2$11 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$11 = _interopRequireDefault$1W(_possibleConstructorReturn2$11);

var _inherits2$11 = inherits$3;

var _inherits3$11 = _interopRequireDefault$1W(_inherits2$11);

var _toConsumableArray2$3 = toConsumableArray;

var _toConsumableArray3$3 = _interopRequireDefault$1W(_toConsumableArray2$3);

var _react$1j = react;

var _react2$1g = _interopRequireDefault$1W(_react$1j);

var _propTypes$19 = propTypes$5.exports;

var _propTypes2$19 = _interopRequireDefault$1W(_propTypes$19);

var _reactEventListener$7 = reactEventListener_cjs;

var _reactEventListener2$7 = _interopRequireDefault$1W(_reactEventListener$7);

var _keycode$8 = keycode.exports;

var _keycode2$8 = _interopRequireDefault$1W(_keycode$8);

var _transitions$q = transitions;

var _transitions2$q = _interopRequireDefault$1W(_transitions$q);

var _CalendarActionButtons = CalendarActionButtons;

var _CalendarActionButtons2 = _interopRequireDefault$1W(_CalendarActionButtons);

var _CalendarMonth = CalendarMonth$1;

var _CalendarMonth2 = _interopRequireDefault$1W(_CalendarMonth);

var _CalendarYear = CalendarYear$1;

var _CalendarYear2 = _interopRequireDefault$1W(_CalendarYear);

var _CalendarToolbar = CalendarToolbar$1;

var _CalendarToolbar2 = _interopRequireDefault$1W(_CalendarToolbar);

var _DateDisplay = DateDisplay$1;

var _DateDisplay2 = _interopRequireDefault$1W(_DateDisplay);

var _SlideIn = SlideIn$1;

var _SlideIn2 = _interopRequireDefault$1W(_SlideIn);

var _dateUtils$2 = dateUtils;

function _interopRequireDefault$1W(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var daysArray = [].concat((0, _toConsumableArray3$3.default)(Array(7)));

var Calendar = function (_Component) {
  (0, _inherits3$11.default)(Calendar, _Component);

  function Calendar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$13.default)(this, Calendar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$11.default)(this, (_ref = Calendar.__proto__ || (0, _getPrototypeOf2$11.default)(Calendar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      displayDate: undefined,
      displayMonthDay: undefined,
      selectedDate: undefined,
      transitionDirection: 'left',
      transitionEnter: true
    }, _this.calendarRefs = {}, _this.handleClickDay = function (event, date) {
      _this.setSelectedDate(date);
      if (_this.props.onClickDay) _this.props.onClickDay(event, date);
    }, _this.handleMonthChange = function (months) {
      var nextDirection = _this.context.muiTheme.isRtl ? 'right' : 'left';
      var prevDirection = _this.context.muiTheme.isRtl ? 'left' : 'right';
      var direction = months >= 0 ? nextDirection : prevDirection;
      _this.setState({
        transitionDirection: direction,
        displayDate: _this.props.utils.addMonths(_this.state.displayDate, months)
      });
    }, _this.handleClickYear = function (event, year) {
      _this.setSelectedDate(_this.props.utils.setYear(_this.state.selectedDate, year), event);
      _this.handleClickDateDisplayMonthDay();
    }, _this.handleClickDateDisplayMonthDay = function () {
      _this.setState({
        displayMonthDay: true
      });
    }, _this.handleClickDateDisplayYear = function () {
      _this.setState({
        displayMonthDay: false
      });
    }, _this.handleWindowKeyDown = function (event) {
      if (_this.props.open) {
        var nextArrow = _this.context.muiTheme.isRtl ? 'left' : 'right';
        var prevArrow = _this.context.muiTheme.isRtl ? 'right' : 'left';
        switch ((0, _keycode2$8.default)(event)) {
          case 'up':
            if (event.altKey && event.shiftKey) {
              _this.addSelectedYears(-1);
            } else if (event.shiftKey) {
              _this.addSelectedMonths(-1);
            } else {
              _this.addSelectedDays(-7);
            }
            break;

          case 'down':
            if (event.altKey && event.shiftKey) {
              _this.addSelectedYears(1);
            } else if (event.shiftKey) {
              _this.addSelectedMonths(1);
            } else {
              _this.addSelectedDays(7);
            }
            break;

          case nextArrow:
            if (event.altKey && event.shiftKey) {
              _this.addSelectedYears(1);
            } else if (event.shiftKey) {
              _this.addSelectedMonths(1);
            } else {
              _this.addSelectedDays(1);
            }
            break;

          case prevArrow:
            if (event.altKey && event.shiftKey) {
              _this.addSelectedYears(-1);
            } else if (event.shiftKey) {
              _this.addSelectedMonths(-1);
            } else {
              _this.addSelectedDays(-1);
            }
            break;
        }
      }
    }, _temp), (0, _possibleConstructorReturn3$11.default)(_this, _ret);
  }

  (0, _createClass3$12.default)(Calendar, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        displayDate: this.props.utils.getFirstDayOfMonth(this.props.initialDate),
        selectedDate: this.props.initialDate,
        displayMonthDay: !this.props.openToYearSelection
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.initialDate !== this.props.initialDate) {
        var date = nextProps.initialDate || new Date();
        this.setState({
          displayDate: this.props.utils.getFirstDayOfMonth(date),
          selectedDate: date
        });
      }
    }
  }, {
    key: 'getMinDate',
    value: function getMinDate() {
      return this.props.minDate || this.props.utils.addYears(new Date(), -100);
    }
  }, {
    key: 'getMaxDate',
    value: function getMaxDate() {
      return this.props.maxDate || this.props.utils.addYears(new Date(), 100);
    }
  }, {
    key: 'getSelectedDate',
    value: function getSelectedDate() {
      return this.state.selectedDate;
    }
  }, {
    key: 'isSelectedDateDisabled',
    value: function isSelectedDateDisabled() {
      if (!this.state.displayMonthDay) {
        return false;
      }

      if (this.calendarRefs.calendar) {
        return this.calendarRefs.calendar.isSelectedDateDisabled();
      } else {
        return false;
      }
    }
  }, {
    key: 'addSelectedDays',
    value: function addSelectedDays(days) {
      this.setSelectedDate(this.props.utils.addDays(this.state.selectedDate, days));
    }
  }, {
    key: 'addSelectedMonths',
    value: function addSelectedMonths(months) {
      this.setSelectedDate(this.props.utils.addMonths(this.state.selectedDate, months));
    }
  }, {
    key: 'addSelectedYears',
    value: function addSelectedYears(years) {
      this.setSelectedDate(this.props.utils.addYears(this.state.selectedDate, years));
    }
  }, {
    key: 'setDisplayDate',
    value: function setDisplayDate(date, newSelectedDate) {
      var newDisplayDate = this.props.utils.getFirstDayOfMonth(date);

      if (newDisplayDate !== this.state.displayDate) {
        var nextDirection = this.context.muiTheme.isRtl ? 'right' : 'left';
        var prevDirection = this.context.muiTheme.isRtl ? 'left' : 'right';
        var direction = newDisplayDate > this.state.displayDate ? nextDirection : prevDirection;
        this.setState({
          displayDate: newDisplayDate,
          transitionDirection: direction,
          selectedDate: newSelectedDate || this.state.selectedDate
        });
      }
    }
  }, {
    key: 'setSelectedDate',
    value: function setSelectedDate(date) {
      var adjustedDate = date;
      var minDate = this.getMinDate();
      var maxDate = this.getMaxDate();
      if ((0, _dateUtils$2.isBeforeDate)(date, minDate)) {
        adjustedDate = minDate;
      } else if ((0, _dateUtils$2.isAfterDate)(date, maxDate)) {
        adjustedDate = maxDate;
      }

      var newDisplayDate = this.props.utils.getFirstDayOfMonth(adjustedDate);
      if (newDisplayDate !== this.state.displayDate) {
        this.setDisplayDate(newDisplayDate, adjustedDate);
      } else {
        this.setState({
          selectedDate: adjustedDate
        });
      }
    }
  }, {
    key: 'getToolbarInteractions',
    value: function getToolbarInteractions() {
      return {
        prevMonth: this.props.utils.monthDiff(this.state.displayDate, this.getMinDate()) > 0,
        nextMonth: this.props.utils.monthDiff(this.state.displayDate, this.getMaxDate()) < 0
      };
    }
  }, {
    key: 'yearSelector',
    value: function yearSelector() {
      if (!this.props.disableYearSelection) {
        return _react2$1g.default.createElement(_CalendarYear2.default, {
          key: 'years',
          DateTimeFormat: this.props.DateTimeFormat,
          locale: this.props.locale,
          onClickYear: this.handleClickYear,
          selectedDate: this.state.selectedDate,
          minDate: this.getMinDate(),
          maxDate: this.getMaxDate(),
          utils: this.props.utils
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var prepareStyles = this.context.muiTheme.prepareStyles;
      var hideCalendarDate = this.props.hideCalendarDate;

      var toolbarInteractions = this.getToolbarInteractions();
      var isLandscape = this.props.mode === 'landscape';
      var calendarTextColor = this.context.muiTheme.datePicker.calendarTextColor;


      var styles = {
        root: {
          color: calendarTextColor,
          userSelect: 'none',
          width: !hideCalendarDate && isLandscape ? 479 : 310
        },
        calendar: {
          display: 'flex',
          flexDirection: 'column'
        },
        calendarContainer: {
          display: 'flex',
          alignContent: 'space-between',
          justifyContent: 'space-between',
          flexDirection: 'column',
          fontSize: 12,
          fontWeight: 400,
          padding: '0px 8px',
          transition: _transitions2$q.default.easeOut()
        },
        yearContainer: {
          display: 'flex',
          justifyContent: 'space-between',
          flexDirection: 'column',
          height: 272,
          marginTop: 10,
          overflow: 'hidden',
          width: 310
        },
        weekTitle: {
          display: 'flex',
          flexDirection: 'row',
          justifyContent: 'space-between',
          fontWeight: '500',
          height: 20,
          lineHeight: '15px',
          opacity: '0.5',
          textAlign: 'center'
        },
        weekTitleDay: {
          width: 42
        },
        transitionSlide: {
          height: 214
        }
      };

      var weekTitleDayStyle = prepareStyles(styles.weekTitleDay);

      var _props = this.props,
          cancelLabel = _props.cancelLabel,
          DateTimeFormat = _props.DateTimeFormat,
          firstDayOfWeek = _props.firstDayOfWeek,
          locale = _props.locale,
          okLabel = _props.okLabel,
          onClickCancel = _props.onClickCancel,
          onClickOk = _props.onClickOk,
          utils = _props.utils;


      return _react2$1g.default.createElement(
        'div',
        { style: prepareStyles(styles.root) },
        _react2$1g.default.createElement(_reactEventListener2$7.default, {
          target: 'window',
          onKeyDown: this.handleWindowKeyDown
        }),
        !hideCalendarDate && _react2$1g.default.createElement(_DateDisplay2.default, {
          DateTimeFormat: DateTimeFormat,
          disableYearSelection: this.props.disableYearSelection,
          onClickMonthDay: this.handleClickDateDisplayMonthDay,
          onClickYear: this.handleClickDateDisplayYear,
          locale: locale,
          monthDaySelected: this.state.displayMonthDay,
          mode: this.props.mode,
          selectedDate: this.state.selectedDate
        }),
        _react2$1g.default.createElement(
          'div',
          { style: prepareStyles(styles.calendar) },
          this.state.displayMonthDay && _react2$1g.default.createElement(
            'div',
            { style: prepareStyles(styles.calendarContainer) },
            _react2$1g.default.createElement(_CalendarToolbar2.default, {
              DateTimeFormat: DateTimeFormat,
              locale: locale,
              displayDate: this.state.displayDate,
              onMonthChange: this.handleMonthChange,
              prevMonth: toolbarInteractions.prevMonth,
              nextMonth: toolbarInteractions.nextMonth
            }),
            _react2$1g.default.createElement(
              'div',
              { style: prepareStyles(styles.weekTitle) },
              daysArray.map(function (event, i) {
                return _react2$1g.default.createElement(
                  'span',
                  { key: i, style: weekTitleDayStyle },
                  (0, _dateUtils$2.localizedWeekday)(DateTimeFormat, locale, i, firstDayOfWeek)
                );
              })
            ),
            _react2$1g.default.createElement(
              _SlideIn2.default,
              { direction: this.state.transitionDirection, style: styles.transitionSlide },
              _react2$1g.default.createElement(_CalendarMonth2.default, {
                DateTimeFormat: DateTimeFormat,
                locale: locale,
                displayDate: this.state.displayDate,
                firstDayOfWeek: this.props.firstDayOfWeek,
                key: this.state.displayDate.toDateString(),
                minDate: this.getMinDate(),
                maxDate: this.getMaxDate(),
                onClickDay: this.handleClickDay,
                ref: function ref(_ref2) {
                  return _this2.calendarRefs.calendar = _ref2;
                },
                selectedDate: this.state.selectedDate,
                shouldDisableDate: this.props.shouldDisableDate,
                utils: utils
              })
            )
          ),
          !this.state.displayMonthDay && _react2$1g.default.createElement(
            'div',
            { style: prepareStyles(styles.yearContainer) },
            this.yearSelector()
          ),
          okLabel && _react2$1g.default.createElement(_CalendarActionButtons2.default, {
            autoOk: this.props.autoOk,
            cancelLabel: cancelLabel,
            okLabel: okLabel,
            onClickCancel: onClickCancel,
            onClickOk: onClickOk
          })
        )
      );
    }
  }]);
  return Calendar;
}(_react$1j.Component);

Calendar.defaultProps = {
  DateTimeFormat: _dateUtils$2.dateTimeFormat,
  disableYearSelection: false,
  initialDate: new Date(),
  locale: 'en-US',
  utils: _dateUtils$2.defaultUtils
};
Calendar.contextTypes = {
  muiTheme: _propTypes2$19.default.object.isRequired
};
Calendar.propTypes = {
  DateTimeFormat: _propTypes2$19.default.func.isRequired,
  autoOk: _propTypes2$19.default.bool,
  cancelLabel: _propTypes2$19.default.node,
  disableYearSelection: _propTypes2$19.default.bool,
  firstDayOfWeek: _propTypes2$19.default.number,
  hideCalendarDate: _propTypes2$19.default.bool,
  initialDate: _propTypes2$19.default.object,
  locale: _propTypes2$19.default.string.isRequired,
  maxDate: _propTypes2$19.default.object,
  minDate: _propTypes2$19.default.object,
  mode: _propTypes2$19.default.oneOf(['portrait', 'landscape']),
  okLabel: _propTypes2$19.default.node,
  onClickCancel: _propTypes2$19.default.func,
  onClickDay: _propTypes2$19.default.func,
  onClickOk: _propTypes2$19.default.func,
  open: _propTypes2$19.default.bool,
  openToYearSelection: _propTypes2$19.default.bool,
  shouldDisableDate: _propTypes2$19.default.func,
  utils: _propTypes2$19.default.object
} ;
Calendar$1.default = Calendar;

var Dialog$2 = {};

var Dialog$1 = {};

var Overlay$1 = {};

var AutoLockScrolling$1 = {};

Object.defineProperty(AutoLockScrolling$1, "__esModule", {
  value: true
});

var _getPrototypeOf$10 = getPrototypeOf$1.exports;

var _getPrototypeOf2$10 = _interopRequireDefault$1V(_getPrototypeOf$10);

var _classCallCheck2$12 = classCallCheck$3;

var _classCallCheck3$12 = _interopRequireDefault$1V(_classCallCheck2$12);

var _createClass2$11 = createClass$2;

var _createClass3$11 = _interopRequireDefault$1V(_createClass2$11);

var _possibleConstructorReturn2$10 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$10 = _interopRequireDefault$1V(_possibleConstructorReturn2$10);

var _inherits2$10 = inherits$3;

var _inherits3$10 = _interopRequireDefault$1V(_inherits2$10);

var _react$1i = react;

var _propTypes$18 = propTypes$5.exports;

var _propTypes2$18 = _interopRequireDefault$1V(_propTypes$18);

function _interopRequireDefault$1V(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var originalBodyOverflow = null;
var lockingCounter = 0;

var AutoLockScrolling = function (_Component) {
  (0, _inherits3$10.default)(AutoLockScrolling, _Component);

  function AutoLockScrolling() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$12.default)(this, AutoLockScrolling);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$10.default)(this, (_ref = AutoLockScrolling.__proto__ || (0, _getPrototypeOf2$10.default)(AutoLockScrolling)).call.apply(_ref, [this].concat(args))), _this), _this.locked = false, _temp), (0, _possibleConstructorReturn3$10.default)(_this, _ret);
  }

  (0, _createClass3$11.default)(AutoLockScrolling, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.lock === true) {
        this.preventScrolling();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.lock !== nextProps.lock) {
        if (nextProps.lock) {
          this.preventScrolling();
        } else {
          this.allowScrolling();
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.allowScrolling();
    }

    // force to only lock/unlock once

  }, {
    key: 'preventScrolling',
    value: function preventScrolling() {
      if (this.locked === true) {
        return;
      }

      lockingCounter = lockingCounter + 1;
      this.locked = true;

      // only lock the first time the component is mounted.
      if (lockingCounter === 1) {
        var body = document.getElementsByTagName('body')[0];
        originalBodyOverflow = body.style.overflow;
        body.style.overflow = 'hidden';
      }
    }
  }, {
    key: 'allowScrolling',
    value: function allowScrolling() {
      if (this.locked === true) {
        lockingCounter = lockingCounter - 1;
        this.locked = false;
      }

      if (lockingCounter === 0 && originalBodyOverflow !== null) {
        var body = document.getElementsByTagName('body')[0];
        body.style.overflow = originalBodyOverflow || '';
        originalBodyOverflow = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return AutoLockScrolling;
}(_react$1i.Component);

AutoLockScrolling.propTypes = {
  lock: _propTypes2$18.default.bool.isRequired
} ;
AutoLockScrolling$1.default = AutoLockScrolling;

Object.defineProperty(Overlay$1, "__esModule", {
  value: true
});

var _extends2$P = _extends$3;

var _extends3$P = _interopRequireDefault$1U(_extends2$P);

var _objectWithoutProperties2$P = objectWithoutProperties$2;

var _objectWithoutProperties3$P = _interopRequireDefault$1U(_objectWithoutProperties2$P);

var _getPrototypeOf$$ = getPrototypeOf$1.exports;

var _getPrototypeOf2$$ = _interopRequireDefault$1U(_getPrototypeOf$$);

var _classCallCheck2$11 = classCallCheck$3;

var _classCallCheck3$11 = _interopRequireDefault$1U(_classCallCheck2$11);

var _createClass2$10 = createClass$2;

var _createClass3$10 = _interopRequireDefault$1U(_createClass2$10);

var _possibleConstructorReturn2$$ = possibleConstructorReturn$3;

var _possibleConstructorReturn3$$ = _interopRequireDefault$1U(_possibleConstructorReturn2$$);

var _inherits2$$ = inherits$3;

var _inherits3$$ = _interopRequireDefault$1U(_inherits2$$);

var _simpleAssign$_ = simpleAssign;

var _simpleAssign2$_ = _interopRequireDefault$1U(_simpleAssign$_);

var _react$1h = react;

var _react2$1f = _interopRequireDefault$1U(_react$1h);

var _propTypes$17 = propTypes$5.exports;

var _propTypes2$17 = _interopRequireDefault$1U(_propTypes$17);

var _transitions$p = transitions;

var _transitions2$p = _interopRequireDefault$1U(_transitions$p);

var _AutoLockScrolling = AutoLockScrolling$1;

var _AutoLockScrolling2 = _interopRequireDefault$1U(_AutoLockScrolling);

function _interopRequireDefault$1U(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$K(props, context) {
  var overlay = context.muiTheme.overlay;


  var style = {
    root: {
      position: 'fixed',
      height: '100%',
      width: '100%',
      top: 0,
      left: '-100%',
      opacity: 0,
      backgroundColor: overlay.backgroundColor,
      WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // Remove mobile color flashing (deprecated)

      // Two ways to promote overlay to its own render layer
      willChange: 'opacity',
      transform: 'translateZ(0)',

      transition: props.transitionEnabled && _transitions2$p.default.easeOut('0ms', 'left', '400ms') + ', ' + _transitions2$p.default.easeOut('400ms', 'opacity')
    }
  };

  if (props.show) {
    (0, _simpleAssign2$_.default)(style.root, {
      left: 0,
      opacity: 1,
      transition: _transitions2$p.default.easeOut('0ms', 'left') + ', ' + _transitions2$p.default.easeOut('400ms', 'opacity')
    });
  }

  return style;
}

var Overlay = function (_Component) {
  (0, _inherits3$$.default)(Overlay, _Component);

  function Overlay() {
    (0, _classCallCheck3$11.default)(this, Overlay);
    return (0, _possibleConstructorReturn3$$.default)(this, (Overlay.__proto__ || (0, _getPrototypeOf2$$.default)(Overlay)).apply(this, arguments));
  }

  (0, _createClass3$10.default)(Overlay, [{
    key: 'setOpacity',
    value: function setOpacity(opacity) {
      this.refs.overlay.style.opacity = opacity;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          autoLockScrolling = _props.autoLockScrolling,
          show = _props.show,
          style = _props.style;
          _props.transitionEnabled;
          var other = (0, _objectWithoutProperties3$P.default)(_props, ['autoLockScrolling', 'show', 'style', 'transitionEnabled']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$K(this.props, this.context);

      return _react2$1f.default.createElement(
        'div',
        (0, _extends3$P.default)({}, other, { ref: 'overlay', style: prepareStyles((0, _simpleAssign2$_.default)(styles.root, style)) }),
        autoLockScrolling && _react2$1f.default.createElement(_AutoLockScrolling2.default, { lock: show })
      );
    }
  }]);
  return Overlay;
}(_react$1h.Component);

Overlay.defaultProps = {
  autoLockScrolling: true,
  style: {},
  transitionEnabled: true
};
Overlay.contextTypes = {
  muiTheme: _propTypes2$17.default.object.isRequired
};
Overlay.propTypes = {
  autoLockScrolling: _propTypes2$17.default.bool,
  show: _propTypes2$17.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$17.default.object,
  transitionEnabled: _propTypes2$17.default.bool
} ;
Overlay$1.default = Overlay;

Object.defineProperty(Dialog$1, "__esModule", {
  value: true
});

var _extends2$O = _extends$3;

var _extends3$O = _interopRequireDefault$1T(_extends2$O);

var _objectWithoutProperties2$O = objectWithoutProperties$2;

var _objectWithoutProperties3$O = _interopRequireDefault$1T(_objectWithoutProperties2$O);

var _getPrototypeOf$_ = getPrototypeOf$1.exports;

var _getPrototypeOf2$_ = _interopRequireDefault$1T(_getPrototypeOf$_);

var _classCallCheck2$10 = classCallCheck$3;

var _classCallCheck3$10 = _interopRequireDefault$1T(_classCallCheck2$10);

var _createClass2$$ = createClass$2;

var _createClass3$$ = _interopRequireDefault$1T(_createClass2$$);

var _possibleConstructorReturn2$_ = possibleConstructorReturn$3;

var _possibleConstructorReturn3$_ = _interopRequireDefault$1T(_possibleConstructorReturn2$_);

var _inherits2$_ = inherits$3;

var _inherits3$_ = _interopRequireDefault$1T(_inherits2$_);

var _simpleAssign$Z = simpleAssign;

var _simpleAssign2$Z = _interopRequireDefault$1T(_simpleAssign$Z);

var _react$1g = react;

var _react2$1e = _interopRequireDefault$1T(_react$1g);

var _propTypes$16 = propTypes$5.exports;

var _propTypes2$16 = _interopRequireDefault$1T(_propTypes$16);

var _reactDom$b = reactDom;

var _reactDom2$b = _interopRequireDefault$1T(_reactDom$b);

var _reactEventListener$6 = reactEventListener_cjs;

var _reactEventListener2$6 = _interopRequireDefault$1T(_reactEventListener$6);

var _keycode$7 = keycode.exports;

var _keycode2$7 = _interopRequireDefault$1T(_keycode$7);

var _transitions$o = transitions;

var _transitions2$o = _interopRequireDefault$1T(_transitions$o);

var _Overlay$1 = Overlay$1;

var _Overlay2$1 = _interopRequireDefault$1T(_Overlay$1);

var _RenderToLayer$1 = RenderToLayer$1;

var _RenderToLayer2$1 = _interopRequireDefault$1T(_RenderToLayer$1);

var _Paper$7 = Paper$2;

var _Paper2$7 = _interopRequireDefault$1T(_Paper$7);

var _TransitionGroup$1 = TransitionGroup.exports;

var _TransitionGroup2$1 = _interopRequireDefault$1T(_TransitionGroup$1);

function _interopRequireDefault$1T(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TransitionItem = function (_Component) {
  (0, _inherits3$_.default)(TransitionItem, _Component);

  function TransitionItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$10.default)(this, TransitionItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$_.default)(this, (_ref = TransitionItem.__proto__ || (0, _getPrototypeOf2$_.default)(TransitionItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      style: {}
    }, _temp), (0, _possibleConstructorReturn3$_.default)(_this, _ret);
  }

  (0, _createClass3$$.default)(TransitionItem, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimeout);
      clearTimeout(this.leaveTimeout);
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      this.componentWillAppear(callback);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      var spacing = this.context.muiTheme.baseTheme.spacing;

      this.setState({
        style: {
          opacity: 1,
          transform: 'translate(0, ' + spacing.desktopKeylineIncrement + 'px)'
        }
      });

      this.enterTimeout = setTimeout(callback, 450); // matches transition duration
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      this.setState({
        style: {
          opacity: 0,
          transform: 'translate(0, 0)'
        }
      });

      this.leaveTimeout = setTimeout(callback, 450); // matches transition duration
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          children = _props.children,
          other = (0, _objectWithoutProperties3$O.default)(_props, ['style', 'children']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      return _react2$1e.default.createElement(
        'div',
        (0, _extends3$O.default)({}, other, { style: prepareStyles((0, _simpleAssign2$Z.default)({}, this.state.style, style)) }),
        children
      );
    }
  }]);
  return TransitionItem;
}(_react$1g.Component);

TransitionItem.contextTypes = {
  muiTheme: _propTypes2$16.default.object.isRequired
};
TransitionItem.propTypes = {
  children: _propTypes2$16.default.node,
  style: _propTypes2$16.default.object
} ;


function getStyles$J(props, context) {
  var autoScrollBodyContent = props.autoScrollBodyContent,
      open = props.open;
  var _context$muiTheme = context.muiTheme,
      _context$muiTheme$bas = _context$muiTheme.baseTheme,
      spacing = _context$muiTheme$bas.spacing,
      palette = _context$muiTheme$bas.palette,
      dialog = _context$muiTheme.dialog,
      zIndex = _context$muiTheme.zIndex;


  var gutter = spacing.desktopGutter;
  var borderScroll = '1px solid ' + palette.borderColor;

  return {
    root: {
      position: 'fixed',
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      zIndex: zIndex.dialog,
      top: 0,
      left: open ? 0 : -10000,
      width: '100%',
      height: '100%',
      transition: open ? _transitions2$o.default.easeOut('0ms', 'left', '0ms') : _transitions2$o.default.easeOut('0ms', 'left', '450ms')
    },
    content: {
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      transition: _transitions2$o.default.easeOut(),
      position: 'relative',
      width: '75%',
      maxWidth: spacing.desktopKeylineIncrement * 12,
      margin: '0 auto',
      zIndex: zIndex.dialog
    },
    actionsContainer: {
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      padding: 8,
      width: '100%',
      textAlign: 'right',
      marginTop: autoScrollBodyContent ? -1 : 0
    },
    overlay: {
      zIndex: zIndex.dialogOverlay
    },
    title: {
      margin: 0,
      padding: gutter + 'px ' + gutter + 'px 20px ' + gutter + 'px',
      color: palette.textColor,
      fontSize: dialog.titleFontSize,
      lineHeight: '32px',
      fontWeight: 400,
      marginBottom: autoScrollBodyContent ? -1 : 0
    },
    body: {
      fontSize: dialog.bodyFontSize,
      color: dialog.bodyColor,
      padding: (props.title ? 0 : gutter) + 'px ' + gutter + 'px ' + gutter + 'px',
      boxSizing: 'border-box',
      overflowY: autoScrollBodyContent ? 'auto' : 'hidden',
      borderTop: autoScrollBodyContent ? borderScroll : 'none',
      borderBottom: autoScrollBodyContent ? borderScroll : 'none'
    }
  };
}

var DialogInline = function (_Component2) {
  (0, _inherits3$_.default)(DialogInline, _Component2);

  function DialogInline() {
    var _ref2;

    var _temp2, _this2, _ret2;

    (0, _classCallCheck3$10.default)(this, DialogInline);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this2 = (0, _possibleConstructorReturn3$_.default)(this, (_ref2 = DialogInline.__proto__ || (0, _getPrototypeOf2$_.default)(DialogInline)).call.apply(_ref2, [this].concat(args))), _this2), _this2.handleClickOverlay = function () {
      _this2.requestClose(false);
    }, _this2.handleKeyUp = function (event) {
      if ((0, _keycode2$7.default)(event) === 'esc') {
        _this2.requestClose(false);
      }
    }, _this2.handleResize = function () {
      _this2.positionDialog();
    }, _temp2), (0, _possibleConstructorReturn3$_.default)(_this2, _ret2);
  }

  (0, _createClass3$$.default)(DialogInline, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.positionDialog();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.positionDialog();
    }
  }, {
    key: 'positionDialog',
    value: function positionDialog() {
      var _props2 = this.props,
          actions = _props2.actions,
          autoDetectWindowHeight = _props2.autoDetectWindowHeight,
          autoScrollBodyContent = _props2.autoScrollBodyContent,
          bodyStyle = _props2.bodyStyle,
          open = _props2.open,
          repositionOnUpdate = _props2.repositionOnUpdate,
          title = _props2.title;


      if (!open) {
        return;
      }

      var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var container = _reactDom2$b.default.findDOMNode(this);
      var dialogWindow = _reactDom2$b.default.findDOMNode(this.refs.dialogWindow);
      var dialogContent = _reactDom2$b.default.findDOMNode(this.refs.dialogContent);
      var minPaddingTop = 16;

      // Reset the height in case the window was resized.
      dialogWindow.style.height = '';
      dialogContent.style.height = '';

      var dialogWindowHeight = dialogWindow.offsetHeight;
      var paddingTop = (clientHeight - dialogWindowHeight) / 2 - 64;
      if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;

      // Vertically center the dialog window, but make sure it doesn't
      // transition to that position.
      if (repositionOnUpdate || !container.style.paddingTop) {
        container.style.paddingTop = paddingTop + 'px';
      }

      // Force a height if the dialog is taller than clientHeight
      if (autoDetectWindowHeight || autoScrollBodyContent) {
        var styles = getStyles$J(this.props, this.context);
        styles.body = (0, _simpleAssign2$Z.default)(styles.body, bodyStyle);
        var maxDialogContentHeight = clientHeight - 2 * 64;

        if (title) maxDialogContentHeight -= dialogContent.previousSibling.offsetHeight;

        if (_react2$1e.default.Children.count(actions)) {
          maxDialogContentHeight -= dialogContent.nextSibling.offsetHeight;
        }

        dialogContent.style.maxHeight = maxDialogContentHeight + 'px';
        if (maxDialogContentHeight > dialogWindowHeight) {
          dialogContent.style.borderBottom = 'none';
          dialogContent.style.borderTop = 'none';
        }
      }
    }
  }, {
    key: 'requestClose',
    value: function requestClose(buttonClicked) {
      if (!buttonClicked && this.props.modal) {
        return;
      }

      if (this.props.onRequestClose) {
        this.props.onRequestClose(!!buttonClicked);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          actions = _props3.actions,
          actionsContainerClassName = _props3.actionsContainerClassName,
          actionsContainerStyle = _props3.actionsContainerStyle,
          bodyClassName = _props3.bodyClassName,
          bodyStyle = _props3.bodyStyle,
          children = _props3.children,
          className = _props3.className,
          contentClassName = _props3.contentClassName,
          contentStyle = _props3.contentStyle,
          overlayClassName = _props3.overlayClassName,
          overlayStyle = _props3.overlayStyle,
          open = _props3.open,
          paperClassName = _props3.paperClassName,
          paperProps = _props3.paperProps,
          style = _props3.style,
          titleClassName = _props3.titleClassName,
          titleStyle = _props3.titleStyle,
          title = _props3.title;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$J(this.props, this.context);

      styles.root = (0, _simpleAssign2$Z.default)(styles.root, style);
      styles.content = (0, _simpleAssign2$Z.default)(styles.content, contentStyle);
      styles.body = (0, _simpleAssign2$Z.default)(styles.body, bodyStyle);
      styles.actionsContainer = (0, _simpleAssign2$Z.default)(styles.actionsContainer, actionsContainerStyle);
      styles.overlay = (0, _simpleAssign2$Z.default)(styles.overlay, overlayStyle);
      styles.title = (0, _simpleAssign2$Z.default)(styles.title, titleStyle);

      var actionsContainer = _react2$1e.default.Children.count(actions) > 0 && _react2$1e.default.createElement(
        'div',
        { className: actionsContainerClassName, style: prepareStyles(styles.actionsContainer) },
        _react2$1e.default.Children.toArray(actions)
      );

      var titleElement = title;
      if (_react2$1e.default.isValidElement(title)) {
        titleElement = _react2$1e.default.cloneElement(title, {
          className: title.props.className || titleClassName,
          style: prepareStyles((0, _simpleAssign2$Z.default)(styles.title, title.props.style))
        });
      } else if (typeof title === 'string') {
        titleElement = _react2$1e.default.createElement(
          'h3',
          { className: titleClassName, style: prepareStyles(styles.title) },
          title
        );
      }

      return _react2$1e.default.createElement(
        'div',
        { className: className, style: prepareStyles(styles.root) },
        open && _react2$1e.default.createElement(_reactEventListener2$6.default, {
          target: 'window',
          onKeyUp: this.handleKeyUp,
          onResize: this.handleResize
        }),
        _react2$1e.default.createElement(
          _TransitionGroup2$1.default,
          {
            component: 'div',
            ref: 'dialogWindow',
            transitionAppear: true,
            transitionAppearTimeout: 450,
            transitionEnter: true,
            transitionEnterTimeout: 450
          },
          open && _react2$1e.default.createElement(
            TransitionItem,
            {
              className: contentClassName,
              style: styles.content
            },
            _react2$1e.default.createElement(
              _Paper2$7.default,
              (0, _extends3$O.default)({ className: paperClassName, zDepth: 4 }, paperProps),
              titleElement,
              _react2$1e.default.createElement(
                'div',
                {
                  ref: 'dialogContent',
                  className: bodyClassName,
                  style: prepareStyles(styles.body)
                },
                children
              ),
              actionsContainer
            )
          )
        ),
        _react2$1e.default.createElement(_Overlay2$1.default, {
          show: open,
          className: overlayClassName,
          style: styles.overlay,
          onClick: this.handleClickOverlay
        })
      );
    }
  }]);
  return DialogInline;
}(_react$1g.Component);

DialogInline.contextTypes = {
  muiTheme: _propTypes2$16.default.object.isRequired
};
DialogInline.propTypes = {
  actions: _propTypes2$16.default.node,
  actionsContainerClassName: _propTypes2$16.default.string,
  actionsContainerStyle: _propTypes2$16.default.object,
  autoDetectWindowHeight: _propTypes2$16.default.bool,
  autoScrollBodyContent: _propTypes2$16.default.bool,
  bodyClassName: _propTypes2$16.default.string,
  bodyStyle: _propTypes2$16.default.object,
  children: _propTypes2$16.default.node,
  className: _propTypes2$16.default.string,
  contentClassName: _propTypes2$16.default.string,
  contentStyle: _propTypes2$16.default.object,
  modal: _propTypes2$16.default.bool,
  onRequestClose: _propTypes2$16.default.func,
  open: _propTypes2$16.default.bool.isRequired,
  overlayClassName: _propTypes2$16.default.string,
  overlayStyle: _propTypes2$16.default.object,
  paperClassName: _propTypes2$16.default.string,
  paperProps: _propTypes2$16.default.object,
  repositionOnUpdate: _propTypes2$16.default.bool,
  style: _propTypes2$16.default.object,
  title: _propTypes2$16.default.node,
  titleClassName: _propTypes2$16.default.string,
  titleStyle: _propTypes2$16.default.object
} ;

var Dialog = function (_Component3) {
  (0, _inherits3$_.default)(Dialog, _Component3);

  function Dialog() {
    var _ref3;

    var _temp3, _this3, _ret3;

    (0, _classCallCheck3$10.default)(this, Dialog);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret3 = (_temp3 = (_this3 = (0, _possibleConstructorReturn3$_.default)(this, (_ref3 = Dialog.__proto__ || (0, _getPrototypeOf2$_.default)(Dialog)).call.apply(_ref3, [this].concat(args))), _this3), _this3.renderLayer = function () {
      return _react2$1e.default.createElement(DialogInline, _this3.props);
    }, _temp3), (0, _possibleConstructorReturn3$_.default)(_this3, _ret3);
  }

  (0, _createClass3$$.default)(Dialog, [{
    key: 'render',
    value: function render() {
      return _react2$1e.default.createElement(_RenderToLayer2$1.default, { render: this.renderLayer, open: true, useLayerForClickAway: false });
    }
  }]);
  return Dialog;
}(_react$1g.Component);

Dialog.contextTypes = {
  muiTheme: _propTypes2$16.default.object.isRequired
};
Dialog.defaultProps = {
  autoDetectWindowHeight: true,
  autoScrollBodyContent: false,
  modal: false,
  repositionOnUpdate: true
};
Dialog.propTypes = {
  /**
   * Action buttons to display below the Dialog content (`children`).
   * This property accepts either a React element, or an array of React elements.
   */
  actions: _propTypes2$16.default.node,
  /**
   * The `className` to add to the actions container's root element.
   */
  actionsContainerClassName: _propTypes2$16.default.string,
  /**
   * Overrides the inline-styles of the actions container's root element.
   */
  actionsContainerStyle: _propTypes2$16.default.object,
  /**
   * If set to true, the height of the `Dialog` will be auto detected. A max height
   * will be enforced so that the content does not extend beyond the viewport.
   */
  autoDetectWindowHeight: _propTypes2$16.default.bool,
  /**
   * If set to true, the body content of the `Dialog` will be scrollable.
   */
  autoScrollBodyContent: _propTypes2$16.default.bool,
  /**
   * The `className` to add to the content's root element under the title.
   */
  bodyClassName: _propTypes2$16.default.string,
  /**
   * Overrides the inline-styles of the content's root element under the title.
   */
  bodyStyle: _propTypes2$16.default.object,
  /**
   * The contents of the `Dialog`.
   */
  children: _propTypes2$16.default.node,
  /**
   * @ignore
   */
  className: _propTypes2$16.default.string,
  /**
   * The `className` to add to the content container.
   */
  contentClassName: _propTypes2$16.default.string,
  /**
   * Overrides the inline-styles of the content container.
   */
  contentStyle: _propTypes2$16.default.object,
  /**
   * Force the user to use one of the actions in the `Dialog`.
   * Clicking outside the `Dialog` will not trigger the `onRequestClose`.
   */
  modal: _propTypes2$16.default.bool,
  /**
   * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.
   *
   * @param {bool} buttonClicked Determines whether a button click triggered this request.
   */
  onRequestClose: _propTypes2$16.default.func,
  /**
   * Controls whether the Dialog is opened or not.
   */
  open: _propTypes2$16.default.bool.isRequired,
  /**
   * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.
   */
  overlayClassName: _propTypes2$16.default.string,
  /**
   * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.
   */
  overlayStyle: _propTypes2$16.default.object,
  /**
   * The CSS class name of the `Paper` element.
   */
  paperClassName: _propTypes2$16.default.string,
  /**
   * Properties applied to the `Paper` element.
   */
  paperProps: _propTypes2$16.default.object,
  /**
   * Determines whether the `Dialog` should be repositioned when it's contents are updated.
   */
  repositionOnUpdate: _propTypes2$16.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$16.default.object,
  /**
   * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.
   */
  title: _propTypes2$16.default.node,
  /**
   * The `className` to add to the title's root container element.
   */
  titleClassName: _propTypes2$16.default.string,
  /**
   * Overrides the inline-styles of the title's root container element.
   */
  titleStyle: _propTypes2$16.default.object
} ;
Dialog$1.default = Dialog;

Object.defineProperty(Dialog$2, "__esModule", {
  value: true
});
Dialog$2.default = undefined;

var _Dialog$2 = Dialog$1;

var _Dialog2$2 = _interopRequireDefault$1S(_Dialog$2);

function _interopRequireDefault$1S(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Dialog$2.default = _Dialog2$2.default;

var PopoverAnimationVertical$3 = {};

Object.defineProperty(PopoverAnimationVertical$3, "__esModule", {
  value: true
});

var _getPrototypeOf$Z = getPrototypeOf$1.exports;

var _getPrototypeOf2$Z = _interopRequireDefault$1R(_getPrototypeOf$Z);

var _classCallCheck2$$ = classCallCheck$3;

var _classCallCheck3$$ = _interopRequireDefault$1R(_classCallCheck2$$);

var _createClass2$_ = createClass$2;

var _createClass3$_ = _interopRequireDefault$1R(_createClass2$_);

var _possibleConstructorReturn2$Z = possibleConstructorReturn$3;

var _possibleConstructorReturn3$Z = _interopRequireDefault$1R(_possibleConstructorReturn2$Z);

var _inherits2$Z = inherits$3;

var _inherits3$Z = _interopRequireDefault$1R(_inherits2$Z);

var _simpleAssign$Y = simpleAssign;

var _simpleAssign2$Y = _interopRequireDefault$1R(_simpleAssign$Y);

var _react$1f = react;

var _react2$1d = _interopRequireDefault$1R(_react$1f);

var _propTypes$15 = propTypes$5.exports;

var _propTypes2$15 = _interopRequireDefault$1R(_propTypes$15);

var _Paper$6 = Paper$2;

var _Paper2$6 = _interopRequireDefault$1R(_Paper$6);

var _transitions$n = transitions;

var _transitions2$n = _interopRequireDefault$1R(_transitions$n);

var _propTypes3$a = propTypes$3;

var _propTypes4$a = _interopRequireDefault$1R(_propTypes3$a);

function _interopRequireDefault$1R(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$I(props, context, state) {
  var targetOrigin = props.targetOrigin;
  var open = state.open;
  var muiTheme = context.muiTheme;

  var horizontal = targetOrigin.horizontal.replace('middle', 'center');

  return {
    root: {
      position: 'fixed',
      zIndex: muiTheme.zIndex.popover,
      opacity: open ? 1 : 0,
      transform: open ? 'scaleY(1)' : 'scaleY(0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$n.default.easeOut('450ms', ['transform', 'opacity']),
      maxHeight: '100%'
    }
  };
}

var PopoverAnimationVertical$2 = function (_Component) {
  (0, _inherits3$Z.default)(PopoverAnimationVertical, _Component);

  function PopoverAnimationVertical() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$$.default)(this, PopoverAnimationVertical);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$Z.default)(this, (_ref = PopoverAnimationVertical.__proto__ || (0, _getPrototypeOf2$Z.default)(PopoverAnimationVertical)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _temp), (0, _possibleConstructorReturn3$Z.default)(_this, _ret);
  }

  (0, _createClass3$_.default)(PopoverAnimationVertical, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        open: nextProps.open
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          zDepth = _props.zDepth;


      var styles = getStyles$I(this.props, this.context, this.state);

      return _react2$1d.default.createElement(
        _Paper2$6.default,
        {
          style: (0, _simpleAssign2$Y.default)(styles.root, style),
          zDepth: zDepth,
          className: className
        },
        this.props.children
      );
    }
  }]);
  return PopoverAnimationVertical;
}(_react$1f.Component);

PopoverAnimationVertical$2.defaultProps = {
  style: {},
  zDepth: 1
};
PopoverAnimationVertical$2.contextTypes = {
  muiTheme: _propTypes2$15.default.object.isRequired
};
PopoverAnimationVertical$2.propTypes = {
  children: _propTypes2$15.default.node,
  className: _propTypes2$15.default.string,
  open: _propTypes2$15.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$15.default.object,
  targetOrigin: _propTypes4$a.default.origin.isRequired,
  zDepth: _propTypes4$a.default.zDepth
} ;
PopoverAnimationVertical$3.default = PopoverAnimationVertical$2;

Object.defineProperty(DatePickerDialog$1, "__esModule", {
  value: true
});

var _extends2$N = _extends$3;

var _extends3$N = _interopRequireDefault$1Q(_extends2$N);

var _objectWithoutProperties2$N = objectWithoutProperties$2;

var _objectWithoutProperties3$N = _interopRequireDefault$1Q(_objectWithoutProperties2$N);

var _getPrototypeOf$Y = getPrototypeOf$1.exports;

var _getPrototypeOf2$Y = _interopRequireDefault$1Q(_getPrototypeOf$Y);

var _classCallCheck2$_ = classCallCheck$3;

var _classCallCheck3$_ = _interopRequireDefault$1Q(_classCallCheck2$_);

var _createClass2$Z = createClass$2;

var _createClass3$Z = _interopRequireDefault$1Q(_createClass2$Z);

var _possibleConstructorReturn2$Y = possibleConstructorReturn$3;

var _possibleConstructorReturn3$Y = _interopRequireDefault$1Q(_possibleConstructorReturn2$Y);

var _inherits2$Y = inherits$3;

var _inherits3$Y = _interopRequireDefault$1Q(_inherits2$Y);

var _simpleAssign$X = simpleAssign;

var _simpleAssign2$X = _interopRequireDefault$1Q(_simpleAssign$X);

var _react$1e = react;

var _react2$1c = _interopRequireDefault$1Q(_react$1e);

var _propTypes$14 = propTypes$5.exports;

var _propTypes2$14 = _interopRequireDefault$1Q(_propTypes$14);

var _reactEventListener$5 = reactEventListener_cjs;

var _reactEventListener2$5 = _interopRequireDefault$1Q(_reactEventListener$5);

var _keycode$6 = keycode.exports;

var _keycode2$6 = _interopRequireDefault$1Q(_keycode$6);

var _Calendar = Calendar$1;

var _Calendar2 = _interopRequireDefault$1Q(_Calendar);

var _Dialog$1 = Dialog$2;

var _Dialog2$1 = _interopRequireDefault$1Q(_Dialog$1);

var _Popover$4 = Popover$5;

var _Popover2$6 = _interopRequireDefault$1Q(_Popover$4);

var _PopoverAnimationVertical$1 = PopoverAnimationVertical$3;

var _PopoverAnimationVertical2$3 = _interopRequireDefault$1Q(_PopoverAnimationVertical$1);

var _dateUtils$1 = dateUtils;

function _interopRequireDefault$1Q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DatePickerDialog = function (_Component) {
  (0, _inherits3$Y.default)(DatePickerDialog, _Component);

  function DatePickerDialog() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$_.default)(this, DatePickerDialog);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$Y.default)(this, (_ref = DatePickerDialog.__proto__ || (0, _getPrototypeOf2$Y.default)(DatePickerDialog)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.show = function () {
      if (_this.props.onShow && !_this.state.open) {
        _this.props.onShow();
      }

      _this.setState({
        open: true
      });
    }, _this.dismiss = function () {
      if (_this.props.onDismiss && _this.state.open) {
        _this.props.onDismiss();
      }

      _this.setState({
        open: false
      });
    }, _this.handleClickDay = function () {
      if (_this.props.autoOk) {
        setTimeout(_this.handleClickOk, 300);
      }
    }, _this.handleClickCancel = function () {
      _this.dismiss();
    }, _this.handleRequestClose = function () {
      _this.dismiss();
    }, _this.handleClickOk = function () {
      if (_this.props.onAccept && !_this.refs.calendar.isSelectedDateDisabled()) {
        _this.props.onAccept(_this.refs.calendar.getSelectedDate());
      }

      _this.setState({
        open: false
      });
    }, _this.handleWindowKeyUp = function (event) {
      switch ((0, _keycode2$6.default)(event)) {
        case 'enter':
          _this.handleClickOk();
          break;
      }
    }, _temp), (0, _possibleConstructorReturn3$Y.default)(_this, _ret);
  }

  (0, _createClass3$Z.default)(DatePickerDialog, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          autoOk = _props.autoOk,
          cancelLabel = _props.cancelLabel,
          container = _props.container,
          containerStyle = _props.containerStyle,
          disableYearSelection = _props.disableYearSelection,
          initialDate = _props.initialDate,
          firstDayOfWeek = _props.firstDayOfWeek,
          locale = _props.locale,
          maxDate = _props.maxDate,
          minDate = _props.minDate,
          mode = _props.mode,
          okLabel = _props.okLabel;
          _props.onAccept;
          _props.onDismiss;
          _props.onShow;
          var openToYearSelection = _props.openToYearSelection,
          shouldDisableDate = _props.shouldDisableDate,
          hideCalendarDate = _props.hideCalendarDate;
          _props.style;
          var animation = _props.animation,
          utils = _props.utils,
          other = (0, _objectWithoutProperties3$N.default)(_props, ['DateTimeFormat', 'autoOk', 'cancelLabel', 'container', 'containerStyle', 'disableYearSelection', 'initialDate', 'firstDayOfWeek', 'locale', 'maxDate', 'minDate', 'mode', 'okLabel', 'onAccept', 'onDismiss', 'onShow', 'openToYearSelection', 'shouldDisableDate', 'hideCalendarDate', 'style', 'animation', 'utils']);
      var open = this.state.open;


      var styles = {
        dialogContent: {
          width: !hideCalendarDate && mode === 'landscape' ? 479 : 310
        },
        dialogBodyContent: {
          padding: 0,
          minHeight: hideCalendarDate || mode === 'landscape' ? 330 : 434,
          minWidth: hideCalendarDate || mode !== 'landscape' ? 310 : 479
        }
      };

      var Container = container === 'inline' ? _Popover2$6.default : _Dialog2$1.default;

      return _react2$1c.default.createElement(
        'div',
        (0, _extends3$N.default)({}, other, { ref: 'root' }),
        _react2$1c.default.createElement(
          Container,
          {
            anchorEl: this.refs.root // For Popover
            , animation: animation || _PopoverAnimationVertical2$3.default // For Popover
            , bodyStyle: styles.dialogBodyContent,
            contentStyle: styles.dialogContent,
            ref: 'dialog',
            repositionOnUpdate: true,
            open: open,
            onRequestClose: this.handleRequestClose,
            style: (0, _simpleAssign2$X.default)(styles.dialogBodyContent, containerStyle)
          },
          _react2$1c.default.createElement(_reactEventListener2$5.default, {
            target: 'window',
            onKeyUp: this.handleWindowKeyUp
          }),
          _react2$1c.default.createElement(_Calendar2.default, {
            autoOk: autoOk,
            DateTimeFormat: DateTimeFormat,
            cancelLabel: cancelLabel,
            disableYearSelection: disableYearSelection,
            firstDayOfWeek: firstDayOfWeek,
            initialDate: initialDate,
            locale: locale,
            onClickDay: this.handleClickDay,
            maxDate: maxDate,
            minDate: minDate,
            mode: mode,
            open: open,
            ref: 'calendar',
            onClickCancel: this.handleClickCancel,
            onClickOk: this.handleClickOk,
            okLabel: okLabel,
            openToYearSelection: openToYearSelection,
            shouldDisableDate: shouldDisableDate,
            hideCalendarDate: hideCalendarDate,
            utils: utils
          })
        )
      );
    }
  }]);
  return DatePickerDialog;
}(_react$1e.Component);

DatePickerDialog.defaultProps = {
  DateTimeFormat: _dateUtils$1.dateTimeFormat,
  cancelLabel: 'Cancel',
  container: 'dialog',
  locale: 'en-US',
  okLabel: 'OK',
  openToYearSelection: false
};
DatePickerDialog.contextTypes = {
  muiTheme: _propTypes2$14.default.object.isRequired
};
DatePickerDialog.propTypes = {
  DateTimeFormat: _propTypes2$14.default.func,
  animation: _propTypes2$14.default.func,
  autoOk: _propTypes2$14.default.bool,
  cancelLabel: _propTypes2$14.default.node,
  container: _propTypes2$14.default.oneOf(['dialog', 'inline']),
  containerStyle: _propTypes2$14.default.object,
  disableYearSelection: _propTypes2$14.default.bool,
  firstDayOfWeek: _propTypes2$14.default.number,
  hideCalendarDate: _propTypes2$14.default.bool,
  initialDate: _propTypes2$14.default.object,
  locale: _propTypes2$14.default.string,
  maxDate: _propTypes2$14.default.object,
  minDate: _propTypes2$14.default.object,
  mode: _propTypes2$14.default.oneOf(['portrait', 'landscape']),
  okLabel: _propTypes2$14.default.node,
  onAccept: _propTypes2$14.default.func,
  onDismiss: _propTypes2$14.default.func,
  onShow: _propTypes2$14.default.func,
  open: _propTypes2$14.default.bool,
  openToYearSelection: _propTypes2$14.default.bool,
  shouldDisableDate: _propTypes2$14.default.func,
  style: _propTypes2$14.default.object,
  utils: _propTypes2$14.default.object
} ;
DatePickerDialog$1.default = DatePickerDialog;

Object.defineProperty(DatePicker$2, "__esModule", {
  value: true
});

var _extends2$M = _extends$3;

var _extends3$M = _interopRequireDefault$1P(_extends2$M);

var _objectWithoutProperties2$M = objectWithoutProperties$2;

var _objectWithoutProperties3$M = _interopRequireDefault$1P(_objectWithoutProperties2$M);

var _getPrototypeOf$X = getPrototypeOf$1.exports;

var _getPrototypeOf2$X = _interopRequireDefault$1P(_getPrototypeOf$X);

var _classCallCheck2$Z = classCallCheck$3;

var _classCallCheck3$Z = _interopRequireDefault$1P(_classCallCheck2$Z);

var _createClass2$Y = createClass$2;

var _createClass3$Y = _interopRequireDefault$1P(_createClass2$Y);

var _possibleConstructorReturn2$X = possibleConstructorReturn$3;

var _possibleConstructorReturn3$X = _interopRequireDefault$1P(_possibleConstructorReturn2$X);

var _inherits2$X = inherits$3;

var _inherits3$X = _interopRequireDefault$1P(_inherits2$X);

var _simpleAssign$W = simpleAssign;

var _simpleAssign2$W = _interopRequireDefault$1P(_simpleAssign$W);

var _react$1d = react;

var _react2$1b = _interopRequireDefault$1P(_react$1d);

var _propTypes$13 = propTypes$5.exports;

var _propTypes2$13 = _interopRequireDefault$1P(_propTypes$13);

var _dateUtils = dateUtils;

var _DatePickerDialog = DatePickerDialog$1;

var _DatePickerDialog2 = _interopRequireDefault$1P(_DatePickerDialog);

var _TextField$4 = TextField$6;

var _TextField2$4 = _interopRequireDefault$1P(_TextField$4);

function _interopRequireDefault$1P(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DatePicker$1 = function (_Component) {
  (0, _inherits3$X.default)(DatePicker, _Component);

  function DatePicker() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$Z.default)(this, DatePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$X.default)(this, (_ref = DatePicker.__proto__ || (0, _getPrototypeOf2$X.default)(DatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      date: undefined
    }, _this.handleAccept = function (date) {
      if (!_this.isControlled()) {
        _this.setState({
          date: date
        });
      }
      if (_this.props.onChange) {
        _this.props.onChange(null, date);
      }
    }, _this.handleFocus = function (event) {
      event.target.blur();
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event);
      }

      if (!_this.props.disabled) {
        setTimeout(function () {
          _this.openDialog();
        }, 0);
      }
    }, _this.formatDate = function (date) {
      if (_this.props.locale) {
        var DateTimeFormat = _this.props.DateTimeFormat || _dateUtils.dateTimeFormat;
        return new DateTimeFormat(_this.props.locale, {
          day: 'numeric',
          month: 'numeric',
          year: 'numeric'
        }).format(date);
      } else {
        return (0, _dateUtils.formatIso)(date);
      }
    }, _temp), (0, _possibleConstructorReturn3$X.default)(_this, _ret);
  }

  (0, _createClass3$Y.default)(DatePicker, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        date: this.isControlled() ? this.getControlledDate() : this.props.defaultDate
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.isControlled()) {
        var newDate = this.getControlledDate(nextProps);
        if (!(0, _dateUtils.isEqualDate)(this.state.date, newDate)) {
          this.setState({
            date: newDate
          });
        }
      }
    }
  }, {
    key: 'getDate',
    value: function getDate() {
      return this.state.date;
    }

    /**
     * Open the date-picker dialog programmatically from a parent.
     */

  }, {
    key: 'openDialog',
    value: function openDialog() {
      /**
       * if the date is not selected then set it to new date
       * (get the current system date while doing so)
       * else set it to the currently selected date
       */
      if (this.state.date !== undefined) {
        this.setState({
          dialogDate: this.getDate()
        }, this.refs.dialogWindow.show);
      } else {
        this.setState({
          dialogDate: new Date()
        }, this.refs.dialogWindow.show);
      }
    }

    /**
     * Alias for `openDialog()` for an api consistent with TextField.
     */

  }, {
    key: 'focus',
    value: function focus() {
      this.openDialog();
    }
  }, {
    key: 'isControlled',
    value: function isControlled() {
      return this.props.hasOwnProperty('value');
    }
  }, {
    key: 'getControlledDate',
    value: function getControlledDate() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

      if (props.value instanceof Date) {
        return props.value;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          DateTimeFormat = _props.DateTimeFormat,
          autoOk = _props.autoOk,
          cancelLabel = _props.cancelLabel,
          className = _props.className,
          container = _props.container;
          _props.defaultDate;
          var dialogContainerStyle = _props.dialogContainerStyle,
          disableYearSelection = _props.disableYearSelection,
          firstDayOfWeek = _props.firstDayOfWeek,
          formatDateProp = _props.formatDate,
          locale = _props.locale,
          maxDate = _props.maxDate,
          minDate = _props.minDate,
          mode = _props.mode,
          okLabel = _props.okLabel,
          onDismiss = _props.onDismiss;
          _props.onFocus;
          var onShow = _props.onShow;
          _props.onClick;
          var openToYearSelection = _props.openToYearSelection,
          shouldDisableDate = _props.shouldDisableDate,
          hideCalendarDate = _props.hideCalendarDate,
          style = _props.style,
          textFieldStyle = _props.textFieldStyle,
          utils = _props.utils,
          other = (0, _objectWithoutProperties3$M.default)(_props, ['DateTimeFormat', 'autoOk', 'cancelLabel', 'className', 'container', 'defaultDate', 'dialogContainerStyle', 'disableYearSelection', 'firstDayOfWeek', 'formatDate', 'locale', 'maxDate', 'minDate', 'mode', 'okLabel', 'onDismiss', 'onFocus', 'onShow', 'onClick', 'openToYearSelection', 'shouldDisableDate', 'hideCalendarDate', 'style', 'textFieldStyle', 'utils']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var formatDate = formatDateProp || this.formatDate;

      return _react2$1b.default.createElement(
        'div',
        { className: className, style: prepareStyles((0, _simpleAssign2$W.default)({}, style)) },
        _react2$1b.default.createElement(_TextField2$4.default, (0, _extends3$M.default)({}, other, {
          onFocus: this.handleFocus,
          onClick: this.handleClick,
          ref: 'input',
          style: textFieldStyle,
          value: this.state.date ? formatDate(this.state.date) : ''
        })),
        _react2$1b.default.createElement(_DatePickerDialog2.default, {
          DateTimeFormat: DateTimeFormat,
          autoOk: autoOk,
          cancelLabel: cancelLabel,
          container: container,
          containerStyle: dialogContainerStyle,
          disableYearSelection: disableYearSelection,
          firstDayOfWeek: firstDayOfWeek,
          initialDate: this.state.dialogDate,
          locale: locale,
          maxDate: maxDate,
          minDate: minDate,
          mode: mode,
          okLabel: okLabel,
          onAccept: this.handleAccept,
          onShow: onShow,
          onDismiss: onDismiss,
          ref: 'dialogWindow',
          shouldDisableDate: shouldDisableDate,
          hideCalendarDate: hideCalendarDate,
          openToYearSelection: openToYearSelection,
          utils: utils
        })
      );
    }
  }]);
  return DatePicker;
}(_react$1d.Component);

DatePicker$1.defaultProps = {
  autoOk: false,
  container: 'dialog',
  disabled: false,
  disableYearSelection: false,
  firstDayOfWeek: 1,
  hideCalendarDate: false,
  style: {},
  openToYearSelection: false
};
DatePicker$1.contextTypes = {
  muiTheme: _propTypes2$13.default.object.isRequired
};
DatePicker$1.propTypes = {
  /**
   * Constructor for date formatting for the specified `locale`.
   * The constructor must follow this specification: ECMAScript Internationalization API 1.0 (ECMA-402).
   * `Intl.DateTimeFormat` is supported by most modern browsers, see http://caniuse.com/#search=intl,
   * otherwise https://github.com/andyearnshaw/Intl.js is a good polyfill.
   *
   * By default, a built-in `DateTimeFormat` is used which supports the 'en-US' `locale`.
   */
  DateTimeFormat: _propTypes2$13.default.func,
  /**
   * If true, automatically accept and close the picker on select a date.
   */
  autoOk: _propTypes2$13.default.bool,
  /**
   * Override the default text of the 'Cancel' button.
   */
  cancelLabel: _propTypes2$13.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$13.default.string,
  /**
   * Used to control how the Date Picker will be displayed when the input field is focused.
   * `dialog` (default) displays the DatePicker as a dialog with a modal.
   * `inline` displays the DatePicker below the input field (similar to auto complete).
   */
  container: _propTypes2$13.default.oneOf(['dialog', 'inline']),
  /**
   * This is the initial date value of the component.
   * If either `value` or `valueLink` is provided they will override this
   * prop with `value` taking precedence.
   */
  defaultDate: _propTypes2$13.default.object,
  /**
   * Override the inline-styles of DatePickerDialog's Container element.
   */
  dialogContainerStyle: _propTypes2$13.default.object,
  /**
   * Disables the year selection in the date picker.
   */
  disableYearSelection: _propTypes2$13.default.bool,
  /**
   * Disables the DatePicker.
   */
  disabled: _propTypes2$13.default.bool,
  /**
   * Used to change the first day of week. It varies from
   * Saturday to Monday between different locales.
   * The allowed range is 0 (Sunday) to 6 (Saturday).
   * The default is `1`, Monday, as per ISO 8601.
   */
  firstDayOfWeek: _propTypes2$13.default.number,
  /**
   * This function is called to format the date displayed in the input field, and should return a string.
   * By default if no `locale` and `DateTimeFormat` is provided date objects are formatted to ISO 8601 YYYY-MM-DD.
   *
   * @param {object} date Date object to be formatted.
   * @returns {any} The formatted date.
   */
  formatDate: _propTypes2$13.default.func,
  /**
   * Hide date display
   */
  hideCalendarDate: _propTypes2$13.default.bool,
  /**
   * Locale used for formatting the `DatePicker` date strings. Other than for 'en-US', you
   * must provide a `DateTimeFormat` that supports the chosen `locale`.
   */
  locale: _propTypes2$13.default.string,
  /**
   * The ending of a range of valid dates. The range includes the endDate.
   * The default value is current date + 100 years.
   */
  maxDate: _propTypes2$13.default.object,
  /**
   * The beginning of a range of valid dates. The range includes the startDate.
   * The default value is current date - 100 years.
   */
  minDate: _propTypes2$13.default.object,
  /**
   * Tells the component to display the picker in portrait or landscape mode.
   */
  mode: _propTypes2$13.default.oneOf(['portrait', 'landscape']),
  /**
   * Override the default text of the 'OK' button.
   */
  okLabel: _propTypes2$13.default.node,
  /**
   * Callback function that is fired when the date value changes.
   *
   * @param {null} null Since there is no particular event associated with the change,
   * the first argument will always be null.
   * @param {object} date The new date.
   */
  onChange: _propTypes2$13.default.func,
  /**
   * Callback function that is fired when a click event occurs on the Date Picker's `TextField`.
   *
   * @param {object} event Click event targeting the `TextField`.
   */
  onClick: _propTypes2$13.default.func,
  /**
   * Callback function that is fired when the Date Picker's dialog is dismissed.
   */
  onDismiss: _propTypes2$13.default.func,
  /**
   * Callback function that is fired when the Date Picker's `TextField` gains focus.
   */
  onFocus: _propTypes2$13.default.func,
  /**
   * Callback function that is fired when the Date Picker's dialog is shown.
   */
  onShow: _propTypes2$13.default.func,
  /**
   * If true sets the datepicker to open to year selection first.
   */
  openToYearSelection: _propTypes2$13.default.bool,
  /**
   * Callback function used to determine if a day's entry should be disabled on the calendar.
   *
   * @param {object} day Date object of a day.
   * @returns {boolean} Indicates whether the day should be disabled.
   */
  shouldDisableDate: _propTypes2$13.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$13.default.object,
  /**
   * Override the inline-styles of DatePicker's TextField element.
   */
  textFieldStyle: _propTypes2$13.default.object,
  /**
   * This object should contain methods needed to build the calendar system.
   *
   * Useful for building a custom calendar system. Refer to the
   * [source code](https://github.com/mui-org/material-ui/blob/v0.x/src/DatePicker/dateUtils.js)
   * and an [example implementation](https://github.com/alitaheri/material-ui-persian-date-picker-utils)
   * for more information.
   */
  utils: _propTypes2$13.default.object,
  /**
   * Sets the date for the Date Picker programmatically.
   */
  value: _propTypes2$13.default.object
} ;
DatePicker$2.default = DatePicker$1;

Object.defineProperty(DatePicker$3, "__esModule", {
  value: true
});
var _default$9 = DatePicker$3.default = undefined;

var _DatePicker = DatePicker$2;

var _DatePicker2 = _interopRequireDefault$1O(_DatePicker);

function _interopRequireDefault$1O(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$9 = DatePicker$3.default = _DatePicker2.default;

var Drawer$2 = {};

var Drawer$1 = {};

Object.defineProperty(Drawer$1, "__esModule", {
  value: true
});

var _getPrototypeOf$W = getPrototypeOf$1.exports;

var _getPrototypeOf2$W = _interopRequireDefault$1N(_getPrototypeOf$W);

var _classCallCheck2$Y = classCallCheck$3;

var _classCallCheck3$Y = _interopRequireDefault$1N(_classCallCheck2$Y);

var _createClass2$X = createClass$2;

var _createClass3$X = _interopRequireDefault$1N(_createClass2$X);

var _possibleConstructorReturn2$W = possibleConstructorReturn$3;

var _possibleConstructorReturn3$W = _interopRequireDefault$1N(_possibleConstructorReturn2$W);

var _inherits2$W = inherits$3;

var _inherits3$W = _interopRequireDefault$1N(_inherits2$W);

var _simpleAssign$V = simpleAssign;

var _simpleAssign2$V = _interopRequireDefault$1N(_simpleAssign$V);

var _react$1c = react;

var _react2$1a = _interopRequireDefault$1N(_react$1c);

var _propTypes$12 = propTypes$5.exports;

var _propTypes2$12 = _interopRequireDefault$1N(_propTypes$12);

var _reactDom$a = reactDom;

var _reactDom2$a = _interopRequireDefault$1N(_reactDom$a);

var _reactEventListener$4 = reactEventListener_cjs;

var _reactEventListener2$4 = _interopRequireDefault$1N(_reactEventListener$4);

var _keycode$5 = keycode.exports;

var _keycode2$5 = _interopRequireDefault$1N(_keycode$5);

var _autoPrefix$1 = autoPrefix;

var _autoPrefix2$1 = _interopRequireDefault$1N(_autoPrefix$1);

var _transitions$m = transitions;

var _transitions2$m = _interopRequireDefault$1N(_transitions$m);

var _Overlay = Overlay$1;

var _Overlay2 = _interopRequireDefault$1N(_Overlay);

var _Paper$5 = Paper$2;

var _Paper2$5 = _interopRequireDefault$1N(_Paper$5);

var _propTypes3$9 = propTypes$3;

var _propTypes4$9 = _interopRequireDefault$1N(_propTypes3$9);

function _interopRequireDefault$1N(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var openNavEventHandler = null;

var Drawer = function (_Component) {
  (0, _inherits3$W.default)(Drawer, _Component);

  function Drawer() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$Y.default)(this, Drawer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$W.default)(this, (_ref = Drawer.__proto__ || (0, _getPrototypeOf2$W.default)(Drawer)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickOverlay = function (event) {
      event.preventDefault();
      _this.close('clickaway');
    }, _this.handleKeyUp = function (event) {
      if (_this.state.open && !_this.props.docked && (0, _keycode2$5.default)(event) === 'esc') {
        _this.close('escape');
      }
    }, _this.onBodyTouchStart = function (event) {
      var swipeAreaWidth = _this.props.swipeAreaWidth;

      var touchStartX = _this.context.muiTheme.isRtl ? document.body.offsetWidth - event.touches[0].pageX : event.touches[0].pageX;
      var touchStartY = event.touches[0].pageY;

      // Open only if swiping from far left (or right) while closed
      if (swipeAreaWidth !== null && !_this.state.open) {
        if (_this.props.openSecondary) {
          // If openSecondary is true calculate from the far right
          if (touchStartX < document.body.offsetWidth - swipeAreaWidth) return;
        } else {
          // If openSecondary is false calculate from the far left
          if (touchStartX > swipeAreaWidth) return;
        }
      }

      if (!_this.state.open && (openNavEventHandler !== _this.onBodyTouchStart || _this.props.disableSwipeToOpen)) {
        return;
      }

      _this.maybeSwiping = true;
      _this.touchStartX = touchStartX;
      _this.touchStartY = touchStartY;

      document.body.addEventListener('touchmove', _this.onBodyTouchMove);
      document.body.addEventListener('touchend', _this.onBodyTouchEnd);
      document.body.addEventListener('touchcancel', _this.onBodyTouchEnd);
    }, _this.onBodyTouchMove = function (event) {
      var currentX = _this.context.muiTheme.isRtl ? document.body.offsetWidth - event.touches[0].pageX : event.touches[0].pageX;
      var currentY = event.touches[0].pageY;

      if (_this.state.swiping) {
        event.preventDefault();
        _this.setPosition(_this.getTranslateX(currentX));
      } else if (_this.maybeSwiping) {
        var dXAbs = Math.abs(currentX - _this.touchStartX);
        var dYAbs = Math.abs(currentY - _this.touchStartY);
        // If the user has moved his thumb ten pixels in either direction,
        // we can safely make an assumption about whether he was intending
        // to swipe or scroll.
        var threshold = 10;

        if (dXAbs > threshold && dYAbs <= threshold) {
          _this.swipeStartX = currentX;
          _this.setState({
            swiping: _this.state.open ? 'closing' : 'opening'
          });
          _this.setPosition(_this.getTranslateX(currentX));
        } else if (dXAbs <= threshold && dYAbs > threshold) {
          _this.onBodyTouchEnd();
        }
      }
    }, _this.onBodyTouchEnd = function (event) {
      if (_this.state.swiping) {
        var currentX = _this.context.muiTheme.isRtl ? document.body.offsetWidth - event.changedTouches[0].pageX : event.changedTouches[0].pageX;
        var translateRatio = _this.getTranslateX(currentX) / _this.getMaxTranslateX();

        _this.maybeSwiping = false;
        var swiping = _this.state.swiping;
        _this.setState({
          swiping: null
        });

        // We have to open or close after setting swiping to null,
        // because only then CSS transition is enabled.
        if (translateRatio > 0.5) {
          if (swiping === 'opening') {
            _this.setPosition(_this.getMaxTranslateX());
          } else {
            _this.close('swipe');
          }
        } else {
          if (swiping === 'opening') {
            _this.open('swipe');
          } else {
            _this.setPosition(0);
          }
        }
      } else {
        _this.maybeSwiping = false;
      }

      _this.removeBodyTouchListeners();
    }, _temp), (0, _possibleConstructorReturn3$W.default)(_this, _ret);
  }

  (0, _createClass3$X.default)(Drawer, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.maybeSwiping = false;
      this.touchStartX = null;
      this.touchStartY = null;
      this.swipeStartX = null;

      this.setState({
        open: this.props.open !== null ? this.props.open : this.props.docked,
        swiping: null
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.enableSwipeHandling();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      // If controlled then the open prop takes precedence.
      if (nextProps.open !== null) {
        this.setState({
          open: nextProps.open
        });
        // Otherwise, if docked is changed, change the open state for when uncontrolled.
      } else if (this.props.docked !== nextProps.docked) {
        this.setState({
          open: nextProps.docked
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.enableSwipeHandling();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.disableSwipeHandling();
      this.removeBodyTouchListeners();
    }
  }, {
    key: 'getStyles',
    value: function getStyles() {
      var muiTheme = this.context.muiTheme;
      var theme = muiTheme.drawer;

      var x = this.getTranslateMultiplier() * (this.state.open ? 0 : this.getMaxTranslateX());

      var styles = {
        root: {
          height: '100%',
          width: this.getTranslatedWidth() || theme.width,
          position: 'fixed',
          zIndex: muiTheme.zIndex.drawer,
          left: 0,
          top: 0,
          transform: 'translate(' + x + 'px, 0)',
          transition: !this.state.swiping && _transitions2$m.default.easeOut(null, 'transform', null),
          backgroundColor: theme.color,
          overflow: 'auto',
          WebkitOverflowScrolling: 'touch' // iOS momentum scrolling
        },
        overlay: {
          zIndex: muiTheme.zIndex.drawerOverlay,
          pointerEvents: this.state.open ? 'auto' : 'none' // Bypass mouse events when left nav is closing.
        },
        rootWhenOpenRight: {
          left: 'auto',
          right: 0
        }
      };

      return styles;
    }
  }, {
    key: 'shouldShow',
    value: function shouldShow() {
      return this.state.open || !!this.state.swiping; // component is swiping
    }
  }, {
    key: 'close',
    value: function close(reason) {
      if (this.props.open === null) this.setState({ open: false });
      if (this.props.onRequestChange) this.props.onRequestChange(false, reason);
      return this;
    }
  }, {
    key: 'open',
    value: function open(reason) {
      if (this.props.open === null) this.setState({ open: true });
      if (this.props.onRequestChange) this.props.onRequestChange(true, reason);
      return this;
    }
  }, {
    key: 'getTranslatedWidth',
    value: function getTranslatedWidth() {
      if (typeof this.props.width === 'string') {
        if (!/^\d+(\.\d+)?%$/.test(this.props.width)) {
          throw new Error('Not a valid percentage format.');
        }
        var width = parseFloat(this.props.width) / 100.0;
        // We are doing our best on the Server to render a consistent UI, hence the
        // default value of 10000
        return typeof window !== 'undefined' ? width * window.innerWidth : 10000;
      } else {
        return this.props.width;
      }
    }
  }, {
    key: 'getMaxTranslateX',
    value: function getMaxTranslateX() {
      var width = this.getTranslatedWidth() || this.context.muiTheme.drawer.width;
      return width + 10;
    }
  }, {
    key: 'getTranslateMultiplier',
    value: function getTranslateMultiplier() {
      return this.props.openSecondary ? 1 : -1;
    }
  }, {
    key: 'enableSwipeHandling',
    value: function enableSwipeHandling() {
      if (!this.props.docked) {
        document.body.addEventListener('touchstart', this.onBodyTouchStart);
        if (!openNavEventHandler) {
          openNavEventHandler = this.onBodyTouchStart;
        }
      } else {
        this.disableSwipeHandling();
      }
    }
  }, {
    key: 'disableSwipeHandling',
    value: function disableSwipeHandling() {
      document.body.removeEventListener('touchstart', this.onBodyTouchStart);
      if (openNavEventHandler === this.onBodyTouchStart) {
        openNavEventHandler = null;
      }
    }
  }, {
    key: 'removeBodyTouchListeners',
    value: function removeBodyTouchListeners() {
      document.body.removeEventListener('touchmove', this.onBodyTouchMove);
      document.body.removeEventListener('touchend', this.onBodyTouchEnd);
      document.body.removeEventListener('touchcancel', this.onBodyTouchEnd);
    }
  }, {
    key: 'setPosition',
    value: function setPosition(translateX) {
      var rtlTranslateMultiplier = this.context.muiTheme.isRtl ? -1 : 1;
      var drawer = _reactDom2$a.default.findDOMNode(this.refs.clickAwayableElement);
      var transformCSS = 'translate(' + this.getTranslateMultiplier() * rtlTranslateMultiplier * translateX + 'px, 0)';
      this.refs.overlay.setOpacity(1 - translateX / this.getMaxTranslateX());
      _autoPrefix2$1.default.set(drawer.style, 'transform', transformCSS);
    }
  }, {
    key: 'getTranslateX',
    value: function getTranslateX(currentX) {
      return Math.min(Math.max(this.state.swiping === 'closing' ? this.getTranslateMultiplier() * (currentX - this.swipeStartX) : this.getMaxTranslateX() - this.getTranslateMultiplier() * (this.swipeStartX - currentX), 0), this.getMaxTranslateX());
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          containerClassName = _props.containerClassName,
          containerStyle = _props.containerStyle,
          docked = _props.docked,
          openSecondary = _props.openSecondary,
          overlayClassName = _props.overlayClassName,
          overlayStyle = _props.overlayStyle,
          style = _props.style,
          zDepth = _props.zDepth;


      var styles = this.getStyles();

      var overlay = void 0;
      if (!docked) {
        overlay = _react2$1a.default.createElement(_Overlay2.default, {
          ref: 'overlay',
          show: this.shouldShow(),
          className: overlayClassName,
          style: (0, _simpleAssign2$V.default)(styles.overlay, overlayStyle),
          transitionEnabled: !this.state.swiping,
          onClick: this.handleClickOverlay
        });
      }

      return _react2$1a.default.createElement(
        'div',
        {
          className: className,
          style: style
        },
        _react2$1a.default.createElement(_reactEventListener2$4.default, { target: 'window', onKeyUp: this.handleKeyUp }),
        overlay,
        _react2$1a.default.createElement(
          _Paper2$5.default,
          {
            ref: 'clickAwayableElement',
            zDepth: zDepth,
            rounded: false,
            transitionEnabled: !this.state.swiping,
            className: containerClassName,
            style: (0, _simpleAssign2$V.default)(styles.root, openSecondary && styles.rootWhenOpenRight, containerStyle)
          },
          children
        )
      );
    }
  }]);
  return Drawer;
}(_react$1c.Component);

Drawer.defaultProps = {
  disableSwipeToOpen: false,
  docked: true,
  open: null,
  openSecondary: false,
  swipeAreaWidth: 30,
  width: null,
  zDepth: 2
};
Drawer.contextTypes = {
  muiTheme: _propTypes2$12.default.object.isRequired
};
Drawer.propTypes = {
  /**
   * The contents of the `Drawer`
   */
  children: _propTypes2$12.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$12.default.string,
  /**
   * The CSS class name of the container element.
   */
  containerClassName: _propTypes2$12.default.string,
  /**
   * Override the inline-styles of the container element.
   */
  containerStyle: _propTypes2$12.default.object,
  /**
   * If true, swiping sideways when the `Drawer` is closed will not open it.
   */
  disableSwipeToOpen: _propTypes2$12.default.bool,
  /**
   * If true, the `Drawer` will be docked. In this state, the overlay won't show and
   * clicking on a menu item will not close the `Drawer`.
   */
  docked: _propTypes2$12.default.bool,
  /**
   * Callback function fired when the `open` state of the `Drawer` is requested to be changed.
   *
   * @param {boolean} open If true, the `Drawer` was requested to be opened.
   * @param {string} reason The reason for the open or close request. Possible values are
   * 'swipe' for open requests; 'clickaway' (on overlay clicks),
   * 'escape' (on escape key press), and 'swipe' for close requests.
   */
  onRequestChange: _propTypes2$12.default.func,
  /**
   * If true, the `Drawer` is opened.  Providing a value will turn the `Drawer`
   * into a controlled component.
   */
  open: _propTypes2$12.default.bool,
  /**
   * If true, the `Drawer` is positioned to open from the opposite side.
   */
  openSecondary: _propTypes2$12.default.bool,
  /**
   * The CSS class name to add to the `Overlay` component that is rendered behind the `Drawer`.
   */
  overlayClassName: _propTypes2$12.default.string,
  /**
   * Override the inline-styles of the `Overlay` component that is rendered behind the `Drawer`.
   */
  overlayStyle: _propTypes2$12.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$12.default.object,
  /**
   * The width of the left most (or right most) area in pixels where the `Drawer` can be
   * swiped open from. Setting this to `null` spans that area to the entire page
   * (**CAUTION!** Setting this property to `null` might cause issues with sliders and
   * swipeable `Tabs`: use at your own risk).
   */
  swipeAreaWidth: _propTypes2$12.default.number,
  /**
   * The width of the `Drawer` in pixels or percentage in string format ex. `50%` to fill
   * half of the window or `100%` and so on. Defaults to using the values from theme.
   */
  width: _propTypes2$12.default.oneOfType([_propTypes2$12.default.string, _propTypes2$12.default.number]),
  /**
   * The zDepth of the `Drawer`.
   */
  zDepth: _propTypes4$9.default.zDepth

} ;
Drawer$1.default = Drawer;

Object.defineProperty(Drawer$2, "__esModule", {
  value: true
});
Drawer$2.default = undefined;

var _Drawer = Drawer$1;

var _Drawer2 = _interopRequireDefault$1M(_Drawer);

function _interopRequireDefault$1M(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Drawer$2.default = _Drawer2.default;

var DropDownMenu$2 = {};

var DropDownMenu$1 = {};

var arrowDropDown = {};

Object.defineProperty(arrowDropDown, "__esModule", {
  value: true
});

var _react$1b = react;

var _react2$19 = _interopRequireDefault$1L(_react$1b);

var _pure$7 = pure$3;

var _pure2$7 = _interopRequireDefault$1L(_pure$7);

var _SvgIcon$8 = SvgIcon$6;

var _SvgIcon2$8 = _interopRequireDefault$1L(_SvgIcon$8);

function _interopRequireDefault$1L(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationArrowDropDown = function NavigationArrowDropDown(props) {
  return _react2$19.default.createElement(
    _SvgIcon2$8.default,
    props,
    _react2$19.default.createElement('path', { d: 'M7 10l5 5 5-5z' })
  );
};
NavigationArrowDropDown = (0, _pure2$7.default)(NavigationArrowDropDown);
NavigationArrowDropDown.displayName = 'NavigationArrowDropDown';
NavigationArrowDropDown.muiName = 'SvgIcon';

arrowDropDown.default = NavigationArrowDropDown;

var ClearFix$1 = {};

var BeforeAfterWrapper$1 = {};

Object.defineProperty(BeforeAfterWrapper$1, "__esModule", {
  value: true
});

var _objectWithoutProperties2$L = objectWithoutProperties$2;

var _objectWithoutProperties3$L = _interopRequireDefault$1K(_objectWithoutProperties2$L);

var _getPrototypeOf$V = getPrototypeOf$1.exports;

var _getPrototypeOf2$V = _interopRequireDefault$1K(_getPrototypeOf$V);

var _classCallCheck2$X = classCallCheck$3;

var _classCallCheck3$X = _interopRequireDefault$1K(_classCallCheck2$X);

var _createClass2$W = createClass$2;

var _createClass3$W = _interopRequireDefault$1K(_createClass2$W);

var _possibleConstructorReturn2$V = possibleConstructorReturn$3;

var _possibleConstructorReturn3$V = _interopRequireDefault$1K(_possibleConstructorReturn2$V);

var _inherits2$V = inherits$3;

var _inherits3$V = _interopRequireDefault$1K(_inherits2$V);

var _simpleAssign$U = simpleAssign;

var _simpleAssign2$U = _interopRequireDefault$1K(_simpleAssign$U);

var _react$1a = react;

var _react2$18 = _interopRequireDefault$1K(_react$1a);

var _propTypes$11 = propTypes$5.exports;

var _propTypes2$11 = _interopRequireDefault$1K(_propTypes$11);

function _interopRequireDefault$1K(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *  BeforeAfterWrapper
 *    An alternative for the ::before and ::after css pseudo-elements for
 *    components whose styles are defined in javascript instead of css.
 *
 *  Usage: For the element that we want to apply before and after elements to,
 *    wrap its children with BeforeAfterWrapper. For example:
 *
 *                                            <Paper>
 *  <Paper>                                     <div> // See notice
 *    <BeforeAfterWrapper>        renders         <div/> // before element
 *      [children of paper]       ------>         [children of paper]
 *    </BeforeAfterWrapper>                       <div/> // after element
 *  </Paper>                                    </div>
 *                                            </Paper>
 *
 *  Notice: Notice that this div bundles together our elements. If the element
 *    that we want to apply before and after elements is a HTML tag (i.e. a
 *    div, p, or button tag), we can avoid this extra nesting by passing using
 *    the BeforeAfterWrapper in place of said tag like so:
 *
 *  <p>
 *    <BeforeAfterWrapper>   do this instead   <BeforeAfterWrapper elementType='p'>
 *      [children of p]          ------>         [children of p]
 *    </BeforeAfterWrapper>                    </BeforeAfterWrapper>
 *  </p>
 *
 *  BeforeAfterWrapper features spread functionality. This means that we can
 *  pass HTML tag properties directly into the BeforeAfterWrapper tag.
 *
 *  When using BeforeAfterWrapper, ensure that the parent of the beforeElement
 *  and afterElement have a defined style position.
 */

var styles$d = {
  box: {
    boxSizing: 'border-box'
  }
};

var BeforeAfterWrapper = function (_Component) {
  (0, _inherits3$V.default)(BeforeAfterWrapper, _Component);

  function BeforeAfterWrapper() {
    (0, _classCallCheck3$X.default)(this, BeforeAfterWrapper);
    return (0, _possibleConstructorReturn3$V.default)(this, (BeforeAfterWrapper.__proto__ || (0, _getPrototypeOf2$V.default)(BeforeAfterWrapper)).apply(this, arguments));
  }

  (0, _createClass3$W.default)(BeforeAfterWrapper, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          beforeStyle = _props.beforeStyle,
          afterStyle = _props.afterStyle;
          _props.beforeElementType;
          _props.afterElementType;
          _props.elementType;
          var other = (0, _objectWithoutProperties3$L.default)(_props, ['beforeStyle', 'afterStyle', 'beforeElementType', 'afterElementType', 'elementType']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var beforeElement = void 0;
      var afterElement = void 0;

      if (beforeStyle) {
        beforeElement = _react2$18.default.createElement(this.props.beforeElementType, {
          style: prepareStyles((0, _simpleAssign2$U.default)({}, styles$d.box, beforeStyle)),
          key: '::before'
        });
      }

      if (afterStyle) {
        afterElement = _react2$18.default.createElement(this.props.afterElementType, {
          style: prepareStyles((0, _simpleAssign2$U.default)({}, styles$d.box, afterStyle)),
          key: '::after'
        });
      }

      var children = [beforeElement, this.props.children, afterElement];

      var props = other;
      props.style = prepareStyles((0, _simpleAssign2$U.default)({}, this.props.style));

      return _react2$18.default.createElement(this.props.elementType, props, children);
    }
  }]);
  return BeforeAfterWrapper;
}(_react$1a.Component);

BeforeAfterWrapper.defaultProps = {
  beforeElementType: 'div',
  afterElementType: 'div',
  elementType: 'div'
};
BeforeAfterWrapper.contextTypes = {
  muiTheme: _propTypes2$11.default.object.isRequired
};
BeforeAfterWrapper.propTypes = {
  afterElementType: _propTypes2$11.default.string,
  afterStyle: _propTypes2$11.default.object,
  beforeElementType: _propTypes2$11.default.string,
  beforeStyle: _propTypes2$11.default.object,
  children: _propTypes2$11.default.node,
  elementType: _propTypes2$11.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$11.default.object
} ;
BeforeAfterWrapper$1.default = BeforeAfterWrapper;

Object.defineProperty(ClearFix$1, "__esModule", {
  value: true
});

var _extends2$L = _extends$3;

var _extends3$L = _interopRequireDefault$1J(_extends2$L);

var _objectWithoutProperties2$K = objectWithoutProperties$2;

var _objectWithoutProperties3$K = _interopRequireDefault$1J(_objectWithoutProperties2$K);

var _react$19 = react;

var _react2$17 = _interopRequireDefault$1J(_react$19);

var _propTypes$10 = propTypes$5.exports;

var _propTypes2$10 = _interopRequireDefault$1J(_propTypes$10);

var _BeforeAfterWrapper = BeforeAfterWrapper$1;

var _BeforeAfterWrapper2 = _interopRequireDefault$1J(_BeforeAfterWrapper);

function _interopRequireDefault$1J(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$c = {
  before: {
    content: "' '",
    display: 'table'
  },
  after: {
    content: "' '",
    clear: 'both',
    display: 'table'
  }
};

var ClearFix = function ClearFix(_ref) {
  var style = _ref.style,
      children = _ref.children,
      other = (0, _objectWithoutProperties3$K.default)(_ref, ['style', 'children']);
  return _react2$17.default.createElement(
    _BeforeAfterWrapper2.default,
    (0, _extends3$L.default)({}, other, {
      beforeStyle: styles$c.before,
      afterStyle: styles$c.after,
      style: style
    }),
    children
  );
};

ClearFix.muiName = 'ClearFix';

ClearFix.propTypes = {
  children: _propTypes2$10.default.node,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$10.default.object
} ;

ClearFix$1.default = ClearFix;

Object.defineProperty(DropDownMenu$1, "__esModule", {
  value: true
});

var _extends2$K = _extends$3;

var _extends3$K = _interopRequireDefault$1I(_extends2$K);

var _objectWithoutProperties2$J = objectWithoutProperties$2;

var _objectWithoutProperties3$J = _interopRequireDefault$1I(_objectWithoutProperties2$J);

var _getPrototypeOf$U = getPrototypeOf$1.exports;

var _getPrototypeOf2$U = _interopRequireDefault$1I(_getPrototypeOf$U);

var _classCallCheck2$W = classCallCheck$3;

var _classCallCheck3$W = _interopRequireDefault$1I(_classCallCheck2$W);

var _createClass2$V = createClass$2;

var _createClass3$V = _interopRequireDefault$1I(_createClass2$V);

var _possibleConstructorReturn2$U = possibleConstructorReturn$3;

var _possibleConstructorReturn3$U = _interopRequireDefault$1I(_possibleConstructorReturn2$U);

var _inherits2$U = inherits$3;

var _inherits3$U = _interopRequireDefault$1I(_inherits2$U);

var _simpleAssign$T = simpleAssign;

var _simpleAssign2$T = _interopRequireDefault$1I(_simpleAssign$T);

var _react$18 = react;

var _react2$16 = _interopRequireDefault$1I(_react$18);

var _propTypes$$ = propTypes$5.exports;

var _propTypes2$$ = _interopRequireDefault$1I(_propTypes$$);

var _reactDom$9 = reactDom;

var _reactDom2$9 = _interopRequireDefault$1I(_reactDom$9);

var _transitions$l = transitions;

var _transitions2$l = _interopRequireDefault$1I(_transitions$l);

var _arrowDropDown = arrowDropDown;

var _arrowDropDown2 = _interopRequireDefault$1I(_arrowDropDown);

var _Menu$3 = Menu$4;

var _Menu2$4 = _interopRequireDefault$1I(_Menu$3);

var _ClearFix = ClearFix$1;

var _ClearFix2 = _interopRequireDefault$1I(_ClearFix);

var _Popover$3 = Popover$5;

var _Popover2$5 = _interopRequireDefault$1I(_Popover$3);

var _PopoverAnimationVertical = PopoverAnimationVertical$3;

var _PopoverAnimationVertical2$2 = _interopRequireDefault$1I(_PopoverAnimationVertical);

var _keycode$4 = keycode.exports;

var _keycode2$4 = _interopRequireDefault$1I(_keycode$4);

var _events$1 = events;

var _events2$1 = _interopRequireDefault$1I(_events$1);

var _IconButton$2 = IconButton$5;

var _IconButton2$2 = _interopRequireDefault$1I(_IconButton$2);

var _propTypes3$8 = propTypes$3;

var _propTypes4$8 = _interopRequireDefault$1I(_propTypes3$8);

function _interopRequireDefault$1I(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$H(props, context) {
  var disabled = props.disabled;

  var spacing = context.muiTheme.baseTheme.spacing;
  var palette = context.muiTheme.baseTheme.palette;
  var accentColor = context.muiTheme.dropDownMenu.accentColor;
  return {
    control: {
      cursor: disabled ? 'not-allowed' : 'pointer',
      height: '100%',
      position: 'relative',
      width: '100%'
    },
    icon: {
      fill: accentColor,
      position: 'absolute',
      right: spacing.desktopGutterLess,
      top: (spacing.iconSize - 24) / 2 + spacing.desktopGutterMini / 2
    },
    iconChildren: {
      fill: 'inherit'
    },
    label: {
      color: disabled ? palette.disabledColor : palette.textColor,
      height: spacing.desktopToolbarHeight + 'px',
      lineHeight: spacing.desktopToolbarHeight + 'px',
      overflow: 'hidden',
      opacity: 1,
      position: 'relative',
      paddingLeft: spacing.desktopGutter,
      paddingRight: spacing.iconSize * 2 + spacing.desktopGutterMini,
      textOverflow: 'ellipsis',
      top: 0,
      whiteSpace: 'nowrap'
    },
    labelWhenOpen: {
      opacity: 0,
      top: spacing.desktopToolbarHeight / 8
    },
    root: {
      display: 'inline-block',
      fontSize: spacing.desktopDropDownMenuFontSize,
      height: spacing.desktopSubheaderHeight,
      fontFamily: context.muiTheme.baseTheme.fontFamily,
      outline: 'none',
      position: 'relative',
      transition: _transitions2$l.default.easeOut()
    },
    rootWhenOpen: {
      opacity: 1
    },
    underline: {
      borderTop: 'solid 1px ' + accentColor,
      bottom: 1,
      left: 0,
      margin: '-1px ' + spacing.desktopGutter + 'px',
      right: 0,
      position: 'absolute'
    }
  };
}

var DropDownMenu = function (_Component) {
  (0, _inherits3$U.default)(DropDownMenu, _Component);

  function DropDownMenu() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$W.default)(this, DropDownMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$U.default)(this, (_ref = DropDownMenu.__proto__ || (0, _getPrototypeOf2$U.default)(DropDownMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.rootNode = undefined, _this.arrowNode = undefined, _this.handleClickControl = function (event) {
      event.preventDefault();
      if (!_this.props.disabled) {
        _this.setState({
          open: !_this.state.open,
          anchorEl: _this.rootNode
        });
      }
    }, _this.handleRequestCloseMenu = function () {
      _this.close(false);
    }, _this.handleEscKeyDownMenu = function () {
      _this.close(true);
    }, _this.handleKeyDown = function (event) {
      switch ((0, _keycode2$4.default)(event)) {
        case 'up':
        case 'down':
        case 'space':
        case 'enter':
          event.preventDefault();
          _this.setState({
            open: true,
            anchorEl: _this.rootNode
          });
          break;
      }
    }, _this.handleItemClick = function (event, child, index) {
      if (_this.props.multiple) {
        if (!_this.state.open) {
          _this.setState({ open: true });
        }
      } else {
        event.persist();
        _this.setState({
          open: false
        }, function () {
          if (_this.props.onChange) {
            _this.props.onChange(event, index, child.props.value);
          }

          _this.close(_events2$1.default.isKeyboard(event));
        });
      }
    }, _this.handleChange = function (event, value) {
      if (_this.props.multiple && _this.props.onChange) {
        _this.props.onChange(event, undefined, value);
      }
    }, _this.close = function (isKeyboard) {
      _this.setState({
        open: false
      }, function () {
        if (_this.props.onClose) {
          _this.props.onClose();
        }

        if (isKeyboard) {
          var dropArrow = _this.arrowNode;
          var dropNode = _reactDom2$9.default.findDOMNode(dropArrow);
          dropNode.focus();
          dropArrow.setKeyboardFocus(true);
        }
      });
    }, _temp), (0, _possibleConstructorReturn3$U.default)(_this, _ret);
  }

  // The nested styles for drop-down-menu are modified by toolbar and possibly
  // other user components, so it will give full access to its js styles rather
  // than just the parent.


  (0, _createClass3$V.default)(DropDownMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.autoWidth) {
        this.setWidth();
      }
      if (this.props.openImmediately) {
        // TODO: Temporary fix to make openImmediately work with popover.
        /* eslint-disable react/no-did-mount-set-state */
        setTimeout(function () {
          return _this2.setState({
            open: true,
            anchorEl: _this2.rootNode
          });
        }, 0);
        /* eslint-enable react/no-did-mount-set-state */
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      if (this.props.autoWidth) {
        this.setWidth();
      }
    }
  }, {
    key: 'getInputNode',


    /**
     * This method is deprecated but still here because the TextField
     * need it in order to work. TODO: That will be addressed later.
     */
    value: function getInputNode() {
      var _this3 = this;

      var rootNode = this.rootNode;

      rootNode.focus = function () {
        if (!_this3.props.disabled) {
          _this3.setState({
            open: !_this3.state.open,
            anchorEl: _this3.rootNode
          });
        }
      };

      return rootNode;
    }
  }, {
    key: 'setWidth',
    value: function setWidth() {
      var el = this.rootNode;
      if (!this.props.style || !this.props.style.hasOwnProperty('width')) {
        el.style.width = 'auto';
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props = this.props,
          animated = _props.animated,
          animation = _props.animation,
          autoWidth = _props.autoWidth,
          multiple = _props.multiple,
          children = _props.children,
          className = _props.className,
          disabled = _props.disabled,
          iconStyle = _props.iconStyle,
          labelStyle = _props.labelStyle,
          listStyle = _props.listStyle,
          maxHeight = _props.maxHeight,
          menuStyleProp = _props.menuStyle,
          selectionRenderer = _props.selectionRenderer;
          _props.onClose;
          _props.openImmediately;
          var menuItemStyle = _props.menuItemStyle,
          selectedMenuItemStyle = _props.selectedMenuItemStyle,
          style = _props.style,
          underlineStyle = _props.underlineStyle,
          value = _props.value,
          iconButton = _props.iconButton,
          anchorOrigin = _props.anchorOrigin,
          targetOrigin = _props.targetOrigin,
          other = (0, _objectWithoutProperties3$J.default)(_props, ['animated', 'animation', 'autoWidth', 'multiple', 'children', 'className', 'disabled', 'iconStyle', 'labelStyle', 'listStyle', 'maxHeight', 'menuStyle', 'selectionRenderer', 'onClose', 'openImmediately', 'menuItemStyle', 'selectedMenuItemStyle', 'style', 'underlineStyle', 'value', 'iconButton', 'anchorOrigin', 'targetOrigin']);
      var _state = this.state,
          anchorEl = _state.anchorEl,
          open = _state.open;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$H(this.props, this.context);

      var displayValue = '';
      if (!multiple) {
        _react2$16.default.Children.forEach(children, function (child) {
          if (child && value === child.props.value) {
            if (selectionRenderer) {
              displayValue = selectionRenderer(value, child);
            } else {
              // This will need to be improved (in case primaryText is a node)
              displayValue = child.props.label || child.props.primaryText;
            }
          }
        });
      } else {
        var values = [];
        var selectionRendererChildren = [];
        _react2$16.default.Children.forEach(children, function (child) {
          if (child && value && value.indexOf(child.props.value) > -1) {
            if (selectionRenderer) {
              values.push(child.props.value);
              selectionRendererChildren.push(child);
            } else {
              values.push(child.props.label || child.props.primaryText);
            }
          }
        });

        displayValue = [];
        if (selectionRenderer) {
          displayValue = selectionRenderer(values, selectionRendererChildren);
        } else {
          displayValue = values.join(', ');
        }
      }

      var menuStyle = void 0;
      if (anchorEl && !autoWidth) {
        menuStyle = (0, _simpleAssign2$T.default)({
          width: anchorEl.clientWidth
        }, menuStyleProp);
      } else {
        menuStyle = menuStyleProp;
      }

      return _react2$16.default.createElement(
        'div',
        (0, _extends3$K.default)({}, other, {
          ref: function ref(node) {
            _this4.rootNode = node;
          },
          className: className,
          style: prepareStyles((0, _simpleAssign2$T.default)({}, styles.root, open && styles.rootWhenOpen, style))
        }),
        _react2$16.default.createElement(
          _ClearFix2.default,
          { style: styles.control, onClick: this.handleClickControl },
          _react2$16.default.createElement(
            'div',
            { style: prepareStyles((0, _simpleAssign2$T.default)({}, styles.label, open && styles.labelWhenOpen, labelStyle)) },
            displayValue
          ),
          _react2$16.default.createElement(
            _IconButton2$2.default,
            {
              disabled: disabled,
              onKeyDown: this.handleKeyDown,
              ref: function ref(node) {
                _this4.arrowNode = node;
              },
              style: (0, _simpleAssign2$T.default)({}, styles.icon, iconStyle),
              iconStyle: styles.iconChildren
            },
            iconButton
          ),
          _react2$16.default.createElement('div', { style: prepareStyles((0, _simpleAssign2$T.default)({}, styles.underline, underlineStyle)) })
        ),
        _react2$16.default.createElement(
          _Popover2$5.default,
          {
            anchorOrigin: anchorOrigin,
            targetOrigin: targetOrigin,
            anchorEl: anchorEl,
            animation: animation || _PopoverAnimationVertical2$2.default,
            open: open,
            animated: animated,
            onRequestClose: this.handleRequestCloseMenu
          },
          _react2$16.default.createElement(
            _Menu2$4.default,
            {
              multiple: multiple,
              maxHeight: maxHeight,
              desktop: true,
              value: value,
              onEscKeyDown: this.handleEscKeyDownMenu,
              style: menuStyle,
              listStyle: listStyle,
              onItemClick: this.handleItemClick,
              onChange: this.handleChange,
              menuItemStyle: menuItemStyle,
              selectedMenuItemStyle: selectedMenuItemStyle,
              autoWidth: autoWidth,
              width: !autoWidth && menuStyle ? menuStyle.width : null
            },
            children
          )
        )
      );
    }
  }]);
  return DropDownMenu;
}(_react$18.Component);

DropDownMenu.muiName = 'DropDownMenu';
DropDownMenu.defaultProps = {
  animated: true,
  autoWidth: true,
  disabled: false,
  iconButton: _react2$16.default.createElement(_arrowDropDown2.default, null),
  openImmediately: false,
  maxHeight: 500,
  multiple: false,
  anchorOrigin: {
    vertical: 'top',
    horizontal: 'left'
  }
};
DropDownMenu.contextTypes = {
  muiTheme: _propTypes2$$.default.object.isRequired
};
DropDownMenu.propTypes = {
  /**
   * This is the point on the anchor that the popover's
   * `targetOrigin` will attach to.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  anchorOrigin: _propTypes4$8.default.origin,
  /**
   * If true, the popover will apply transitions when
   * it gets added to the DOM.
   */
  animated: _propTypes2$$.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$$.default.func,
  /**
   * The width will automatically be set according to the items inside the menu.
   * To control this width in css instead, set this prop to `false`.
   */
  autoWidth: _propTypes2$$.default.bool,
  /**
   * The `MenuItem`s to populate the `Menu` with. If the `MenuItems` have the
   * prop `label` that value will be used to render the representation of that
   * item within the field.
   */
  children: _propTypes2$$.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$$.default.string,
  /**
   * Disables the menu.
   */
  disabled: _propTypes2$$.default.bool,
  /**
   * Overrides default `SvgIcon` dropdown arrow component.
   */
  iconButton: _propTypes2$$.default.node,
  /**
   * Overrides the styles of icon element.
   */
  iconStyle: _propTypes2$$.default.object,
  /**
   * Overrides the styles of label when the `DropDownMenu` is inactive.
   */
  labelStyle: _propTypes2$$.default.object,
  /**
   * The style object to use to override underlying list style.
   */
  listStyle: _propTypes2$$.default.object,
  /**
   * The maximum height of the `Menu` when it is displayed.
   */
  maxHeight: _propTypes2$$.default.number,
  /**
   * Override the inline-styles of menu items.
   */
  menuItemStyle: _propTypes2$$.default.object,
  /**
   * Overrides the styles of `Menu` when the `DropDownMenu` is displayed.
   */
  menuStyle: _propTypes2$$.default.object,
  /**
   * If true, `value` must be an array and the menu will support
   * multiple selections.
   */
  multiple: _propTypes2$$.default.bool,
  /**
   * Callback function fired when a menu item is clicked, other than the one currently selected.
   *
   * @param {object} event Click event targeting the menu item that was clicked.
   * @param {number} key The index of the clicked menu item in the `children` collection.
   * @param {any} value If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   */
  onChange: _propTypes2$$.default.func,
  /**
   * Callback function fired when the menu is closed.
   */
  onClose: _propTypes2$$.default.func,
  /**
   * Set to true to have the `DropDownMenu` automatically open on mount.
   */
  openImmediately: _propTypes2$$.default.bool,
  /**
   * Override the inline-styles of selected menu items.
   */
  selectedMenuItemStyle: _propTypes2$$.default.object,
  /**
   * Callback function fired when a menu item is clicked, other than the one currently selected.
   *
   * @param {any} value If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   * @param {any} menuItem The selected `MenuItem`.
   * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.
   */
  selectionRenderer: _propTypes2$$.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$$.default.object,
  /**
   * This is the point on the popover which will attach to
   * the anchor's origin.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  targetOrigin: _propTypes4$8.default.origin,
  /**
   * Overrides the inline-styles of the underline.
   */
  underlineStyle: _propTypes2$$.default.object,
  /**
   * If `multiple` is true, an array of the `value`s of the selected
   * menu items. Otherwise, the `value` of the selected menu item.
   * If provided, the menu will be a controlled component.
   */
  value: _propTypes2$$.default.any
} ;
DropDownMenu$1.default = DropDownMenu;

Object.defineProperty(DropDownMenu$2, "__esModule", {
  value: true
});
DropDownMenu$2.default = DropDownMenu$2.MenuItem = DropDownMenu$2.DropDownMenu = undefined;

var _DropDownMenu2$1 = DropDownMenu$1;

var _DropDownMenu3 = _interopRequireDefault$1H(_DropDownMenu2$1);

var _MenuItem2$4 = MenuItem$4;

var _MenuItem3$2 = _interopRequireDefault$1H(_MenuItem2$4);

function _interopRequireDefault$1H(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

DropDownMenu$2.DropDownMenu = _DropDownMenu3.default;
DropDownMenu$2.MenuItem = _MenuItem3$2.default;
DropDownMenu$2.default = _DropDownMenu3.default;

var GridList$2 = {};

var GridList$1 = {};

Object.defineProperty(GridList$1, "__esModule", {
  value: true
});

var _extends2$J = _extends$3;

var _extends3$J = _interopRequireDefault$1G(_extends2$J);

var _objectWithoutProperties2$I = objectWithoutProperties$2;

var _objectWithoutProperties3$I = _interopRequireDefault$1G(_objectWithoutProperties2$I);

var _getPrototypeOf$T = getPrototypeOf$1.exports;

var _getPrototypeOf2$T = _interopRequireDefault$1G(_getPrototypeOf$T);

var _classCallCheck2$V = classCallCheck$3;

var _classCallCheck3$V = _interopRequireDefault$1G(_classCallCheck2$V);

var _createClass2$U = createClass$2;

var _createClass3$U = _interopRequireDefault$1G(_createClass2$U);

var _possibleConstructorReturn2$T = possibleConstructorReturn$3;

var _possibleConstructorReturn3$T = _interopRequireDefault$1G(_possibleConstructorReturn2$T);

var _inherits2$T = inherits$3;

var _inherits3$T = _interopRequireDefault$1G(_inherits2$T);

var _simpleAssign$S = simpleAssign;

var _simpleAssign2$S = _interopRequireDefault$1G(_simpleAssign$S);

var _react$17 = react;

var _react2$15 = _interopRequireDefault$1G(_react$17);

var _propTypes$_ = propTypes$5.exports;

var _propTypes2$_ = _interopRequireDefault$1G(_propTypes$_);

function _interopRequireDefault$1G(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$G(props) {
  return {
    root: {
      display: 'flex',
      flexWrap: 'wrap',
      margin: -props.padding / 2
    },
    item: {
      boxSizing: 'border-box',
      padding: props.padding / 2
    }
  };
}

var GridList = function (_Component) {
  (0, _inherits3$T.default)(GridList, _Component);

  function GridList() {
    (0, _classCallCheck3$V.default)(this, GridList);
    return (0, _possibleConstructorReturn3$T.default)(this, (GridList.__proto__ || (0, _getPrototypeOf2$T.default)(GridList)).apply(this, arguments));
  }

  (0, _createClass3$U.default)(GridList, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          cols = _props.cols,
          padding = _props.padding,
          cellHeight = _props.cellHeight,
          children = _props.children,
          style = _props.style,
          other = (0, _objectWithoutProperties3$I.default)(_props, ['cols', 'padding', 'cellHeight', 'children', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$G(this.props, this.context);
      var mergedRootStyles = (0, _simpleAssign2$S.default)(styles.root, style);

      var wrappedChildren = _react2$15.default.Children.map(children, function (currentChild) {
        if (_react2$15.default.isValidElement(currentChild) && currentChild.type.muiName === 'Subheader') {
          return currentChild;
        }
        var childCols = currentChild.props.cols || 1;
        var childRows = currentChild.props.rows || 1;
        var itemStyle = (0, _simpleAssign2$S.default)({}, styles.item, {
          width: 100 / cols * childCols + '%',
          height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + padding
        });

        return _react2$15.default.createElement(
          'div',
          { style: prepareStyles(itemStyle) },
          currentChild
        );
      });

      return _react2$15.default.createElement(
        'div',
        (0, _extends3$J.default)({ style: prepareStyles(mergedRootStyles) }, other),
        wrappedChildren
      );
    }
  }]);
  return GridList;
}(_react$17.Component);

GridList.defaultProps = {
  cols: 2,
  padding: 4,
  cellHeight: 180
};
GridList.contextTypes = {
  muiTheme: _propTypes2$_.default.object.isRequired
};
GridList.propTypes = {
  /**
   * Number of px for one cell height.
   * You can set `'auto'` if you want to let the children determine the height.
   */
  cellHeight: _propTypes2$_.default.oneOfType([_propTypes2$_.default.number, _propTypes2$_.default.oneOf(['auto'])]),
  /**
   * Grid Tiles that will be in Grid List.
   */
  children: _propTypes2$_.default.node,
  /**
   * Number of columns.
   */
  cols: _propTypes2$_.default.number,
  /**
   * Number of px for the padding/spacing between items.
   */
  padding: _propTypes2$_.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$_.default.object
} ;
GridList$1.default = GridList;

var GridTile$1 = {};

Object.defineProperty(GridTile$1, "__esModule", {
  value: true
});

var _extends2$I = _extends$3;

var _extends3$I = _interopRequireDefault$1F(_extends2$I);

var _objectWithoutProperties2$H = objectWithoutProperties$2;

var _objectWithoutProperties3$H = _interopRequireDefault$1F(_objectWithoutProperties2$H);

var _getPrototypeOf$S = getPrototypeOf$1.exports;

var _getPrototypeOf2$S = _interopRequireDefault$1F(_getPrototypeOf$S);

var _classCallCheck2$U = classCallCheck$3;

var _classCallCheck3$U = _interopRequireDefault$1F(_classCallCheck2$U);

var _createClass2$T = createClass$2;

var _createClass3$T = _interopRequireDefault$1F(_createClass2$T);

var _possibleConstructorReturn2$S = possibleConstructorReturn$3;

var _possibleConstructorReturn3$S = _interopRequireDefault$1F(_possibleConstructorReturn2$S);

var _inherits2$S = inherits$3;

var _inherits3$S = _interopRequireDefault$1F(_inherits2$S);

var _defineProperty2$1 = defineProperty$7;

var _defineProperty3$1 = _interopRequireDefault$1F(_defineProperty2$1);

var _simpleAssign$R = simpleAssign;

var _simpleAssign2$R = _interopRequireDefault$1F(_simpleAssign$R);

var _react$16 = react;

var _react2$14 = _interopRequireDefault$1F(_react$16);

var _propTypes$Z = propTypes$5.exports;

var _propTypes2$Z = _interopRequireDefault$1F(_propTypes$Z);

function _interopRequireDefault$1F(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$F(props, context) {
  var _titleBar;

  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      gridTile = _context$muiTheme.gridTile;


  var actionPos = props.actionIcon && props.actionPosition;

  var styles = {
    root: {
      position: 'relative',
      display: 'block',
      height: '100%',
      overflow: 'hidden'
    },
    titleBar: (_titleBar = {
      position: 'absolute',
      left: 0,
      right: 0
    }, (0, _defineProperty3$1.default)(_titleBar, props.titlePosition, 0), (0, _defineProperty3$1.default)(_titleBar, 'height', props.subtitle ? 68 : 48), (0, _defineProperty3$1.default)(_titleBar, 'background', props.titleBackground), (0, _defineProperty3$1.default)(_titleBar, 'display', 'flex'), (0, _defineProperty3$1.default)(_titleBar, 'alignItems', 'center'), _titleBar),
    titleWrap: {
      flexGrow: 1,
      marginLeft: actionPos !== 'left' ? baseTheme.spacing.desktopGutterLess : 0,
      marginRight: actionPos === 'left' ? baseTheme.spacing.desktopGutterLess : 0,
      color: gridTile.textColor,
      overflow: 'hidden'
    },
    title: {
      fontSize: '16px',
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      whiteSpace: 'nowrap'
    },
    subtitle: {
      fontSize: '12px',
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      whiteSpace: 'nowrap'
    },
    actionIcon: {
      order: actionPos === 'left' ? -1 : 1
    },
    childImg: {
      height: '100%',
      transform: 'translateX(-50%)',
      position: 'relative',
      left: '50%'
    }
  };
  return styles;
}

var GridTile = function (_Component) {
  (0, _inherits3$S.default)(GridTile, _Component);

  function GridTile() {
    (0, _classCallCheck3$U.default)(this, GridTile);
    return (0, _possibleConstructorReturn3$S.default)(this, (GridTile.__proto__ || (0, _getPrototypeOf2$S.default)(GridTile)).apply(this, arguments));
  }

  (0, _createClass3$T.default)(GridTile, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.ensureImageCover();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.ensureImageCover();
    }
  }, {
    key: 'ensureImageCover',
    value: function ensureImageCover() {
      var _this2 = this;

      var imgEl = this.refs.img;

      if (imgEl) {
        var fit = function fit() {
          if (imgEl.offsetWidth < imgEl.parentNode.offsetWidth) {
            var isRtl = _this2.context.muiTheme.isRtl;

            imgEl.style.height = 'auto';
            if (isRtl) {
              imgEl.style.right = '0';
            } else {
              imgEl.style.left = '0';
            }
            imgEl.style.width = '100%';
            imgEl.style.top = '50%';
            imgEl.style.transform = imgEl.style.WebkitTransform = 'translateY(-50%)';
          }
          imgEl.removeEventListener('load', fit);
          imgEl = null; // prevent closure memory leak
        };
        if (imgEl.complete) {
          fit();
        } else {
          imgEl.addEventListener('load', fit);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          subtitle = _props.subtitle;
          _props.titlePosition;
          _props.titleBackground;
          var titleStyle = _props.titleStyle,
          subtitleStyle = _props.subtitleStyle,
          actionIcon = _props.actionIcon;
          _props.actionPosition;
          var style = _props.style,
          children = _props.children,
          containerElement = _props.containerElement,
          other = (0, _objectWithoutProperties3$H.default)(_props, ['title', 'subtitle', 'titlePosition', 'titleBackground', 'titleStyle', 'subtitleStyle', 'actionIcon', 'actionPosition', 'style', 'children', 'containerElement']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$F(this.props, this.context);
      var mergedRootStyles = (0, _simpleAssign2$R.default)(styles.root, style);

      var titleBar = null;

      if (title) {
        titleBar = _react2$14.default.createElement(
          'div',
          { key: 'titlebar', style: prepareStyles(styles.titleBar) },
          _react2$14.default.createElement(
            'div',
            { style: prepareStyles(styles.titleWrap) },
            _react2$14.default.createElement(
              'div',
              { style: prepareStyles((0, _simpleAssign2$R.default)(styles.title, titleStyle)) },
              title
            ),
            subtitle ? _react2$14.default.createElement(
              'div',
              { style: prepareStyles((0, _simpleAssign2$R.default)(styles.subtitle, subtitleStyle)) },
              subtitle
            ) : null
          ),
          actionIcon ? _react2$14.default.createElement(
            'div',
            { style: prepareStyles(styles.actionIcon) },
            actionIcon
          ) : null
        );
      }

      var newChildren = children;

      // if there is a single image passed as children
      // clone it and add our styles
      if (_react2$14.default.Children.count(children) === 1) {
        newChildren = _react2$14.default.Children.map(children, function (child) {
          if (child.type === 'img') {
            return _react2$14.default.cloneElement(child, {
              key: 'img',
              ref: 'img',
              style: prepareStyles((0, _simpleAssign2$R.default)({}, styles.childImg, child.props.style))
            });
          } else {
            return child;
          }
        });
      }

      var containerProps = (0, _extends3$I.default)({
        style: prepareStyles(mergedRootStyles)
      }, other);

      return _react2$14.default.isValidElement(containerElement) ? _react2$14.default.cloneElement(containerElement, containerProps, [newChildren, titleBar]) : _react2$14.default.createElement(containerElement, containerProps, [newChildren, titleBar]);
    }
  }]);
  return GridTile;
}(_react$16.Component);

GridTile.defaultProps = {
  titlePosition: 'bottom',
  titleBackground: 'rgba(0, 0, 0, 0.4)',
  actionPosition: 'right',
  cols: 1,
  rows: 1,
  containerElement: 'div'
};
GridTile.contextTypes = {
  muiTheme: _propTypes2$Z.default.object.isRequired
};
GridTile.propTypes = {
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the tile itself).
   */
  actionIcon: _propTypes2$Z.default.element,
  /**
   * Position of secondary action IconButton.
   */
  actionPosition: _propTypes2$Z.default.oneOf(['left', 'right']),
  /**
   * Theoretically you can pass any node as children, but the main use case is to pass an img,
   * in whichcase GridTile takes care of making the image "cover" available space
   * (similar to background-size: cover or to object-fit:cover).
   */
  children: _propTypes2$Z.default.node,
  /**
   * Width of the tile in number of grid cells.
   */
  cols: _propTypes2$Z.default.number,
  /**
   * Either a string used as tag name for the tile root element, or a ReactElement.
   * This is useful when you have, for example, a custom implementation of
   * a navigation link (that knows about your routes) and you want to use it as the primary tile action.
   * In case you pass a ReactElement, please ensure that it passes all props,
   * accepts styles overrides and render it's children.
   */
  containerElement: _propTypes2$Z.default.oneOfType([_propTypes2$Z.default.string, _propTypes2$Z.default.element]),
  /**
   * Height of the tile in number of grid cells.
   */
  rows: _propTypes2$Z.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$Z.default.object,
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: _propTypes2$Z.default.node,
  /**
   * Override the inline-styles of the subtitle element.
   */
  subtitleStyle: _propTypes2$Z.default.object,
  /**
   * Title to be displayed on tile.
   */
  title: _propTypes2$Z.default.node,
  /**
   * Style used for title bar background.
   * Useful for setting custom gradients for example
   */
  titleBackground: _propTypes2$Z.default.string,
  /**
   * Position of the title bar (container of title, subtitle and action icon).
   */
  titlePosition: _propTypes2$Z.default.oneOf(['top', 'bottom']),
  /**
   * Override the inline-styles of the title element.
   */
  titleStyle: _propTypes2$Z.default.object
} ;
GridTile$1.default = GridTile;

Object.defineProperty(GridList$2, "__esModule", {
  value: true
});
GridList$2.default = GridList$2.GridTile = GridList$2.GridList = undefined;

var _GridList2 = GridList$1;

var _GridList3 = _interopRequireDefault$1E(_GridList2);

var _GridTile2 = GridTile$1;

var _GridTile3 = _interopRequireDefault$1E(_GridTile2);

function _interopRequireDefault$1E(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

GridList$2.GridList = _GridList3.default;
GridList$2.GridTile = _GridTile3.default;
GridList$2.default = _GridList3.default;

var IconMenu$2 = {};

var IconMenu$1 = {};

Object.defineProperty(IconMenu$1, "__esModule", {
  value: true
});

var _extends2$H = _extends$3;

var _extends3$H = _interopRequireDefault$1D(_extends2$H);

var _objectWithoutProperties2$G = objectWithoutProperties$2;

var _objectWithoutProperties3$G = _interopRequireDefault$1D(_objectWithoutProperties2$G);

var _getPrototypeOf$R = getPrototypeOf$1.exports;

var _getPrototypeOf2$R = _interopRequireDefault$1D(_getPrototypeOf$R);

var _classCallCheck2$T = classCallCheck$3;

var _classCallCheck3$T = _interopRequireDefault$1D(_classCallCheck2$T);

var _createClass2$S = createClass$2;

var _createClass3$S = _interopRequireDefault$1D(_createClass2$S);

var _possibleConstructorReturn2$R = possibleConstructorReturn$3;

var _possibleConstructorReturn3$R = _interopRequireDefault$1D(_possibleConstructorReturn2$R);

var _inherits2$R = inherits$3;

var _inherits3$R = _interopRequireDefault$1D(_inherits2$R);

var _simpleAssign$Q = simpleAssign;

var _simpleAssign2$Q = _interopRequireDefault$1D(_simpleAssign$Q);

var _react$15 = react;

var _react2$13 = _interopRequireDefault$1D(_react$15);

var _propTypes$Y = propTypes$5.exports;

var _propTypes2$Y = _interopRequireDefault$1D(_propTypes$Y);

var _reactDom$8 = reactDom;

var _reactDom2$8 = _interopRequireDefault$1D(_reactDom$8);

var _events = events;

var _events2 = _interopRequireDefault$1D(_events);

var _propTypes3$7 = propTypes$3;

var _propTypes4$7 = _interopRequireDefault$1D(_propTypes3$7);

var _Menu$2 = Menu$4;

var _Menu2$3 = _interopRequireDefault$1D(_Menu$2);

var _Popover$2 = Popover$5;

var _Popover2$4 = _interopRequireDefault$1D(_Popover$2);

var _warning$8 = warning_1$1;

var _warning2$8 = _interopRequireDefault$1D(_warning$8);

function _interopRequireDefault$1D(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IconMenu = function (_Component) {
  (0, _inherits3$R.default)(IconMenu, _Component);

  function IconMenu() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$T.default)(this, IconMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$R.default)(this, (_ref = IconMenu.__proto__ || (0, _getPrototypeOf2$R.default)(IconMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      menuInitiallyKeyboardFocused: false,
      open: false
    }, _this.handleItemClick = function (event, child) {
      if (_this.props.clickCloseDelay !== 0 && !child.props.hasOwnProperty('menuItems')) {
        var isKeyboard = _events2.default.isKeyboard(event);
        _this.timerCloseId = setTimeout(function () {
          _this.close(isKeyboard ? 'enter' : 'itemTap', isKeyboard);
        }, _this.props.clickCloseDelay);
      }

      _this.props.onItemClick(event, child);
    }, _this.handleRequestClose = function (reason) {
      _this.close(reason);
    }, _this.handleEscKeyDownMenu = function (event) {
      _this.close('escape', event);
    }, _temp), (0, _possibleConstructorReturn3$R.default)(_this, _ret);
  }

  (0, _createClass3$S.default)(IconMenu, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.open != null) {
        this.setState({
          open: nextProps.open,
          anchorEl: this.refs.iconMenuContainer
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timerCloseId);
    }
  }, {
    key: 'isOpen',
    value: function isOpen() {
      return this.state.open;
    }
  }, {
    key: 'close',
    value: function close(reason, isKeyboard) {
      var _this2 = this;

      if (!this.state.open) {
        return;
      }

      if (this.props.open !== null) {
        this.props.onRequestChange(false, reason);
      } else {
        this.setState({ open: false }, function () {
          // Set focus on the icon button when the menu close
          if (isKeyboard) {
            var iconButton = _this2.refs.iconButton;
            _reactDom2$8.default.findDOMNode(iconButton).focus();
            iconButton.setKeyboardFocus();
          }
        });
      }
    }
  }, {
    key: 'open',
    value: function open(reason, event) {
      if (this.props.open !== null) {
        this.props.onRequestChange(true, reason);

        return this.setState({
          menuInitiallyKeyboardFocused: _events2.default.isKeyboard(event),
          anchorEl: event.currentTarget
        });
      }

      this.setState({
        open: true,
        menuInitiallyKeyboardFocused: _events2.default.isKeyboard(event),
        anchorEl: event.currentTarget
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          anchorOrigin = _props.anchorOrigin,
          className = _props.className,
          animated = _props.animated,
          animation = _props.animation,
          iconButtonElement = _props.iconButtonElement,
          iconStyle = _props.iconStyle;
          _props.onItemClick;
          var onKeyboardFocus = _props.onKeyboardFocus,
          onMouseDown = _props.onMouseDown,
          onMouseLeave = _props.onMouseLeave,
          onMouseEnter = _props.onMouseEnter,
          onMouseUp = _props.onMouseUp;
          _props.onRequestChange;
          var onClick = _props.onClick,
          listStyle = _props.listStyle,
          menuStyle = _props.menuStyle,
          style = _props.style,
          targetOrigin = _props.targetOrigin;
          _props.clickCloseDelay;
          var useLayerForClickAway = _props.useLayerForClickAway,
          other = (0, _objectWithoutProperties3$G.default)(_props, ['anchorOrigin', 'className', 'animated', 'animation', 'iconButtonElement', 'iconStyle', 'onItemClick', 'onKeyboardFocus', 'onMouseDown', 'onMouseLeave', 'onMouseEnter', 'onMouseUp', 'onRequestChange', 'onClick', 'listStyle', 'menuStyle', 'style', 'targetOrigin', 'clickCloseDelay', 'useLayerForClickAway']);
      var prepareStyles = this.context.muiTheme.prepareStyles;
      var _state = this.state,
          open = _state.open,
          anchorEl = _state.anchorEl;


      var styles = {
        root: {
          display: 'inline-block',
          position: 'relative'
        },
        menu: {
          position: 'relative'
        }
      };

      var mergedRootStyles = (0, _simpleAssign2$Q.default)(styles.root, style);
      var mergedMenuStyles = (0, _simpleAssign2$Q.default)(styles.menu, menuStyle);

      (0, _warning2$8.default)(iconButtonElement.type.muiName !== 'SvgIcon', 'Material-UI: You shoud not provide an <SvgIcon /> to the \'iconButtonElement\' property of <IconMenu />.\nYou should wrapped it with an <IconButton />.') ;

      var iconButtonProps = {
        onKeyboardFocus: onKeyboardFocus,
        onClick: function onClick(event) {
          _this3.open(_events2.default.isKeyboard(event) ? 'keyboard' : 'iconTap', event);
          if (iconButtonElement.props.onClick) {
            iconButtonElement.props.onClick(event);
          }
        },
        ref: 'iconButton'
      };
      if (iconStyle || iconButtonElement.props.iconStyle) {
        iconButtonProps.iconStyle = iconStyle ? (0, _simpleAssign2$Q.default)({}, iconStyle, iconButtonElement.props.iconStyle) : iconButtonElement.props.iconStyle;
      }
      var iconButton = _react2$13.default.cloneElement(iconButtonElement, iconButtonProps);

      var menu = _react2$13.default.createElement(
        _Menu2$3.default,
        (0, _extends3$H.default)({}, other, {
          initiallyKeyboardFocused: this.state.menuInitiallyKeyboardFocused,
          onEscKeyDown: this.handleEscKeyDownMenu,
          onItemClick: this.handleItemClick,
          style: mergedMenuStyles,
          listStyle: listStyle
        }),
        this.props.children
      );

      return _react2$13.default.createElement(
        'div',
        {
          ref: 'iconMenuContainer',
          className: className,
          onMouseDown: onMouseDown,
          onMouseLeave: onMouseLeave,
          onMouseEnter: onMouseEnter,
          onMouseUp: onMouseUp,
          onClick: onClick,
          style: prepareStyles(mergedRootStyles)
        },
        iconButton,
        _react2$13.default.createElement(
          _Popover2$4.default,
          {
            anchorOrigin: anchorOrigin,
            targetOrigin: targetOrigin,
            open: open,
            anchorEl: anchorEl,
            childContextTypes: this.constructor.childContextTypes,
            useLayerForClickAway: useLayerForClickAway,
            onRequestClose: this.handleRequestClose,
            animated: animated,
            animation: animation,
            context: this.context
          },
          menu
        )
      );
    }
  }]);
  return IconMenu;
}(_react$15.Component);

IconMenu.muiName = 'IconMenu';
IconMenu.defaultProps = {
  anchorOrigin: {
    vertical: 'top',
    horizontal: 'left'
  },
  animated: true,
  multiple: false,
  open: null,
  onItemClick: function onItemClick() {},
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseDown: function onMouseDown() {},
  onMouseLeave: function onMouseLeave() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseUp: function onMouseUp() {},
  onRequestChange: function onRequestChange() {},
  onClick: function onClick() {},
  targetOrigin: {
    vertical: 'top',
    horizontal: 'left'
  },
  clickCloseDelay: 200,
  useLayerForClickAway: false
};
IconMenu.contextTypes = {
  muiTheme: _propTypes2$Y.default.object.isRequired
};
IconMenu.propTypes = {
  /**
   * This is the point on the icon where the menu
   * `targetOrigin` will attach.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  anchorOrigin: _propTypes4$7.default.origin,
  /**
   * If true, the popover will apply transitions when
   * it gets added to the DOM.
   */
  animated: _propTypes2$Y.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$Y.default.func,
  /**
   * Should be used to pass `MenuItem` components.
   */
  children: _propTypes2$Y.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$Y.default.string,
  /**
   * Sets the delay in milliseconds before closing the
   * menu when an item is clicked.
   * If set to 0 then the auto close functionality
   * will be disabled.
   */
  clickCloseDelay: _propTypes2$Y.default.number,
  /**
   * This is the `IconButton` to render. This button will open the menu.
   */
  iconButtonElement: _propTypes2$Y.default.element.isRequired,
  /**
   * Override the inline-styles of the underlying icon element.
   */
  iconStyle: _propTypes2$Y.default.object,
  /**
   * Override the inline-styles of the underlying `List` element.
   */
  listStyle: _propTypes2$Y.default.object,
  /**
   * Override the inline-styles of the menu element.
   */
  menuStyle: _propTypes2$Y.default.object,
  /**
   * If true, the value can an be array and allow the menu to be a multi-select.
   */
  multiple: _propTypes2$Y.default.bool,
  /**
   * Callback function fired when the `IconButton` element is clicked.
   *
   * @param {object} event Click event targeting the `IconButton` element.
   */
  onClick: _propTypes2$Y.default.func,
  /**
   * Callback function fired when a menu item is selected with a click.
   *
   * @param {object} event Click event targeting the selected menu item element.
   * @param {object} child The selected element.
   */
  onItemClick: _propTypes2$Y.default.func,
  /**
   * Callback function fired when the `IconButton` element is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the `IconButton` element.
   * @param {boolean} keyboardFocused If true, the `IconButton` element is focused.
   */
  onKeyboardFocus: _propTypes2$Y.default.func,
  /** @ignore */
  onMouseDown: _propTypes2$Y.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$Y.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$Y.default.func,
  /** @ignore */
  onMouseUp: _propTypes2$Y.default.func,
  /**
   * Callback function fired when the `open` state of the menu is requested to be changed.
   *
   * @param {boolean} open If true, the menu was requested to be opened.
   * @param {string} reason The reason for the open or close request. Possible values are
   * 'keyboard' and 'iconTap' for open requests; 'enter', 'escape', 'itemTap', and 'clickAway'
   * for close requests.
   */
  onRequestChange: _propTypes2$Y.default.func,
  /**
   * If true, the `IconMenu` is opened.
   */
  open: _propTypes2$Y.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$Y.default.object,
  /**
   * This is the point on the menu which will stick to the menu
   * origin.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  targetOrigin: _propTypes4$7.default.origin,
  /**
   * If true, the popover will render on top of an invisible
   * layer, which will prevent clicks to the underlying elements.
   */
  useLayerForClickAway: _propTypes2$Y.default.bool
} ;
IconMenu$1.default = IconMenu;

Object.defineProperty(IconMenu$2, "__esModule", {
  value: true
});
IconMenu$2.default = IconMenu$2.MenuItem = IconMenu$2.IconMenu = undefined;

var _IconMenu2 = IconMenu$1;

var _IconMenu3 = _interopRequireDefault$1C(_IconMenu2);

var _MenuItem2$3 = MenuItem$4;

var _MenuItem3$1 = _interopRequireDefault$1C(_MenuItem2$3);

function _interopRequireDefault$1C(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

IconMenu$2.IconMenu = _IconMenu3.default;
IconMenu$2.MenuItem = _MenuItem3$1.default;
IconMenu$2.default = _IconMenu3.default;

var LinearProgress$2 = {};

var LinearProgress$1 = {};

Object.defineProperty(LinearProgress$1, "__esModule", {
  value: true
});

var _extends2$G = _extends$3;

var _extends3$G = _interopRequireDefault$1B(_extends2$G);

var _objectWithoutProperties2$F = objectWithoutProperties$2;

var _objectWithoutProperties3$F = _interopRequireDefault$1B(_objectWithoutProperties2$F);

var _getPrototypeOf$Q = getPrototypeOf$1.exports;

var _getPrototypeOf2$Q = _interopRequireDefault$1B(_getPrototypeOf$Q);

var _classCallCheck2$S = classCallCheck$3;

var _classCallCheck3$S = _interopRequireDefault$1B(_classCallCheck2$S);

var _createClass2$R = createClass$2;

var _createClass3$R = _interopRequireDefault$1B(_createClass2$R);

var _possibleConstructorReturn2$Q = possibleConstructorReturn$3;

var _possibleConstructorReturn3$Q = _interopRequireDefault$1B(_possibleConstructorReturn2$Q);

var _inherits2$Q = inherits$3;

var _inherits3$Q = _interopRequireDefault$1B(_inherits2$Q);

var _simpleAssign$P = simpleAssign;

var _simpleAssign2$P = _interopRequireDefault$1B(_simpleAssign$P);

var _react$14 = react;

var _react2$12 = _interopRequireDefault$1B(_react$14);

var _propTypes$X = propTypes$5.exports;

var _propTypes2$X = _interopRequireDefault$1B(_propTypes$X);

var _transitions$k = transitions;

var _transitions2$k = _interopRequireDefault$1B(_transitions$k);

function _interopRequireDefault$1B(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getRelativeValue(value, min, max) {
  var clampedValue = Math.min(Math.max(min, value), max);
  var rangeValue = max - min;
  var relValue = Math.round((clampedValue - min) / rangeValue * 10000) / 10000;
  return relValue * 100;
}

function getStyles$E(props, context) {
  var max = props.max,
      min = props.min,
      value = props.value;
  var _context$muiTheme = context.muiTheme,
      palette = _context$muiTheme.baseTheme.palette,
      borderRadius = _context$muiTheme.borderRadius;


  var styles = {
    root: {
      position: 'relative',
      height: 4,
      display: 'block',
      width: '100%',
      backgroundColor: palette.primary3Color,
      borderRadius: borderRadius,
      margin: 0,
      overflow: 'hidden'
    },
    bar: {
      height: '100%'
    },
    barFragment1: {},
    barFragment2: {}
  };

  if (props.mode === 'indeterminate') {
    styles.barFragment1 = {
      position: 'absolute',
      backgroundColor: props.color || palette.primary1Color,
      top: 0,
      left: 0,
      bottom: 0,
      transition: _transitions2$k.default.create('all', '840ms', null, 'cubic-bezier(0.650, 0.815, 0.735, 0.395)')
    };

    styles.barFragment2 = {
      position: 'absolute',
      backgroundColor: props.color || palette.primary1Color,
      top: 0,
      left: 0,
      bottom: 0,
      transition: _transitions2$k.default.create('all', '840ms', null, 'cubic-bezier(0.165, 0.840, 0.440, 1.000)')
    };
  } else {
    styles.bar.backgroundColor = props.color || palette.primary1Color;
    styles.bar.transition = _transitions2$k.default.create('width', '.3s', null, 'linear');
    styles.bar.width = getRelativeValue(value, min, max) + '%';
  }

  return styles;
}

var LinearProgress = function (_Component) {
  (0, _inherits3$Q.default)(LinearProgress, _Component);

  function LinearProgress() {
    (0, _classCallCheck3$S.default)(this, LinearProgress);
    return (0, _possibleConstructorReturn3$Q.default)(this, (LinearProgress.__proto__ || (0, _getPrototypeOf2$Q.default)(LinearProgress)).apply(this, arguments));
  }

  (0, _createClass3$R.default)(LinearProgress, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.timers = {};

      this.timers.bar1 = this.barUpdate('bar1', 0, this.refs.bar1, [[-35, 100], [100, -90]], 0);

      this.timers.bar2 = setTimeout(function () {
        _this2.barUpdate('bar2', 0, _this2.refs.bar2, [[-200, 100], [107, -8]], 0);
      }, 850);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timers.bar1);
      clearTimeout(this.timers.bar2);
    }
  }, {
    key: 'barUpdate',
    value: function barUpdate(id, step, barElement, stepValues, timeToNextStep) {
      var _this3 = this;

      if (this.props.mode !== 'indeterminate') return;

      timeToNextStep = timeToNextStep || 420;
      step = step || 0;
      step %= 4;

      var right = this.context.muiTheme.isRtl ? 'left' : 'right';
      var left = this.context.muiTheme.isRtl ? 'right' : 'left';

      if (step === 0) {
        barElement.style[left] = stepValues[0][0] + '%';
        barElement.style[right] = stepValues[0][1] + '%';
      } else if (step === 1) {
        barElement.style.transitionDuration = '840ms';
      } else if (step === 2) {
        barElement.style[left] = stepValues[1][0] + '%';
        barElement.style[right] = stepValues[1][1] + '%';
      } else if (step === 3) {
        barElement.style.transitionDuration = '0ms';
      }
      this.timers[id] = setTimeout(function () {
        return _this3.barUpdate(id, step + 1, barElement, stepValues);
      }, timeToNextStep);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          other = (0, _objectWithoutProperties3$F.default)(_props, ['style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$E(this.props, this.context);

      return _react2$12.default.createElement(
        'div',
        (0, _extends3$G.default)({}, other, { style: prepareStyles((0, _simpleAssign2$P.default)(styles.root, style)) }),
        _react2$12.default.createElement(
          'div',
          { style: prepareStyles(styles.bar) },
          _react2$12.default.createElement('div', { ref: 'bar1', style: prepareStyles(styles.barFragment1) }),
          _react2$12.default.createElement('div', { ref: 'bar2', style: prepareStyles(styles.barFragment2) })
        )
      );
    }
  }]);
  return LinearProgress;
}(_react$14.Component);

LinearProgress.defaultProps = {
  mode: 'indeterminate',
  value: 0,
  min: 0,
  max: 100
};
LinearProgress.contextTypes = {
  muiTheme: _propTypes2$X.default.object.isRequired
};
LinearProgress.propTypes = {
  /**
   * The color of the progress bar, defaults to
   * primary color of theme.
   */
  color: _propTypes2$X.default.string,
  /**
   * The max value of progress, only works in determinate mode.
   */
  max: _propTypes2$X.default.number,
  /**
   * The min value of progress, only works in determinate mode.
   */
  min: _propTypes2$X.default.number,
  /**
   * The mode of show your progress, indeterminate for when
   * there is no value for progress.
   */
  mode: _propTypes2$X.default.oneOf(['determinate', 'indeterminate']),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$X.default.object,
  /**
   * The value of progress, only works in determinate mode.
   */
  value: _propTypes2$X.default.number
} ;
LinearProgress$1.default = LinearProgress;

Object.defineProperty(LinearProgress$2, "__esModule", {
  value: true
});
LinearProgress$2.default = undefined;

var _LinearProgress = LinearProgress$1;

var _LinearProgress2 = _interopRequireDefault$1A(_LinearProgress);

function _interopRequireDefault$1A(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

LinearProgress$2.default = _LinearProgress2.default;

var List$2 = {};

var makeSelectable$1 = {};

Object.defineProperty(makeSelectable$1, "__esModule", {
  value: true
});
makeSelectable$1.makeSelectable = undefined;

var _extends2$F = _extends$3;

var _extends3$F = _interopRequireDefault$1z(_extends2$F);

var _objectWithoutProperties2$E = objectWithoutProperties$2;

var _objectWithoutProperties3$E = _interopRequireDefault$1z(_objectWithoutProperties2$E);

var _getPrototypeOf$P = getPrototypeOf$1.exports;

var _getPrototypeOf2$P = _interopRequireDefault$1z(_getPrototypeOf$P);

var _classCallCheck2$R = classCallCheck$3;

var _classCallCheck3$R = _interopRequireDefault$1z(_classCallCheck2$R);

var _createClass2$Q = createClass$2;

var _createClass3$Q = _interopRequireDefault$1z(_createClass2$Q);

var _possibleConstructorReturn2$P = possibleConstructorReturn$3;

var _possibleConstructorReturn3$P = _interopRequireDefault$1z(_possibleConstructorReturn2$P);

var _inherits2$P = inherits$3;

var _inherits3$P = _interopRequireDefault$1z(_inherits2$P);

var _simpleAssign$O = simpleAssign;

var _simpleAssign2$O = _interopRequireDefault$1z(_simpleAssign$O);

var _react$13 = react;

var _react2$11 = _interopRequireDefault$1z(_react$13);

var _propTypes$W = propTypes$5.exports;

var _propTypes2$W = _interopRequireDefault$1z(_propTypes$W);

var _colorManipulator$3 = colorManipulator;

function _interopRequireDefault$1z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var makeSelectable = function makeSelectable(MyComponent) {
  var _class, _temp2;

  return _temp2 = _class = function (_Component) {
    (0, _inherits3$P.default)(_class, _Component);

    function _class() {
      var _ref;

      var _temp, _this, _ret;

      (0, _classCallCheck3$R.default)(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$P.default)(this, (_ref = _class.__proto__ || (0, _getPrototypeOf2$P.default)(_class)).call.apply(_ref, [this].concat(args))), _this), _this.hasSelectedDescendant = function (previousValue, child) {
        if (_react2$11.default.isValidElement(child) && child.props.nestedItems && child.props.nestedItems.length > 0) {
          return child.props.nestedItems.reduce(_this.hasSelectedDescendant, previousValue);
        }
        return previousValue || _this.isChildSelected(child, _this.props);
      }, _this.handleItemClick = function (event, item) {
        var itemValue = item.props.value;

        if (itemValue !== _this.props.value) {
          if (_this.props.onChange) {
            _this.props.onChange(event, itemValue);
          }
        }
      }, _temp), (0, _possibleConstructorReturn3$P.default)(_this, _ret);
    }

    (0, _createClass3$Q.default)(_class, [{
      key: 'extendChild',
      value: function extendChild(child, styles, selectedItemStyle) {
        var _this2 = this;

        if (child && child.type && child.type.muiName === 'ListItem') {
          var selected = this.isChildSelected(child, this.props);
          var selectedChildrenStyles = void 0;
          if (selected) {
            selectedChildrenStyles = (0, _simpleAssign2$O.default)({}, styles, selectedItemStyle);
          }

          var mergedChildrenStyles = (0, _simpleAssign2$O.default)({}, child.props.style, selectedChildrenStyles);

          this.keyIndex += 1;

          return _react2$11.default.cloneElement(child, {
            onClick: function onClick(event) {
              _this2.handleItemClick(event, child);
              if (child.props.onClick) {
                child.props.onClick(event);
              }
            },
            key: this.keyIndex,
            style: mergedChildrenStyles,
            nestedItems: child.props.nestedItems.map(function (child) {
              return _this2.extendChild(child, styles, selectedItemStyle);
            }),
            initiallyOpen: this.isInitiallyOpen(child)
          });
        } else {
          return child;
        }
      }
    }, {
      key: 'isInitiallyOpen',
      value: function isInitiallyOpen(child) {
        if (child.props.initiallyOpen) {
          return child.props.initiallyOpen;
        }
        return this.hasSelectedDescendant(false, child);
      }
    }, {
      key: 'isChildSelected',
      value: function isChildSelected(child, props) {
        return props.value === child.props.value;
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            children = _props.children,
            selectedItemStyle = _props.selectedItemStyle,
            other = (0, _objectWithoutProperties3$E.default)(_props, ['children', 'selectedItemStyle']);


        this.keyIndex = 0;
        var styles = {};

        if (!selectedItemStyle) {
          var textColor = this.context.muiTheme.baseTheme.palette.textColor;
          styles.backgroundColor = (0, _colorManipulator$3.fade)(textColor, 0.2);
        }

        return _react2$11.default.createElement(
          MyComponent,
          (0, _extends3$F.default)({}, other, this.state),
          _react$13.Children.map(children, function (child) {
            return _this3.extendChild(child, styles, selectedItemStyle);
          })
        );
      }
    }]);
    return _class;
  }(_react$13.Component), _class.propTypes = {
    children: _propTypes2$W.default.node,
    onChange: _propTypes2$W.default.func,
    selectedItemStyle: _propTypes2$W.default.object,
    value: _propTypes2$W.default.any
  }, _class.contextTypes = {
    muiTheme: _propTypes2$W.default.object.isRequired
  }, _temp2;
};

makeSelectable$1.makeSelectable = makeSelectable;
makeSelectable$1.default = makeSelectable;

Object.defineProperty(List$2, "__esModule", {
  value: true
});
List$2.default = List$2.makeSelectable = List$2.ListItem = List$2.List = undefined;

var _List2$2 = List$4;

var _List3 = _interopRequireDefault$1y(_List2$2);

var _ListItem2$1 = ListItem$3;

var _ListItem3 = _interopRequireDefault$1y(_ListItem2$1);

var _makeSelectable2 = makeSelectable$1;

var _makeSelectable3 = _interopRequireDefault$1y(_makeSelectable2);

function _interopRequireDefault$1y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

List$2.List = _List3.default;
List$2.ListItem = _ListItem3.default;
List$2.makeSelectable = _makeSelectable3.default;
List$2.default = _List3.default;

var MuiThemeProvider$1 = {};

var getMuiTheme$1 = {};

var lightBaseTheme = {};

var spacing = {};

Object.defineProperty(spacing, "__esModule", {
  value: true
});
var _default$8 = spacing.default = {
  iconSize: 24,

  desktopGutter: 24,
  desktopGutterMore: 32,
  desktopGutterLess: 16,
  desktopGutterMini: 8,
  desktopKeylineIncrement: 64,
  desktopDropDownMenuItemHeight: 32,
  desktopDropDownMenuFontSize: 15,
  desktopDrawerMenuItemHeight: 48,
  desktopSubheaderHeight: 48,
  desktopToolbarHeight: 56
};

Object.defineProperty(lightBaseTheme, "__esModule", {
  value: true
});

var _colors$2 = colors;

var _colorManipulator$2 = colorManipulator;

var _spacing = spacing;

var _spacing2 = _interopRequireDefault$1x(_spacing);

function _interopRequireDefault$1x(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *  Light Theme is the default theme used in material-ui. It is guaranteed to
 *  have all theme variables needed for every component. Variables not defined
 *  in a custom theme will default to these values.
 */
lightBaseTheme.default = {
  spacing: _spacing2.default,
  fontFamily: 'Roboto, sans-serif',
  borderRadius: 2,
  palette: {
    primary1Color: _colors$2.cyan500,
    primary2Color: _colors$2.cyan700,
    primary3Color: _colors$2.grey400,
    accent1Color: _colors$2.pinkA200,
    accent2Color: _colors$2.grey100,
    accent3Color: _colors$2.grey500,
    textColor: _colors$2.darkBlack,
    secondaryTextColor: (0, _colorManipulator$2.fade)(_colors$2.darkBlack, 0.54),
    alternateTextColor: _colors$2.white,
    canvasColor: _colors$2.white,
    borderColor: _colors$2.grey300,
    disabledColor: (0, _colorManipulator$2.fade)(_colors$2.darkBlack, 0.3),
    pickerHeaderColor: _colors$2.cyan500,
    clockCircleColor: (0, _colorManipulator$2.fade)(_colors$2.darkBlack, 0.07),
    shadowColor: _colors$2.fullBlack
  }
}; /**
    * NB: If you update this file, please also update `docs/src/app/customization/Themes.js`
    */

var zIndex = {};

Object.defineProperty(zIndex, "__esModule", {
  value: true
});
zIndex.default = {
  menu: 1000,
  appBar: 1100,
  drawerOverlay: 1200,
  drawer: 1300,
  dialogOverlay: 1400,
  dialog: 1500,
  layer: 2000,
  popover: 2100,
  snackbar: 2900,
  tooltip: 3000
};

var autoprefixer = {};

var autoprefixerDynamic = {};

Object.defineProperty(autoprefixerDynamic, "__esModule", {
  value: true
});

var _calc$1 = calc.exports;

var _calc2$1 = _interopRequireDefault$1w(_calc$1);

var _flex$1 = flex.exports;

var _flex2$1 = _interopRequireDefault$1w(_flex$1);

var _flexboxIE$1 = flexboxIE.exports;

var _flexboxIE2$1 = _interopRequireDefault$1w(_flexboxIE$1);

var _flexboxOld$1 = flexboxOld.exports;

var _flexboxOld2$1 = _interopRequireDefault$1w(_flexboxOld$1);

var _gradient$1 = gradient.exports;

var _gradient2$1 = _interopRequireDefault$1w(_gradient$1);

var _sizing$1 = sizing.exports;

var _sizing2$1 = _interopRequireDefault$1w(_sizing$1);

var _transition$1 = transition.exports;

var _transition2$1 = _interopRequireDefault$1w(_transition$1);

function _interopRequireDefault$1w(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

autoprefixerDynamic.default = {
  plugins: [_calc2$1.default, _flex2$1.default, _flexboxIE2$1.default, _flexboxOld2$1.default, _gradient2$1.default, _sizing2$1.default, _transition2$1.default],
  prefixMap: { "chrome": { "transform": 35, "transformOrigin": 35, "transformOriginX": 35, "transformOriginY": 35, "backfaceVisibility": 35, "perspective": 35, "perspectiveOrigin": 35, "transformStyle": 35, "transformOriginZ": 35, "animation": 42, "animationDelay": 42, "animationDirection": 42, "animationFillMode": 42, "animationDuration": 42, "animationIterationCount": 42, "animationName": 42, "animationPlayState": 42, "animationTimingFunction": 42, "appearance": 60, "userSelect": 53, "fontKerning": 32, "textEmphasisPosition": 60, "textEmphasis": 60, "textEmphasisStyle": 60, "textEmphasisColor": 60, "boxDecorationBreak": 60, "clipPath": 54, "maskImage": 60, "maskMode": 60, "maskRepeat": 60, "maskPosition": 60, "maskClip": 60, "maskOrigin": 60, "maskSize": 60, "maskComposite": 60, "mask": 60, "maskBorderSource": 60, "maskBorderMode": 60, "maskBorderSlice": 60, "maskBorderWidth": 60, "maskBorderOutset": 60, "maskBorderRepeat": 60, "maskBorder": 60, "maskType": 60, "textDecorationStyle": 56, "textDecorationSkip": 56, "textDecorationLine": 56, "textDecorationColor": 56, "filter": 52, "fontFeatureSettings": 47, "breakAfter": 49, "breakBefore": 49, "breakInside": 49, "columnCount": 49, "columnFill": 49, "columnGap": 49, "columnRule": 49, "columnRuleColor": 49, "columnRuleStyle": 49, "columnRuleWidth": 49, "columns": 49, "columnSpan": 49, "columnWidth": 49 }, "safari": { "flex": 8, "flexBasis": 8, "flexDirection": 8, "flexGrow": 8, "flexFlow": 8, "flexShrink": 8, "flexWrap": 8, "alignContent": 8, "alignItems": 8, "alignSelf": 8, "justifyContent": 8, "order": 8, "transition": 6, "transitionDelay": 6, "transitionDuration": 6, "transitionProperty": 6, "transitionTimingFunction": 6, "transform": 8, "transformOrigin": 8, "transformOriginX": 8, "transformOriginY": 8, "backfaceVisibility": 8, "perspective": 8, "perspectiveOrigin": 8, "transformStyle": 8, "transformOriginZ": 8, "animation": 8, "animationDelay": 8, "animationDirection": 8, "animationFillMode": 8, "animationDuration": 8, "animationIterationCount": 8, "animationName": 8, "animationPlayState": 8, "animationTimingFunction": 8, "appearance": 10.1, "userSelect": 10.1, "backdropFilter": 10.1, "fontKerning": 9, "scrollSnapType": 10, "scrollSnapPointsX": 10, "scrollSnapPointsY": 10, "scrollSnapDestination": 10, "scrollSnapCoordinate": 10, "textEmphasisPosition": 7, "textEmphasis": 7, "textEmphasisStyle": 7, "textEmphasisColor": 7, "boxDecorationBreak": 10.1, "clipPath": 10.1, "maskImage": 10.1, "maskMode": 10.1, "maskRepeat": 10.1, "maskPosition": 10.1, "maskClip": 10.1, "maskOrigin": 10.1, "maskSize": 10.1, "maskComposite": 10.1, "mask": 10.1, "maskBorderSource": 10.1, "maskBorderMode": 10.1, "maskBorderSlice": 10.1, "maskBorderWidth": 10.1, "maskBorderOutset": 10.1, "maskBorderRepeat": 10.1, "maskBorder": 10.1, "maskType": 10.1, "textDecorationStyle": 10.1, "textDecorationSkip": 10.1, "textDecorationLine": 10.1, "textDecorationColor": 10.1, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 10.1, "flowInto": 10.1, "flowFrom": 10.1, "breakBefore": 8, "breakAfter": 8, "breakInside": 8, "regionFragment": 10.1, "columnCount": 8, "columnFill": 8, "columnGap": 8, "columnRule": 8, "columnRuleColor": 8, "columnRuleStyle": 8, "columnRuleWidth": 8, "columns": 8, "columnSpan": 8, "columnWidth": 8 }, "firefox": { "appearance": 55, "userSelect": 55, "boxSizing": 28, "textAlignLast": 48, "textDecorationStyle": 35, "textDecorationSkip": 35, "textDecorationLine": 35, "textDecorationColor": 35, "tabSize": 55, "hyphens": 42, "fontFeatureSettings": 33, "breakAfter": 51, "breakBefore": 51, "breakInside": 51, "columnCount": 51, "columnFill": 51, "columnGap": 51, "columnRule": 51, "columnRuleColor": 51, "columnRuleStyle": 51, "columnRuleWidth": 51, "columns": 51, "columnSpan": 51, "columnWidth": 51 }, "opera": { "flex": 16, "flexBasis": 16, "flexDirection": 16, "flexGrow": 16, "flexFlow": 16, "flexShrink": 16, "flexWrap": 16, "alignContent": 16, "alignItems": 16, "alignSelf": 16, "justifyContent": 16, "order": 16, "transform": 22, "transformOrigin": 22, "transformOriginX": 22, "transformOriginY": 22, "backfaceVisibility": 22, "perspective": 22, "perspectiveOrigin": 22, "transformStyle": 22, "transformOriginZ": 22, "animation": 29, "animationDelay": 29, "animationDirection": 29, "animationFillMode": 29, "animationDuration": 29, "animationIterationCount": 29, "animationName": 29, "animationPlayState": 29, "animationTimingFunction": 29, "appearance": 45, "userSelect": 40, "fontKerning": 19, "textEmphasisPosition": 45, "textEmphasis": 45, "textEmphasisStyle": 45, "textEmphasisColor": 45, "boxDecorationBreak": 45, "clipPath": 41, "maskImage": 45, "maskMode": 45, "maskRepeat": 45, "maskPosition": 45, "maskClip": 45, "maskOrigin": 45, "maskSize": 45, "maskComposite": 45, "mask": 45, "maskBorderSource": 45, "maskBorderMode": 45, "maskBorderSlice": 45, "maskBorderWidth": 45, "maskBorderOutset": 45, "maskBorderRepeat": 45, "maskBorder": 45, "maskType": 45, "textDecorationStyle": 43, "textDecorationSkip": 43, "textDecorationLine": 43, "textDecorationColor": 43, "filter": 39, "fontFeatureSettings": 34, "breakAfter": 36, "breakBefore": 36, "breakInside": 36, "columnCount": 36, "columnFill": 36, "columnGap": 36, "columnRule": 36, "columnRuleColor": 36, "columnRuleStyle": 36, "columnRuleWidth": 36, "columns": 36, "columnSpan": 36, "columnWidth": 36 }, "ie": { "flex": 10, "flexDirection": 10, "flexFlow": 10, "flexWrap": 10, "transform": 9, "transformOrigin": 9, "transformOriginX": 9, "transformOriginY": 9, "userSelect": 11, "wrapFlow": 11, "wrapThrough": 11, "wrapMargin": 11, "scrollSnapType": 11, "scrollSnapPointsX": 11, "scrollSnapPointsY": 11, "scrollSnapDestination": 11, "scrollSnapCoordinate": 11, "touchAction": 10, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 11, "breakAfter": 11, "breakInside": 11, "regionFragment": 11, "gridTemplateColumns": 11, "gridTemplateRows": 11, "gridTemplateAreas": 11, "gridTemplate": 11, "gridAutoColumns": 11, "gridAutoRows": 11, "gridAutoFlow": 11, "grid": 11, "gridRowStart": 11, "gridColumnStart": 11, "gridRowEnd": 11, "gridRow": 11, "gridColumn": 11, "gridColumnEnd": 11, "gridColumnGap": 11, "gridRowGap": 11, "gridArea": 11, "gridGap": 11, "textSizeAdjust": 11 }, "edge": { "userSelect": 15, "wrapFlow": 15, "wrapThrough": 15, "wrapMargin": 15, "scrollSnapType": 15, "scrollSnapPointsX": 15, "scrollSnapPointsY": 15, "scrollSnapDestination": 15, "scrollSnapCoordinate": 15, "hyphens": 15, "flowInto": 15, "flowFrom": 15, "breakBefore": 15, "breakAfter": 15, "breakInside": 15, "regionFragment": 15, "gridTemplateColumns": 15, "gridTemplateRows": 15, "gridTemplateAreas": 15, "gridTemplate": 15, "gridAutoColumns": 15, "gridAutoRows": 15, "gridAutoFlow": 15, "grid": 15, "gridRowStart": 15, "gridColumnStart": 15, "gridRowEnd": 15, "gridRow": 15, "gridColumn": 15, "gridColumnEnd": 15, "gridColumnGap": 15, "gridRowGap": 15, "gridArea": 15, "gridGap": 15 }, "ios_saf": { "flex": 8.1, "flexBasis": 8.1, "flexDirection": 8.1, "flexGrow": 8.1, "flexFlow": 8.1, "flexShrink": 8.1, "flexWrap": 8.1, "alignContent": 8.1, "alignItems": 8.1, "alignSelf": 8.1, "justifyContent": 8.1, "order": 8.1, "transition": 6, "transitionDelay": 6, "transitionDuration": 6, "transitionProperty": 6, "transitionTimingFunction": 6, "transform": 8.1, "transformOrigin": 8.1, "transformOriginX": 8.1, "transformOriginY": 8.1, "backfaceVisibility": 8.1, "perspective": 8.1, "perspectiveOrigin": 8.1, "transformStyle": 8.1, "transformOriginZ": 8.1, "animation": 8.1, "animationDelay": 8.1, "animationDirection": 8.1, "animationFillMode": 8.1, "animationDuration": 8.1, "animationIterationCount": 8.1, "animationName": 8.1, "animationPlayState": 8.1, "animationTimingFunction": 8.1, "appearance": 10, "userSelect": 10, "backdropFilter": 10, "fontKerning": 10, "scrollSnapType": 10, "scrollSnapPointsX": 10, "scrollSnapPointsY": 10, "scrollSnapDestination": 10, "scrollSnapCoordinate": 10, "boxDecorationBreak": 10, "clipPath": 10, "maskImage": 10, "maskMode": 10, "maskRepeat": 10, "maskPosition": 10, "maskClip": 10, "maskOrigin": 10, "maskSize": 10, "maskComposite": 10, "mask": 10, "maskBorderSource": 10, "maskBorderMode": 10, "maskBorderSlice": 10, "maskBorderWidth": 10, "maskBorderOutset": 10, "maskBorderRepeat": 10, "maskBorder": 10, "maskType": 10, "textSizeAdjust": 10, "textDecorationStyle": 10, "textDecorationSkip": 10, "textDecorationLine": 10, "textDecorationColor": 10, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 10, "flowInto": 10, "flowFrom": 10, "breakBefore": 8.1, "breakAfter": 8.1, "breakInside": 8.1, "regionFragment": 10, "columnCount": 8.1, "columnFill": 8.1, "columnGap": 8.1, "columnRule": 8.1, "columnRuleColor": 8.1, "columnRuleStyle": 8.1, "columnRuleWidth": 8.1, "columns": 8.1, "columnSpan": 8.1, "columnWidth": 8.1 }, "android": { "borderImage": 4.2, "borderImageOutset": 4.2, "borderImageRepeat": 4.2, "borderImageSlice": 4.2, "borderImageSource": 4.2, "borderImageWidth": 4.2, "flex": 4.2, "flexBasis": 4.2, "flexDirection": 4.2, "flexGrow": 4.2, "flexFlow": 4.2, "flexShrink": 4.2, "flexWrap": 4.2, "alignContent": 4.2, "alignItems": 4.2, "alignSelf": 4.2, "justifyContent": 4.2, "order": 4.2, "transition": 4.2, "transitionDelay": 4.2, "transitionDuration": 4.2, "transitionProperty": 4.2, "transitionTimingFunction": 4.2, "transform": 4.4, "transformOrigin": 4.4, "transformOriginX": 4.4, "transformOriginY": 4.4, "backfaceVisibility": 4.4, "perspective": 4.4, "perspectiveOrigin": 4.4, "transformStyle": 4.4, "transformOriginZ": 4.4, "animation": 4.4, "animationDelay": 4.4, "animationDirection": 4.4, "animationFillMode": 4.4, "animationDuration": 4.4, "animationIterationCount": 4.4, "animationName": 4.4, "animationPlayState": 4.4, "animationTimingFunction": 4.4, "appearance": 53, "userSelect": 53, "fontKerning": 4.4, "textEmphasisPosition": 53, "textEmphasis": 53, "textEmphasisStyle": 53, "textEmphasisColor": 53, "boxDecorationBreak": 53, "clipPath": 53, "maskImage": 53, "maskMode": 53, "maskRepeat": 53, "maskPosition": 53, "maskClip": 53, "maskOrigin": 53, "maskSize": 53, "maskComposite": 53, "mask": 53, "maskBorderSource": 53, "maskBorderMode": 53, "maskBorderSlice": 53, "maskBorderWidth": 53, "maskBorderOutset": 53, "maskBorderRepeat": 53, "maskBorder": 53, "maskType": 53, "filter": 4.4, "fontFeatureSettings": 4.4, "breakAfter": 53, "breakBefore": 53, "breakInside": 53, "columnCount": 53, "columnFill": 53, "columnGap": 53, "columnRule": 53, "columnRuleColor": 53, "columnRuleStyle": 53, "columnRuleWidth": 53, "columns": 53, "columnSpan": 53, "columnWidth": 53 }, "and_chr": { "appearance": 56, "textEmphasisPosition": 56, "textEmphasis": 56, "textEmphasisStyle": 56, "textEmphasisColor": 56, "boxDecorationBreak": 56, "maskImage": 56, "maskMode": 56, "maskRepeat": 56, "maskPosition": 56, "maskClip": 56, "maskOrigin": 56, "maskSize": 56, "maskComposite": 56, "mask": 56, "maskBorderSource": 56, "maskBorderMode": 56, "maskBorderSlice": 56, "maskBorderWidth": 56, "maskBorderOutset": 56, "maskBorderRepeat": 56, "maskBorder": 56, "maskType": 56, "textDecorationStyle": 56, "textDecorationSkip": 56, "textDecorationLine": 56, "textDecorationColor": 56 }, "and_uc": { "flex": 11, "flexBasis": 11, "flexDirection": 11, "flexGrow": 11, "flexFlow": 11, "flexShrink": 11, "flexWrap": 11, "alignContent": 11, "alignItems": 11, "alignSelf": 11, "justifyContent": 11, "order": 11, "transition": 11, "transitionDelay": 11, "transitionDuration": 11, "transitionProperty": 11, "transitionTimingFunction": 11, "transform": 11, "transformOrigin": 11, "transformOriginX": 11, "transformOriginY": 11, "backfaceVisibility": 11, "perspective": 11, "perspectiveOrigin": 11, "transformStyle": 11, "transformOriginZ": 11, "animation": 11, "animationDelay": 11, "animationDirection": 11, "animationFillMode": 11, "animationDuration": 11, "animationIterationCount": 11, "animationName": 11, "animationPlayState": 11, "animationTimingFunction": 11, "appearance": 11, "userSelect": 11, "fontKerning": 11, "textEmphasisPosition": 11, "textEmphasis": 11, "textEmphasisStyle": 11, "textEmphasisColor": 11, "maskImage": 11, "maskMode": 11, "maskRepeat": 11, "maskPosition": 11, "maskClip": 11, "maskOrigin": 11, "maskSize": 11, "maskComposite": 11, "mask": 11, "maskBorderSource": 11, "maskBorderMode": 11, "maskBorderSlice": 11, "maskBorderWidth": 11, "maskBorderOutset": 11, "maskBorderRepeat": 11, "maskBorder": 11, "maskType": 11, "textSizeAdjust": 11, "filter": 11, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 11, "breakAfter": 11, "breakInside": 11, "regionFragment": 11, "fontFeatureSettings": 11, "columnCount": 11, "columnFill": 11, "columnGap": 11, "columnRule": 11, "columnRuleColor": 11, "columnRuleStyle": 11, "columnRuleWidth": 11, "columns": 11, "columnSpan": 11, "columnWidth": 11 }, "op_mini": {} }
}; /* eslint-disable */

var autoprefixerStatic = {};

Object.defineProperty(autoprefixerStatic, "__esModule", {
  value: true
});

var _calc = calc$1.exports;

var _calc2 = _interopRequireDefault$1v(_calc);

var _flex = flex$1.exports;

var _flex2 = _interopRequireDefault$1v(_flex);

var _flexboxIE = flexboxIE$1.exports;

var _flexboxIE2 = _interopRequireDefault$1v(_flexboxIE);

var _flexboxOld = flexboxOld$1.exports;

var _flexboxOld2 = _interopRequireDefault$1v(_flexboxOld);

var _gradient = gradient$1.exports;

var _gradient2 = _interopRequireDefault$1v(_gradient);

var _sizing = sizing$1.exports;

var _sizing2 = _interopRequireDefault$1v(_sizing);

var _transition = transition$1.exports;

var _transition2 = _interopRequireDefault$1v(_transition);

function _interopRequireDefault$1v(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

autoprefixerStatic.default = {
  plugins: [_calc2.default, _flex2.default, _flexboxIE2.default, _flexboxOld2.default, _gradient2.default, _sizing2.default, _transition2.default],
  prefixMap: { "transform": ["Webkit", "ms"], "transformOrigin": ["Webkit", "ms"], "transformOriginX": ["Webkit", "ms"], "transformOriginY": ["Webkit", "ms"], "backfaceVisibility": ["Webkit"], "perspective": ["Webkit"], "perspectiveOrigin": ["Webkit"], "transformStyle": ["Webkit"], "transformOriginZ": ["Webkit"], "animation": ["Webkit"], "animationDelay": ["Webkit"], "animationDirection": ["Webkit"], "animationFillMode": ["Webkit"], "animationDuration": ["Webkit"], "animationIterationCount": ["Webkit"], "animationName": ["Webkit"], "animationPlayState": ["Webkit"], "animationTimingFunction": ["Webkit"], "appearance": ["Webkit", "Moz"], "userSelect": ["Webkit", "Moz", "ms"], "fontKerning": ["Webkit"], "textEmphasisPosition": ["Webkit"], "textEmphasis": ["Webkit"], "textEmphasisStyle": ["Webkit"], "textEmphasisColor": ["Webkit"], "boxDecorationBreak": ["Webkit"], "clipPath": ["Webkit"], "maskImage": ["Webkit"], "maskMode": ["Webkit"], "maskRepeat": ["Webkit"], "maskPosition": ["Webkit"], "maskClip": ["Webkit"], "maskOrigin": ["Webkit"], "maskSize": ["Webkit"], "maskComposite": ["Webkit"], "mask": ["Webkit"], "maskBorderSource": ["Webkit"], "maskBorderMode": ["Webkit"], "maskBorderSlice": ["Webkit"], "maskBorderWidth": ["Webkit"], "maskBorderOutset": ["Webkit"], "maskBorderRepeat": ["Webkit"], "maskBorder": ["Webkit"], "maskType": ["Webkit"], "textDecorationStyle": ["Webkit", "Moz"], "textDecorationSkip": ["Webkit", "Moz"], "textDecorationLine": ["Webkit", "Moz"], "textDecorationColor": ["Webkit", "Moz"], "filter": ["Webkit"], "fontFeatureSettings": ["Webkit", "Moz"], "breakAfter": ["Webkit", "Moz", "ms"], "breakBefore": ["Webkit", "Moz", "ms"], "breakInside": ["Webkit", "Moz", "ms"], "columnCount": ["Webkit", "Moz"], "columnFill": ["Webkit", "Moz"], "columnGap": ["Webkit", "Moz"], "columnRule": ["Webkit", "Moz"], "columnRuleColor": ["Webkit", "Moz"], "columnRuleStyle": ["Webkit", "Moz"], "columnRuleWidth": ["Webkit", "Moz"], "columns": ["Webkit", "Moz"], "columnSpan": ["Webkit", "Moz"], "columnWidth": ["Webkit", "Moz"], "flex": ["Webkit", "ms"], "flexBasis": ["Webkit"], "flexDirection": ["Webkit", "ms"], "flexGrow": ["Webkit"], "flexFlow": ["Webkit", "ms"], "flexShrink": ["Webkit"], "flexWrap": ["Webkit", "ms"], "alignContent": ["Webkit"], "alignItems": ["Webkit"], "alignSelf": ["Webkit"], "justifyContent": ["Webkit"], "order": ["Webkit"], "transitionDelay": ["Webkit"], "transitionDuration": ["Webkit"], "transitionProperty": ["Webkit"], "transitionTimingFunction": ["Webkit"], "backdropFilter": ["Webkit"], "scrollSnapType": ["Webkit", "ms"], "scrollSnapPointsX": ["Webkit", "ms"], "scrollSnapPointsY": ["Webkit", "ms"], "scrollSnapDestination": ["Webkit", "ms"], "scrollSnapCoordinate": ["Webkit", "ms"], "shapeImageThreshold": ["Webkit"], "shapeImageMargin": ["Webkit"], "shapeImageOutside": ["Webkit"], "hyphens": ["Webkit", "Moz", "ms"], "flowInto": ["Webkit", "ms"], "flowFrom": ["Webkit", "ms"], "regionFragment": ["Webkit", "ms"], "boxSizing": ["Moz"], "textAlignLast": ["Moz"], "tabSize": ["Moz"], "wrapFlow": ["ms"], "wrapThrough": ["ms"], "wrapMargin": ["ms"], "touchAction": ["ms"], "gridTemplateColumns": ["ms"], "gridTemplateRows": ["ms"], "gridTemplateAreas": ["ms"], "gridTemplate": ["ms"], "gridAutoColumns": ["ms"], "gridAutoRows": ["ms"], "gridAutoFlow": ["ms"], "grid": ["ms"], "gridRowStart": ["ms"], "gridColumnStart": ["ms"], "gridRowEnd": ["ms"], "gridRow": ["ms"], "gridColumn": ["ms"], "gridColumnEnd": ["ms"], "gridColumnGap": ["ms"], "gridRowGap": ["ms"], "gridArea": ["ms"], "gridGap": ["ms"], "textSizeAdjust": ["Webkit", "ms"], "borderImage": ["Webkit"], "borderImageOutset": ["Webkit"], "borderImageRepeat": ["Webkit"], "borderImageSlice": ["Webkit"], "borderImageSource": ["Webkit"], "borderImageWidth": ["Webkit"] }
}; /* eslint-disable */

Object.defineProperty(autoprefixer, "__esModule", {
  value: true
});

autoprefixer.default = function (muiTheme) {
  var isClient = typeof navigator !== 'undefined';
  var userAgent = muiTheme.userAgent;

  if (userAgent === undefined && isClient) {
    userAgent = navigator.userAgent;
  }

  if (userAgent === undefined && !hasWarnedAboutUserAgent) {
    (0, _warning2$7.default)(false, 'Material-UI: userAgent should be supplied in the muiTheme context\n      for server-side rendering.') ;

    hasWarnedAboutUserAgent = true;
  }

  var prefixAll = (0, _createPrefixer2.default)(_autoprefixerStatic2.default);

  if (userAgent === false) {
    // Disabled autoprefixer
    return null;
  } else if (userAgent === 'all' || userAgent === undefined) {
    // Prefix for all user agent
    return function (style) {
      var isFlex = ['flex', 'inline-flex'].indexOf(style.display) !== -1;
      var stylePrefixed = prefixAll(style);

      if (isFlex) {
        var display = stylePrefixed.display;
        if (isClient) {
          // We can't apply this join with react-dom:
          // #https://github.com/facebook/react/issues/6467
          stylePrefixed.display = display[display.length - 1];
        } else {
          stylePrefixed.display = display.join('; display: ');
        }
      }

      return stylePrefixed;
    };
  } else {
    var Prefixer = (0, _createPrefixer4.default)(_autoprefixerDynamic2.default, prefixAll);
    var prefixer = new Prefixer({
      userAgent: userAgent
    });

    return function (style) {
      return prefixer.prefix(style);
    };
  }
};

var _createPrefixer = createPrefixer$1.exports;

var _createPrefixer2 = _interopRequireDefault$1u(_createPrefixer);

var _createPrefixer3 = createPrefixer.exports;

var _createPrefixer4 = _interopRequireDefault$1u(_createPrefixer3);

var _autoprefixerDynamic = autoprefixerDynamic;

var _autoprefixerDynamic2 = _interopRequireDefault$1u(_autoprefixerDynamic);

var _autoprefixerStatic = autoprefixerStatic;

var _autoprefixerStatic2 = _interopRequireDefault$1u(_autoprefixerStatic);

var _warning$7 = warning_1$1;

var _warning2$7 = _interopRequireDefault$1u(_warning$7);

function _interopRequireDefault$1u(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hasWarnedAboutUserAgent = false;

var callOnce$1 = {};

Object.defineProperty(callOnce$1, "__esModule", {
  value: true
});
callOnce$1.default = callOnce;

var _warning$6 = warning_1$1;

var _warning2$6 = _interopRequireDefault$1t(_warning$6);

function _interopRequireDefault$1t(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CALLED_ONCE = 'muiPrepared';

function callOnce() {
  {
    return function (style) {
      if (style[CALLED_ONCE]) {
        (0, _warning2$6.default)(false, 'Material-UI: You cannot call prepareStyles() on the same style object more than once.') ;
      }
      style[CALLED_ONCE] = true;
      return style;
    };
  }
}

var rtl$1 = {};

Object.defineProperty(rtl$1, "__esModule", {
  value: true
});

var _keys = keys$5.exports;

var _keys2 = _interopRequireDefault$1s(_keys);

rtl$1.default = rtl;

function _interopRequireDefault$1s(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reTranslate = /((^|\s)translate(3d|X)?\()(\-?[\d]+)/;
var reSkew = /((^|\s)skew(x|y)?\()\s*(\-?[\d]+)(deg|rad|grad)(,\s*(\-?[\d]+)(deg|rad|grad))?/;

/**
 * This function ensures that `style` supports both ltr and rtl directions by
 * checking `styleConstants` in `muiTheme` and replacing attribute keys if
 * necessary.
 */
function rtl(muiTheme) {
  if (muiTheme.isRtl) {
    return function (style) {
      if (style.directionInvariant === true) {
        return style;
      }

      var flippedAttributes = {
        // Keys and their replacements.
        right: 'left',
        left: 'right',
        marginRight: 'marginLeft',
        marginLeft: 'marginRight',
        paddingRight: 'paddingLeft',
        paddingLeft: 'paddingRight',
        borderRight: 'borderLeft',
        borderLeft: 'borderRight'
      };

      var newStyle = {};

      (0, _keys2.default)(style).forEach(function (attribute) {
        var value = style[attribute];
        var key = attribute;

        if (flippedAttributes.hasOwnProperty(attribute)) {
          key = flippedAttributes[attribute];
        }

        switch (attribute) {
          case 'float':
          case 'textAlign':
            if (value === 'right') {
              value = 'left';
            } else if (value === 'left') {
              value = 'right';
            }
            break;

          case 'direction':
            if (value === 'ltr') {
              value = 'rtl';
            } else if (value === 'rtl') {
              value = 'ltr';
            }
            break;

          case 'transform':
            if (!value) break;
            var matches = void 0;
            if (matches = value.match(reTranslate)) {
              value = value.replace(matches[0], matches[1] + -parseFloat(matches[4]));
            }
            if (matches = value.match(reSkew)) {
              value = value.replace(matches[0], matches[1] + -parseFloat(matches[4]) + matches[5] + matches[6] ? ', ' + (-parseFloat(matches[7]) + matches[8]) : '');
            }
            break;

          case 'transformOrigin':
            if (!value) break;
            if (value.indexOf('right') > -1) {
              value = value.replace('right', 'left');
            } else if (value.indexOf('left') > -1) {
              value = value.replace('left', 'right');
            }
            break;
        }

        newStyle[key] = value;
      });

      return newStyle;
    };
  }
}

var compose$2 = {};

compose$2.__esModule = true;
compose$2.default = compose$1;
function compose$1() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

var typography = {};

Object.defineProperty(typography, "__esModule", {
  value: true
});

var _classCallCheck2$Q = classCallCheck$3;

var _classCallCheck3$Q = _interopRequireDefault$1r(_classCallCheck2$Q);

var _colors$1 = colors;

function _interopRequireDefault$1r(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Typography = function Typography() {
  (0, _classCallCheck3$Q.default)(this, Typography);

  // text colors
  this.textFullBlack = _colors$1.fullBlack;
  this.textDarkBlack = _colors$1.darkBlack;
  this.textLightBlack = _colors$1.lightBlack;
  this.textMinBlack = _colors$1.minBlack;
  this.textFullWhite = _colors$1.fullWhite;
  this.textDarkWhite = _colors$1.darkWhite;
  this.textLightWhite = _colors$1.lightWhite;

  // font weight
  this.fontWeightLight = 300;
  this.fontWeightNormal = 400;
  this.fontWeightMedium = 500;

  this.fontStyleButtonFontSize = 14;
};

typography.default = new Typography();

Object.defineProperty(getMuiTheme$1, "__esModule", {
  value: true
});

var _toConsumableArray2$2 = toConsumableArray;

var _toConsumableArray3$2 = _interopRequireDefault$1q(_toConsumableArray2$2);

var _default$7 = getMuiTheme$1.default = getMuiTheme;

var _lodash$1 = lodash_merge.exports;

var _lodash2$1 = _interopRequireDefault$1q(_lodash$1);

var _colorManipulator$1 = colorManipulator;

var _lightBaseTheme = lightBaseTheme;

var _lightBaseTheme2 = _interopRequireDefault$1q(_lightBaseTheme);

var _zIndex = zIndex;

var _zIndex2 = _interopRequireDefault$1q(_zIndex);

var _autoprefixer = autoprefixer;

var _autoprefixer2 = _interopRequireDefault$1q(_autoprefixer);

var _callOnce = callOnce$1;

var _callOnce2 = _interopRequireDefault$1q(_callOnce);

var _rtl = rtl$1;

var _rtl2 = _interopRequireDefault$1q(_rtl);

var _compose = compose$2;

var _compose2 = _interopRequireDefault$1q(_compose);

var _typography = typography;

var _typography2 = _interopRequireDefault$1q(_typography);

var _colors = colors;

function _interopRequireDefault$1q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Get the MUI theme corresponding to a base theme.
 * It's possible to override the computed theme values
 * by providing a second argument. The calculated
 * theme will be deeply merged with the second argument.
 */
function getMuiTheme(muiTheme) {
  for (var _len = arguments.length, more = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    more[_key - 1] = arguments[_key];
  }

  muiTheme = _lodash2$1.default.apply(undefined, [{
    zIndex: _zIndex2.default,
    isRtl: false,
    userAgent: undefined
  }, _lightBaseTheme2.default, muiTheme].concat(more));

  var _muiTheme = muiTheme,
      spacing = _muiTheme.spacing,
      fontFamily = _muiTheme.fontFamily,
      palette = _muiTheme.palette;

  var baseTheme = { spacing: spacing, fontFamily: fontFamily, palette: palette };

  muiTheme = (0, _lodash2$1.default)({
    appBar: {
      color: palette.primary1Color,
      textColor: palette.alternateTextColor,
      height: spacing.desktopKeylineIncrement,
      titleFontWeight: _typography2.default.fontWeightNormal,
      padding: spacing.desktopGutter
    },
    avatar: {
      color: palette.canvasColor,
      backgroundColor: (0, _colorManipulator$1.emphasize)(palette.canvasColor, 0.26)
    },
    badge: {
      color: palette.alternateTextColor,
      textColor: palette.textColor,
      primaryColor: palette.primary1Color,
      primaryTextColor: palette.alternateTextColor,
      secondaryColor: palette.accent1Color,
      secondaryTextColor: palette.alternateTextColor,
      fontWeight: _typography2.default.fontWeightMedium
    },
    bottomNavigation: {
      backgroundColor: palette.canvasColor,
      unselectedColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.54),
      selectedColor: palette.primary1Color,
      height: 56,
      unselectedFontSize: 12,
      selectedFontSize: 14
    },
    button: {
      height: 36,
      minWidth: 88,
      iconButtonSize: spacing.iconSize * 2
    },
    card: {
      titleColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.87),
      subtitleColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.54),
      fontWeight: _typography2.default.fontWeightMedium
    },
    cardMedia: {
      color: _colors.darkWhite,
      overlayContentBackground: _colors.lightBlack,
      titleColor: _colors.darkWhite,
      subtitleColor: _colors.lightWhite
    },
    cardText: {
      textColor: palette.textColor
    },
    checkbox: {
      boxColor: palette.textColor,
      checkedColor: palette.primary1Color,
      requiredColor: palette.primary1Color,
      disabledColor: palette.disabledColor,
      labelColor: palette.textColor,
      labelDisabledColor: palette.disabledColor
    },
    chip: {
      backgroundColor: (0, _colorManipulator$1.emphasize)(palette.canvasColor, 0.12),
      deleteIconColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.26),
      textColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.87),
      fontSize: 14,
      fontWeight: _typography2.default.fontWeightNormal,
      shadow: '0 1px 6px ' + (0, _colorManipulator$1.fade)(palette.shadowColor, 0.12) + ',\n        0 1px 4px ' + (0, _colorManipulator$1.fade)(palette.shadowColor, 0.12)
    },
    datePicker: {
      color: palette.primary1Color,
      textColor: palette.alternateTextColor,
      calendarTextColor: palette.textColor,
      selectColor: palette.primary2Color,
      selectTextColor: palette.alternateTextColor,
      calendarYearBackgroundColor: palette.canvasColor,
      headerColor: palette.pickerHeaderColor || palette.primary1Color
    },
    dialog: {
      titleFontSize: 22,
      bodyFontSize: 16,
      bodyColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.6)
    },
    dropDownMenu: {
      accentColor: palette.borderColor
    },
    enhancedButton: {
      tapHighlightColor: _colors.transparent
    },
    flatButton: {
      color: _colors.transparent,
      buttonFilterColor: '#999999',
      disabledTextColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.3),
      textColor: palette.textColor,
      primaryTextColor: palette.primary1Color,
      secondaryTextColor: palette.accent1Color,
      fontSize: _typography2.default.fontStyleButtonFontSize,
      fontWeight: _typography2.default.fontWeightMedium
    },
    floatingActionButton: {
      buttonSize: 56,
      miniSize: 40,
      color: palette.primary1Color,
      iconColor: palette.alternateTextColor,
      secondaryColor: palette.accent1Color,
      secondaryIconColor: palette.alternateTextColor,
      disabledTextColor: palette.disabledColor,
      disabledColor: (0, _colorManipulator$1.emphasize)(palette.canvasColor, 0.12)
    },
    gridTile: {
      textColor: _colors.white
    },
    icon: {
      color: palette.canvasColor,
      backgroundColor: palette.primary1Color
    },
    inkBar: {
      backgroundColor: palette.accent1Color
    },
    drawer: {
      width: spacing.desktopKeylineIncrement * 4,
      color: palette.canvasColor
    },
    listItem: {
      nestedLevelDepth: 18,
      secondaryTextColor: palette.secondaryTextColor,
      leftIconColor: _colors.grey600,
      rightIconColor: _colors.grey600
    },
    menu: {
      backgroundColor: palette.canvasColor,
      containerBackgroundColor: palette.canvasColor
    },
    menuItem: {
      dataHeight: 32,
      height: 48,
      hoverColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.1),
      padding: spacing.desktopGutter,
      selectedTextColor: palette.accent1Color,
      rightIconDesktopFill: _colors.grey600
    },
    menuSubheader: {
      padding: spacing.desktopGutter,
      borderColor: palette.borderColor,
      textColor: palette.primary1Color
    },
    overlay: {
      backgroundColor: _colors.lightBlack
    },
    paper: {
      color: palette.textColor,
      backgroundColor: palette.canvasColor,
      zDepthShadows: [[1, 6, 0.12, 1, 4, 0.12], [3, 10, 0.16, 3, 10, 0.23], [10, 30, 0.19, 6, 10, 0.23], [14, 45, 0.25, 10, 18, 0.22], [19, 60, 0.30, 15, 20, 0.22]].map(function (d) {
        return '0 ' + d[0] + 'px ' + d[1] + 'px ' + (0, _colorManipulator$1.fade)(palette.shadowColor, d[2]) + ',\n         0 ' + d[3] + 'px ' + d[4] + 'px ' + (0, _colorManipulator$1.fade)(palette.shadowColor, d[5]);
      })
    },
    radioButton: {
      borderColor: palette.textColor,
      backgroundColor: palette.alternateTextColor,
      checkedColor: palette.primary1Color,
      requiredColor: palette.primary1Color,
      disabledColor: palette.disabledColor,
      size: 24,
      labelColor: palette.textColor,
      labelDisabledColor: palette.disabledColor
    },
    raisedButton: {
      color: palette.alternateTextColor,
      textColor: palette.textColor,
      primaryColor: palette.primary1Color,
      primaryTextColor: palette.alternateTextColor,
      secondaryColor: palette.accent1Color,
      secondaryTextColor: palette.alternateTextColor,
      disabledColor: (0, _colorManipulator$1.darken)(palette.alternateTextColor, 0.1),
      disabledTextColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.3),
      fontSize: _typography2.default.fontStyleButtonFontSize,
      fontWeight: _typography2.default.fontWeightMedium
    },
    refreshIndicator: {
      strokeColor: palette.borderColor,
      loadingStrokeColor: palette.primary1Color
    },
    ripple: {
      color: (0, _colorManipulator$1.fade)(palette.textColor, 0.87)
    },
    slider: {
      trackSize: 2,
      trackColor: palette.primary3Color,
      trackColorSelected: palette.accent3Color,
      handleSize: 12,
      handleSizeDisabled: 8,
      handleSizeActive: 18,
      handleColorZero: palette.primary3Color,
      handleFillColor: palette.alternateTextColor,
      selectionColor: palette.primary1Color,
      rippleColor: palette.primary1Color
    },
    snackbar: {
      textColor: palette.alternateTextColor,
      backgroundColor: palette.textColor,
      actionColor: palette.accent1Color
    },
    subheader: {
      color: (0, _colorManipulator$1.fade)(palette.textColor, 0.54),
      fontWeight: _typography2.default.fontWeightMedium
    },
    stepper: {
      backgroundColor: 'transparent',
      hoverBackgroundColor: (0, _colorManipulator$1.fade)(_colors.black, 0.06),
      iconColor: palette.primary1Color,
      hoveredIconColor: _colors.grey700,
      inactiveIconColor: _colors.grey500,
      textColor: (0, _colorManipulator$1.fade)(_colors.black, 0.87),
      disabledTextColor: (0, _colorManipulator$1.fade)(_colors.black, 0.26),
      connectorLineColor: _colors.grey400
    },
    svgIcon: {
      color: palette.textColor
    },
    table: {
      backgroundColor: palette.canvasColor
    },
    tableFooter: {
      borderColor: palette.borderColor,
      textColor: palette.accent3Color
    },
    tableHeader: {
      borderColor: palette.borderColor
    },
    tableHeaderColumn: {
      textColor: palette.accent3Color,
      height: 56,
      spacing: 24
    },
    tableRow: {
      hoverColor: palette.accent2Color,
      stripeColor: (0, _colorManipulator$1.fade)((0, _colorManipulator$1.lighten)(palette.primary1Color, 0.5), 0.4),
      selectedColor: palette.borderColor,
      textColor: palette.textColor,
      borderColor: palette.borderColor,
      height: 48
    },
    tableRowColumn: {
      height: 48,
      spacing: 24
    },
    tabs: {
      backgroundColor: palette.primary1Color,
      textColor: (0, _colorManipulator$1.fade)(palette.alternateTextColor, 0.7),
      selectedTextColor: palette.alternateTextColor
    },
    textField: {
      textColor: palette.textColor,
      hintColor: palette.disabledColor,
      floatingLabelColor: palette.disabledColor,
      disabledTextColor: palette.disabledColor,
      errorColor: _colors.red500,
      focusColor: palette.primary1Color,
      backgroundColor: 'transparent',
      borderColor: palette.borderColor
    },
    timePicker: {
      color: palette.alternateTextColor,
      textColor: palette.alternateTextColor,
      accentColor: palette.primary1Color,
      clockColor: palette.textColor,
      clockCircleColor: palette.clockCircleColor,
      headerColor: palette.pickerHeaderColor || palette.primary1Color,
      selectColor: palette.primary2Color,
      selectTextColor: palette.alternateTextColor
    },
    toggle: {
      thumbOnColor: palette.primary1Color,
      thumbOffColor: palette.accent2Color,
      thumbDisabledColor: palette.borderColor,
      thumbRequiredColor: palette.primary1Color,
      trackOnColor: (0, _colorManipulator$1.fade)(palette.primary1Color, 0.5),
      trackOffColor: palette.primary3Color,
      trackDisabledColor: palette.primary3Color,
      labelColor: palette.textColor,
      labelDisabledColor: palette.disabledColor,
      trackRequiredColor: (0, _colorManipulator$1.fade)(palette.primary1Color, 0.5)
    },
    toolbar: {
      color: (0, _colorManipulator$1.fade)(palette.textColor, 0.54),
      hoverColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.87),
      backgroundColor: (0, _colorManipulator$1.darken)(palette.accent2Color, 0.05),
      height: 56,
      titleFontSize: 20,
      iconColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.4),
      separatorColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.175),
      menuHoverColor: (0, _colorManipulator$1.fade)(palette.textColor, 0.1)
    },
    tooltip: {
      color: _colors.white,
      rippleBackgroundColor: _colors.grey700,
      opacity: 0.9
    }
  }, muiTheme, {
    baseTheme: baseTheme, // To provide backward compatibility.
    rawTheme: baseTheme // To provide backward compatibility.
  });

  var transformers = [_autoprefixer2.default, _rtl2.default, _callOnce2.default].map(function (t) {
    return t(muiTheme);
  }).filter(function (t) {
    return t;
  });

  muiTheme.prepareStyles = _compose2.default.apply(undefined, (0, _toConsumableArray3$2.default)(transformers));

  return muiTheme;
}

Object.defineProperty(MuiThemeProvider$1, "__esModule", {
  value: true
});

var _getPrototypeOf$O = getPrototypeOf$1.exports;

var _getPrototypeOf2$O = _interopRequireDefault$1p(_getPrototypeOf$O);

var _classCallCheck2$P = classCallCheck$3;

var _classCallCheck3$P = _interopRequireDefault$1p(_classCallCheck2$P);

var _createClass2$P = createClass$2;

var _createClass3$P = _interopRequireDefault$1p(_createClass2$P);

var _possibleConstructorReturn2$O = possibleConstructorReturn$3;

var _possibleConstructorReturn3$O = _interopRequireDefault$1p(_possibleConstructorReturn2$O);

var _inherits2$O = inherits$3;

var _inherits3$O = _interopRequireDefault$1p(_inherits2$O);

var _react$12 = react;

var _propTypes$V = propTypes$5.exports;

var _propTypes2$V = _interopRequireDefault$1p(_propTypes$V);

var _getMuiTheme = getMuiTheme$1;

var _getMuiTheme2 = _interopRequireDefault$1p(_getMuiTheme);

function _interopRequireDefault$1p(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuiThemeProvider = function (_Component) {
  (0, _inherits3$O.default)(MuiThemeProvider, _Component);

  function MuiThemeProvider() {
    (0, _classCallCheck3$P.default)(this, MuiThemeProvider);
    return (0, _possibleConstructorReturn3$O.default)(this, (MuiThemeProvider.__proto__ || (0, _getPrototypeOf2$O.default)(MuiThemeProvider)).apply(this, arguments));
  }

  (0, _createClass3$P.default)(MuiThemeProvider, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        muiTheme: this.props.muiTheme || (0, _getMuiTheme2.default)()
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);
  return MuiThemeProvider;
}(_react$12.Component);

MuiThemeProvider.childContextTypes = {
  muiTheme: _propTypes2$V.default.object.isRequired
};
MuiThemeProvider.propTypes = {
  children: _propTypes2$V.default.element,
  muiTheme: _propTypes2$V.default.object
} ;
MuiThemeProvider$1.default = MuiThemeProvider;

var Popover$3 = {};

Object.defineProperty(Popover$3, "__esModule", {
  value: true
});
Popover$3.default = Popover$3.PopoverAnimationVertical = Popover$3.Popover = undefined;

var _Popover2$3 = Popover$5;

var _Popover3$1 = _interopRequireDefault$1o(_Popover2$3);

var _PopoverAnimationVertical2$1 = PopoverAnimationVertical$3;

var _PopoverAnimationVertical3$1 = _interopRequireDefault$1o(_PopoverAnimationVertical2$1);

function _interopRequireDefault$1o(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Popover$3.Popover = _Popover3$1.default;
Popover$3.PopoverAnimationVertical = _PopoverAnimationVertical3$1.default;
Popover$3.default = _Popover3$1.default;

var RadioButton$2 = {};

var RadioButton$1 = {};

var radioButtonUnchecked = {};

Object.defineProperty(radioButtonUnchecked, "__esModule", {
  value: true
});

var _react$11 = react;

var _react2$10 = _interopRequireDefault$1n(_react$11);

var _pure$6 = pure$3;

var _pure2$6 = _interopRequireDefault$1n(_pure$6);

var _SvgIcon$7 = SvgIcon$6;

var _SvgIcon2$7 = _interopRequireDefault$1n(_SvgIcon$7);

function _interopRequireDefault$1n(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleRadioButtonUnchecked = function ToggleRadioButtonUnchecked(props) {
  return _react2$10.default.createElement(
    _SvgIcon2$7.default,
    props,
    _react2$10.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' })
  );
};
ToggleRadioButtonUnchecked = (0, _pure2$6.default)(ToggleRadioButtonUnchecked);
ToggleRadioButtonUnchecked.displayName = 'ToggleRadioButtonUnchecked';
ToggleRadioButtonUnchecked.muiName = 'SvgIcon';

radioButtonUnchecked.default = ToggleRadioButtonUnchecked;

var radioButtonChecked = {};

Object.defineProperty(radioButtonChecked, "__esModule", {
  value: true
});

var _react$10 = react;

var _react2$$ = _interopRequireDefault$1m(_react$10);

var _pure$5 = pure$3;

var _pure2$5 = _interopRequireDefault$1m(_pure$5);

var _SvgIcon$6 = SvgIcon$6;

var _SvgIcon2$6 = _interopRequireDefault$1m(_SvgIcon$6);

function _interopRequireDefault$1m(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ToggleRadioButtonChecked = function ToggleRadioButtonChecked(props) {
  return _react2$$.default.createElement(
    _SvgIcon2$6.default,
    props,
    _react2$$.default.createElement('path', { d: 'M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' })
  );
};
ToggleRadioButtonChecked = (0, _pure2$5.default)(ToggleRadioButtonChecked);
ToggleRadioButtonChecked.displayName = 'ToggleRadioButtonChecked';
ToggleRadioButtonChecked.muiName = 'SvgIcon';

radioButtonChecked.default = ToggleRadioButtonChecked;

Object.defineProperty(RadioButton$1, "__esModule", {
  value: true
});

var _extends2$E = _extends$3;

var _extends3$E = _interopRequireDefault$1l(_extends2$E);

var _objectWithoutProperties2$D = objectWithoutProperties$2;

var _objectWithoutProperties3$D = _interopRequireDefault$1l(_objectWithoutProperties2$D);

var _getPrototypeOf$N = getPrototypeOf$1.exports;

var _getPrototypeOf2$N = _interopRequireDefault$1l(_getPrototypeOf$N);

var _classCallCheck2$O = classCallCheck$3;

var _classCallCheck3$O = _interopRequireDefault$1l(_classCallCheck2$O);

var _createClass2$O = createClass$2;

var _createClass3$O = _interopRequireDefault$1l(_createClass2$O);

var _possibleConstructorReturn2$N = possibleConstructorReturn$3;

var _possibleConstructorReturn3$N = _interopRequireDefault$1l(_possibleConstructorReturn2$N);

var _inherits2$N = inherits$3;

var _inherits3$N = _interopRequireDefault$1l(_inherits2$N);

var _simpleAssign$N = simpleAssign;

var _simpleAssign2$N = _interopRequireDefault$1l(_simpleAssign$N);

var _react$$ = react;

var _react2$_ = _interopRequireDefault$1l(_react$$);

var _propTypes$U = propTypes$5.exports;

var _propTypes2$U = _interopRequireDefault$1l(_propTypes$U);

var _transitions$j = transitions;

var _transitions2$j = _interopRequireDefault$1l(_transitions$j);

var _EnhancedSwitch$1 = EnhancedSwitch$1;

var _EnhancedSwitch2$1 = _interopRequireDefault$1l(_EnhancedSwitch$1);

var _radioButtonUnchecked = radioButtonUnchecked;

var _radioButtonUnchecked2 = _interopRequireDefault$1l(_radioButtonUnchecked);

var _radioButtonChecked = radioButtonChecked;

var _radioButtonChecked2 = _interopRequireDefault$1l(_radioButtonChecked);

function _interopRequireDefault$1l(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$D(props, context) {
  var radioButton = context.muiTheme.radioButton;


  return {
    icon: {
      height: radioButton.size,
      width: radioButton.size
    },
    target: {
      transition: _transitions2$j.default.easeOut(),
      position: 'absolute',
      opacity: 1,
      transform: 'scale(1)',
      fill: radioButton.borderColor
    },
    fill: {
      position: 'absolute',
      opacity: 1,
      transform: 'scale(0)',
      transformOrigin: '50% 50%',
      transition: _transitions2$j.default.easeOut(),
      fill: radioButton.checkedColor
    },
    targetWhenChecked: {
      opacity: 0,
      transform: 'scale(0)'
    },
    fillWhenChecked: {
      opacity: 1,
      transform: 'scale(1)'
    },
    targetWhenDisabled: {
      fill: radioButton.disabledColor
    },
    fillWhenDisabled: {
      fill: radioButton.disabledColor
    },
    label: {
      color: props.disabled ? radioButton.labelDisabledColor : radioButton.labelColor
    },
    ripple: {
      color: props.checked ? radioButton.checkedColor : radioButton.borderColor
    }
  };
}

var RadioButton = function (_Component) {
  (0, _inherits3$N.default)(RadioButton, _Component);

  function RadioButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$O.default)(this, RadioButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$N.default)(this, (_ref = RadioButton.__proto__ || (0, _getPrototypeOf2$N.default)(RadioButton)).call.apply(_ref, [this].concat(args))), _this), _this.handleSwitch = function (event) {
      if (_this.props.onCheck) {
        _this.props.onCheck(event, _this.props.value);
      }
    }, _temp), (0, _possibleConstructorReturn3$N.default)(_this, _ret);
  }

  // Only called when selected, not when unselected.


  (0, _createClass3$O.default)(RadioButton, [{
    key: 'isChecked',
    value: function isChecked() {
      return this.refs.enhancedSwitch.isSwitched();
    }

    // Use RadioButtonGroup.setSelectedValue(newSelectionValue) to set a
    // RadioButton's checked value.

  }, {
    key: 'setChecked',
    value: function setChecked(newCheckedValue) {
      this.refs.enhancedSwitch.setSwitched(newCheckedValue);
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.refs.enhancedSwitch.getValue();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          checkedIcon = _props.checkedIcon,
          checked = _props.checked,
          iconStyle = _props.iconStyle,
          labelStyle = _props.labelStyle,
          labelPosition = _props.labelPosition;
          _props.onCheck;
          var uncheckedIcon = _props.uncheckedIcon,
          disabled = _props.disabled,
          other = (0, _objectWithoutProperties3$D.default)(_props, ['checkedIcon', 'checked', 'iconStyle', 'labelStyle', 'labelPosition', 'onCheck', 'uncheckedIcon', 'disabled']);


      var styles = getStyles$D(this.props, this.context);

      var uncheckedStyles = (0, _simpleAssign2$N.default)(styles.target, checked && styles.targetWhenChecked, iconStyle, disabled && styles.targetWhenDisabled);

      var checkedStyles = (0, _simpleAssign2$N.default)(styles.fill, checked && styles.fillWhenChecked, iconStyle, disabled && styles.fillWhenDisabled);

      var uncheckedElement = _react2$_.default.isValidElement(uncheckedIcon) ? _react2$_.default.cloneElement(uncheckedIcon, {
        style: (0, _simpleAssign2$N.default)(uncheckedStyles, uncheckedIcon.props.style)
      }) : _react2$_.default.createElement(_radioButtonUnchecked2.default, { style: uncheckedStyles });

      var checkedElement = _react2$_.default.isValidElement(checkedIcon) ? _react2$_.default.cloneElement(checkedIcon, {
        style: (0, _simpleAssign2$N.default)(checkedStyles, checkedIcon.props.style)
      }) : _react2$_.default.createElement(_radioButtonChecked2.default, { style: checkedStyles });

      var mergedIconStyle = (0, _simpleAssign2$N.default)(styles.icon, iconStyle);
      var mergedLabelStyle = (0, _simpleAssign2$N.default)(styles.label, labelStyle);

      return _react2$_.default.createElement(_EnhancedSwitch2$1.default, (0, _extends3$E.default)({}, other, {
        ref: 'enhancedSwitch',
        inputType: 'radio',
        checked: checked,
        switched: checked,
        disabled: disabled,
        rippleColor: styles.ripple.color,
        iconStyle: mergedIconStyle,
        labelStyle: mergedLabelStyle,
        labelPosition: labelPosition,
        onSwitch: this.handleSwitch,
        switchElement: _react2$_.default.createElement(
          'div',
          null,
          uncheckedElement,
          checkedElement
        )
      }));
    }
  }]);
  return RadioButton;
}(_react$$.Component);

RadioButton.defaultProps = {
  checked: false,
  disabled: false,
  labelPosition: 'right'
};
RadioButton.contextTypes = {
  muiTheme: _propTypes2$U.default.object.isRequired
};
RadioButton.propTypes = {
  /**
   * @ignore
   * checked if true
   * Used internally by `RadioButtonGroup`.
   */
  checked: _propTypes2$U.default.bool,
  /**
   * The icon element to show when the radio button is checked.
   */
  checkedIcon: _propTypes2$U.default.element,
  /**
   * If true, the radio button is disabled.
   */
  disabled: _propTypes2$U.default.bool,
  /**
   * Override the inline-styles of the icon element.
   */
  iconStyle: _propTypes2$U.default.object,
  /**
   * Override the inline-styles of the input element.
   */
  inputStyle: _propTypes2$U.default.object,
  /**
   * @ignore
   * Used internally by `RadioButtonGroup`. Use the `labelPosition` property of `RadioButtonGroup` instead.
   * Where the label will be placed next to the radio button.
   */
  labelPosition: _propTypes2$U.default.oneOf(['left', 'right']),
  /**
   * Override the inline-styles of the label element.
   */
  labelStyle: _propTypes2$U.default.object,
  /**
   * @ignore
   * Callback function fired when the radio button is checked. Note that this
   * function will not be called if the radio button is part of a
   * radio button group: in this case, use the `onChange` property of
   * `RadioButtonGroup`.
   *
   * @param {object} event `change` event targeting the element.
   * @param {string} value The element's `value`.
   */
  onCheck: _propTypes2$U.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$U.default.object,
  /**
   * The icon element to show when the radio button is unchecked.
   */
  uncheckedIcon: _propTypes2$U.default.element,
  /**
   * The value of the radio button.
   */
  value: _propTypes2$U.default.any
} ;
RadioButton$1.default = RadioButton;

var RadioButtonGroup$1 = {};

Object.defineProperty(RadioButtonGroup$1, "__esModule", {
  value: true
});

var _extends2$D = _extends$3;

var _extends3$D = _interopRequireDefault$1k(_extends2$D);

var _objectWithoutProperties2$C = objectWithoutProperties$2;

var _objectWithoutProperties3$C = _interopRequireDefault$1k(_objectWithoutProperties2$C);

var _getPrototypeOf$M = getPrototypeOf$1.exports;

var _getPrototypeOf2$M = _interopRequireDefault$1k(_getPrototypeOf$M);

var _classCallCheck2$N = classCallCheck$3;

var _classCallCheck3$N = _interopRequireDefault$1k(_classCallCheck2$N);

var _createClass2$N = createClass$2;

var _createClass3$N = _interopRequireDefault$1k(_createClass2$N);

var _possibleConstructorReturn2$M = possibleConstructorReturn$3;

var _possibleConstructorReturn3$M = _interopRequireDefault$1k(_possibleConstructorReturn2$M);

var _inherits2$M = inherits$3;

var _inherits3$M = _interopRequireDefault$1k(_inherits2$M);

var _simpleAssign$M = simpleAssign;

var _simpleAssign2$M = _interopRequireDefault$1k(_simpleAssign$M);

var _react$_ = react;

var _react2$Z = _interopRequireDefault$1k(_react$_);

var _propTypes$T = propTypes$5.exports;

var _propTypes2$T = _interopRequireDefault$1k(_propTypes$T);

var _RadioButton = RadioButton$1;

var _RadioButton2$1 = _interopRequireDefault$1k(_RadioButton);

var _warning$5 = warning_1$1;

var _warning2$5 = _interopRequireDefault$1k(_warning$5);

function _interopRequireDefault$1k(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RadioButtonGroup = function (_Component) {
  (0, _inherits3$M.default)(RadioButtonGroup, _Component);

  function RadioButtonGroup() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$N.default)(this, RadioButtonGroup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$M.default)(this, (_ref = RadioButtonGroup.__proto__ || (0, _getPrototypeOf2$M.default)(RadioButtonGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      numberCheckedRadioButtons: 0,
      selected: ''
    }, _this.handleChange = function (event, newSelection) {
      _this.updateRadioButtons(newSelection);

      // Successful update
      if (_this.state.numberCheckedRadioButtons === 0) {
        if (_this.props.onChange) _this.props.onChange(event, newSelection);
      }
    }, _temp), (0, _possibleConstructorReturn3$M.default)(_this, _ret);
  }

  (0, _createClass3$N.default)(RadioButtonGroup, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      var cnt = 0;
      var selected = '';
      var _props = this.props,
          valueSelected = _props.valueSelected,
          defaultSelected = _props.defaultSelected;

      if (valueSelected !== undefined) {
        selected = valueSelected;
      } else if (defaultSelected !== undefined) {
        selected = defaultSelected;
      }

      _react2$Z.default.Children.forEach(this.props.children, function (option) {
        if (_this2.hasCheckAttribute(option)) cnt++;
      }, this);

      this.setState({
        numberCheckedRadioButtons: cnt,
        selected: selected
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.hasOwnProperty('valueSelected')) {
        this.setState({
          selected: nextProps.valueSelected
        });
      }
    }
  }, {
    key: 'hasCheckAttribute',
    value: function hasCheckAttribute(radioButton) {
      return radioButton.props.hasOwnProperty('checked') && radioButton.props.checked;
    }
  }, {
    key: 'updateRadioButtons',
    value: function updateRadioButtons(newSelection) {
      if (this.state.numberCheckedRadioButtons === 0) {
        this.setState({ selected: newSelection });
      } else {
        (0, _warning2$5.default)(false, 'Material-UI: Cannot select a different radio button while another radio button\n        has the \'checked\' property set to true.') ;
      }
    }
  }, {
    key: 'getSelectedValue',
    value: function getSelectedValue() {
      return this.state.selected;
    }
  }, {
    key: 'setSelectedValue',
    value: function setSelectedValue(newSelectionValue) {
      this.updateRadioButtons(newSelectionValue);
    }
  }, {
    key: 'clearValue',
    value: function clearValue() {
      this.setSelectedValue('');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var prepareStyles = this.context.muiTheme.prepareStyles;


      var options = _react2$Z.default.Children.map(this.props.children, function (option) {
        var _option$props = option.props;
            _option$props.name;
            _option$props.value;
            _option$props.label;
            _option$props.onCheck;
            var other = (0, _objectWithoutProperties3$C.default)(_option$props, ['name', 'value', 'label', 'onCheck']);


        return _react2$Z.default.createElement(_RadioButton2$1.default, (0, _extends3$D.default)({}, other, {
          ref: option.props.value,
          name: _this3.props.name,
          key: option.props.value,
          value: option.props.value,
          label: option.props.label,
          labelPosition: _this3.props.labelPosition,
          onCheck: _this3.handleChange,
          checked: option.props.value === _this3.state.selected
        }));
      }, this);

      return _react2$Z.default.createElement(
        'div',
        {
          style: prepareStyles((0, _simpleAssign2$M.default)({}, this.props.style)),
          className: this.props.className
        },
        options
      );
    }
  }]);
  return RadioButtonGroup;
}(_react$_.Component);

RadioButtonGroup.defaultProps = {
  style: {}
};
RadioButtonGroup.contextTypes = {
  muiTheme: _propTypes2$T.default.object.isRequired
};
RadioButtonGroup.propTypes = {
  /**
   * Should be used to pass `RadioButton` components.
   */
  children: _propTypes2$T.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$T.default.string,
  /**
   * The `value` property of the radio button that will be
   * selected by default. This takes precedence over the `checked` property
   * of the `RadioButton` elements.
   */
  defaultSelected: _propTypes2$T.default.any,
  /**
   * Where the label will be placed for all child radio buttons.
   * This takes precedence over the `labelPosition` property of the
   * `RadioButton` elements.
   */
  labelPosition: _propTypes2$T.default.oneOf(['left', 'right']),
  /**
   * The name that will be applied to all child radio buttons.
   */
  name: _propTypes2$T.default.string.isRequired,
  /**
   * Callback function that is fired when a radio button has
   * been checked.
   *
   * @param {object} event `change` event targeting the selected
   * radio button.
   * @param {*} value The `value` of the selected radio button.
   */
  onChange: _propTypes2$T.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$T.default.object,
  /**
   * The `value` of the currently selected radio button.
   */
  valueSelected: _propTypes2$T.default.any
} ;
RadioButtonGroup$1.default = RadioButtonGroup;

Object.defineProperty(RadioButton$2, "__esModule", {
  value: true
});
RadioButton$2.default = RadioButton$2.RadioButtonGroup = RadioButton$2.RadioButton = undefined;

var _RadioButton2 = RadioButton$1;

var _RadioButton3 = _interopRequireDefault$1j(_RadioButton2);

var _RadioButtonGroup2 = RadioButtonGroup$1;

var _RadioButtonGroup3 = _interopRequireDefault$1j(_RadioButtonGroup2);

function _interopRequireDefault$1j(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

RadioButton$2.RadioButton = _RadioButton3.default;
RadioButton$2.RadioButtonGroup = _RadioButtonGroup3.default;
RadioButton$2.default = _RadioButton3.default;

var RefreshIndicator$2 = {};

var RefreshIndicator$1 = {};

Object.defineProperty(RefreshIndicator$1, "__esModule", {
  value: true
});

var _objectWithoutProperties2$B = objectWithoutProperties$2;

var _objectWithoutProperties3$B = _interopRequireDefault$1i(_objectWithoutProperties2$B);

var _slicedToArray2$2 = slicedToArray;

var _slicedToArray3$2 = _interopRequireDefault$1i(_slicedToArray2$2);

var _extends2$C = _extends$3;

var _extends3$C = _interopRequireDefault$1i(_extends2$C);

var _getPrototypeOf$L = getPrototypeOf$1.exports;

var _getPrototypeOf2$L = _interopRequireDefault$1i(_getPrototypeOf$L);

var _classCallCheck2$M = classCallCheck$3;

var _classCallCheck3$M = _interopRequireDefault$1i(_classCallCheck2$M);

var _createClass2$M = createClass$2;

var _createClass3$M = _interopRequireDefault$1i(_createClass2$M);

var _possibleConstructorReturn2$L = possibleConstructorReturn$3;

var _possibleConstructorReturn3$L = _interopRequireDefault$1i(_possibleConstructorReturn2$L);

var _inherits2$L = inherits$3;

var _inherits3$L = _interopRequireDefault$1i(_inherits2$L);

var _simpleAssign$L = simpleAssign;

var _simpleAssign2$L = _interopRequireDefault$1i(_simpleAssign$L);

var _react$Z = react;

var _react2$Y = _interopRequireDefault$1i(_react$Z);

var _propTypes$S = propTypes$5.exports;

var _propTypes2$S = _interopRequireDefault$1i(_propTypes$S);

var _autoPrefix = autoPrefix;

var _autoPrefix2 = _interopRequireDefault$1i(_autoPrefix);

var _transitions$i = transitions;

var _transitions2$i = _interopRequireDefault$1i(_transitions$i);

var _Paper$4 = Paper$2;

var _Paper2$4 = _interopRequireDefault$1i(_Paper$4);

function _interopRequireDefault$1i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VIEWBOX_SIZE = 32;

function getStyles$C(props) {
  var padding = props.size * 0.1; // same implementation of `this.getPaddingSize()`
  return {
    root: {
      position: 'absolute',
      zIndex: 2,
      width: props.size,
      height: props.size,
      padding: padding,
      top: -10000,
      left: -10000,
      transform: 'translate(' + (10000 + props.left) + 'px, ' + (10000 + props.top) + 'px)',
      opacity: props.status === 'hide' ? 0 : 1,
      transition: props.status === 'hide' ? _transitions2$i.default.create('all', '.3s', 'ease-out') : 'none'
    }
  };
}

var RefreshIndicator = function (_Component) {
  (0, _inherits3$L.default)(RefreshIndicator, _Component);

  function RefreshIndicator() {
    (0, _classCallCheck3$M.default)(this, RefreshIndicator);
    return (0, _possibleConstructorReturn3$L.default)(this, (RefreshIndicator.__proto__ || (0, _getPrototypeOf2$L.default)(RefreshIndicator)).apply(this, arguments));
  }

  (0, _createClass3$M.default)(RefreshIndicator, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.scalePath(this.refs.path, 0);
      this.rotateWrapper(this.refs.wrapper);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      clearTimeout(this.scalePathTimer);
      clearTimeout(this.rotateWrapperTimer);
      clearTimeout(this.rotateWrapperSecondTimer);

      this.scalePath(this.refs.path, 0);
      this.rotateWrapper(this.refs.wrapper);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.scalePathTimer);
      clearTimeout(this.rotateWrapperTimer);
      clearTimeout(this.rotateWrapperSecondTimer);
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren() {
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var paperSize = this.getPaperSize();

      var childrenCmp = null;
      if (this.props.status !== 'ready') {
        var circleStyle = this.getCircleStyle(paperSize);
        childrenCmp = _react2$Y.default.createElement(
          'div',
          {
            ref: 'wrapper',
            style: prepareStyles({
              transition: _transitions2$i.default.create('transform', '20s', null, 'linear'),
              width: '100%',
              height: '100%'
            })
          },
          _react2$Y.default.createElement(
            'svg',
            {
              style: {
                width: paperSize,
                height: paperSize
              },
              viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE
            },
            _react2$Y.default.createElement('circle', (0, _extends3$C.default)({
              ref: 'path',
              style: prepareStyles((0, _simpleAssign2$L.default)(circleStyle.style, {
                transition: _transitions2$i.default.create('all', '1.5s', null, 'ease-in-out')
              }))
            }, circleStyle.attr))
          )
        );
      } else {
        var _circleStyle = this.getCircleStyle(paperSize);
        var polygonStyle = this.getPolygonStyle(paperSize);
        childrenCmp = _react2$Y.default.createElement(
          'svg',
          {
            style: {
              width: paperSize,
              height: paperSize
            },
            viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE
          },
          _react2$Y.default.createElement('circle', (0, _extends3$C.default)({
            style: prepareStyles(_circleStyle.style)
          }, _circleStyle.attr)),
          _react2$Y.default.createElement('polygon', (0, _extends3$C.default)({
            style: prepareStyles(polygonStyle.style)
          }, polygonStyle.attr))
        );
      }

      return childrenCmp;
    }
  }, {
    key: 'getTheme',
    value: function getTheme() {
      return this.context.muiTheme.refreshIndicator;
    }
  }, {
    key: 'getPaddingSize',
    value: function getPaddingSize() {
      var padding = this.props.size * 0.1;
      return padding;
    }
  }, {
    key: 'getPaperSize',
    value: function getPaperSize() {
      return this.props.size - this.getPaddingSize() * 2;
    }
  }, {
    key: 'getCircleAttr',
    value: function getCircleAttr() {
      return {
        radiu: VIEWBOX_SIZE / 2 - 5,
        originX: VIEWBOX_SIZE / 2,
        originY: VIEWBOX_SIZE / 2,
        strokeWidth: 3
      };
    }
  }, {
    key: 'getArcDeg',
    value: function getArcDeg() {
      var p = this.props.percentage / 100;

      var beginDeg = p * 120;
      var endDeg = p * 410;
      return [beginDeg, endDeg];
    }
  }, {
    key: 'getFactor',
    value: function getFactor() {
      var p = this.props.percentage / 100;
      var p1 = Math.min(1, p / 0.4);

      return p1;
    }
  }, {
    key: 'getCircleStyle',
    value: function getCircleStyle() {
      var isLoading = this.props.status === 'loading';
      var p1 = isLoading ? 1 : this.getFactor();
      var circle = this.getCircleAttr();
      var perimeter = Math.PI * 2 * circle.radiu;

      var _getArcDeg = this.getArcDeg(),
          _getArcDeg2 = (0, _slicedToArray3$2.default)(_getArcDeg, 2),
          beginDeg = _getArcDeg2[0],
          endDeg = _getArcDeg2[1];

      var arcLen = (endDeg - beginDeg) * perimeter / 360;
      var dashOffset = -beginDeg * perimeter / 360;

      var theme = this.getTheme();
      return {
        style: {
          strokeDasharray: arcLen + ', ' + (perimeter - arcLen),
          strokeDashoffset: dashOffset,
          stroke: isLoading || this.props.percentage === 100 ? this.props.loadingColor || theme.loadingStrokeColor : this.props.color || theme.strokeColor,
          strokeLinecap: 'round',
          opacity: p1,
          strokeWidth: circle.strokeWidth * p1,
          fill: 'none'
        },
        attr: {
          cx: circle.originX,
          cy: circle.originY,
          r: circle.radiu
        }
      };
    }
  }, {
    key: 'getPolygonStyle',
    value: function getPolygonStyle() {
      var p1 = this.getFactor();
      var circle = this.getCircleAttr();

      var triangleCx = circle.originX + circle.radiu;
      var triangleCy = circle.originY;
      var dx = circle.strokeWidth * 7 / 4 * p1;
      var trianglePath = triangleCx - dx + ',' + triangleCy + ' ' + (triangleCx + dx) + ',' + triangleCy + ' ' + triangleCx + ',' + (triangleCy + dx);

      var _getArcDeg3 = this.getArcDeg(),
          _getArcDeg4 = (0, _slicedToArray3$2.default)(_getArcDeg3, 2),
          endDeg = _getArcDeg4[1];

      var theme = this.getTheme();
      return {
        style: {
          fill: this.props.percentage === 100 ? this.props.loadingColor || theme.loadingStrokeColor : this.props.color || theme.strokeColor,
          transform: 'rotate(' + endDeg + 'deg)',
          transformOrigin: circle.originX + 'px ' + circle.originY + 'px',
          opacity: p1
        },
        attr: {
          points: trianglePath
        }
      };
    }
  }, {
    key: 'scalePath',
    value: function scalePath(path, step) {
      var _this2 = this;

      if (this.props.status !== 'loading') return;

      var currStep = (step || 0) % 3;

      var circle = this.getCircleAttr();
      var perimeter = Math.PI * 2 * circle.radiu;
      var arcLen = perimeter * 0.64;

      var strokeDasharray = void 0;
      var strokeDashoffset = void 0;
      var transitionDuration = void 0;

      if (currStep === 0) {
        strokeDasharray = '1, 200';
        strokeDashoffset = 0;
        transitionDuration = '0ms';
      } else if (currStep === 1) {
        strokeDasharray = arcLen + ', 200';
        strokeDashoffset = -15;
        transitionDuration = '750ms';
      } else {
        strokeDasharray = arcLen + ', 200';
        strokeDashoffset = -(perimeter - 1);
        transitionDuration = '850ms';
      }

      _autoPrefix2.default.set(path.style, 'strokeDasharray', strokeDasharray);
      _autoPrefix2.default.set(path.style, 'strokeDashoffset', strokeDashoffset);
      _autoPrefix2.default.set(path.style, 'transitionDuration', transitionDuration);

      this.scalePathTimer = setTimeout(function () {
        return _this2.scalePath(path, currStep + 1);
      }, currStep ? 750 : 250);
    }
  }, {
    key: 'rotateWrapper',
    value: function rotateWrapper(wrapper) {
      var _this3 = this;

      if (this.props.status !== 'loading') return;

      _autoPrefix2.default.set(wrapper.style, 'transform', null);
      _autoPrefix2.default.set(wrapper.style, 'transform', 'rotate(0deg)');
      _autoPrefix2.default.set(wrapper.style, 'transitionDuration', '0ms');

      this.rotateWrapperSecondTimer = setTimeout(function () {
        _autoPrefix2.default.set(wrapper.style, 'transform', 'rotate(1800deg)');
        _autoPrefix2.default.set(wrapper.style, 'transitionDuration', '10s');
        _autoPrefix2.default.set(wrapper.style, 'transitionTimingFunction', 'linear');
      }, 50);

      this.rotateWrapperTimer = setTimeout(function () {
        return _this3.rotateWrapper(wrapper);
      }, 10050);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style;
          _props.top;
          _props.left;
          _props.percentage;
          _props.status;
          _props.loadingColor;
          var other = (0, _objectWithoutProperties3$B.default)(_props, ['style', 'top', 'left', 'percentage', 'status', 'loadingColor']);


      var styles = getStyles$C(this.props, this.context);

      return _react2$Y.default.createElement(
        _Paper2$4.default,
        (0, _extends3$C.default)({
          circle: true,
          style: (0, _simpleAssign2$L.default)(styles.root, style)
        }, other),
        this.renderChildren()
      );
    }
  }]);
  return RefreshIndicator;
}(_react$Z.Component);

RefreshIndicator.defaultProps = {
  percentage: 0,
  size: 40,
  status: 'hide'
};
RefreshIndicator.contextTypes = {
  muiTheme: _propTypes2$S.default.object.isRequired
};
RefreshIndicator.propTypes = {
  /**
   * Override the theme's color of the indicator while it's status is
   * "ready" and it's percentage is less than 100.
   */
  color: _propTypes2$S.default.string,
  /**
   * The absolute left position of the indicator in pixels.
   */
  left: _propTypes2$S.default.number.isRequired,
  /**
   * Override the theme's color of the indicator while
   * it's status is "loading" or when it's percentage is 100.
   */
  loadingColor: _propTypes2$S.default.string,
  /**
   * The confirmation progress to fetch data. Max value is 100.
   */
  percentage: _propTypes2$S.default.number,
  /**
   * Size in pixels.
   */
  size: _propTypes2$S.default.number,
  /**
   * The display status of the indicator. If the status is
   * "ready", the indicator will display the ready state
   * arrow. If the status is "loading", it will display
   * the loading progress indicator. If the status is "hide",
   * the indicator will be hidden.
   */
  status: _propTypes2$S.default.oneOf(['ready', 'loading', 'hide']),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$S.default.object,
  /**
   * The absolute top position of the indicator in pixels.
   */
  top: _propTypes2$S.default.number.isRequired
} ;
RefreshIndicator$1.default = RefreshIndicator;

Object.defineProperty(RefreshIndicator$2, "__esModule", {
  value: true
});
RefreshIndicator$2.default = undefined;

var _RefreshIndicator = RefreshIndicator$1;

var _RefreshIndicator2 = _interopRequireDefault$1h(_RefreshIndicator);

function _interopRequireDefault$1h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

RefreshIndicator$2.default = _RefreshIndicator2.default;

var SelectField$2 = {};

var SelectField$1 = {};

Object.defineProperty(SelectField$1, "__esModule", {
  value: true
});

var _extends2$B = _extends$3;

var _extends3$B = _interopRequireDefault$1g(_extends2$B);

var _objectWithoutProperties2$A = objectWithoutProperties$2;

var _objectWithoutProperties3$A = _interopRequireDefault$1g(_objectWithoutProperties2$A);

var _getPrototypeOf$K = getPrototypeOf$1.exports;

var _getPrototypeOf2$K = _interopRequireDefault$1g(_getPrototypeOf$K);

var _classCallCheck2$L = classCallCheck$3;

var _classCallCheck3$L = _interopRequireDefault$1g(_classCallCheck2$L);

var _createClass2$L = createClass$2;

var _createClass3$L = _interopRequireDefault$1g(_createClass2$L);

var _possibleConstructorReturn2$K = possibleConstructorReturn$3;

var _possibleConstructorReturn3$K = _interopRequireDefault$1g(_possibleConstructorReturn2$K);

var _inherits2$K = inherits$3;

var _inherits3$K = _interopRequireDefault$1g(_inherits2$K);

var _simpleAssign$K = simpleAssign;

var _simpleAssign2$K = _interopRequireDefault$1g(_simpleAssign$K);

var _react$Y = react;

var _react2$X = _interopRequireDefault$1g(_react$Y);

var _propTypes$R = propTypes$5.exports;

var _propTypes2$R = _interopRequireDefault$1g(_propTypes$R);

var _TextField$3 = TextField$6;

var _TextField2$3 = _interopRequireDefault$1g(_TextField$3);

var _DropDownMenu = DropDownMenu$2;

var _DropDownMenu2 = _interopRequireDefault$1g(_DropDownMenu);

function _interopRequireDefault$1g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$B(props) {
  return {
    label: {
      paddingLeft: 0,
      top: props.floatingLabelText ? 6 : -4
    },
    icon: {
      right: 0,
      top: props.floatingLabelText ? 8 : 0
    },
    hideDropDownUnderline: {
      borderTop: 'none'
    },
    dropDownMenu: {
      display: 'block'
    }
  };
}

var SelectField = function (_Component) {
  (0, _inherits3$K.default)(SelectField, _Component);

  function SelectField() {
    (0, _classCallCheck3$L.default)(this, SelectField);
    return (0, _possibleConstructorReturn3$K.default)(this, (SelectField.__proto__ || (0, _getPrototypeOf2$K.default)(SelectField)).apply(this, arguments));
  }

  (0, _createClass3$L.default)(SelectField, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          autoWidth = _props.autoWidth,
          multiple = _props.multiple,
          children = _props.children,
          style = _props.style,
          labelStyle = _props.labelStyle,
          iconStyle = _props.iconStyle,
          id = _props.id,
          underlineDisabledStyle = _props.underlineDisabledStyle,
          underlineFocusStyle = _props.underlineFocusStyle,
          menuItemStyle = _props.menuItemStyle,
          selectedMenuItemStyle = _props.selectedMenuItemStyle,
          underlineStyle = _props.underlineStyle,
          dropDownMenuProps = _props.dropDownMenuProps,
          errorStyle = _props.errorStyle,
          disabled = _props.disabled,
          floatingLabelFixed = _props.floatingLabelFixed,
          floatingLabelText = _props.floatingLabelText,
          floatingLabelStyle = _props.floatingLabelStyle,
          hintStyle = _props.hintStyle,
          hintText = _props.hintText,
          fullWidth = _props.fullWidth,
          errorText = _props.errorText,
          listStyle = _props.listStyle,
          maxHeight = _props.maxHeight,
          menuStyle = _props.menuStyle,
          onFocus = _props.onFocus,
          onBlur = _props.onBlur,
          onChange = _props.onChange,
          selectionRenderer = _props.selectionRenderer,
          value = _props.value,
          other = (0, _objectWithoutProperties3$A.default)(_props, ['autoWidth', 'multiple', 'children', 'style', 'labelStyle', 'iconStyle', 'id', 'underlineDisabledStyle', 'underlineFocusStyle', 'menuItemStyle', 'selectedMenuItemStyle', 'underlineStyle', 'dropDownMenuProps', 'errorStyle', 'disabled', 'floatingLabelFixed', 'floatingLabelText', 'floatingLabelStyle', 'hintStyle', 'hintText', 'fullWidth', 'errorText', 'listStyle', 'maxHeight', 'menuStyle', 'onFocus', 'onBlur', 'onChange', 'selectionRenderer', 'value']);


      var styles = getStyles$B(this.props, this.context);

      return _react2$X.default.createElement(
        _TextField2$3.default,
        (0, _extends3$B.default)({}, other, {
          style: style,
          disabled: disabled,
          floatingLabelFixed: floatingLabelFixed,
          floatingLabelText: floatingLabelText,
          floatingLabelStyle: floatingLabelStyle,
          hintStyle: hintStyle,
          hintText: !hintText && !floatingLabelText ? ' ' : hintText,
          fullWidth: fullWidth,
          errorText: errorText,
          underlineStyle: underlineStyle,
          errorStyle: errorStyle,
          onFocus: onFocus,
          onBlur: onBlur,
          id: id,
          underlineDisabledStyle: underlineDisabledStyle,
          underlineFocusStyle: underlineFocusStyle
        }),
        _react2$X.default.createElement(
          _DropDownMenu2.default,
          (0, _extends3$B.default)({
            disabled: disabled,
            style: (0, _simpleAssign2$K.default)(styles.dropDownMenu, menuStyle),
            labelStyle: (0, _simpleAssign2$K.default)(styles.label, labelStyle),
            iconStyle: (0, _simpleAssign2$K.default)(styles.icon, iconStyle),
            menuItemStyle: menuItemStyle,
            selectedMenuItemStyle: selectedMenuItemStyle,
            underlineStyle: styles.hideDropDownUnderline,
            listStyle: listStyle,
            autoWidth: autoWidth,
            value: value,
            onChange: onChange,
            maxHeight: maxHeight,
            multiple: multiple,
            selectionRenderer: selectionRenderer
          }, dropDownMenuProps),
          children
        )
      );
    }
  }]);
  return SelectField;
}(_react$Y.Component);

SelectField.defaultProps = {
  autoWidth: false,
  disabled: false,
  fullWidth: false,
  multiple: false
};
SelectField.contextTypes = {
  muiTheme: _propTypes2$R.default.object.isRequired
};
SelectField.propTypes = {
  /**
   * If true, the width will automatically be set according to the
   * items inside the menu.
   * To control the width in CSS instead, leave this prop set to `false`.
   */
  autoWidth: _propTypes2$R.default.bool,
  /**
   * The `MenuItem` elements to populate the select field with.
   * If the menu items have a `label` prop, that value will
   * represent the selected menu item in the rendered select field.
   */
  children: _propTypes2$R.default.node,
  /**
   * If true, the select field will be disabled.
   */
  disabled: _propTypes2$R.default.bool,
  /**
   * Object that can handle and override any property of component DropDownMenu.
   */
  dropDownMenuProps: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the error element.
   */
  errorStyle: _propTypes2$R.default.object,
  /**
   * The error content to display.
   */
  errorText: _propTypes2$R.default.node,
  /**
   * If true, the floating label will float even when no value is selected.
   */
  floatingLabelFixed: _propTypes2$R.default.bool,
  /**
   * Override the inline-styles of the floating label.
   */
  floatingLabelStyle: _propTypes2$R.default.object,
  /**
   * The content of the floating label.
   */
  floatingLabelText: _propTypes2$R.default.node,
  /**
   * If true, the select field will take up the full width of its container.
   */
  fullWidth: _propTypes2$R.default.bool,
  /**
   * Override the inline-styles of the hint element.
   */
  hintStyle: _propTypes2$R.default.object,
  /**
   * The hint content to display.
   */
  hintText: _propTypes2$R.default.node,
  /**
   * Override the inline-styles of the icon element.
   */
  iconStyle: _propTypes2$R.default.object,
  /**
   * The id prop for the text field.
   */
  id: _propTypes2$R.default.string,
  /**
   * Override the label style when the select field is inactive.
   */
  labelStyle: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the underlying `List` element.
   */
  listStyle: _propTypes2$R.default.object,
  /**
   * Override the default max-height of the underlying `DropDownMenu` element.
   */
  maxHeight: _propTypes2$R.default.number,
  /**
   * Override the inline-styles of menu items.
   */
  menuItemStyle: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the underlying `DropDownMenu` element.
   */
  menuStyle: _propTypes2$R.default.object,
  /**
   * If true, `value` must be an array and the menu will support
   * multiple selections.
   */
  multiple: _propTypes2$R.default.bool,
  /** @ignore */
  onBlur: _propTypes2$R.default.func,
  /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event Click event targeting the menu item
   * that was selected.
   * @param {number} key The index of the selected menu item, or undefined
   * if `multiple` is true.
   * @param {any} payload If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   */
  onChange: _propTypes2$R.default.func,
  /** @ignore */
  onFocus: _propTypes2$R.default.func,
  /**
   * Override the inline-styles of selected menu items.
   */
  selectedMenuItemStyle: _propTypes2$R.default.object,
  /**
   * Customize the rendering of the selected item.
   *
   * @param {any} value If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   * @param {any} menuItem The selected `MenuItem`.
   * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.
   */
  selectionRenderer: _propTypes2$R.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the underline element when the select
   * field is disabled.
   */
  underlineDisabledStyle: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the underline element when the select field
   * is focused.
   */
  underlineFocusStyle: _propTypes2$R.default.object,
  /**
   * Override the inline-styles of the underline element.
   */
  underlineStyle: _propTypes2$R.default.object,
  /**
   * If `multiple` is true, an array of the `value`s of the selected
   * menu items. Otherwise, the `value` of the selected menu item.
   * If provided, the menu will be a controlled component.
   */
  value: _propTypes2$R.default.any
} ;
SelectField$1.default = SelectField;

Object.defineProperty(SelectField$2, "__esModule", {
  value: true
});
var _default$6 = SelectField$2.default = undefined;

var _SelectField = SelectField$1;

var _SelectField2 = _interopRequireDefault$1f(_SelectField);

function _interopRequireDefault$1f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$6 = SelectField$2.default = _SelectField2.default;

var Slider$2 = {};

var Slider$1 = {};

Object.defineProperty(Slider$1, "__esModule", {
  value: true
});

var _extends2$A = _extends$3;

var _extends3$A = _interopRequireDefault$1e(_extends2$A);

var _objectWithoutProperties2$z = objectWithoutProperties$2;

var _objectWithoutProperties3$z = _interopRequireDefault$1e(_objectWithoutProperties2$z);

var _getPrototypeOf$J = getPrototypeOf$1.exports;

var _getPrototypeOf2$J = _interopRequireDefault$1e(_getPrototypeOf$J);

var _classCallCheck2$K = classCallCheck$3;

var _classCallCheck3$K = _interopRequireDefault$1e(_classCallCheck2$K);

var _createClass2$K = createClass$2;

var _createClass3$K = _interopRequireDefault$1e(_createClass2$K);

var _possibleConstructorReturn2$J = possibleConstructorReturn$3;

var _possibleConstructorReturn3$J = _interopRequireDefault$1e(_possibleConstructorReturn2$J);

var _inherits2$J = inherits$3;

var _inherits3$J = _interopRequireDefault$1e(_inherits2$J);

var _defineProperty2 = defineProperty$7;

var _defineProperty3 = _interopRequireDefault$1e(_defineProperty2);

var _simpleAssign$J = simpleAssign;

var _simpleAssign2$J = _interopRequireDefault$1e(_simpleAssign$J);

var _react$X = react;

var _react2$W = _interopRequireDefault$1e(_react$X);

var _propTypes$Q = propTypes$5.exports;

var _propTypes2$Q = _interopRequireDefault$1e(_propTypes$Q);

var _keycode$3 = keycode.exports;

var _keycode2$3 = _interopRequireDefault$1e(_keycode$3);

var _warning$4 = warning_1$1;

var _warning2$4 = _interopRequireDefault$1e(_warning$4);

var _transitions$h = transitions;

var _transitions2$h = _interopRequireDefault$1e(_transitions$h);

var _FocusRipple = FocusRipple$1;

var _FocusRipple2 = _interopRequireDefault$1e(_FocusRipple);

function _interopRequireDefault$1e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Verifies min/max range.
 * @param   {Object} props         Properties of the React component.
 * @param   {String} propName      Name of the property to validate.
 * @param   {String} componentName Name of the component whose property is being validated.
 * @returns {Object} Returns an Error if min >= max otherwise null.
 */
var minMaxPropType = function minMaxPropType(props, propName, componentName) {
  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  var error = _propTypes2$Q.default.number.apply(_propTypes2$Q.default, [props, propName, componentName].concat(rest));
  if (error !== null) {
    return error;
  }

  if (props.min >= props.max) {
    var errorMsg = propName === 'min' ? 'min should be less than max' : 'max should be greater than min';
    return new Error(errorMsg);
  }
};

/**
 * Verifies value is within the min/max range.
 * @param   {Object} props         Properties of the React component.
 * @param   {String} propName      Name of the property to validate.
 * @param   {String} componentName Name of the component whose property is being validated.
 * @returns {Object} Returns an Error if the value is not within the range otherwise null.
 */
var valueInRangePropType = function valueInRangePropType(props, propName, componentName) {
  for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
    rest[_key2 - 3] = arguments[_key2];
  }

  var error = _propTypes2$Q.default.number.apply(_propTypes2$Q.default, [props, propName, componentName].concat(rest));
  if (error !== null) {
    return error;
  }

  var value = props[propName];
  if (value < props.min || props.max < value) {
    return new Error(propName + ' should be within the range specified by min and max');
  }
};

var crossAxisProperty = {
  x: 'height',
  'x-reverse': 'height',
  y: 'width',
  'y-reverse': 'width'
};

var crossAxisOffsetProperty = {
  x: 'top',
  'x-reverse': 'top',
  y: 'left',
  'y-reverse': 'left'
};

var mainAxisProperty = {
  x: 'width',
  'x-reverse': 'width',
  y: 'height',
  'y-reverse': 'height'
};

var mainAxisMarginFromEnd = {
  x: 'marginRight',
  'x-reverse': 'marginLeft',
  y: 'marginTop',
  'y-reverse': 'marginBottom'
};

var mainAxisMarginFromStart = {
  x: 'marginLeft',
  'x-reverse': 'marginRight',
  y: 'marginBottom',
  'y-reverse': 'marginTop'
};

var mainAxisOffsetProperty = {
  x: 'left',
  'x-reverse': 'right',
  y: 'bottom',
  'y-reverse': 'top'
};

var mainAxisClientProperty = {
  x: 'clientWidth',
  'x-reverse': 'clientWidth',
  y: 'clientHeight',
  'y-reverse': 'clientHeight'
};

var mainAxisClientOffsetProperty = {
  x: 'clientX',
  'x-reverse': 'clientX',
  y: 'clientY',
  'y-reverse': 'clientY'
};

var reverseMainAxisOffsetProperty = {
  x: 'right',
  'x-reverse': 'left',
  y: 'top',
  'y-reverse': 'bottom'
};

var isMouseControlInverted = function isMouseControlInverted(axis) {
  return axis === 'x-reverse' || axis === 'y';
};

var calculateAxis = function calculateAxis(axis, isRtl) {
  if (isRtl) {
    switch (axis) {
      case 'x':
        return 'x-reverse';
      case 'x-reverse':
        return 'x';
    }
  }
  return axis;
};

function getPercent(value, min, max) {
  var percent = (value - min) / (max - min);
  if (isNaN(percent)) {
    percent = 0;
  }

  return percent;
}

var getStyles$A = function getStyles(props, context, state) {
  var _slider, _track, _filledAndRemaining, _handle, _objectAssign2, _objectAssign3;

  var axis = props.axis,
      disabled = props.disabled,
      max = props.max,
      min = props.min;
  var _context$muiTheme = context.muiTheme,
      isRtl = _context$muiTheme.isRtl,
      _context$muiTheme$sli = _context$muiTheme.slider,
      handleColorZero = _context$muiTheme$sli.handleColorZero,
      handleFillColor = _context$muiTheme$sli.handleFillColor,
      handleSize = _context$muiTheme$sli.handleSize,
      handleSizeDisabled = _context$muiTheme$sli.handleSizeDisabled,
      handleSizeActive = _context$muiTheme$sli.handleSizeActive,
      trackSize = _context$muiTheme$sli.trackSize,
      trackColor = _context$muiTheme$sli.trackColor,
      trackColorSelected = _context$muiTheme$sli.trackColorSelected,
      rippleColor = _context$muiTheme$sli.rippleColor,
      selectionColor = _context$muiTheme$sli.selectionColor;


  var fillGutter = handleSize / 2;
  var disabledGutter = trackSize + handleSizeDisabled / 2;
  var calcDisabledSpacing = disabled ? ' - ' + disabledGutter + 'px' : '';
  var percent = getPercent(state.value, min, max);
  var calculatedAxis = calculateAxis(axis, isRtl);

  var styles = {
    slider: (_slider = {
      touchCallout: 'none',
      userSelect: 'none',
      cursor: 'default'
    }, (0, _defineProperty3.default)(_slider, crossAxisProperty[calculatedAxis], handleSizeActive), (0, _defineProperty3.default)(_slider, mainAxisProperty[calculatedAxis], '100%'), (0, _defineProperty3.default)(_slider, 'position', 'relative'), (0, _defineProperty3.default)(_slider, 'marginTop', 24), (0, _defineProperty3.default)(_slider, 'marginBottom', 48), _slider),
    track: (_track = {
      position: 'absolute'
    }, (0, _defineProperty3.default)(_track, crossAxisOffsetProperty[calculatedAxis], (handleSizeActive - trackSize) / 2), (0, _defineProperty3.default)(_track, mainAxisOffsetProperty[calculatedAxis], 0), (0, _defineProperty3.default)(_track, mainAxisProperty[calculatedAxis], '100%'), (0, _defineProperty3.default)(_track, crossAxisProperty[calculatedAxis], trackSize), _track),
    filledAndRemaining: (_filledAndRemaining = {
      directionInvariant: true,
      position: 'absolute'
    }, (0, _defineProperty3.default)(_filledAndRemaining, crossAxisOffsetProperty, 0), (0, _defineProperty3.default)(_filledAndRemaining, crossAxisProperty[calculatedAxis], '100%'), (0, _defineProperty3.default)(_filledAndRemaining, 'transition', _transitions2$h.default.easeOut(null, 'margin')), _filledAndRemaining),
    handle: (_handle = {
      directionInvariant: true,
      boxSizing: 'border-box',
      position: 'absolute',
      cursor: 'pointer',
      pointerEvents: 'inherit'
    }, (0, _defineProperty3.default)(_handle, crossAxisOffsetProperty[calculatedAxis], 0), (0, _defineProperty3.default)(_handle, mainAxisOffsetProperty[calculatedAxis], percent === 0 ? '0%' : percent * 100 + '%'), (0, _defineProperty3.default)(_handle, 'zIndex', 1), (0, _defineProperty3.default)(_handle, 'margin', {
      x: trackSize / 2 + 'px 0 0 0',
      'x-reverse': trackSize / 2 + 'px 0 0 0',
      y: '0 0 0 ' + trackSize / 2 + 'px',
      'y-reverse': '0 0 0 ' + trackSize / 2 + 'px'
    }[calculatedAxis]), (0, _defineProperty3.default)(_handle, 'width', handleSize), (0, _defineProperty3.default)(_handle, 'height', handleSize), (0, _defineProperty3.default)(_handle, 'backgroundColor', selectionColor), (0, _defineProperty3.default)(_handle, 'backgroundClip', 'padding-box'), (0, _defineProperty3.default)(_handle, 'border', '0px solid transparent'), (0, _defineProperty3.default)(_handle, 'borderRadius', '50%'), (0, _defineProperty3.default)(_handle, 'transform', {
      x: 'translate(-50%, -50%)',
      'x-reverse': 'translate(50%, -50%)',
      y: 'translate(-50%, 50%)',
      'y-reverse': 'translate(-50%, -50%)'
    }[calculatedAxis]), (0, _defineProperty3.default)(_handle, 'transition', _transitions2$h.default.easeOut('450ms', 'background') + ', ' + _transitions2$h.default.easeOut('450ms', 'border-color') + ', ' + _transitions2$h.default.easeOut('450ms', 'width') + ', ' + _transitions2$h.default.easeOut('450ms', 'height')), (0, _defineProperty3.default)(_handle, 'overflow', 'visible'), (0, _defineProperty3.default)(_handle, 'outline', 'none'), _handle),
    handleWhenDisabled: {
      boxSizing: 'content-box',
      cursor: 'not-allowed',
      backgroundColor: trackColor,
      width: handleSizeDisabled,
      height: handleSizeDisabled,
      border: 'none'
    },
    handleWhenPercentZero: {
      border: trackSize + 'px solid ' + handleColorZero,
      backgroundColor: handleFillColor,
      boxShadow: 'none'
    },
    handleWhenPercentZeroAndDisabled: {
      cursor: 'not-allowed',
      width: handleSizeDisabled,
      height: handleSizeDisabled
    },
    handleWhenPercentZeroAndFocused: {
      border: trackSize + 'px solid ' + trackColorSelected
    },
    handleWhenActive: {
      width: handleSizeActive,
      height: handleSizeActive
    },
    ripple: {
      height: handleSize,
      width: handleSize,
      overflow: 'visible'
    },
    rippleWhenPercentZero: {
      top: -trackSize,
      left: -trackSize
    },
    rippleInner: {
      height: '300%',
      width: '300%',
      top: -handleSize,
      left: -handleSize
    },
    rippleColor: {
      fill: percent === 0 ? handleColorZero : rippleColor
    }
  };
  styles.filled = (0, _simpleAssign2$J.default)({}, styles.filledAndRemaining, (_objectAssign2 = {}, (0, _defineProperty3.default)(_objectAssign2, mainAxisOffsetProperty[calculatedAxis], 0), (0, _defineProperty3.default)(_objectAssign2, 'backgroundColor', disabled ? trackColor : selectionColor), (0, _defineProperty3.default)(_objectAssign2, mainAxisMarginFromEnd[calculatedAxis], fillGutter), (0, _defineProperty3.default)(_objectAssign2, mainAxisProperty[calculatedAxis], 'calc(' + percent * 100 + '%' + calcDisabledSpacing + ')'), _objectAssign2));
  styles.remaining = (0, _simpleAssign2$J.default)({}, styles.filledAndRemaining, (_objectAssign3 = {}, (0, _defineProperty3.default)(_objectAssign3, reverseMainAxisOffsetProperty[calculatedAxis], 0), (0, _defineProperty3.default)(_objectAssign3, 'backgroundColor', (state.hovered || state.focused) && !disabled ? trackColorSelected : trackColor), (0, _defineProperty3.default)(_objectAssign3, mainAxisMarginFromStart[calculatedAxis], fillGutter), (0, _defineProperty3.default)(_objectAssign3, mainAxisProperty[calculatedAxis], 'calc(' + (1 - percent) * 100 + '%' + calcDisabledSpacing + ')'), _objectAssign3));

  return styles;
};

var Slider = function (_Component) {
  (0, _inherits3$J.default)(Slider, _Component);

  function Slider() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$K.default)(this, Slider);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$J.default)(this, (_ref = Slider.__proto__ || (0, _getPrototypeOf2$J.default)(Slider)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      active: false,
      dragging: false,
      focused: false,
      hovered: false,
      value: 0
    }, _this.track = null, _this.handle = null, _this.resolveValue = function (value, min, max) {
      if (value > max) {
        return max;
      }

      if (value < min) {
        return min;
      }

      return value;
    }, _this.handleKeyDown = function (event) {
      var _this$props = _this.props,
          axis = _this$props.axis,
          min = _this$props.min,
          max = _this$props.max,
          step = _this$props.step;
      var isRtl = _this.context.muiTheme.isRtl;


      var calculatedAxis = calculateAxis(axis, isRtl);

      var action = void 0;

      switch ((0, _keycode2$3.default)(event)) {
        case 'page down':
        case 'down':
          if (calculatedAxis === 'y-reverse') {
            action = 'increase';
          } else {
            action = 'decrease';
          }
          break;
        case 'left':
          if (calculatedAxis === 'x-reverse') {
            action = 'increase';
          } else {
            action = 'decrease';
          }
          break;
        case 'page up':
        case 'up':
          if (calculatedAxis === 'y-reverse') {
            action = 'decrease';
          } else {
            action = 'increase';
          }
          break;
        case 'right':
          if (calculatedAxis === 'x-reverse') {
            action = 'decrease';
          } else {
            action = 'increase';
          }
          break;
        case 'home':
          action = 'min';
          break;
        case 'end':
          action = 'max';
          break;
      }

      if (action) {
        var newValue = void 0;

        // Cancel scroll
        event.preventDefault();

        switch (action) {
          case 'decrease':
            newValue = _this.state.value - step;
            break;
          case 'increase':
            newValue = _this.state.value + step;
            break;
          case 'min':
            newValue = min;
            break;
          case 'max':
            newValue = max;
            break;
        }

        // We need to use toFixed() because of float point errors.
        // For example, 0.01 + 0.06 = 0.06999999999999999
        newValue = _this.resolveValue(parseFloat(newValue.toFixed(5)), min, max);

        if (_this.state.value !== newValue) {
          _this.setState({
            value: newValue
          });

          if (_this.props.onChange) {
            _this.props.onChange(event, newValue);
          }
        }
      }
    }, _this.handleDragMouseMove = function (event) {
      _this.onDragUpdate(event, 'mouse');
    }, _this.handleTouchMove = function (event) {
      _this.onDragUpdate(event, 'touch');
    }, _this.handleMouseEnd = function (event) {
      document.removeEventListener('mousemove', _this.handleDragMouseMove);
      document.removeEventListener('mouseup', _this.handleMouseEnd);

      _this.onDragStop(event);
    }, _this.handleTouchEnd = function (event) {
      document.removeEventListener('touchmove', _this.handleTouchMove);
      document.removeEventListener('touchup', _this.handleTouchEnd);
      document.removeEventListener('touchend', _this.handleTouchEnd);
      document.removeEventListener('touchcancel', _this.handleTouchEnd);

      _this.onDragStop(event);
    }, _this.handleTouchStart = function (event) {
      var _this$props2 = _this.props,
          axis = _this$props2.axis,
          disabled = _this$props2.disabled;
      var isRtl = _this.context.muiTheme.isRtl;


      if (disabled) {
        return;
      }

      var calculatedAxis = calculateAxis(axis, isRtl);

      var position = void 0;
      if (isMouseControlInverted(calculatedAxis)) {
        position = _this.getTrackOffset() - event.touches[0][mainAxisClientOffsetProperty[calculatedAxis]];
      } else {
        position = event.touches[0][mainAxisClientOffsetProperty[calculatedAxis]] - _this.getTrackOffset();
      }
      _this.setValueFromPosition(event, position);

      document.addEventListener('touchmove', _this.handleTouchMove);
      document.addEventListener('touchup', _this.handleTouchEnd);
      document.addEventListener('touchend', _this.handleTouchEnd);
      document.addEventListener('touchcancel', _this.handleTouchEnd);

      _this.onDragStart(event);

      // Cancel scroll and context menu
      event.preventDefault();
    }, _this.handleFocus = function (event) {
      _this.setState({
        focused: true
      });

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleBlur = function (event) {
      _this.setState({
        focused: false,
        active: false
      });

      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleMouseDown = function (event) {
      var _this$props3 = _this.props,
          axis = _this$props3.axis,
          disabled = _this$props3.disabled;
      var isRtl = _this.context.muiTheme.isRtl;


      if (disabled) {
        return;
      }

      var calculatedAxis = calculateAxis(axis, isRtl);

      var position = void 0;
      if (isMouseControlInverted(calculatedAxis)) {
        position = _this.getTrackOffset() - event[mainAxisClientOffsetProperty[calculatedAxis]];
      } else {
        position = event[mainAxisClientOffsetProperty[calculatedAxis]] - _this.getTrackOffset();
      }
      _this.setValueFromPosition(event, position);

      document.addEventListener('mousemove', _this.handleDragMouseMove);
      document.addEventListener('mouseup', _this.handleMouseEnd);

      // Cancel text selection
      event.preventDefault();

      // Set focus manually since we called preventDefault()
      _this.handle.focus();

      _this.onDragStart(event);
    }, _this.handleMouseUp = function () {
      if (!_this.props.disabled) {
        _this.setState({
          active: false
        });
      }
    }, _this.handleMouseEnter = function () {
      _this.setState({
        hovered: true
      });
    }, _this.handleMouseLeave = function () {
      _this.setState({
        hovered: false
      });
    }, _temp), (0, _possibleConstructorReturn3$J.default)(_this, _ret);
  }

  (0, _createClass3$K.default)(Slider, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          defaultValue = _props.defaultValue,
          min = _props.min,
          max = _props.max;
      var value = this.props.value;


      if (value === undefined) {
        value = defaultValue !== undefined ? defaultValue : min;
      }

      this.setState({
        value: this.resolveValue(value, min, max)
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== undefined && !this.state.dragging) {
        var _nextProps$min = nextProps.min,
            min = _nextProps$min === undefined ? this.props.min : _nextProps$min,
            _nextProps$max = nextProps.max,
            max = _nextProps$max === undefined ? this.props.max : _nextProps$max;


        this.setState({
          value: this.resolveValue(nextProps.value, min, max)
        });
      }
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      (0, _warning2$4.default)(false, 'Material-UI Slider: getValue() method is deprecated.\n      Use the onChange callbacks instead.\n      It will be removed with v0.17.0.') ;

      return this.state.value;
    }
  }, {
    key: 'clearValue',
    value: function clearValue() {
      (0, _warning2$4.default)(false, 'Material-UI Slider: clearValue() method is deprecated.\n      Use the value property to control the component instead.\n      It will be removed with v0.17.0.') ;

      this.setState({
        value: this.props.min
      });
    }
  }, {
    key: 'getTrackOffset',
    value: function getTrackOffset() {
      var axis = this.props.axis;
      var isRtl = this.context.muiTheme.isRtl;


      var calculatedAxis = calculateAxis(axis, isRtl);

      if (!this.track) return 0;
      return this.track.getBoundingClientRect()[mainAxisOffsetProperty[calculatedAxis]];
    }
  }, {
    key: 'onDragStart',
    value: function onDragStart(event) {
      this.setState({
        dragging: true,
        active: true
      });

      if (this.props.onDragStart) {
        this.props.onDragStart(event);
      }
    }
  }, {
    key: 'onDragUpdate',
    value: function onDragUpdate(event, type) {
      var _this2 = this;

      var _props2 = this.props,
          axis = _props2.axis,
          disabled = _props2.disabled;
      var isRtl = this.context.muiTheme.isRtl;


      if (this.dragRunning) {
        return;
      }
      this.dragRunning = true;

      requestAnimationFrame(function () {
        _this2.dragRunning = false;

        var calculatedAxis = calculateAxis(axis, isRtl);
        var source = type === 'touch' ? event.touches[0] : event;

        var position = void 0;
        if (isMouseControlInverted(calculatedAxis)) {
          position = _this2.getTrackOffset() - source[mainAxisClientOffsetProperty[calculatedAxis]];
        } else {
          position = source[mainAxisClientOffsetProperty[calculatedAxis]] - _this2.getTrackOffset();
        }

        if (!disabled) {
          _this2.setValueFromPosition(event, position);
        }
      });
    }
  }, {
    key: 'onDragStop',
    value: function onDragStop(event) {
      this.setState({
        dragging: false,
        active: false
      });

      if (this.props.onDragStop) {
        this.props.onDragStop(event);
      }
    }
  }, {
    key: 'setValueFromPosition',
    value: function setValueFromPosition(event, position) {
      var _props3 = this.props,
          axis = _props3.axis,
          step = _props3.step,
          min = _props3.min,
          max = _props3.max;
      var isRtl = this.context.muiTheme.isRtl;


      var calculatedAxis = calculateAxis(axis, isRtl);
      var positionMax = this.track[mainAxisClientProperty[calculatedAxis]];

      var value = void 0;

      if (position <= 0) {
        value = min;
      } else if (position >= positionMax) {
        value = max;
      } else {
        value = position / positionMax * (max - min);
        value = Math.round(value / step) * step + min;
        value = parseFloat(value.toFixed(5));
      }

      value = this.resolveValue(value, min, max);

      if (this.state.value !== value) {
        this.setState({
          value: value
        });

        if (this.props.onChange) {
          this.props.onChange(event, value);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props4 = this.props;
          _props4.axis;
          var disabled = _props4.disabled,
          disableFocusRipple = _props4.disableFocusRipple,
          max = _props4.max,
          min = _props4.min,
          name = _props4.name;
          _props4.onBlur;
          _props4.onChange;
          _props4.onDragStart;
          _props4.onDragStop;
          _props4.onFocus;
          var required = _props4.required,
          sliderStyle = _props4.sliderStyle,
          step = _props4.step,
          style = _props4.style;
          _props4.value;
          var other = (0, _objectWithoutProperties3$z.default)(_props4, ['axis', 'disabled', 'disableFocusRipple', 'max', 'min', 'name', 'onBlur', 'onChange', 'onDragStart', 'onDragStop', 'onFocus', 'required', 'sliderStyle', 'step', 'style', 'value']);
      var _state = this.state,
          active = _state.active,
          focused = _state.focused,
          hovered = _state.hovered,
          value = _state.value;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$A(this.props, this.context, this.state);
      var percent = getPercent(value, min, max);

      var handleStyles = {};
      if (percent === 0) {
        handleStyles = (0, _simpleAssign2$J.default)({}, styles.handle, styles.handleWhenPercentZero, active && styles.handleWhenActive, (hovered || focused) && !disabled && styles.handleWhenPercentZeroAndFocused, disabled && styles.handleWhenPercentZeroAndDisabled);
      } else {
        handleStyles = (0, _simpleAssign2$J.default)({}, styles.handle, active && styles.handleWhenActive, disabled && styles.handleWhenDisabled);
      }

      var rippleStyle = (0, _simpleAssign2$J.default)({}, styles.ripple, percent === 0 && styles.rippleWhenPercentZero);

      return _react2$W.default.createElement(
        'div',
        (0, _extends3$A.default)({}, other, { style: prepareStyles((0, _simpleAssign2$J.default)({}, style)) }),
        _react2$W.default.createElement(
          'div',
          {
            style: prepareStyles((0, _simpleAssign2$J.default)({}, styles.slider, sliderStyle)),
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
            onMouseDown: this.handleMouseDown,
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave,
            onMouseUp: this.handleMouseUp,
            onTouchStart: this.handleTouchStart,
            onKeyDown: !disabled ? this.handleKeyDown : undefined
          },
          _react2$W.default.createElement(
            'div',
            { ref: function ref(node) {
                return _this3.track = node;
              }, style: prepareStyles(styles.track) },
            _react2$W.default.createElement('div', { style: prepareStyles(styles.filled) }),
            _react2$W.default.createElement('div', { style: prepareStyles(styles.remaining) }),
            _react2$W.default.createElement(
              'div',
              {
                ref: function ref(node) {
                  return _this3.handle = node;
                },
                style: prepareStyles(handleStyles),
                tabIndex: 0
              },
              !disabled && !disableFocusRipple && _react2$W.default.createElement(_FocusRipple2.default, {
                style: rippleStyle,
                innerStyle: styles.rippleInner,
                show: (hovered || focused) && !active,
                color: styles.rippleColor.fill
              })
            )
          )
        ),
        _react2$W.default.createElement('input', {
          type: 'hidden',
          name: name,
          value: value,
          required: required,
          min: min,
          max: max,
          step: step
        })
      );
    }
  }]);
  return Slider;
}(_react$X.Component);

Slider.defaultProps = {
  axis: 'x',
  disabled: false,
  disableFocusRipple: false,
  max: 1,
  min: 0,
  required: true,
  step: 0.01,
  style: {}
};
Slider.contextTypes = {
  muiTheme: _propTypes2$Q.default.object.isRequired
};
Slider.propTypes = {
  /**
   * The axis on which the slider will slide.
   */
  axis: _propTypes2$Q.default.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),
  /**
   * The default value of the slider.
   */
  defaultValue: valueInRangePropType,
  /**
   * Disables focus ripple if set to true.
   */
  disableFocusRipple: _propTypes2$Q.default.bool,
  /**
   * If true, the slider will not be interactable.
   */
  disabled: _propTypes2$Q.default.bool,
  /**
   * The maximum value the slider can slide to on
   * a scale from 0 to 1 inclusive. Cannot be equal to min.
   */
  max: minMaxPropType,
  /**
   * The minimum value the slider can slide to on a scale
   * from 0 to 1 inclusive. Cannot be equal to max.
   */
  min: minMaxPropType,
  /**
   * The name of the slider. Behaves like the name attribute
   * of an input element.
   */
  name: _propTypes2$Q.default.string,
  /** @ignore */
  onBlur: _propTypes2$Q.default.func,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {object} event KeyDown event targeting the slider.
   * @param {number} newValue The new value of the slider.
   */
  onChange: _propTypes2$Q.default.func,
  /**
   * Callback function that is fired when the slider has begun to move.
   *
   * @param {object} event MouseDown or TouchStart event targeting the slider.
   */
  onDragStart: _propTypes2$Q.default.func,
  /**
   * Callback function that is fired when the slide has stopped moving.
   *
   * @param {object} event MouseEnd or TouchEnd event targeting the slider.
   */
  onDragStop: _propTypes2$Q.default.func,
  /** @ignore */
  onFocus: _propTypes2$Q.default.func,
  /**
   * Whether or not the slider is required in a form.
   */
  required: _propTypes2$Q.default.bool,
  /**
   * Override the inline-styles of the inner slider element.
   */
  sliderStyle: _propTypes2$Q.default.object,
  /**
   * The granularity the slider can step through values.
   */
  step: _propTypes2$Q.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$Q.default.object,
  /**
   * The value of the slider.
   */
  value: valueInRangePropType
} ;
Slider$1.default = Slider;

Object.defineProperty(Slider$2, "__esModule", {
  value: true
});
Slider$2.default = undefined;

var _Slider = Slider$1;

var _Slider2 = _interopRequireDefault$1d(_Slider);

function _interopRequireDefault$1d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Slider$2.default = _Slider2.default;

var Step$1 = {};

Object.defineProperty(Step$1, "__esModule", {
  value: true
});

var _extends2$z = _extends$3;

var _extends3$z = _interopRequireDefault$1c(_extends2$z);

var _objectWithoutProperties2$y = objectWithoutProperties$2;

var _objectWithoutProperties3$y = _interopRequireDefault$1c(_objectWithoutProperties2$y);

var _getPrototypeOf$I = getPrototypeOf$1.exports;

var _getPrototypeOf2$I = _interopRequireDefault$1c(_getPrototypeOf$I);

var _classCallCheck2$J = classCallCheck$3;

var _classCallCheck3$J = _interopRequireDefault$1c(_classCallCheck2$J);

var _createClass2$J = createClass$2;

var _createClass3$J = _interopRequireDefault$1c(_createClass2$J);

var _possibleConstructorReturn2$I = possibleConstructorReturn$3;

var _possibleConstructorReturn3$I = _interopRequireDefault$1c(_possibleConstructorReturn2$I);

var _inherits2$I = inherits$3;

var _inherits3$I = _interopRequireDefault$1c(_inherits2$I);

var _simpleAssign$I = simpleAssign;

var _simpleAssign2$I = _interopRequireDefault$1c(_simpleAssign$I);

var _react$W = react;

var _react2$V = _interopRequireDefault$1c(_react$W);

var _propTypes$P = propTypes$5.exports;

var _propTypes2$P = _interopRequireDefault$1c(_propTypes$P);

function _interopRequireDefault$1c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStyles$z = function getStyles(_ref, _ref2) {
  var index = _ref.index;
  var stepper = _ref2.stepper;
  var orientation = stepper.orientation;

  var styles = {
    root: {
      flex: '0 0 auto'
    }
  };

  if (index > 0) {
    if (orientation === 'horizontal') {
      styles.root.marginLeft = -6;
    } else if (orientation === 'vertical') {
      styles.root.marginTop = -14;
    }
  }

  return styles;
};

var Step = function (_Component) {
  (0, _inherits3$I.default)(Step, _Component);

  function Step() {
    var _ref3;

    var _temp, _this, _ret;

    (0, _classCallCheck3$J.default)(this, Step);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$I.default)(this, (_ref3 = Step.__proto__ || (0, _getPrototypeOf2$I.default)(Step)).call.apply(_ref3, [this].concat(args))), _this), _this.renderChild = function (child) {
      var _this$props = _this.props,
          active = _this$props.active,
          completed = _this$props.completed,
          disabled = _this$props.disabled,
          index = _this$props.index,
          last = _this$props.last;


      var icon = index + 1;

      return _react2$V.default.cloneElement(child, (0, _simpleAssign2$I.default)({ active: active, completed: completed, disabled: disabled, icon: icon, last: last }, child.props));
    }, _temp), (0, _possibleConstructorReturn3$I.default)(_this, _ret);
  }

  (0, _createClass3$J.default)(Step, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.active;
          _props.completed;
          _props.disabled;
          _props.index;
          _props.last;
          var children = _props.children,
          style = _props.style,
          other = (0, _objectWithoutProperties3$y.default)(_props, ['active', 'completed', 'disabled', 'index', 'last', 'children', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$z(this.props, this.context);

      return _react2$V.default.createElement(
        'div',
        (0, _extends3$z.default)({ style: prepareStyles((0, _simpleAssign2$I.default)(styles.root, style)) }, other),
        _react2$V.default.Children.map(children, this.renderChild)
      );
    }
  }]);
  return Step;
}(_react$W.Component);

Step.contextTypes = {
  muiTheme: _propTypes2$P.default.object.isRequired,
  stepper: _propTypes2$P.default.object
};
Step.propTypes = {
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: _propTypes2$P.default.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`.
   */
  children: _propTypes2$P.default.node,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: _propTypes2$P.default.bool,
  /**
   * Mark the step as disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: _propTypes2$P.default.bool,
  /**
   * @ignore
   * Used internally for numbering.
   */
  index: _propTypes2$P.default.number,
  /**
   * @ignore
   */
  last: _propTypes2$P.default.bool,
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$P.default.object
} ;
Step$1.default = Step;

var StepButton$1 = {};

var StepLabel$1 = {};

var checkCircle = {};

Object.defineProperty(checkCircle, "__esModule", {
  value: true
});

var _react$V = react;

var _react2$U = _interopRequireDefault$1b(_react$V);

var _pure$4 = pure$3;

var _pure2$4 = _interopRequireDefault$1b(_pure$4);

var _SvgIcon$5 = SvgIcon$6;

var _SvgIcon2$5 = _interopRequireDefault$1b(_SvgIcon$5);

function _interopRequireDefault$1b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionCheckCircle = function ActionCheckCircle(props) {
  return _react2$U.default.createElement(
    _SvgIcon2$5.default,
    props,
    _react2$U.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' })
  );
};
ActionCheckCircle = (0, _pure2$4.default)(ActionCheckCircle);
ActionCheckCircle.displayName = 'ActionCheckCircle';
ActionCheckCircle.muiName = 'SvgIcon';

checkCircle.default = ActionCheckCircle;

Object.defineProperty(StepLabel$1, "__esModule", {
  value: true
});

var _extends2$y = _extends$3;

var _extends3$y = _interopRequireDefault$1a(_extends2$y);

var _objectWithoutProperties2$x = objectWithoutProperties$2;

var _objectWithoutProperties3$x = _interopRequireDefault$1a(_objectWithoutProperties2$x);

var _typeof2$2 = _typeof$6;

var _typeof3$2 = _interopRequireDefault$1a(_typeof2$2);

var _simpleAssign$H = simpleAssign;

var _simpleAssign2$H = _interopRequireDefault$1a(_simpleAssign$H);

var _react$U = react;

var _react2$T = _interopRequireDefault$1a(_react$U);

var _propTypes$O = propTypes$5.exports;

var _propTypes2$O = _interopRequireDefault$1a(_propTypes$O);

var _checkCircle = checkCircle;

var _checkCircle2 = _interopRequireDefault$1a(_checkCircle);

var _SvgIcon$4 = SvgIcon$6;

var _SvgIcon2$4 = _interopRequireDefault$1a(_SvgIcon$4);

function _interopRequireDefault$1a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStyles$y = function getStyles(_ref, _ref2) {
  var active = _ref.active,
      completed = _ref.completed,
      disabled = _ref.disabled;
  var muiTheme = _ref2.muiTheme,
      stepper = _ref2.stepper;
  var _muiTheme$stepper = muiTheme.stepper,
      textColor = _muiTheme$stepper.textColor,
      disabledTextColor = _muiTheme$stepper.disabledTextColor,
      iconColor = _muiTheme$stepper.iconColor,
      inactiveIconColor = _muiTheme$stepper.inactiveIconColor;
  var baseTheme = muiTheme.baseTheme;
  var orientation = stepper.orientation;


  var styles = {
    root: {
      height: orientation === 'horizontal' ? 72 : 64,
      color: textColor,
      display: 'flex',
      alignItems: 'center',
      fontFamily: baseTheme.fontFamily,
      fontSize: 14,
      paddingLeft: 14,
      paddingRight: 14
    },
    icon: {
      color: iconColor,
      display: 'block',
      fontSize: 24,
      width: 24,
      height: 24
    },
    iconContainer: {
      paddingRight: 8
    }
  };

  if (active) {
    styles.root.fontWeight = 500;
  }

  if (!completed && !active) {
    styles.icon.color = inactiveIconColor;
  }

  if (disabled) {
    styles.icon.color = inactiveIconColor;
    styles.root.color = disabledTextColor;
    styles.root.cursor = 'default';
  }

  return styles;
};

var renderIcon = function renderIcon(completed, icon, styles) {
  var iconType = typeof icon === 'undefined' ? 'undefined' : (0, _typeof3$2.default)(icon);

  if (iconType === 'number' || iconType === 'string') {
    if (completed) {
      return _react2$T.default.createElement(_checkCircle2.default, {
        color: styles.icon.color,
        style: styles.icon
      });
    }

    return _react2$T.default.createElement(
      _SvgIcon2$4.default,
      { color: styles.icon.color, style: styles.icon },
      _react2$T.default.createElement('circle', { cx: '12', cy: '12', r: '10' }),
      _react2$T.default.createElement(
        'text',
        {
          x: '12',
          y: '16',
          textAnchor: 'middle',
          fontSize: '12',
          fill: '#fff'
        },
        icon
      )
    );
  }

  return icon;
};

var StepLabel = function StepLabel(props, context) {
  props.active;
      var children = props.children,
      completed = props.completed,
      userIcon = props.icon,
      iconContainerStyle = props.iconContainerStyle;
      props.last;
      var style = props.style,
      other = (0, _objectWithoutProperties3$x.default)(props, ['active', 'children', 'completed', 'icon', 'iconContainerStyle', 'last', 'style']);
  var prepareStyles = context.muiTheme.prepareStyles;

  var styles = getStyles$y(props, context);
  var icon = renderIcon(completed, userIcon, styles);

  return _react2$T.default.createElement(
    'span',
    (0, _extends3$y.default)({ style: prepareStyles((0, _simpleAssign2$H.default)(styles.root, style)) }, other),
    icon && _react2$T.default.createElement(
      'span',
      { style: prepareStyles((0, _simpleAssign2$H.default)(styles.iconContainer, iconContainerStyle)) },
      icon
    ),
    children
  );
};

StepLabel.muiName = 'StepLabel';

StepLabel.propTypes = {
  /**
   * Sets active styling. Overrides disabled coloring.
   */
  active: _propTypes2$O.default.bool,
  /**
   * The label text node
   */
  children: _propTypes2$O.default.node,
  /**
   * Sets completed styling. Overrides disabled coloring.
   */
  completed: _propTypes2$O.default.bool,
  /**
   * Sets disabled styling.
   */
  disabled: _propTypes2$O.default.bool,
  /**
   * The icon displayed by the step label.
   */
  icon: _propTypes2$O.default.oneOfType([_propTypes2$O.default.element, _propTypes2$O.default.string, _propTypes2$O.default.number]),
  /**
   * Override the inline-styles of the icon container element.
   */
  iconContainerStyle: _propTypes2$O.default.object,
  /**
   * @ignore
   */
  last: _propTypes2$O.default.bool,
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$O.default.object
} ;

StepLabel.contextTypes = {
  muiTheme: _propTypes2$O.default.object.isRequired,
  stepper: _propTypes2$O.default.object
};

StepLabel$1.default = StepLabel;

Object.defineProperty(StepButton$1, "__esModule", {
  value: true
});

var _extends2$x = _extends$3;

var _extends3$x = _interopRequireDefault$19(_extends2$x);

var _objectWithoutProperties2$w = objectWithoutProperties$2;

var _objectWithoutProperties3$w = _interopRequireDefault$19(_objectWithoutProperties2$w);

var _getPrototypeOf$H = getPrototypeOf$1.exports;

var _getPrototypeOf2$H = _interopRequireDefault$19(_getPrototypeOf$H);

var _classCallCheck2$I = classCallCheck$3;

var _classCallCheck3$I = _interopRequireDefault$19(_classCallCheck2$I);

var _createClass2$I = createClass$2;

var _createClass3$I = _interopRequireDefault$19(_createClass2$I);

var _possibleConstructorReturn2$H = possibleConstructorReturn$3;

var _possibleConstructorReturn3$H = _interopRequireDefault$19(_possibleConstructorReturn2$H);

var _inherits2$H = inherits$3;

var _inherits3$H = _interopRequireDefault$19(_inherits2$H);

var _simpleAssign$G = simpleAssign;

var _simpleAssign2$G = _interopRequireDefault$19(_simpleAssign$G);

var _react$T = react;

var _react2$S = _interopRequireDefault$19(_react$T);

var _propTypes$N = propTypes$5.exports;

var _propTypes2$N = _interopRequireDefault$19(_propTypes$N);

var _transitions$g = transitions;

var _transitions2$g = _interopRequireDefault$19(_transitions$g);

var _EnhancedButton$3 = EnhancedButton$1;

var _EnhancedButton2$3 = _interopRequireDefault$19(_EnhancedButton$3);

var _StepLabel = StepLabel$1;

var _StepLabel2 = _interopRequireDefault$19(_StepLabel);

function _interopRequireDefault$19(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isLabel = function isLabel(child) {
  return child && child.type && child.type.muiName === 'StepLabel';
};

var getStyles$x = function getStyles(props, context, state) {
  var hovered = state.hovered;
  var _context$muiTheme$ste = context.muiTheme.stepper,
      backgroundColor = _context$muiTheme$ste.backgroundColor,
      hoverBackgroundColor = _context$muiTheme$ste.hoverBackgroundColor;


  var styles = {
    root: {
      padding: 0,
      backgroundColor: hovered ? hoverBackgroundColor : backgroundColor,
      transition: _transitions2$g.default.easeOut()
    }
  };

  if (context.stepper.orientation === 'vertical') {
    styles.root.width = '100%';
  }

  return styles;
};

var StepButton = function (_Component) {
  (0, _inherits3$H.default)(StepButton, _Component);

  function StepButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$I.default)(this, StepButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$H.default)(this, (_ref = StepButton.__proto__ || (0, _getPrototypeOf2$H.default)(StepButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      touched: false
    }, _this.handleMouseEnter = function (event) {
      var onMouseEnter = _this.props.onMouseEnter;
      // Cancel hover styles for touch devices

      if (!_this.state.touched) {
        _this.setState({ hovered: true });
      }
      if (typeof onMouseEnter === 'function') {
        onMouseEnter(event);
      }
    }, _this.handleMouseLeave = function (event) {
      var onMouseLeave = _this.props.onMouseLeave;

      _this.setState({ hovered: false });
      if (typeof onMouseLeave === 'function') {
        onMouseLeave(event);
      }
    }, _this.handleTouchStart = function (event) {
      var onTouchStart = _this.props.onTouchStart;

      if (!_this.state.touched) {
        _this.setState({ touched: true });
      }
      if (typeof onTouchStart === 'function') {
        onTouchStart(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$H.default)(_this, _ret);
  }

  (0, _createClass3$I.default)(StepButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          active = _props.active,
          children = _props.children,
          completed = _props.completed,
          disabled = _props.disabled,
          icon = _props.icon,
          iconContainerStyle = _props.iconContainerStyle;
          _props.last;
          _props.onMouseEnter;
          _props.onMouseLeave;
          _props.onTouchStart;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$w.default)(_props, ['active', 'children', 'completed', 'disabled', 'icon', 'iconContainerStyle', 'last', 'onMouseEnter', 'onMouseLeave', 'onTouchStart', 'style']);


      var styles = getStyles$x(this.props, this.context, this.state);

      var child = isLabel(children) ? children : _react2$S.default.createElement(
        _StepLabel2.default,
        null,
        children
      );

      return _react2$S.default.createElement(
        _EnhancedButton2$3.default,
        (0, _extends3$x.default)({
          disabled: disabled,
          style: (0, _simpleAssign2$G.default)(styles.root, style),
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave,
          onTouchStart: this.handleTouchStart
        }, other),
        _react2$S.default.cloneElement(child, { active: active, completed: completed, disabled: disabled, icon: icon, iconContainerStyle: iconContainerStyle })
      );
    }
  }]);
  return StepButton;
}(_react$T.Component);

StepButton.contextTypes = {
  muiTheme: _propTypes2$N.default.object.isRequired,
  stepper: _propTypes2$N.default.object
};
StepButton.propTypes = {
  /**
   * Passed from `Step` Is passed to StepLabel.
   */
  active: _propTypes2$N.default.bool,
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: _propTypes2$N.default.node,
  /**
   * Sets completed styling. Is passed to StepLabel.
   */
  completed: _propTypes2$N.default.bool,
  /**
   * Disables the button and sets disabled styling. Is passed to StepLabel.
   */
  disabled: _propTypes2$N.default.bool,
  /**
   * The icon displayed by the step label.
   */
  icon: _propTypes2$N.default.oneOfType([_propTypes2$N.default.element, _propTypes2$N.default.string, _propTypes2$N.default.number]),
  /**
   * Override the inline-styles of the icon container element.
   */
  iconContainerStyle: _propTypes2$N.default.object,
  /** @ignore */
  last: _propTypes2$N.default.bool,
  /** @ignore */
  onMouseEnter: _propTypes2$N.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$N.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$N.default.func,
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$N.default.object
} ;
StepButton$1.default = StepButton;

var StepContent$1 = {};

var ExpandTransition$2 = {};

var ExpandTransitionChild$1 = {};

Object.defineProperty(ExpandTransitionChild$1, "__esModule", {
  value: true
});

var _extends2$w = _extends$3;

var _extends3$w = _interopRequireDefault$18(_extends2$w);

var _objectWithoutProperties2$v = objectWithoutProperties$2;

var _objectWithoutProperties3$v = _interopRequireDefault$18(_objectWithoutProperties2$v);

var _getPrototypeOf$G = getPrototypeOf$1.exports;

var _getPrototypeOf2$G = _interopRequireDefault$18(_getPrototypeOf$G);

var _classCallCheck2$H = classCallCheck$3;

var _classCallCheck3$H = _interopRequireDefault$18(_classCallCheck2$H);

var _createClass2$H = createClass$2;

var _createClass3$H = _interopRequireDefault$18(_createClass2$H);

var _possibleConstructorReturn2$G = possibleConstructorReturn$3;

var _possibleConstructorReturn3$G = _interopRequireDefault$18(_possibleConstructorReturn2$G);

var _inherits2$G = inherits$3;

var _inherits3$G = _interopRequireDefault$18(_inherits2$G);

var _simpleAssign$F = simpleAssign;

var _simpleAssign2$F = _interopRequireDefault$18(_simpleAssign$F);

var _react$S = react;

var _react2$R = _interopRequireDefault$18(_react$S);

var _propTypes$M = propTypes$5.exports;

var _propTypes2$M = _interopRequireDefault$18(_propTypes$M);

var _reactDom$7 = reactDom;

var _reactDom2$7 = _interopRequireDefault$18(_reactDom$7);

var _transitions$f = transitions;

var _transitions2$f = _interopRequireDefault$18(_transitions$f);

function _interopRequireDefault$18(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reflow = function reflow(elem) {
  return elem.offsetHeight;
};

var ExpandTransitionChild = function (_Component) {
  (0, _inherits3$G.default)(ExpandTransitionChild, _Component);

  function ExpandTransitionChild() {
    (0, _classCallCheck3$H.default)(this, ExpandTransitionChild);
    return (0, _possibleConstructorReturn3$G.default)(this, (ExpandTransitionChild.__proto__ || (0, _getPrototypeOf2$G.default)(ExpandTransitionChild)).apply(this, arguments));
  }

  (0, _createClass3$H.default)(ExpandTransitionChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.enterTimer);
      clearTimeout(this.enteredTimer);
      clearTimeout(this.leaveTimer);
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(callback) {
      this.open();
      callback();
    }
  }, {
    key: 'componentDidAppear',
    value: function componentDidAppear() {
      this.setAutoHeight();
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(callback) {
      var _this2 = this;

      var _props = this.props,
          enterDelay = _props.enterDelay,
          transitionDelay = _props.transitionDelay,
          transitionDuration = _props.transitionDuration;

      var element = _reactDom2$7.default.findDOMNode(this);
      element.style.height = 0;
      this.enterTimer = setTimeout(function () {
        return _this2.open();
      }, enterDelay);
      this.enteredTimer = setTimeout(function () {
        return callback();
      }, enterDelay + transitionDelay + transitionDuration);
    }
  }, {
    key: 'componentDidEnter',
    value: function componentDidEnter() {
      this.setAutoHeight();
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(callback) {
      var _props2 = this.props,
          transitionDelay = _props2.transitionDelay,
          transitionDuration = _props2.transitionDuration;

      var element = _reactDom2$7.default.findDOMNode(this);
      // Set fixed height first for animated property value
      element.style.height = this.refs.wrapper.clientHeight + 'px';
      reflow(element);
      element.style.transitionDuration = transitionDuration + 'ms';
      element.style.height = 0;
      this.leaveTimer = setTimeout(function () {
        return callback();
      }, transitionDelay + transitionDuration);
    }
  }, {
    key: 'setAutoHeight',
    value: function setAutoHeight() {
      var _ReactDOM$findDOMNode = _reactDom2$7.default.findDOMNode(this),
          style = _ReactDOM$findDOMNode.style;

      style.transitionDuration = 0;
      style.height = 'auto';
    }
  }, {
    key: 'open',
    value: function open() {
      var element = _reactDom2$7.default.findDOMNode(this);
      element.style.height = this.refs.wrapper.clientHeight + 'px';
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          children = _props3.children;
          _props3.enterDelay;
          var style = _props3.style,
          transitionDelay = _props3.transitionDelay,
          transitionDuration = _props3.transitionDuration,
          other = (0, _objectWithoutProperties3$v.default)(_props3, ['children', 'enterDelay', 'style', 'transitionDelay', 'transitionDuration']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$F.default)({
        position: 'relative',
        height: 0,
        width: '100%',
        top: 0,
        left: 0,
        overflow: 'hidden',
        transition: _transitions2$f.default.easeOut(transitionDuration + 'ms', ['height'], transitionDelay + 'ms')
      }, style);

      return _react2$R.default.createElement(
        'div',
        (0, _extends3$w.default)({}, other, { style: prepareStyles(mergedRootStyles) }),
        _react2$R.default.createElement(
          'div',
          { ref: 'wrapper' },
          children
        )
      );
    }
  }]);
  return ExpandTransitionChild;
}(_react$S.Component);

ExpandTransitionChild.defaultProps = {
  enterDelay: 0,
  transitionDelay: 0,
  transitionDuration: 450
};
ExpandTransitionChild.contextTypes = {
  muiTheme: _propTypes2$M.default.object.isRequired
};
ExpandTransitionChild.propTypes = {
  children: _propTypes2$M.default.node,
  enterDelay: _propTypes2$M.default.number,
  style: _propTypes2$M.default.object,
  transitionDelay: _propTypes2$M.default.number,
  transitionDuration: _propTypes2$M.default.number
} ;
ExpandTransitionChild$1.default = ExpandTransitionChild;

Object.defineProperty(ExpandTransition$2, "__esModule", {
  value: true
});

var _extends2$v = _extends$3;

var _extends3$v = _interopRequireDefault$17(_extends2$v);

var _objectWithoutProperties2$u = objectWithoutProperties$2;

var _objectWithoutProperties3$u = _interopRequireDefault$17(_objectWithoutProperties2$u);

var _getPrototypeOf$F = getPrototypeOf$1.exports;

var _getPrototypeOf2$F = _interopRequireDefault$17(_getPrototypeOf$F);

var _classCallCheck2$G = classCallCheck$3;

var _classCallCheck3$G = _interopRequireDefault$17(_classCallCheck2$G);

var _createClass2$G = createClass$2;

var _createClass3$G = _interopRequireDefault$17(_createClass2$G);

var _possibleConstructorReturn2$F = possibleConstructorReturn$3;

var _possibleConstructorReturn3$F = _interopRequireDefault$17(_possibleConstructorReturn2$F);

var _inherits2$F = inherits$3;

var _inherits3$F = _interopRequireDefault$17(_inherits2$F);

var _simpleAssign$E = simpleAssign;

var _simpleAssign2$E = _interopRequireDefault$17(_simpleAssign$E);

var _react$R = react;

var _react2$Q = _interopRequireDefault$17(_react$R);

var _propTypes$L = propTypes$5.exports;

var _propTypes2$L = _interopRequireDefault$17(_propTypes$L);

var _TransitionGroup = TransitionGroup.exports;

var _TransitionGroup2 = _interopRequireDefault$17(_TransitionGroup);

var _ExpandTransitionChild = ExpandTransitionChild$1;

var _ExpandTransitionChild2 = _interopRequireDefault$17(_ExpandTransitionChild);

function _interopRequireDefault$17(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExpandTransition$1 = function (_Component) {
  (0, _inherits3$F.default)(ExpandTransition, _Component);

  function ExpandTransition() {
    (0, _classCallCheck3$G.default)(this, ExpandTransition);
    return (0, _possibleConstructorReturn3$F.default)(this, (ExpandTransition.__proto__ || (0, _getPrototypeOf2$F.default)(ExpandTransition)).apply(this, arguments));
  }

  (0, _createClass3$G.default)(ExpandTransition, [{
    key: 'renderChildren',
    value: function renderChildren(children) {
      var _props = this.props,
          enterDelay = _props.enterDelay,
          transitionDelay = _props.transitionDelay,
          transitionDuration = _props.transitionDuration,
          expandTransitionChildStyle = _props.expandTransitionChildStyle;

      return _react2$Q.default.Children.map(children, function (child) {
        return _react2$Q.default.createElement(
          _ExpandTransitionChild2.default,
          {
            enterDelay: enterDelay,
            transitionDelay: transitionDelay,
            transitionDuration: transitionDuration,
            key: child.key,
            style: expandTransitionChildStyle
          },
          child
        );
      }, this);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children;
          _props2.enterDelay;
          var loading = _props2.loading,
          open = _props2.open,
          style = _props2.style;
          _props2.transitionDelay;
          _props2.transitionDuration;
          _props2.expandTransitionChildStyle;
          var other = (0, _objectWithoutProperties3$u.default)(_props2, ['children', 'enterDelay', 'loading', 'open', 'style', 'transitionDelay', 'transitionDuration', 'expandTransitionChildStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var mergedRootStyles = (0, _simpleAssign2$E.default)({}, {
        position: 'relative',
        overflow: 'hidden',
        height: 'auto'
      }, style);

      var newChildren = loading ? [] : this.renderChildren(children);

      return _react2$Q.default.createElement(
        _TransitionGroup2.default,
        (0, _extends3$v.default)({
          style: prepareStyles(mergedRootStyles),
          component: 'div'
        }, other),
        open && newChildren
      );
    }
  }]);
  return ExpandTransition;
}(_react$R.Component);

ExpandTransition$1.defaultProps = {
  enterDelay: 0,
  transitionDelay: 0,
  transitionDuration: 450,
  loading: false,
  open: false
};
ExpandTransition$1.contextTypes = {
  muiTheme: _propTypes2$L.default.object.isRequired
};
ExpandTransition$1.propTypes = {
  children: _propTypes2$L.default.node,
  enterDelay: _propTypes2$L.default.number,
  expandTransitionChildStyle: _propTypes2$L.default.object,
  loading: _propTypes2$L.default.bool,
  open: _propTypes2$L.default.bool,
  style: _propTypes2$L.default.object,
  transitionDelay: _propTypes2$L.default.number,
  transitionDuration: _propTypes2$L.default.number
} ;
ExpandTransition$2.default = ExpandTransition$1;

Object.defineProperty(StepContent$1, "__esModule", {
  value: true
});

var _extends2$u = _extends$3;

var _extends3$u = _interopRequireDefault$16(_extends2$u);

var _objectWithoutProperties2$t = objectWithoutProperties$2;

var _objectWithoutProperties3$t = _interopRequireDefault$16(_objectWithoutProperties2$t);

var _getPrototypeOf$E = getPrototypeOf$1.exports;

var _getPrototypeOf2$E = _interopRequireDefault$16(_getPrototypeOf$E);

var _classCallCheck2$F = classCallCheck$3;

var _classCallCheck3$F = _interopRequireDefault$16(_classCallCheck2$F);

var _createClass2$F = createClass$2;

var _createClass3$F = _interopRequireDefault$16(_createClass2$F);

var _possibleConstructorReturn2$E = possibleConstructorReturn$3;

var _possibleConstructorReturn3$E = _interopRequireDefault$16(_possibleConstructorReturn2$E);

var _inherits2$E = inherits$3;

var _inherits3$E = _interopRequireDefault$16(_inherits2$E);

var _simpleAssign$D = simpleAssign;

var _simpleAssign2$D = _interopRequireDefault$16(_simpleAssign$D);

var _react$Q = react;

var _react2$P = _interopRequireDefault$16(_react$Q);

var _propTypes$K = propTypes$5.exports;

var _propTypes2$K = _interopRequireDefault$16(_propTypes$K);

var _ExpandTransition = ExpandTransition$2;

var _ExpandTransition2 = _interopRequireDefault$16(_ExpandTransition);

var _warning$3 = warning_1$1;

var _warning2$3 = _interopRequireDefault$16(_warning$3);

function _interopRequireDefault$16(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ExpandTransition(props) {
  return _react2$P.default.createElement(_ExpandTransition2.default, props);
}

var getStyles$w = function getStyles(props, context) {
  var styles = {
    root: {
      marginTop: -14,
      marginLeft: 14 + 11, // padding + 1/2 icon
      paddingLeft: 24 - 11 + 8,
      paddingRight: 16,
      overflow: 'hidden'
    }
  };

  if (!props.last) {
    styles.root.borderLeft = '1px solid ' + context.muiTheme.stepper.connectorLineColor;
  }

  return styles;
};

var StepContent = function (_Component) {
  (0, _inherits3$E.default)(StepContent, _Component);

  function StepContent() {
    (0, _classCallCheck3$F.default)(this, StepContent);
    return (0, _possibleConstructorReturn3$E.default)(this, (StepContent.__proto__ || (0, _getPrototypeOf2$E.default)(StepContent)).apply(this, arguments));
  }

  (0, _createClass3$F.default)(StepContent, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          active = _props.active,
          children = _props.children;
          _props.completed;
          _props.last;
          var style = _props.style,
          transition = _props.transition,
          transitionDuration = _props.transitionDuration,
          other = (0, _objectWithoutProperties3$t.default)(_props, ['active', 'children', 'completed', 'last', 'style', 'transition', 'transitionDuration']);
      var _context = this.context,
          stepper = _context.stepper,
          prepareStyles = _context.muiTheme.prepareStyles;


      if (stepper.orientation !== 'vertical') {
        (0, _warning2$3.default)(false, 'Material-UI: <StepContent /> is only designed for use with the vertical stepper.') ;
        return null;
      }

      var styles = getStyles$w(this.props, this.context);
      var transitionProps = {
        enterDelay: transitionDuration,
        transitionDuration: transitionDuration,
        open: active
      };

      return _react2$P.default.createElement(
        'div',
        (0, _extends3$u.default)({ style: prepareStyles((0, _simpleAssign2$D.default)(styles.root, style)) }, other),
        _react2$P.default.createElement(transition, transitionProps, _react2$P.default.createElement(
          'div',
          { style: { overflow: 'hidden' } },
          children
        ))
      );
    }
  }]);
  return StepContent;
}(_react$Q.Component);

StepContent.defaultProps = {
  transition: ExpandTransition,
  transitionDuration: 450
};
StepContent.contextTypes = {
  muiTheme: _propTypes2$K.default.object.isRequired,
  stepper: _propTypes2$K.default.object
};
StepContent.propTypes = {
  /**
   * Expands the content
   */
  active: _propTypes2$K.default.bool,
  /**
   * Step content
   */
  children: _propTypes2$K.default.node,
  /**
   * @ignore
   */
  completed: _propTypes2$K.default.bool,
  /**
   * @ignore
   */
  last: _propTypes2$K.default.bool,
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$K.default.object,
  /**
   * ReactTransitionGroup component.
   */
  transition: _propTypes2$K.default.func,
  /**
   * Adjust the duration of the content expand transition. Passed as a prop to the transition component.
   */
  transitionDuration: _propTypes2$K.default.number
} ;
StepContent$1.default = StepContent;

var Stepper$1 = {};

var StepConnector$1 = {};

Object.defineProperty(StepConnector$1, "__esModule", {
  value: true
});
StepConnector$1.PlainStepConnector = undefined;

var _react$P = react;

var _react2$O = _interopRequireDefault$15(_react$P);

var _propTypes$J = propTypes$5.exports;

var _propTypes2$J = _interopRequireDefault$15(_propTypes$J);

var _pure$3 = pure$3;

var _pure2$3 = _interopRequireDefault$15(_pure$3);

function _interopRequireDefault$15(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes$1 = {
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$J.default.object
};

var contextTypes = {
  muiTheme: _propTypes2$J.default.object.isRequired,
  stepper: _propTypes2$J.default.object
};

var StepConnector = function StepConnector(props, context) {
  var muiTheme = context.muiTheme,
      stepper = context.stepper;


  var styles = {
    wrapper: {
      flex: '1 1 auto'
    },
    line: {
      display: 'block',
      borderColor: muiTheme.stepper.connectorLineColor
    }
  };

  /**
   * Clean up once we can use CSS pseudo elements
   */
  if (stepper.orientation === 'horizontal') {
    styles.line.marginLeft = -6;
    styles.line.borderTopStyle = 'solid';
    styles.line.borderTopWidth = 1;
  } else if (stepper.orientation === 'vertical') {
    styles.wrapper.marginLeft = 14 + 11; // padding + 1/2 icon
    styles.line.borderLeftStyle = 'solid';
    styles.line.borderLeftWidth = 1;
    styles.line.minHeight = 28;
  }

  var prepareStyles = muiTheme.prepareStyles;


  return _react2$O.default.createElement(
    'div',
    { style: prepareStyles(styles.wrapper) },
    _react2$O.default.createElement('span', { style: prepareStyles(styles.line) })
  );
};

StepConnector.propTypes = propTypes$1 ;
StepConnector.contextTypes = contextTypes;

StepConnector$1.PlainStepConnector = StepConnector;
StepConnector$1.default = (0, _pure2$3.default)(StepConnector);

Object.defineProperty(Stepper$1, "__esModule", {
  value: true
});

var _getPrototypeOf$D = getPrototypeOf$1.exports;

var _getPrototypeOf2$D = _interopRequireDefault$14(_getPrototypeOf$D);

var _classCallCheck2$E = classCallCheck$3;

var _classCallCheck3$E = _interopRequireDefault$14(_classCallCheck2$E);

var _createClass2$E = createClass$2;

var _createClass3$E = _interopRequireDefault$14(_createClass2$E);

var _possibleConstructorReturn2$D = possibleConstructorReturn$3;

var _possibleConstructorReturn3$D = _interopRequireDefault$14(_possibleConstructorReturn2$D);

var _inherits2$D = inherits$3;

var _inherits3$D = _interopRequireDefault$14(_inherits2$D);

var _simpleAssign$C = simpleAssign;

var _simpleAssign2$C = _interopRequireDefault$14(_simpleAssign$C);

var _react$O = react;

var _react2$N = _interopRequireDefault$14(_react$O);

var _propTypes$I = propTypes$5.exports;

var _propTypes2$I = _interopRequireDefault$14(_propTypes$I);

var _StepConnector = StepConnector$1;

var _StepConnector2 = _interopRequireDefault$14(_StepConnector);

function _interopRequireDefault$14(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStyles$v = function getStyles(props) {
  var orientation = props.orientation;

  return {
    root: {
      display: 'flex',
      flexDirection: orientation === 'horizontal' ? 'row' : 'column',
      alignContent: 'center',
      alignItems: orientation === 'horizontal' ? 'center' : 'stretch',
      justifyContent: 'space-between'
    }
  };
};

var Stepper = function (_Component) {
  (0, _inherits3$D.default)(Stepper, _Component);

  function Stepper() {
    (0, _classCallCheck3$E.default)(this, Stepper);
    return (0, _possibleConstructorReturn3$D.default)(this, (Stepper.__proto__ || (0, _getPrototypeOf2$D.default)(Stepper)).apply(this, arguments));
  }

  (0, _createClass3$E.default)(Stepper, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var orientation = this.props.orientation;

      return { stepper: { orientation: orientation } };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          activeStep = _props.activeStep,
          children = _props.children,
          connector = _props.connector,
          linear = _props.linear,
          style = _props.style;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$v(this.props, this.context);

      /**
       * One day, we may be able to use real CSS tools
       * For now, we need to create our own "pseudo" elements
       * and nth child selectors, etc
       * That's what some of this garbage is for :)
       */
      var numChildren = _react$O.Children.count(children);
      var steps = _react$O.Children.map(children, function (step, index) {
        if (!_react2$N.default.isValidElement(step)) {
          return null;
        }
        var controlProps = { index: index };

        if (activeStep === index) {
          controlProps.active = true;
        } else if (linear && activeStep > index) {
          controlProps.completed = true;
        } else if (linear && activeStep < index) {
          controlProps.disabled = true;
        }

        if (index + 1 === numChildren) {
          controlProps.last = true;
        }

        return [index > 0 && connector, _react2$N.default.cloneElement(step, (0, _simpleAssign2$C.default)(controlProps, step.props))];
      });

      return _react2$N.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$C.default)(styles.root, style)) },
        steps
      );
    }
  }]);
  return Stepper;
}(_react$O.Component);

Stepper.defaultProps = {
  connector: _react2$N.default.createElement(_StepConnector2.default, null),
  orientation: 'horizontal',
  linear: true
};
Stepper.contextTypes = { muiTheme: _propTypes2$I.default.object.isRequired };
Stepper.childContextTypes = { stepper: _propTypes2$I.default.object };
Stepper.propTypes = {
  /**
   * Set the active step (zero based index). This will enable `Step` control helpers.
   */
  activeStep: _propTypes2$I.default.number,
  /**
   * Should be two or more `<Step />` components.
   */
  children: _propTypes2$I.default.node,
  /**
   * A component to be placed between each step.
   */
  connector: _propTypes2$I.default.node,
  /**
   * If set to `true`, the `Stepper` will assist in controlling steps for linear flow
   */
  linear: _propTypes2$I.default.bool,
  /**
   * The stepper orientation (layout flow direction)
   */
  orientation: _propTypes2$I.default.oneOf(['horizontal', 'vertical']),
  /**
   * Override the inline-style of the root element.
   */
  style: _propTypes2$I.default.object
} ;
Stepper$1.default = Stepper;

var Snackbar$2 = {};

var Snackbar$1 = {};

var SnackbarBody$1 = {};

var withWidth$1 = {};

Object.defineProperty(withWidth$1, "__esModule", {
  value: true
});
withWidth$1.LARGE = withWidth$1.MEDIUM = withWidth$1.SMALL = undefined;

var _extends2$t = _extends$3;

var _extends3$t = _interopRequireDefault$13(_extends2$t);

var _getPrototypeOf$C = getPrototypeOf$1.exports;

var _getPrototypeOf2$C = _interopRequireDefault$13(_getPrototypeOf$C);

var _classCallCheck2$D = classCallCheck$3;

var _classCallCheck3$D = _interopRequireDefault$13(_classCallCheck2$D);

var _createClass2$D = createClass$2;

var _createClass3$D = _interopRequireDefault$13(_createClass2$D);

var _possibleConstructorReturn2$C = possibleConstructorReturn$3;

var _possibleConstructorReturn3$C = _interopRequireDefault$13(_possibleConstructorReturn2$C);

var _inherits2$C = inherits$3;

var _inherits3$C = _interopRequireDefault$13(_inherits2$C);

withWidth$1.default = withWidth;

var _react$N = react;

var _react2$M = _interopRequireDefault$13(_react$N);

var _reactEventListener$3 = reactEventListener_cjs;

var _reactEventListener2$3 = _interopRequireDefault$13(_reactEventListener$3);

function _interopRequireDefault$13(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SMALL = withWidth$1.SMALL = 1;
var MEDIUM = withWidth$1.MEDIUM = 2;
var LARGE = withWidth$1.LARGE = 3;

function withWidth() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$largeWidth = options.largeWidth,
      largeWidth = _options$largeWidth === undefined ? 992 : _options$largeWidth,
      _options$mediumWidth = options.mediumWidth,
      mediumWidth = _options$mediumWidth === undefined ? 768 : _options$mediumWidth,
      _options$resizeInterv = options.resizeInterval,
      resizeInterval = _options$resizeInterv === undefined ? 166 : _options$resizeInterv;


  return function (MyComponent) {
    return function (_Component) {
      (0, _inherits3$C.default)(WithWidth, _Component);

      function WithWidth() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3$D.default)(this, WithWidth);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$C.default)(this, (_ref = WithWidth.__proto__ || (0, _getPrototypeOf2$C.default)(WithWidth)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          width: null
        }, _this.handleResize = function () {
          clearTimeout(_this.deferTimer);
          _this.deferTimer = setTimeout(function () {
            _this.updateWidth();
          }, resizeInterval);
        }, _temp), (0, _possibleConstructorReturn3$C.default)(_this, _ret);
      }

      (0, _createClass3$D.default)(WithWidth, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          this.updateWidth();
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          clearTimeout(this.deferTimer);
        }
      }, {
        key: 'updateWidth',
        value: function updateWidth() {
          var innerWidth = window.innerWidth;
          var width = void 0;

          if (innerWidth >= largeWidth) {
            width = LARGE;
          } else if (innerWidth >= mediumWidth) {
            width = MEDIUM;
          } else {
            // innerWidth < 768
            width = SMALL;
          }

          if (width !== this.state.width) {
            this.setState({
              width: width
            });
          }
        }
      }, {
        key: 'render',
        value: function render() {
          var width = this.state.width;

          /**
           * When rendering the component on the server,
           * we have no idea about the screen width.
           * In order to prevent blinks and help the reconciliation
           * we are not rendering the component.
           *
           * A better alternative would be to send client hints.
           * But the browser support of this API is low:
           * http://caniuse.com/#search=client%20hint
           */
          if (width === null) {
            return null;
          }

          return _react2$M.default.createElement(
            _reactEventListener2$3.default,
            { target: 'window', onResize: this.handleResize },
            _react2$M.default.createElement(MyComponent, (0, _extends3$t.default)({
              width: width
            }, this.props))
          );
        }
      }]);
      return WithWidth;
    }(_react$N.Component);
  };
}

Object.defineProperty(SnackbarBody$1, "__esModule", {
  value: true
});
SnackbarBody$1.SnackbarBody = undefined;

var _extends2$s = _extends$3;

var _extends3$s = _interopRequireDefault$12(_extends2$s);

var _objectWithoutProperties2$s = objectWithoutProperties$2;

var _objectWithoutProperties3$s = _interopRequireDefault$12(_objectWithoutProperties2$s);

var _simpleAssign$B = simpleAssign;

var _simpleAssign2$B = _interopRequireDefault$12(_simpleAssign$B);

var _react$M = react;

var _react2$L = _interopRequireDefault$12(_react$M);

var _propTypes$H = propTypes$5.exports;

var _propTypes2$H = _interopRequireDefault$12(_propTypes$H);

var _transitions$e = transitions;

var _transitions2$e = _interopRequireDefault$12(_transitions$e);

var _withWidth = withWidth$1;

var _withWidth2 = _interopRequireDefault$12(_withWidth);

var _FlatButton$1 = FlatButton$2;

var _FlatButton2$1 = _interopRequireDefault$12(_FlatButton$1);

function _interopRequireDefault$12(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$u(props, context) {
  var open = props.open,
      width = props.width;
  var _context$muiTheme = context.muiTheme,
      _context$muiTheme$bas = _context$muiTheme.baseTheme,
      _context$muiTheme$bas2 = _context$muiTheme$bas.spacing,
      desktopGutter = _context$muiTheme$bas2.desktopGutter,
      desktopSubheaderHeight = _context$muiTheme$bas2.desktopSubheaderHeight,
      fontFamily = _context$muiTheme$bas.fontFamily,
      _context$muiTheme$sna = _context$muiTheme.snackbar,
      backgroundColor = _context$muiTheme$sna.backgroundColor,
      textColor = _context$muiTheme$sna.textColor,
      actionColor = _context$muiTheme$sna.actionColor,
      borderRadius = _context$muiTheme.borderRadius;


  var isSmall = width === _withWidth.SMALL;

  var styles = {
    root: {
      fontFamily: fontFamily,
      backgroundColor: backgroundColor,
      padding: '0 ' + desktopGutter + 'px',
      height: desktopSubheaderHeight,
      lineHeight: desktopSubheaderHeight + 'px',
      borderRadius: isSmall ? 0 : borderRadius,
      maxWidth: isSmall ? 'inherit' : 568,
      minWidth: isSmall ? 'inherit' : 288,
      width: isSmall ? 'calc(100vw - ' + desktopGutter * 2 + 'px)' : 'auto',
      flexGrow: isSmall ? 1 : 0
    },
    content: {
      fontSize: 14,
      color: textColor,
      opacity: open ? 1 : 0,
      transition: open ? _transitions2$e.default.easeOut('500ms', 'opacity', '100ms') : _transitions2$e.default.easeOut('400ms', 'opacity')
    },
    action: {
      color: actionColor,
      float: 'right',
      marginTop: 6,
      marginRight: -16,
      marginLeft: desktopGutter,
      backgroundColor: 'transparent'
    }
  };

  return styles;
}

var SnackbarBody = function SnackbarBody(props, context) {
  var action = props.action,
      contentStyle = props.contentStyle,
      message = props.message;
      props.open;
      var onActionClick = props.onActionClick,
      style = props.style,
      other = (0, _objectWithoutProperties3$s.default)(props, ['action', 'contentStyle', 'message', 'open', 'onActionClick', 'style']);
  var prepareStyles = context.muiTheme.prepareStyles;

  var styles = getStyles$u(props, context);

  var actionButton = action && _react2$L.default.createElement(_FlatButton2$1.default, {
    style: styles.action,
    label: action,
    onClick: onActionClick
  });

  return _react2$L.default.createElement(
    'div',
    (0, _extends3$s.default)({}, other, { style: prepareStyles((0, _simpleAssign2$B.default)(styles.root, style)) }),
    _react2$L.default.createElement(
      'div',
      { style: prepareStyles((0, _simpleAssign2$B.default)(styles.content, contentStyle)) },
      _react2$L.default.createElement(
        'span',
        null,
        message
      ),
      actionButton
    )
  );
};

SnackbarBody$1.SnackbarBody = SnackbarBody;
SnackbarBody.propTypes = {
  /**
   * The label for the action on the snackbar.
   */
  action: _propTypes2$H.default.node,
  /**
   * Override the inline-styles of the content element.
   */
  contentStyle: _propTypes2$H.default.object,
  /**
   * The message to be displayed.
   *
   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
   * showing again)
   */
  message: _propTypes2$H.default.node.isRequired,
  /**
   * Fired when the action button is clicked.
   *
   * @param {object} event Action button event.
   */
  onActionClick: _propTypes2$H.default.func,
  /**
   * @ignore
   * Controls whether the `Snackbar` is opened or not.
   */
  open: _propTypes2$H.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$H.default.object,
  /**
   * @ignore
   * Width of the screen.
   */
  width: _propTypes2$H.default.number.isRequired
} ;

SnackbarBody.contextTypes = {
  muiTheme: _propTypes2$H.default.object.isRequired
};

SnackbarBody$1.default = (0, _withWidth2.default)()(SnackbarBody);

Object.defineProperty(Snackbar$1, "__esModule", {
  value: true
});

var _extends2$r = _extends$3;

var _extends3$r = _interopRequireDefault$11(_extends2$r);

var _objectWithoutProperties2$r = objectWithoutProperties$2;

var _objectWithoutProperties3$r = _interopRequireDefault$11(_objectWithoutProperties2$r);

var _getPrototypeOf$B = getPrototypeOf$1.exports;

var _getPrototypeOf2$B = _interopRequireDefault$11(_getPrototypeOf$B);

var _classCallCheck2$C = classCallCheck$3;

var _classCallCheck3$C = _interopRequireDefault$11(_classCallCheck2$C);

var _createClass2$C = createClass$2;

var _createClass3$C = _interopRequireDefault$11(_createClass2$C);

var _possibleConstructorReturn2$B = possibleConstructorReturn$3;

var _possibleConstructorReturn3$B = _interopRequireDefault$11(_possibleConstructorReturn2$B);

var _inherits2$B = inherits$3;

var _inherits3$B = _interopRequireDefault$11(_inherits2$B);

var _simpleAssign$A = simpleAssign;

var _simpleAssign2$A = _interopRequireDefault$11(_simpleAssign$A);

var _react$L = react;

var _react2$K = _interopRequireDefault$11(_react$L);

var _propTypes$G = propTypes$5.exports;

var _propTypes2$G = _interopRequireDefault$11(_propTypes$G);

var _transitions$d = transitions;

var _transitions2$d = _interopRequireDefault$11(_transitions$d);

var _ClickAwayListener$2 = ClickAwayListener$1;

var _ClickAwayListener2$2 = _interopRequireDefault$11(_ClickAwayListener$2);

var _SnackbarBody = SnackbarBody$1;

var _SnackbarBody2 = _interopRequireDefault$11(_SnackbarBody);

function _interopRequireDefault$11(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$t(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      desktopSubheaderHeight = _context$muiTheme.baseTheme.spacing.desktopSubheaderHeight,
      zIndex = _context$muiTheme.zIndex;
  var open = state.open;


  var styles = {
    root: {
      position: 'fixed',
      left: '50%',
      display: 'flex',
      bottom: 0,
      zIndex: zIndex.snackbar,
      visibility: open ? 'visible' : 'hidden',
      transform: open ? 'translate(-50%, 0)' : 'translate(-50%, ' + desktopSubheaderHeight + 'px)',
      transition: _transitions2$d.default.easeOut('400ms', 'transform') + ', ' + _transitions2$d.default.easeOut('400ms', 'visibility')
    }
  };

  return styles;
}

var Snackbar = function (_Component) {
  (0, _inherits3$B.default)(Snackbar, _Component);

  function Snackbar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$C.default)(this, Snackbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$B.default)(this, (_ref = Snackbar.__proto__ || (0, _getPrototypeOf2$B.default)(Snackbar)).call.apply(_ref, [this].concat(args))), _this), _this.componentClickAway = function () {
      if (_this.timerTransitionId) {
        // If transitioning, don't close the snackbar.
        return;
      }

      if (_this.props.open !== null && _this.props.onRequestClose) {
        _this.props.onRequestClose(Snackbar.reasons.CLICKAWAY);
      } else {
        _this.setState({ open: false });
      }
    }, _temp), (0, _possibleConstructorReturn3$B.default)(_this, _ret);
  }

  (0, _createClass3$C.default)(Snackbar, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        open: this.props.open,
        message: this.props.message,
        action: this.props.action
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.state.open) {
        this.setAutoHideTimer();
        this.setTransitionTimer();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.open && nextProps.open && (nextProps.message !== this.props.message || nextProps.action !== this.props.action)) {
        this.setState({
          open: false
        });

        clearTimeout(this.timerOneAtTheTimeId);
        this.timerOneAtTheTimeId = setTimeout(function () {
          _this2.setState({
            message: nextProps.message,
            action: nextProps.action,
            open: true
          });
        }, 400);
      } else {
        var open = nextProps.open;

        this.setState({
          open: open !== null ? open : this.state.open,
          message: nextProps.message,
          action: nextProps.action
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevState.open !== this.state.open) {
        if (this.state.open) {
          this.setAutoHideTimer();
          this.setTransitionTimer();
        } else {
          clearTimeout(this.timerAutoHideId);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timerAutoHideId);
      clearTimeout(this.timerTransitionId);
      clearTimeout(this.timerOneAtTheTimeId);
    }
  }, {
    key: 'setAutoHideTimer',


    // Timer that controls delay before snackbar auto hides
    value: function setAutoHideTimer() {
      var _this3 = this;

      var autoHideDuration = this.props.autoHideDuration;

      if (autoHideDuration > 0) {
        clearTimeout(this.timerAutoHideId);
        this.timerAutoHideId = setTimeout(function () {
          if (_this3.props.open !== null && _this3.props.onRequestClose) {
            _this3.props.onRequestClose(Snackbar.reasons.TIMEOUT);
          } else {
            _this3.setState({ open: false });
          }
        }, autoHideDuration);
      }
    }

    // Timer that controls delay before click-away events are captured (based on when animation completes)

  }, {
    key: 'setTransitionTimer',
    value: function setTransitionTimer() {
      var _this4 = this;

      this.timerTransitionId = setTimeout(function () {
        _this4.timerTransitionId = undefined;
      }, 400);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.autoHideDuration;
          var contentStyle = _props.contentStyle,
          bodyStyle = _props.bodyStyle;
          _props.message;
          _props.onRequestClose;
          var onActionClick = _props.onActionClick,
          style = _props.style,
          other = (0, _objectWithoutProperties3$r.default)(_props, ['autoHideDuration', 'contentStyle', 'bodyStyle', 'message', 'onRequestClose', 'onActionClick', 'style']);
      var _state = this.state,
          action = _state.action,
          message = _state.message,
          open = _state.open;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$t(this.props, this.context, this.state);

      return _react2$K.default.createElement(
        _ClickAwayListener2$2.default,
        { onClickAway: open ? this.componentClickAway : null },
        _react2$K.default.createElement(
          'div',
          (0, _extends3$r.default)({}, other, { style: prepareStyles((0, _simpleAssign2$A.default)(styles.root, style)) }),
          _react2$K.default.createElement(_SnackbarBody2.default, {
            action: action,
            contentStyle: contentStyle,
            message: message,
            open: open,
            onActionClick: onActionClick,
            style: bodyStyle
          })
        )
      );
    }
  }]);
  return Snackbar;
}(_react$L.Component);

Snackbar.contextTypes = {
  muiTheme: _propTypes2$G.default.object.isRequired
};
Snackbar.reasons = {
  CLICKAWAY: 'clickaway',
  TIMEOUT: 'timeout'
};
Snackbar.propTypes = {
  /**
   * The label for the action on the snackbar.
   */
  action: _propTypes2$G.default.node,
  /**
   * The number of milliseconds to wait before automatically dismissing.
   * If no value is specified the snackbar will dismiss normally.
   * If a value is provided the snackbar can still be dismissed normally.
   * If a snackbar is dismissed before the timer expires, the timer will be cleared.
   */
  autoHideDuration: _propTypes2$G.default.number,
  /**
   * Override the inline-styles of the body element.
   */
  bodyStyle: _propTypes2$G.default.object,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$G.default.string,
  /**
   * Override the inline-styles of the content element.
   */
  contentStyle: _propTypes2$G.default.object,
  /**
   * The message to be displayed.
   *
   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
   * showing again)
   */
  message: _propTypes2$G.default.node.isRequired,
  /**
   * Fired when the action button is clicked.
   *
   * @param {object} event Action button event.
   */
  onActionClick: _propTypes2$G.default.func,
  /**
   * Fired when the `Snackbar` is requested to be closed by a click outside the `Snackbar`, or after the
   * `autoHideDuration` timer expires.
   *
   * Typically `onRequestClose` is used to set state in the parent component, which is used to control the `Snackbar`
   * `open` prop.
   *
   * The `reason` parameter can optionally be used to control the response to `onRequestClose`,
   * for example ignoring `clickaway`.
   *
   * @param {string} reason Can be:`"timeout"` (`autoHideDuration` expired) or: `"clickaway"`
   */
  onRequestClose: _propTypes2$G.default.func,
  /**
   * Controls whether the `Snackbar` is opened or not.
   */
  open: _propTypes2$G.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$G.default.object
} ;
Snackbar$1.default = Snackbar;

Object.defineProperty(Snackbar$2, "__esModule", {
  value: true
});
var _default$5 = Snackbar$2.default = undefined;

var _Snackbar = Snackbar$1;

var _Snackbar2 = _interopRequireDefault$10(_Snackbar);

function _interopRequireDefault$10(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$5 = Snackbar$2.default = _Snackbar2.default;

var Tabs$2 = {};

var Tab$3 = {};

Object.defineProperty(Tab$3, "__esModule", {
  value: true
});

var _extends2$q = _extends$3;

var _extends3$q = _interopRequireDefault$$(_extends2$q);

var _objectWithoutProperties2$q = objectWithoutProperties$2;

var _objectWithoutProperties3$q = _interopRequireDefault$$(_objectWithoutProperties2$q);

var _getPrototypeOf$A = getPrototypeOf$1.exports;

var _getPrototypeOf2$A = _interopRequireDefault$$(_getPrototypeOf$A);

var _classCallCheck2$B = classCallCheck$3;

var _classCallCheck3$B = _interopRequireDefault$$(_classCallCheck2$B);

var _createClass2$B = createClass$2;

var _createClass3$B = _interopRequireDefault$$(_createClass2$B);

var _possibleConstructorReturn2$A = possibleConstructorReturn$3;

var _possibleConstructorReturn3$A = _interopRequireDefault$$(_possibleConstructorReturn2$A);

var _inherits2$A = inherits$3;

var _inherits3$A = _interopRequireDefault$$(_inherits2$A);

var _simpleAssign$z = simpleAssign;

var _simpleAssign2$z = _interopRequireDefault$$(_simpleAssign$z);

var _react$K = react;

var _react2$J = _interopRequireDefault$$(_react$K);

var _propTypes$F = propTypes$5.exports;

var _propTypes2$F = _interopRequireDefault$$(_propTypes$F);

var _EnhancedButton$2 = EnhancedButton$1;

var _EnhancedButton2$2 = _interopRequireDefault$$(_EnhancedButton$2);

function _interopRequireDefault$$(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$s(props, context) {
  var tabs = context.muiTheme.tabs;


  return {
    root: {
      color: props.selected ? tabs.selectedTextColor : tabs.textColor,
      fontWeight: 500,
      fontSize: 14,
      width: props.width,
      textTransform: 'uppercase',
      padding: 0
    },
    button: {
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      height: props.label && props.icon ? 72 : 48
    }
  };
}

var Tab$2 = function (_Component) {
  (0, _inherits3$A.default)(Tab, _Component);

  function Tab() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$B.default)(this, Tab);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$A.default)(this, (_ref = Tab.__proto__ || (0, _getPrototypeOf2$A.default)(Tab)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(_this.props.value, event, _this);
      }
    }, _temp), (0, _possibleConstructorReturn3$A.default)(_this, _ret);
  }

  (0, _createClass3$B.default)(Tab, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          icon = _props.icon;
          _props.index;
          _props.onActive;
          _props.onClick;
          _props.selected;
          var label = _props.label,
          buttonStyle = _props.buttonStyle,
          style = _props.style;
          _props.value;
          _props.width;
          var other = (0, _objectWithoutProperties3$q.default)(_props, ['icon', 'index', 'onActive', 'onClick', 'selected', 'label', 'buttonStyle', 'style', 'value', 'width']);


      var styles = getStyles$s(this.props, this.context);

      var iconElement = void 0;
      if (icon && _react2$J.default.isValidElement(icon)) {
        iconElement = _react2$J.default.cloneElement(icon, {
          style: {
            fontSize: 24,
            color: icon.props && icon.props.style && icon.props.style.color ? icon.props.style.color : styles.root.color,
            marginBottom: label ? 5 : 0
          }
        });
      }

      var rippleOpacity = 0.3;
      var rippleColor = this.context.muiTheme.tabs.selectedTextColor;

      return _react2$J.default.createElement(
        _EnhancedButton2$2.default,
        (0, _extends3$q.default)({}, other, {
          style: (0, _simpleAssign2$z.default)(styles.root, style),
          focusRippleColor: rippleColor,
          touchRippleColor: rippleColor,
          focusRippleOpacity: rippleOpacity,
          touchRippleOpacity: rippleOpacity,
          onClick: this.handleClick
        }),
        _react2$J.default.createElement(
          'div',
          { style: (0, _simpleAssign2$z.default)(styles.button, buttonStyle) },
          iconElement,
          label
        )
      );
    }
  }]);
  return Tab;
}(_react$K.Component);

Tab$2.muiName = 'Tab';
Tab$2.contextTypes = {
  muiTheme: _propTypes2$F.default.object.isRequired
};
Tab$2.propTypes = {
  /**
   * Override the inline-styles of the button element.
   */
  buttonStyle: _propTypes2$F.default.object,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$F.default.string,
  /**
   * Sets the icon of the tab, you can pass `FontIcon` or `SvgIcon` elements.
   */
  icon: _propTypes2$F.default.node,
  /**
   * @ignore
   */
  index: _propTypes2$F.default.any,
  /**
   * Sets the text value of the tab item to the string specified.
   */
  label: _propTypes2$F.default.node,
  /**
   * Fired when the active tab changes by touch or tap.
   * Use this event to specify any functionality when an active tab changes.
   * For example - we are using this to route to home when the third tab becomes active.
   * This function will always recieve the active tab as it\'s first argument.
   */
  onActive: _propTypes2$F.default.func,
  /**
   * @ignore
   * This property is overriden by the Tabs component.
   */
  onClick: _propTypes2$F.default.func,
  /**
   * @ignore
   * Defines if the current tab is selected or not.
   * The Tabs component is responsible for setting this property.
   */
  selected: _propTypes2$F.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$F.default.object,
  /**
   * If value prop passed to Tabs component, this value prop is also required.
   * It assigns a value to the tab so that it can be selected by the Tabs.
   */
  value: _propTypes2$F.default.any,
  /**
   * @ignore
   * This property is overriden by the Tabs component.
   */
  width: _propTypes2$F.default.string
} ;
Tab$3.default = Tab$2;

var Tabs$1 = {};

var TabTemplate$1 = {};

Object.defineProperty(TabTemplate$1, "__esModule", {
  value: true
});

var _simpleAssign$y = simpleAssign;

var _simpleAssign2$y = _interopRequireDefault$_(_simpleAssign$y);

var _react$J = react;

var _react2$I = _interopRequireDefault$_(_react$J);

var _propTypes$E = propTypes$5.exports;

var _propTypes2$E = _interopRequireDefault$_(_propTypes$E);

function _interopRequireDefault$_(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$b = {
  width: '100%',
  position: 'relative',
  textAlign: 'initial'
};

var TabTemplate = function TabTemplate(_ref) {
  var children = _ref.children,
      selected = _ref.selected,
      style = _ref.style;

  var templateStyle = (0, _simpleAssign2$y.default)({}, styles$b, style);
  if (!selected) {
    templateStyle.height = 0;
    templateStyle.overflow = 'hidden';
  }

  return _react2$I.default.createElement(
    'div',
    { style: templateStyle },
    children
  );
};

TabTemplate.propTypes = {
  children: _propTypes2$E.default.node,
  selected: _propTypes2$E.default.bool,
  style: _propTypes2$E.default.object
} ;

TabTemplate$1.default = TabTemplate;

var InkBar$1 = {};

Object.defineProperty(InkBar$1, "__esModule", {
  value: true
});

var _getPrototypeOf$z = getPrototypeOf$1.exports;

var _getPrototypeOf2$z = _interopRequireDefault$Z(_getPrototypeOf$z);

var _classCallCheck2$A = classCallCheck$3;

var _classCallCheck3$A = _interopRequireDefault$Z(_classCallCheck2$A);

var _createClass2$A = createClass$2;

var _createClass3$A = _interopRequireDefault$Z(_createClass2$A);

var _possibleConstructorReturn2$z = possibleConstructorReturn$3;

var _possibleConstructorReturn3$z = _interopRequireDefault$Z(_possibleConstructorReturn2$z);

var _inherits2$z = inherits$3;

var _inherits3$z = _interopRequireDefault$Z(_inherits2$z);

var _simpleAssign$x = simpleAssign;

var _simpleAssign2$x = _interopRequireDefault$Z(_simpleAssign$x);

var _react$I = react;

var _react2$H = _interopRequireDefault$Z(_react$I);

var _propTypes$D = propTypes$5.exports;

var _propTypes2$D = _interopRequireDefault$Z(_propTypes$D);

var _transitions$c = transitions;

var _transitions2$c = _interopRequireDefault$Z(_transitions$c);

function _interopRequireDefault$Z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$r(props, context) {
  var _context$muiTheme = context.muiTheme,
      inkBar = _context$muiTheme.inkBar,
      isRtl = _context$muiTheme.isRtl;


  return {
    root: {
      left: props.left,
      width: props.width,
      bottom: 0,
      display: 'block',
      backgroundColor: props.color || inkBar.backgroundColor,
      height: 2,
      marginTop: -2,
      position: 'relative',
      transition: _transitions2$c.default.easeOut('1s', isRtl ? 'right' : 'left')
    }
  };
}

var InkBar = function (_Component) {
  (0, _inherits3$z.default)(InkBar, _Component);

  function InkBar() {
    (0, _classCallCheck3$A.default)(this, InkBar);
    return (0, _possibleConstructorReturn3$z.default)(this, (InkBar.__proto__ || (0, _getPrototypeOf2$z.default)(InkBar)).apply(this, arguments));
  }

  (0, _createClass3$A.default)(InkBar, [{
    key: 'render',
    value: function render() {
      var style = this.props.style;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$r(this.props, this.context);

      return _react2$H.default.createElement('div', { style: prepareStyles((0, _simpleAssign2$x.default)(styles.root, style)) });
    }
  }]);
  return InkBar;
}(_react$I.Component);

InkBar.contextTypes = {
  muiTheme: _propTypes2$D.default.object.isRequired
};
InkBar.propTypes = {
  color: _propTypes2$D.default.string,
  left: _propTypes2$D.default.string.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$D.default.object,
  width: _propTypes2$D.default.string.isRequired
} ;
InkBar$1.default = InkBar;

Object.defineProperty(Tabs$1, "__esModule", {
  value: true
});

var _extends2$p = _extends$3;

var _extends3$p = _interopRequireDefault$Y(_extends2$p);

var _objectWithoutProperties2$p = objectWithoutProperties$2;

var _objectWithoutProperties3$p = _interopRequireDefault$Y(_objectWithoutProperties2$p);

var _getPrototypeOf$y = getPrototypeOf$1.exports;

var _getPrototypeOf2$y = _interopRequireDefault$Y(_getPrototypeOf$y);

var _classCallCheck2$z = classCallCheck$3;

var _classCallCheck3$z = _interopRequireDefault$Y(_classCallCheck2$z);

var _createClass2$z = createClass$2;

var _createClass3$z = _interopRequireDefault$Y(_createClass2$z);

var _possibleConstructorReturn2$y = possibleConstructorReturn$3;

var _possibleConstructorReturn3$y = _interopRequireDefault$Y(_possibleConstructorReturn2$y);

var _inherits2$y = inherits$3;

var _inherits3$y = _interopRequireDefault$Y(_inherits2$y);

var _simpleAssign$w = simpleAssign;

var _simpleAssign2$w = _interopRequireDefault$Y(_simpleAssign$w);

var _react$H = react;

var _react2$G = _interopRequireDefault$Y(_react$H);

var _propTypes$C = propTypes$5.exports;

var _propTypes2$C = _interopRequireDefault$Y(_propTypes$C);

var _warning$2 = warning_1$1;

var _warning2$2 = _interopRequireDefault$Y(_warning$2);

var _TabTemplate = TabTemplate$1;

var _TabTemplate2 = _interopRequireDefault$Y(_TabTemplate);

var _InkBar = InkBar$1;

var _InkBar2 = _interopRequireDefault$Y(_InkBar);

function _interopRequireDefault$Y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$q(props, context) {
  var tabs = context.muiTheme.tabs;


  return {
    tabItemContainer: {
      width: '100%',
      backgroundColor: tabs.backgroundColor,
      whiteSpace: 'nowrap',
      display: 'flex'
    }
  };
}

var Tabs = function (_Component) {
  (0, _inherits3$y.default)(Tabs, _Component);

  function Tabs() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$z.default)(this, Tabs);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$y.default)(this, (_ref = Tabs.__proto__ || (0, _getPrototypeOf2$y.default)(Tabs)).call.apply(_ref, [this].concat(args))), _this), _this.state = { selectedIndex: 0 }, _this.handleTabClick = function (value, event, tab) {
      var valueLink = _this.getValueLink(_this.props);
      var index = tab.props.index;

      if (valueLink.value && valueLink.value !== value || _this.state.selectedIndex !== index) {
        valueLink.requestChange(value, event, tab);
      }

      _this.setState({ selectedIndex: index });

      if (tab.props.onActive) {
        tab.props.onActive(tab);
      }
    }, _temp), (0, _possibleConstructorReturn3$y.default)(_this, _ret);
  }

  (0, _createClass3$z.default)(Tabs, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var valueLink = this.getValueLink(this.props);
      var initialIndex = this.props.initialSelectedIndex;

      this.setState({
        selectedIndex: valueLink.value !== undefined ? this.getSelectedIndex(this.props) : initialIndex < this.getTabCount() ? initialIndex : 0
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps, nextContext) {
      var valueLink = this.getValueLink(newProps);
      var newState = {
        muiTheme: nextContext.muiTheme || this.context.muiTheme
      };

      if (valueLink.value !== undefined) {
        newState.selectedIndex = this.getSelectedIndex(newProps);
      }

      this.setState(newState);
    }
  }, {
    key: 'getTabs',
    value: function getTabs() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

      var tabs = [];

      _react$H.Children.forEach(props.children, function (tab) {
        if ((0, _react$H.isValidElement)(tab)) {
          tabs.push(tab);
        }
      });

      return tabs;
    }
  }, {
    key: 'getTabCount',
    value: function getTabCount() {
      return this.getTabs().length;
    }

    // Do not use outside of this component, it will be removed once valueLink is deprecated

  }, {
    key: 'getValueLink',
    value: function getValueLink(props) {
      return props.valueLink || {
        value: props.value,
        requestChange: props.onChange
      };
    }
  }, {
    key: 'getSelectedIndex',
    value: function getSelectedIndex(props) {
      var valueLink = this.getValueLink(props);
      var selectedIndex = -1;

      this.getTabs(props).forEach(function (tab, index) {
        if (valueLink.value === tab.props.value) {
          selectedIndex = index;
        }
      });

      return selectedIndex;
    }
  }, {
    key: 'getSelected',
    value: function getSelected(tab, index) {
      var valueLink = this.getValueLink(this.props);
      return valueLink.value ? valueLink.value === tab.props.value : this.state.selectedIndex === index;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          contentContainerClassName = _props.contentContainerClassName,
          contentContainerStyle = _props.contentContainerStyle;
          _props.initialSelectedIndex;
          var inkBarStyle = _props.inkBarStyle,
          inkBarContainerStyle = _props.inkBarContainerStyle;
          _props.onChange;
          var style = _props.style,
          tabItemContainerStyle = _props.tabItemContainerStyle,
          tabTemplate = _props.tabTemplate,
          tabTemplateStyle = _props.tabTemplateStyle,
          other = (0, _objectWithoutProperties3$p.default)(_props, ['contentContainerClassName', 'contentContainerStyle', 'initialSelectedIndex', 'inkBarStyle', 'inkBarContainerStyle', 'onChange', 'style', 'tabItemContainerStyle', 'tabTemplate', 'tabTemplateStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$q(this.props, this.context);
      var valueLink = this.getValueLink(this.props);
      var tabValue = valueLink.value;
      var tabContent = [];
      var width = 100 / this.getTabCount();

      var tabs = this.getTabs().map(function (tab, index) {
        (0, _warning2$2.default)(tab.type && tab.type.muiName === 'Tab', 'Material-UI: Tabs only accepts Tab Components as children.\n        Found ' + (tab.type.muiName || tab.type) + ' as child number ' + (index + 1) + ' of Tabs') ;

        (0, _warning2$2.default)(!tabValue || tab.props.value !== undefined, 'Material-UI: Tabs value prop has been passed, but Tab ' + index + '\n        does not have a value prop. Needs value if Tabs is going\n        to be a controlled component.') ;

        tabContent.push(tab.props.children ? (0, _react$H.createElement)(tabTemplate || _TabTemplate2.default, {
          key: index,
          selected: _this2.getSelected(tab, index),
          style: tabTemplateStyle
        }, tab.props.children) : undefined);

        return (0, _react$H.cloneElement)(tab, {
          key: index,
          index: index,
          selected: _this2.getSelected(tab, index),
          width: width + '%',
          onClick: _this2.handleTabClick
        });
      });

      var realSelectedIndex = valueLink.value ? this.getSelectedIndex(this.props) : this.state.selectedIndex;

      var inkBar = realSelectedIndex !== -1 ? _react2$G.default.createElement(_InkBar2.default, {
        left: width * realSelectedIndex + '%',
        width: width + '%',
        style: inkBarStyle
      }) : null;

      var inkBarContainerWidth = tabItemContainerStyle ? tabItemContainerStyle.width : '100%';

      return _react2$G.default.createElement(
        'div',
        (0, _extends3$p.default)({ style: prepareStyles((0, _simpleAssign2$w.default)({}, style)) }, other),
        _react2$G.default.createElement(
          'div',
          { style: prepareStyles((0, _simpleAssign2$w.default)(styles.tabItemContainer, tabItemContainerStyle)) },
          tabs
        ),
        _react2$G.default.createElement(
          'div',
          { style: prepareStyles((0, _simpleAssign2$w.default)({ width: inkBarContainerWidth }, inkBarContainerStyle)) },
          inkBar
        ),
        _react2$G.default.createElement(
          'div',
          {
            style: prepareStyles((0, _simpleAssign2$w.default)({}, contentContainerStyle)),
            className: contentContainerClassName
          },
          tabContent
        )
      );
    }
  }]);
  return Tabs;
}(_react$H.Component);

Tabs.defaultProps = {
  initialSelectedIndex: 0,
  onChange: function onChange() {}
};
Tabs.contextTypes = {
  muiTheme: _propTypes2$C.default.object.isRequired
};
Tabs.propTypes = {
  /**
   * Should be used to pass `Tab` components.
   */
  children: _propTypes2$C.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$C.default.string,
  /**
   * The css class name of the content's container.
   */
  contentContainerClassName: _propTypes2$C.default.string,
  /**
   * Override the inline-styles of the content's container.
   */
  contentContainerStyle: _propTypes2$C.default.object,
  /**
   * Specify initial visible tab index.
   * If `initialSelectedIndex` is set but larger than the total amount of specified tabs,
   * `initialSelectedIndex` will revert back to default.
   * If `initialSelectedIndex` is set to any negative value, no tab will be selected intially.
   */
  initialSelectedIndex: _propTypes2$C.default.number,
  /**
   * Override the inline-styles of the InkBar.
   */
  inkBarStyle: _propTypes2$C.default.object,
  /**
   * Override the inline-styles of the InkBar container.
   */
  inkBarContainerStyle: _propTypes2$C.default.object,
  /**
   * Called when the selected value change.
   */
  onChange: _propTypes2$C.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$C.default.object,
  /**
   * Override the inline-styles of the tab-labels container.
   */
  tabItemContainerStyle: _propTypes2$C.default.object,
  /**
   * Override the default tab template used to wrap the content of each tab element.
   */
  tabTemplate: _propTypes2$C.default.func,
  /**
   * Override the inline-styles of the tab template.
   */
  tabTemplateStyle: _propTypes2$C.default.object,
  /**
   * Makes Tabs controllable and selects the tab whose value prop matches this prop.
   */
  value: _propTypes2$C.default.any
} ;
Tabs$1.default = Tabs;

Object.defineProperty(Tabs$2, "__esModule", {
  value: true
});
Tabs$2.default = Tabs$2.Tabs = Tab$1 = Tabs$2.Tab = undefined;

var _Tab2 = Tab$3;

var _Tab3 = _interopRequireDefault$X(_Tab2);

var _Tabs2 = Tabs$1;

var _Tabs3 = _interopRequireDefault$X(_Tabs2);

function _interopRequireDefault$X(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Tab$1 = Tabs$2.Tab = _Tab3.default;
Tabs$2.Tabs = _Tabs3.default;
Tabs$2.default = _Tabs3.default;

var Table$2 = {};

var Table$1 = {};

Object.defineProperty(Table$1, "__esModule", {
  value: true
});

var _getPrototypeOf$x = getPrototypeOf$1.exports;

var _getPrototypeOf2$x = _interopRequireDefault$W(_getPrototypeOf$x);

var _classCallCheck2$y = classCallCheck$3;

var _classCallCheck3$y = _interopRequireDefault$W(_classCallCheck2$y);

var _createClass2$y = createClass$2;

var _createClass3$y = _interopRequireDefault$W(_createClass2$y);

var _possibleConstructorReturn2$x = possibleConstructorReturn$3;

var _possibleConstructorReturn3$x = _interopRequireDefault$W(_possibleConstructorReturn2$x);

var _inherits2$x = inherits$3;

var _inherits3$x = _interopRequireDefault$W(_inherits2$x);

var _simpleAssign$v = simpleAssign;

var _simpleAssign2$v = _interopRequireDefault$W(_simpleAssign$v);

var _react$G = react;

var _react2$F = _interopRequireDefault$W(_react$G);

var _propTypes$B = propTypes$5.exports;

var _propTypes2$B = _interopRequireDefault$W(_propTypes$B);

var _warning$1 = warning_1$1;

var _warning2$1 = _interopRequireDefault$W(_warning$1);

function _interopRequireDefault$W(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$p(props, context) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      table = _context$muiTheme.table;


  return {
    root: {
      backgroundColor: table.backgroundColor,
      width: '100%',
      borderCollapse: 'collapse',
      borderSpacing: 0,
      tableLayout: 'fixed',
      fontFamily: baseTheme.fontFamily
    },
    bodyTable: {
      height: props.fixedHeader || props.fixedFooter ? props.height : 'auto',
      overflowX: 'hidden',
      overflowY: 'auto'
    },
    tableWrapper: {
      height: props.fixedHeader || props.fixedFooter ? 'auto' : props.height,
      overflow: 'auto'
    }
  };
}

var Table = function (_Component) {
  (0, _inherits3$x.default)(Table, _Component);

  function Table() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$y.default)(this, Table);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$x.default)(this, (_ref = Table.__proto__ || (0, _getPrototypeOf2$x.default)(Table)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      allRowsSelected: false
    }, _this.onCellClick = function (rowNumber, columnNumber, event) {
      if (_this.props.onCellClick) _this.props.onCellClick(rowNumber, columnNumber, event);
    }, _this.onCellHover = function (rowNumber, columnNumber, event) {
      if (_this.props.onCellHover) _this.props.onCellHover(rowNumber, columnNumber, event);
    }, _this.onCellHoverExit = function (rowNumber, columnNumber, event) {
      if (_this.props.onCellHoverExit) _this.props.onCellHoverExit(rowNumber, columnNumber, event);
    }, _this.onRowHover = function (rowNumber) {
      if (_this.props.onRowHover) _this.props.onRowHover(rowNumber);
    }, _this.onRowHoverExit = function (rowNumber) {
      if (_this.props.onRowHoverExit) _this.props.onRowHoverExit(rowNumber);
    }, _this.onRowSelection = function (selectedRows) {
      if (_this.state.allRowsSelected) {
        _this.setState({ allRowsSelected: false });
      }

      if (_this.props.onRowSelection) {
        _this.props.onRowSelection(selectedRows);
      }
    }, _this.onSelectAll = function () {
      if (_this.props.onRowSelection) {
        if (!_this.state.allRowsSelected) {
          _this.props.onRowSelection('all');
        } else {
          _this.props.onRowSelection('none');
        }
      }

      _this.setState({ allRowsSelected: !_this.state.allRowsSelected });
    }, _temp), (0, _possibleConstructorReturn3$x.default)(_this, _ret);
  }

  (0, _createClass3$y.default)(Table, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.allRowsSelected) {
        this.setState({ allRowsSelected: true });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.allRowsSelected !== nextProps.allRowsSelected) {
        this.setState({ allRowsSelected: nextProps.allRowsSelected });
      }
    }
  }, {
    key: 'isScrollbarVisible',
    value: function isScrollbarVisible() {
      var tableDivHeight = this.refs.tableDiv.clientHeight;
      var tableBodyHeight = this.refs.tableBody.clientHeight;

      return tableBodyHeight > tableDivHeight;
    }
  }, {
    key: 'createTableHeader',
    value: function createTableHeader(base) {
      return _react2$F.default.cloneElement(base, {
        enableSelectAll: base.props.enableSelectAll && this.props.selectable && this.props.multiSelectable,
        onSelectAll: this.onSelectAll,
        selectAllSelected: this.state.allRowsSelected
      });
    }
  }, {
    key: 'createTableBody',
    value: function createTableBody(base) {
      return _react2$F.default.cloneElement(base, {
        allRowsSelected: this.state.allRowsSelected,
        multiSelectable: this.props.multiSelectable,
        onCellClick: this.onCellClick,
        onCellHover: this.onCellHover,
        onCellHoverExit: this.onCellHoverExit,
        onRowHover: this.onRowHover,
        onRowHoverExit: this.onRowHoverExit,
        onRowSelection: this.onRowSelection,
        selectable: this.props.selectable
      });
    }
  }, {
    key: 'createTableFooter',
    value: function createTableFooter(base) {
      return base;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          fixedFooter = _props.fixedFooter,
          fixedHeader = _props.fixedHeader,
          style = _props.style,
          wrapperStyle = _props.wrapperStyle,
          headerStyle = _props.headerStyle,
          bodyStyle = _props.bodyStyle,
          footerStyle = _props.footerStyle;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$p(this.props, this.context);

      var tHead = void 0;
      var tFoot = void 0;
      var tBody = void 0;

      _react2$F.default.Children.forEach(children, function (child) {
        if (!_react2$F.default.isValidElement(child)) return;

        var muiName = child.type.muiName;

        if (muiName === 'TableBody') {
          tBody = _this2.createTableBody(child);
        } else if (muiName === 'TableHeader') {
          tHead = _this2.createTableHeader(child);
        } else if (muiName === 'TableFooter') {
          tFoot = _this2.createTableFooter(child);
        } else {
          (0, _warning2$1.default)(false, 'Material-UI: Children of the Table component must be TableBody or TableHeader or TableFooter.\n           Nothing is rendered.') ;
        }
      });

      // If we could not find a table-header and a table-body, do not attempt to display anything.
      if (!tBody && !tHead) return null;

      var mergedTableStyle = (0, _simpleAssign2$v.default)(styles.root, style);
      var headerTable = void 0;
      var footerTable = void 0;
      var inlineHeader = void 0;
      var inlineFooter = void 0;

      if (fixedHeader) {
        headerTable = _react2$F.default.createElement(
          'div',
          { style: prepareStyles((0, _simpleAssign2$v.default)({}, headerStyle)) },
          _react2$F.default.createElement(
            'table',
            { className: className, style: mergedTableStyle },
            tHead
          )
        );
      } else {
        inlineHeader = tHead;
      }

      if (tFoot !== undefined) {
        if (fixedFooter) {
          footerTable = _react2$F.default.createElement(
            'div',
            { style: prepareStyles((0, _simpleAssign2$v.default)({}, footerStyle)) },
            _react2$F.default.createElement(
              'table',
              { className: className, style: prepareStyles(mergedTableStyle) },
              tFoot
            )
          );
        } else {
          inlineFooter = tFoot;
        }
      }

      return _react2$F.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$v.default)(styles.tableWrapper, wrapperStyle)) },
        headerTable,
        _react2$F.default.createElement(
          'div',
          { style: prepareStyles((0, _simpleAssign2$v.default)(styles.bodyTable, bodyStyle)), ref: 'tableDiv' },
          _react2$F.default.createElement(
            'table',
            { className: className, style: mergedTableStyle, ref: 'tableBody' },
            inlineHeader,
            inlineFooter,
            tBody
          )
        ),
        footerTable
      );
    }
  }]);
  return Table;
}(_react$G.Component);

Table.defaultProps = {
  allRowsSelected: false,
  fixedFooter: true,
  fixedHeader: true,
  height: 'inherit',
  multiSelectable: false,
  selectable: true
};
Table.contextTypes = {
  muiTheme: _propTypes2$B.default.object.isRequired
};
Table.propTypes = {
  /**
   * Set to true to indicate that all rows should be selected.
   */
  allRowsSelected: _propTypes2$B.default.bool,
  /**
   * Override the inline-styles of the body's table element.
   */
  bodyStyle: _propTypes2$B.default.object,
  /**
   * Children passed to table.
   */
  children: _propTypes2$B.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$B.default.string,
  /**
   * If true, the footer will appear fixed below the table.
   * The default value is true.
   */
  fixedFooter: _propTypes2$B.default.bool,
  /**
   * If true, the header will appear fixed above the table.
   * The default value is true.
   */
  fixedHeader: _propTypes2$B.default.bool,
  /**
   * Override the inline-styles of the footer's table element.
   */
  footerStyle: _propTypes2$B.default.object,
  /**
   * Override the inline-styles of the header's table element.
   */
  headerStyle: _propTypes2$B.default.object,
  /**
   * The height of the table.
   */
  height: _propTypes2$B.default.string,
  /**
   * If true, multiple table rows can be selected.
   * CTRL/CMD+Click and SHIFT+Click are valid actions.
   * The default value is false.
   */
  multiSelectable: _propTypes2$B.default.bool,
  /**
   * Called when a row cell is clicked.
   * rowNumber is the row number and columnId is
   * the column number or the column key.
   */
  onCellClick: _propTypes2$B.default.func,
  /**
   * Called when a table cell is hovered.
   * rowNumber is the row number of the hovered row
   * and columnId is the column number or the column key of the cell.
   */
  onCellHover: _propTypes2$B.default.func,
  /**
   * Called when a table cell is no longer hovered.
   * rowNumber is the row number of the row and columnId
   * is the column number or the column key of the cell.
   */
  onCellHoverExit: _propTypes2$B.default.func,
  /**
   * Called when a table row is hovered.
   * rowNumber is the row number of the hovered row.
   */
  onRowHover: _propTypes2$B.default.func,
  /**
   * Called when a table row is no longer hovered.
   * rowNumber is the row number of the row that is no longer hovered.
   */
  onRowHoverExit: _propTypes2$B.default.func,
  /**
   * Called when a row is selected.
   * selectedRows is an array of all row selections.
   * IF all rows have been selected, the string "all"
   * will be returned instead to indicate that all rows have been selected.
   */
  onRowSelection: _propTypes2$B.default.func,
  /**
   * If true, table rows can be selected.
   * If multiple row selection is desired, enable multiSelectable.
   * The default value is true.
   */
  selectable: _propTypes2$B.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$B.default.object,
  /**
   * Override the inline-styles of the table's wrapper element.
   */
  wrapperStyle: _propTypes2$B.default.object
} ;
Table$1.default = Table;

var TableBody$1 = {};

var TableRowColumn$1 = {};

Object.defineProperty(TableRowColumn$1, "__esModule", {
  value: true
});

var _extends2$o = _extends$3;

var _extends3$o = _interopRequireDefault$V(_extends2$o);

var _objectWithoutProperties2$o = objectWithoutProperties$2;

var _objectWithoutProperties3$o = _interopRequireDefault$V(_objectWithoutProperties2$o);

var _getPrototypeOf$w = getPrototypeOf$1.exports;

var _getPrototypeOf2$w = _interopRequireDefault$V(_getPrototypeOf$w);

var _classCallCheck2$x = classCallCheck$3;

var _classCallCheck3$x = _interopRequireDefault$V(_classCallCheck2$x);

var _createClass2$x = createClass$2;

var _createClass3$x = _interopRequireDefault$V(_createClass2$x);

var _possibleConstructorReturn2$w = possibleConstructorReturn$3;

var _possibleConstructorReturn3$w = _interopRequireDefault$V(_possibleConstructorReturn2$w);

var _inherits2$w = inherits$3;

var _inherits3$w = _interopRequireDefault$V(_inherits2$w);

var _simpleAssign$u = simpleAssign;

var _simpleAssign2$u = _interopRequireDefault$V(_simpleAssign$u);

var _react$F = react;

var _react2$E = _interopRequireDefault$V(_react$F);

var _propTypes$A = propTypes$5.exports;

var _propTypes2$A = _interopRequireDefault$V(_propTypes$A);

function _interopRequireDefault$V(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$o(props, context) {
  var tableRowColumn = context.muiTheme.tableRowColumn;


  var styles = {
    root: {
      paddingLeft: tableRowColumn.spacing,
      paddingRight: tableRowColumn.spacing,
      height: tableRowColumn.height,
      textAlign: 'left',
      fontSize: 13,
      overflow: 'hidden',
      whiteSpace: 'nowrap',
      textOverflow: 'ellipsis'
    }
  };

  if (_react2$E.default.Children.count(props.children) === 1 && !isNaN(props.children)) {
    styles.textAlign = 'right';
  }

  return styles;
}

var TableRowColumn = function (_Component) {
  (0, _inherits3$w.default)(TableRowColumn, _Component);

  function TableRowColumn() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$x.default)(this, TableRowColumn);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$w.default)(this, (_ref = TableRowColumn.__proto__ || (0, _getPrototypeOf2$w.default)(TableRowColumn)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.onClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.columnNumber);
      }
    }, _this.onMouseEnter = function (event) {
      if (_this.props.hoverable) {
        _this.setState({ hovered: true });
        if (_this.props.onHover) {
          _this.props.onHover(event, _this.props.columnNumber);
        }
      }
    }, _this.onMouseLeave = function (event) {
      if (_this.props.hoverable) {
        _this.setState({ hovered: false });
        if (_this.props.onHoverExit) {
          _this.props.onHoverExit(event, _this.props.columnNumber);
        }
      }
    }, _temp), (0, _possibleConstructorReturn3$w.default)(_this, _ret);
  }

  (0, _createClass3$x.default)(TableRowColumn, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className;
          _props.columnNumber;
          _props.hoverable;
          _props.onClick;
          _props.onHover;
          _props.onHoverExit;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$o.default)(_props, ['children', 'className', 'columnNumber', 'hoverable', 'onClick', 'onHover', 'onHoverExit', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$o(this.props, this.context);

      var handlers = {
        onClick: this.onClick,
        onMouseEnter: this.onMouseEnter,
        onMouseLeave: this.onMouseLeave
      };

      return _react2$E.default.createElement(
        'td',
        (0, _extends3$o.default)({
          className: className,
          style: prepareStyles((0, _simpleAssign2$u.default)(styles.root, style))
        }, handlers, other),
        children
      );
    }
  }]);
  return TableRowColumn;
}(_react$F.Component);

TableRowColumn.defaultProps = {
  hoverable: false
};
TableRowColumn.contextTypes = {
  muiTheme: _propTypes2$A.default.object.isRequired
};
TableRowColumn.propTypes = {
  children: _propTypes2$A.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$A.default.string,
  /**
   * @ignore
   * Number to identify the header row. This property
   * is automatically populated when used with TableHeader.
   */
  columnNumber: _propTypes2$A.default.number,
  /**
   * @ignore
   * If true, this column responds to hover events.
   */
  hoverable: _propTypes2$A.default.bool,
  /** @ignore */
  onClick: _propTypes2$A.default.func,
  /** @ignore */
  onHover: _propTypes2$A.default.func,
  /**
   * @ignore
   * Callback function for hover exit event.
   */
  onHoverExit: _propTypes2$A.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$A.default.object
} ;
TableRowColumn$1.default = TableRowColumn;

Object.defineProperty(TableBody$1, "__esModule", {
  value: true
});

var _objectWithoutProperties2$n = objectWithoutProperties$2;

var _objectWithoutProperties3$n = _interopRequireDefault$U(_objectWithoutProperties2$n);

var _toConsumableArray2$1 = toConsumableArray;

var _toConsumableArray3$1 = _interopRequireDefault$U(_toConsumableArray2$1);

var _typeof2$1 = _typeof$6;

var _typeof3$1 = _interopRequireDefault$U(_typeof2$1);

var _extends2$n = _extends$3;

var _extends3$n = _interopRequireDefault$U(_extends2$n);

var _getPrototypeOf$v = getPrototypeOf$1.exports;

var _getPrototypeOf2$v = _interopRequireDefault$U(_getPrototypeOf$v);

var _classCallCheck2$w = classCallCheck$3;

var _classCallCheck3$w = _interopRequireDefault$U(_classCallCheck2$w);

var _createClass2$w = createClass$2;

var _createClass3$w = _interopRequireDefault$U(_createClass2$w);

var _possibleConstructorReturn2$v = possibleConstructorReturn$3;

var _possibleConstructorReturn3$v = _interopRequireDefault$U(_possibleConstructorReturn2$v);

var _inherits2$v = inherits$3;

var _inherits3$v = _interopRequireDefault$U(_inherits2$v);

var _simpleAssign$t = simpleAssign;

var _simpleAssign2$t = _interopRequireDefault$U(_simpleAssign$t);

var _react$E = react;

var _react2$D = _interopRequireDefault$U(_react$E);

var _propTypes$z = propTypes$5.exports;

var _propTypes2$z = _interopRequireDefault$U(_propTypes$z);

var _Checkbox$1 = Checkbox$2;

var _Checkbox2$1 = _interopRequireDefault$U(_Checkbox$1);

var _TableRowColumn$1 = TableRowColumn$1;

var _TableRowColumn2$2 = _interopRequireDefault$U(_TableRowColumn$1);

var _ClickAwayListener$1 = ClickAwayListener$1;

var _ClickAwayListener2$1 = _interopRequireDefault$U(_ClickAwayListener$1);

function _interopRequireDefault$U(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TableBody = function (_Component) {
  (0, _inherits3$v.default)(TableBody, _Component);

  function TableBody() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$w.default)(this, TableBody);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$v.default)(this, (_ref = TableBody.__proto__ || (0, _getPrototypeOf2$v.default)(TableBody)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      selectedRows: []
    }, _this.isControlled = false, _this.handleClickAway = function () {
      if (_this.props.deselectOnClickaway && _this.state.selectedRows.length > 0) {
        var selectedRows = [];
        _this.setState({ selectedRows: selectedRows });
        if (_this.props.onRowSelection) {
          _this.props.onRowSelection(selectedRows);
        }
      }
    }, _this.onRowClick = function (event, rowNumber) {
      event.stopPropagation();

      if (_this.props.selectable) {
        // Prevent text selection while selecting rows.
        if (window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects.length > 0) {
          window.getSelection().removeAllRanges();
        }
        _this.processRowSelection(event, rowNumber);
      }
    }, _this.onCellClick = function (event, rowNumber, columnNumber) {
      event.stopPropagation();
      if (_this.props.onCellClick) {
        _this.props.onCellClick(rowNumber, _this.getColumnId(columnNumber), event);
      }
    }, _this.onCellHover = function (event, rowNumber, columnNumber) {
      if (_this.props.onCellHover) {
        _this.props.onCellHover(rowNumber, _this.getColumnId(columnNumber), event);
      }
      _this.onRowHover(event, rowNumber);
    }, _this.onCellHoverExit = function (event, rowNumber, columnNumber) {
      if (_this.props.onCellHoverExit) {
        _this.props.onCellHoverExit(rowNumber, _this.getColumnId(columnNumber), event);
      }
      _this.onRowHoverExit(event, rowNumber);
    }, _this.onRowHover = function (event, rowNumber) {
      if (_this.props.onRowHover) {
        _this.props.onRowHover(rowNumber);
      }
    }, _this.onRowHoverExit = function (event, rowNumber) {
      if (_this.props.onRowHoverExit) {
        _this.props.onRowHoverExit(rowNumber);
      }
    }, _temp), (0, _possibleConstructorReturn3$v.default)(_this, _ret);
  }

  (0, _createClass3$w.default)(TableBody, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.preScanRows) {
        this.setState({
          selectedRows: this.getSelectedRows(this.props)
        });
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!this.props.preScanRows) {
        this.setState({ // eslint-disable-line react/no-did-mount-set-state
          selectedRows: this.getSelectedRows(this.props)
        });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.allRowsSelected !== nextProps.allRowsSelected) {
        if (!nextProps.allRowsSelected) {
          this.setState({
            selectedRows: []
          });
          return;
        }
      }

      this.setState({
        selectedRows: this.getSelectedRows(nextProps)
      });
    }
  }, {
    key: 'createRows',
    value: function createRows() {
      var _this2 = this;

      var numChildren = _react2$D.default.Children.count(this.props.children);
      var rowNumber = 0;
      var handlers = {
        onCellClick: this.onCellClick,
        onCellHover: this.onCellHover,
        onCellHoverExit: this.onCellHoverExit,
        onRowHover: this.onRowHover,
        onRowHoverExit: this.onRowHoverExit,
        onRowClick: this.onRowClick
      };

      return _react2$D.default.Children.map(this.props.children, function (child) {
        if (_react2$D.default.isValidElement(child)) {
          var props = {
            hoverable: _this2.props.showRowHover,
            selected: _this2.isRowSelected(rowNumber),
            striped: _this2.props.stripedRows && rowNumber % 2 === 0,
            rowNumber: rowNumber++
          };

          if (rowNumber === numChildren) {
            props.displayBorder = false;
          }

          var children = [_this2.createRowCheckboxColumn(props)];

          _react2$D.default.Children.forEach(child.props.children, function (child) {
            children.push(child);
          });

          return _react2$D.default.cloneElement(child, (0, _extends3$n.default)({}, props, handlers), children);
        }
      });
    }
  }, {
    key: 'createRowCheckboxColumn',
    value: function createRowCheckboxColumn(rowProps) {
      if (!this.props.displayRowCheckbox) {
        return null;
      }

      var name = rowProps.rowNumber + '-cb';
      var disabled = !this.props.selectable;

      return _react2$D.default.createElement(
        _TableRowColumn2$2.default,
        {
          key: name,
          columnNumber: 0,
          style: {
            width: 24,
            cursor: disabled ? 'default' : 'inherit'
          }
        },
        _react2$D.default.createElement(_Checkbox2$1.default, {
          name: name,
          value: 'selected',
          disabled: disabled,
          checked: rowProps.selected
        })
      );
    }
  }, {
    key: 'getSelectedRows',
    value: function getSelectedRows(props) {
      var _this3 = this;

      var selectedRows = [];

      if (props.selectable) {
        var index = 0;
        _react2$D.default.Children.forEach(props.children, function (child) {
          if (_react2$D.default.isValidElement(child)) {
            if (child.props.selected !== undefined) {
              _this3.isControlled = true;
            }

            if (child.props.selected && (selectedRows.length === 0 || props.multiSelectable)) {
              selectedRows.push(index);
            }

            index++;
          }
        });
      }

      return selectedRows;
    }
  }, {
    key: 'isRowSelected',
    value: function isRowSelected(rowNumber) {
      var _this4 = this;

      if (this.props.allRowsSelected) {
        return true;
      }

      return this.state.selectedRows.some(function (row) {
        if ((typeof row === 'undefined' ? 'undefined' : (0, _typeof3$1.default)(row)) === 'object') {
          if (_this4.isValueInRange(rowNumber, row)) {
            return true;
          }
        } else {
          if (row === rowNumber) {
            return true;
          }
        }

        return false;
      });
    }
  }, {
    key: 'isValueInRange',
    value: function isValueInRange(value, range) {
      if (!range) return false;

      if (range.start <= value && value <= range.end || range.end <= value && value <= range.start) {
        return true;
      }

      return false;
    }
  }, {
    key: 'processRowSelection',
    value: function processRowSelection(event, rowNumber) {
      var selectedRows = [].concat((0, _toConsumableArray3$1.default)(this.state.selectedRows));

      if (event.shiftKey && this.props.multiSelectable && selectedRows.length > 0) {
        var lastIndex = selectedRows.length - 1;
        var lastSelection = selectedRows[lastIndex];

        if ((typeof lastSelection === 'undefined' ? 'undefined' : (0, _typeof3$1.default)(lastSelection)) === 'object') {
          lastSelection.end = rowNumber;
        } else {
          selectedRows.splice(lastIndex, 1, {
            start: lastSelection,
            end: rowNumber
          });
        }
      } else if ((event.ctrlKey && !event.metaKey || event.metaKey && !event.ctrlKey) && this.props.multiSelectable) {
        var idx = selectedRows.indexOf(rowNumber);
        if (idx < 0) {
          var foundRange = false;
          for (var i = 0; i < selectedRows.length; i++) {
            var range = selectedRows[i];
            if ((typeof range === 'undefined' ? 'undefined' : (0, _typeof3$1.default)(range)) !== 'object') continue;

            if (this.isValueInRange(rowNumber, range)) {
              var _selectedRows;

              foundRange = true;
              var values = this.splitRange(range, rowNumber);
              (_selectedRows = selectedRows).splice.apply(_selectedRows, [i, 1].concat((0, _toConsumableArray3$1.default)(values)));
            }
          }

          if (!foundRange) selectedRows.push(rowNumber);
        } else {
          selectedRows.splice(idx, 1);
        }
      } else {
        if (selectedRows.length === 1 && selectedRows[0] === rowNumber) {
          selectedRows = [];
        } else {
          selectedRows = [rowNumber];
        }
      }

      if (!this.isControlled) {
        this.setState({ selectedRows: selectedRows });
      }

      if (this.props.onRowSelection) {
        this.props.onRowSelection(this.flattenRanges(selectedRows));
      }
    }
  }, {
    key: 'splitRange',
    value: function splitRange(range, splitPoint) {
      var splitValues = [];
      var startOffset = range.start - splitPoint;
      var endOffset = range.end - splitPoint;

      // Process start half
      splitValues.push.apply(splitValues, (0, _toConsumableArray3$1.default)(this.genRangeOfValues(splitPoint, startOffset)));

      // Process end half
      splitValues.push.apply(splitValues, (0, _toConsumableArray3$1.default)(this.genRangeOfValues(splitPoint, endOffset)));

      return splitValues;
    }
  }, {
    key: 'genRangeOfValues',
    value: function genRangeOfValues(start, offset) {
      var values = [];
      var dir = offset > 0 ? -1 : 1; // This forces offset to approach 0 from either direction.
      while (offset !== 0) {
        values.push(start + offset);
        offset += dir;
      }

      return values;
    }
  }, {
    key: 'flattenRanges',
    value: function flattenRanges(selectedRows) {
      var _this5 = this;

      return selectedRows.reduce(function (rows, row) {
        if ((typeof row === 'undefined' ? 'undefined' : (0, _typeof3$1.default)(row)) === 'object') {
          var values = _this5.genRangeOfValues(row.end, row.start - row.end);
          rows.push.apply(rows, [row.end].concat((0, _toConsumableArray3$1.default)(values)));
        } else {
          rows.push(row);
        }

        return rows;
      }, []).sort();
    }
  }, {
    key: 'getColumnId',
    value: function getColumnId(columnNumber) {
      return columnNumber - 1;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style;
          _props.allRowsSelected;
          _props.multiSelectable;
          _props.onCellClick;
          _props.onCellHover;
          _props.onCellHoverExit;
          _props.onRowHover;
          _props.onRowHoverExit;
          _props.onRowSelection;
          _props.selectable;
          _props.deselectOnClickaway;
          _props.showRowHover;
          _props.stripedRows;
          _props.displayRowCheckbox;
          _props.preScanRows;
          var other = (0, _objectWithoutProperties3$n.default)(_props, ['style', 'allRowsSelected', 'multiSelectable', 'onCellClick', 'onCellHover', 'onCellHoverExit', 'onRowHover', 'onRowHoverExit', 'onRowSelection', 'selectable', 'deselectOnClickaway', 'showRowHover', 'stripedRows', 'displayRowCheckbox', 'preScanRows']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      return _react2$D.default.createElement(
        _ClickAwayListener2$1.default,
        { onClickAway: this.handleClickAway },
        _react2$D.default.createElement(
          'tbody',
          (0, _extends3$n.default)({ style: prepareStyles((0, _simpleAssign2$t.default)({}, style)) }, other),
          this.createRows()
        )
      );
    }
  }]);
  return TableBody;
}(_react$E.Component);

TableBody.muiName = 'TableBody';
TableBody.defaultProps = {
  allRowsSelected: false,
  deselectOnClickaway: true,
  displayRowCheckbox: true,
  multiSelectable: false,
  preScanRows: true,
  selectable: true,
  style: {}
};
TableBody.contextTypes = {
  muiTheme: _propTypes2$z.default.object.isRequired
};
TableBody.propTypes = {
  /**
   * @ignore
   * Set to true to indicate that all rows should be selected.
   */
  allRowsSelected: _propTypes2$z.default.bool,
  /**
   * Children passed to table body.
   */
  children: _propTypes2$z.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$z.default.string,
  /**
   * Controls whether or not to deselect all selected
   * rows after clicking outside the table.
   */
  deselectOnClickaway: _propTypes2$z.default.bool,
  /**
   * Controls the display of the row checkbox. The default value is true.
   */
  displayRowCheckbox: _propTypes2$z.default.bool,
  /**
   * @ignore
   * If true, multiple table rows can be selected.
   * CTRL/CMD+Click and SHIFT+Click are valid actions.
   * The default value is false.
   */
  multiSelectable: _propTypes2$z.default.bool,
  /**
   * @ignore
   * Callback function for when a cell is clicked.
   */
  onCellClick: _propTypes2$z.default.func,
  /**
   * @ignore
   * Called when a table cell is hovered. rowNumber
   * is the row number of the hovered row and columnId
   * is the column number or the column key of the cell.
   */
  onCellHover: _propTypes2$z.default.func,
  /**
   * @ignore
   * Called when a table cell is no longer hovered.
   * rowNumber is the row number of the row and columnId
   * is the column number or the column key of the cell.
   */
  onCellHoverExit: _propTypes2$z.default.func,
  /**
   * @ignore
   * Called when a table row is hovered.
   * rowNumber is the row number of the hovered row.
   */
  onRowHover: _propTypes2$z.default.func,
  /**
   * @ignore
   * Called when a table row is no longer
   * hovered. rowNumber is the row number of the row
   * that is no longer hovered.
   */
  onRowHoverExit: _propTypes2$z.default.func,
  /**
   * @ignore
   * Called when a row is selected. selectedRows is an
   * array of all row selections. If all rows have been selected,
   * the string "all" will be returned instead to indicate that
   * all rows have been selected.
   */
  onRowSelection: _propTypes2$z.default.func,
  /**
   * Controls whether or not the rows are pre-scanned to determine
   * initial state. If your table has a large number of rows and
   * you are experiencing a delay in rendering, turn off this property.
   */
  preScanRows: _propTypes2$z.default.bool,
  /**
   * @ignore
   * If true, table rows can be selected. If multiple
   * row selection is desired, enable multiSelectable.
   * The default value is true.
   */
  selectable: _propTypes2$z.default.bool,
  /**
   * If true, table rows will be highlighted when
   * the cursor is hovering over the row. The default
   * value is false.
   */
  showRowHover: _propTypes2$z.default.bool,
  /**
   * If true, every other table row starting
   * with the first row will be striped. The default value is false.
   */
  stripedRows: _propTypes2$z.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$z.default.object
} ;
TableBody$1.default = TableBody;

var TableFooter$1 = {};

Object.defineProperty(TableFooter$1, "__esModule", {
  value: true
});

var _extends2$m = _extends$3;

var _extends3$m = _interopRequireDefault$T(_extends2$m);

var _toConsumableArray2 = toConsumableArray;

var _toConsumableArray3 = _interopRequireDefault$T(_toConsumableArray2);

var _objectWithoutProperties2$m = objectWithoutProperties$2;

var _objectWithoutProperties3$m = _interopRequireDefault$T(_objectWithoutProperties2$m);

var _getPrototypeOf$u = getPrototypeOf$1.exports;

var _getPrototypeOf2$u = _interopRequireDefault$T(_getPrototypeOf$u);

var _classCallCheck2$v = classCallCheck$3;

var _classCallCheck3$v = _interopRequireDefault$T(_classCallCheck2$v);

var _createClass2$v = createClass$2;

var _createClass3$v = _interopRequireDefault$T(_createClass2$v);

var _possibleConstructorReturn2$u = possibleConstructorReturn$3;

var _possibleConstructorReturn3$u = _interopRequireDefault$T(_possibleConstructorReturn2$u);

var _inherits2$u = inherits$3;

var _inherits3$u = _interopRequireDefault$T(_inherits2$u);

var _simpleAssign$s = simpleAssign;

var _simpleAssign2$s = _interopRequireDefault$T(_simpleAssign$s);

var _react$D = react;

var _react2$C = _interopRequireDefault$T(_react$D);

var _propTypes$y = propTypes$5.exports;

var _propTypes2$y = _interopRequireDefault$T(_propTypes$y);

var _TableRowColumn = TableRowColumn$1;

var _TableRowColumn2$1 = _interopRequireDefault$T(_TableRowColumn);

function _interopRequireDefault$T(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$n(props, context) {
  var tableFooter = context.muiTheme.tableFooter;


  return {
    cell: {
      borderTop: '1px solid ' + tableFooter.borderColor,
      verticalAlign: 'bottom',
      padding: 20,
      textAlign: 'left',
      whiteSpace: 'nowrap'
    }
  };
}

var TableFooter = function (_Component) {
  (0, _inherits3$u.default)(TableFooter, _Component);

  function TableFooter() {
    (0, _classCallCheck3$v.default)(this, TableFooter);
    return (0, _possibleConstructorReturn3$u.default)(this, (TableFooter.__proto__ || (0, _getPrototypeOf2$u.default)(TableFooter)).apply(this, arguments));
  }

  (0, _createClass3$v.default)(TableFooter, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          adjustForCheckbox = _props.adjustForCheckbox,
          children = _props.children,
          className = _props.className,
          style = _props.style,
          other = (0, _objectWithoutProperties3$m.default)(_props, ['adjustForCheckbox', 'children', 'className', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$n(this.props, this.context);

      var footerRows = _react2$C.default.Children.map(children, function (child, rowNumber) {
        var newChildProps = {
          displayBorder: false,
          key: 'f-' + rowNumber,
          rowNumber: rowNumber,
          style: (0, _simpleAssign2$s.default)({}, styles.cell, child.props.style)
        };

        var newDescendants = void 0;

        if (adjustForCheckbox) {
          newDescendants = [_react2$C.default.createElement(_TableRowColumn2$1.default, { key: 'fpcb' + rowNumber, style: { width: 24 } })].concat((0, _toConsumableArray3.default)(_react2$C.default.Children.toArray(child.props.children)));
        } else {
          newDescendants = child.props.children;
        }

        return _react2$C.default.cloneElement(child, newChildProps, newDescendants);
      });

      return _react2$C.default.createElement(
        'tfoot',
        (0, _extends3$m.default)({ className: className, style: prepareStyles((0, _simpleAssign2$s.default)({}, style)) }, other),
        footerRows
      );
    }
  }]);
  return TableFooter;
}(_react$D.Component);

TableFooter.muiName = 'TableFooter';
TableFooter.defaultProps = {
  adjustForCheckbox: true,
  style: {}
};
TableFooter.contextTypes = {
  muiTheme: _propTypes2$y.default.object.isRequired
};
TableFooter.propTypes = {
  /**
   * @ignore
   * Controls whether or not header rows should be adjusted
   * for a checkbox column. If the select all checkbox is true,
   * this property will not influence the number of columns.
   * This is mainly useful for "super header" rows so that
   * the checkbox column does not create an offset that needs
   * to be accounted for manually.
   */
  adjustForCheckbox: _propTypes2$y.default.bool,
  /**
   * Children passed to table footer.
   */
  children: _propTypes2$y.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$y.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$y.default.object
} ;
TableFooter$1.default = TableFooter;

var TableHeader$1 = {};

var TableHeaderColumn$1 = {};

Object.defineProperty(TableHeaderColumn$1, "__esModule", {
  value: true
});

var _extends2$l = _extends$3;

var _extends3$l = _interopRequireDefault$S(_extends2$l);

var _objectWithoutProperties2$l = objectWithoutProperties$2;

var _objectWithoutProperties3$l = _interopRequireDefault$S(_objectWithoutProperties2$l);

var _getPrototypeOf$t = getPrototypeOf$1.exports;

var _getPrototypeOf2$t = _interopRequireDefault$S(_getPrototypeOf$t);

var _classCallCheck2$u = classCallCheck$3;

var _classCallCheck3$u = _interopRequireDefault$S(_classCallCheck2$u);

var _createClass2$u = createClass$2;

var _createClass3$u = _interopRequireDefault$S(_createClass2$u);

var _possibleConstructorReturn2$t = possibleConstructorReturn$3;

var _possibleConstructorReturn3$t = _interopRequireDefault$S(_possibleConstructorReturn2$t);

var _inherits2$t = inherits$3;

var _inherits3$t = _interopRequireDefault$S(_inherits2$t);

var _simpleAssign$r = simpleAssign;

var _simpleAssign2$r = _interopRequireDefault$S(_simpleAssign$r);

var _react$C = react;

var _react2$B = _interopRequireDefault$S(_react$C);

var _propTypes$x = propTypes$5.exports;

var _propTypes2$x = _interopRequireDefault$S(_propTypes$x);

var _Tooltip$1 = Tooltip$3;

var _Tooltip2$1 = _interopRequireDefault$S(_Tooltip$1);

function _interopRequireDefault$S(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$m(props, context) {
  var tableHeaderColumn = context.muiTheme.tableHeaderColumn;


  return {
    root: {
      fontWeight: 'normal',
      fontSize: 12,
      paddingLeft: tableHeaderColumn.spacing,
      paddingRight: tableHeaderColumn.spacing,
      height: tableHeaderColumn.height,
      textAlign: 'left',
      whiteSpace: 'nowrap',
      textOverflow: 'ellipsis',
      color: tableHeaderColumn.textColor,
      position: 'relative'
    },
    tooltip: {
      boxSizing: 'border-box',
      marginTop: tableHeaderColumn.height / 2
    }
  };
}

var TableHeaderColumn = function (_Component) {
  (0, _inherits3$t.default)(TableHeaderColumn, _Component);

  function TableHeaderColumn() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$u.default)(this, TableHeaderColumn);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$t.default)(this, (_ref = TableHeaderColumn.__proto__ || (0, _getPrototypeOf2$t.default)(TableHeaderColumn)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.onMouseEnter = function () {
      if (_this.props.tooltip !== undefined) {
        _this.setState({ hovered: true });
      }
    }, _this.onMouseLeave = function () {
      if (_this.props.tooltip !== undefined) {
        _this.setState({ hovered: false });
      }
    }, _this.onClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.columnNumber);
      }
    }, _temp), (0, _possibleConstructorReturn3$t.default)(_this, _ret);
  }

  (0, _createClass3$u.default)(TableHeaderColumn, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className;
          _props.columnNumber;
          _props.hoverable;
          _props.onClick;
          _props.onHover;
          _props.onHoverExit;
          var style = _props.style,
          tooltip = _props.tooltip,
          tooltipStyle = _props.tooltipStyle,
          other = (0, _objectWithoutProperties3$l.default)(_props, ['children', 'className', 'columnNumber', 'hoverable', 'onClick', 'onHover', 'onHoverExit', 'style', 'tooltip', 'tooltipStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$m(this.props, this.context);

      var handlers = {
        onMouseEnter: this.onMouseEnter,
        onMouseLeave: this.onMouseLeave,
        onClick: this.onClick
      };

      var tooltipNode = void 0;

      if (tooltip !== undefined) {
        tooltipNode = _react2$B.default.createElement(_Tooltip2$1.default, {
          label: tooltip,
          show: this.state.hovered,
          style: (0, _simpleAssign2$r.default)(styles.tooltip, tooltipStyle)
        });
      }

      return _react2$B.default.createElement(
        'th',
        (0, _extends3$l.default)({
          className: className,
          style: prepareStyles((0, _simpleAssign2$r.default)(styles.root, style))
        }, handlers, other),
        tooltipNode,
        children
      );
    }
  }]);
  return TableHeaderColumn;
}(_react$C.Component);

TableHeaderColumn.contextTypes = {
  muiTheme: _propTypes2$x.default.object.isRequired
};
TableHeaderColumn.propTypes = {
  children: _propTypes2$x.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$x.default.string,
  /**
   * Number to identify the header row. This property
   * is automatically populated when used with TableHeader.
   */
  columnNumber: _propTypes2$x.default.number,
  /**
   * @ignore
   * Not used here but we need to remove it from the root element.
   */
  hoverable: _propTypes2$x.default.bool,
  /** @ignore */
  onClick: _propTypes2$x.default.func,
  /**
   * @ignore
   * Not used here but we need to remove it from the root element.
   */
  onHover: _propTypes2$x.default.func,
  /**
   * @ignore
   * Not used here but we need to remove it from the root element.
   */
  onHoverExit: _propTypes2$x.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$x.default.object,
  /**
   * The string to supply to the tooltip. If not
   * string is supplied no tooltip will be shown.
   */
  tooltip: _propTypes2$x.default.string,
  /**
   * Additional styling that can be applied to the tooltip.
   */
  tooltipStyle: _propTypes2$x.default.object
} ;
TableHeaderColumn$1.default = TableHeaderColumn;

Object.defineProperty(TableHeader$1, "__esModule", {
  value: true
});

var _getPrototypeOf$s = getPrototypeOf$1.exports;

var _getPrototypeOf2$s = _interopRequireDefault$R(_getPrototypeOf$s);

var _classCallCheck2$t = classCallCheck$3;

var _classCallCheck3$t = _interopRequireDefault$R(_classCallCheck2$t);

var _createClass2$t = createClass$2;

var _createClass3$t = _interopRequireDefault$R(_createClass2$t);

var _possibleConstructorReturn2$s = possibleConstructorReturn$3;

var _possibleConstructorReturn3$s = _interopRequireDefault$R(_possibleConstructorReturn2$s);

var _inherits2$s = inherits$3;

var _inherits3$s = _interopRequireDefault$R(_inherits2$s);

var _simpleAssign$q = simpleAssign;

var _simpleAssign2$q = _interopRequireDefault$R(_simpleAssign$q);

var _react$B = react;

var _react2$A = _interopRequireDefault$R(_react$B);

var _propTypes$w = propTypes$5.exports;

var _propTypes2$w = _interopRequireDefault$R(_propTypes$w);

var _Checkbox = Checkbox$2;

var _Checkbox2 = _interopRequireDefault$R(_Checkbox);

var _TableHeaderColumn = TableHeaderColumn$1;

var _TableHeaderColumn2$1 = _interopRequireDefault$R(_TableHeaderColumn);

function _interopRequireDefault$R(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$l(props, context) {
  var tableHeader = context.muiTheme.tableHeader;


  return {
    root: {
      borderBottom: '1px solid ' + tableHeader.borderColor
    }
  };
}

var TableHeader = function (_Component) {
  (0, _inherits3$s.default)(TableHeader, _Component);

  function TableHeader() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$t.default)(this, TableHeader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$s.default)(this, (_ref = TableHeader.__proto__ || (0, _getPrototypeOf2$s.default)(TableHeader)).call.apply(_ref, [this].concat(args))), _this), _this.handleCheckAll = function (event, checked) {
      if (_this.props.onSelectAll) {
        _this.props.onSelectAll(checked);
      }
    }, _temp), (0, _possibleConstructorReturn3$s.default)(_this, _ret);
  }

  (0, _createClass3$t.default)(TableHeader, [{
    key: 'createSuperHeaderRows',
    value: function createSuperHeaderRows() {
      var numChildren = _react2$A.default.Children.count(this.props.children);
      if (numChildren === 1) return undefined;

      var superHeaders = [];
      for (var index = 0; index < numChildren - 1; index++) {
        var child = this.props.children[index];

        if (!_react2$A.default.isValidElement(child)) continue;

        var props = {
          key: 'sh' + index,
          rowNumber: index
        };
        superHeaders.push(this.createSuperHeaderRow(child, props));
      }

      if (superHeaders.length) return superHeaders;
    }
  }, {
    key: 'createSuperHeaderRow',
    value: function createSuperHeaderRow(child, props) {
      var children = [];
      if (this.props.adjustForCheckbox) {
        children.push(this.getCheckboxPlaceholder(props));
      }
      _react2$A.default.Children.forEach(child.props.children, function (child) {
        children.push(child);
      });

      return _react2$A.default.cloneElement(child, props, children);
    }
  }, {
    key: 'createBaseHeaderRow',
    value: function createBaseHeaderRow() {
      var childrenArray = _react2$A.default.Children.toArray(this.props.children);
      var numChildren = childrenArray.length;
      if (numChildren < 1) {
        return null;
      }

      var child = childrenArray[numChildren - 1];

      var props = {
        key: 'h' + numChildren,
        rowNumber: numChildren
      };

      var children = [this.getSelectAllCheckboxColumn(props)];
      _react2$A.default.Children.forEach(child.props.children, function (child) {
        children.push(child);
      });

      return _react2$A.default.cloneElement(child, props, children);
    }
  }, {
    key: 'getCheckboxPlaceholder',
    value: function getCheckboxPlaceholder(props) {
      if (!this.props.adjustForCheckbox) return null;

      var disabled = !this.props.enableSelectAll;
      var key = 'hpcb' + props.rowNumber;
      return _react2$A.default.createElement(_TableHeaderColumn2$1.default, {
        key: key,
        style: {
          width: 24,
          cursor: disabled ? 'default' : 'inherit'
        }
      });
    }
  }, {
    key: 'getSelectAllCheckboxColumn',
    value: function getSelectAllCheckboxColumn(props) {
      if (!this.props.displaySelectAll) return this.getCheckboxPlaceholder(props);

      var disabled = !this.props.enableSelectAll;
      var checkbox = _react2$A.default.createElement(_Checkbox2.default, {
        key: 'selectallcb',
        name: 'selectallcb',
        value: 'selected',
        disabled: disabled,
        checked: this.props.selectAllSelected,
        onCheck: this.handleCheckAll
      });

      var key = 'hpcb' + props.rowNumber;
      return _react2$A.default.createElement(
        _TableHeaderColumn2$1.default,
        {
          key: key,
          style: {
            width: 24,
            cursor: disabled ? 'not-allowed' : 'inherit'
          }
        },
        checkbox
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$l(this.props, this.context);
      var superHeaderRows = this.createSuperHeaderRows();
      var baseHeaderRow = this.createBaseHeaderRow();

      return _react2$A.default.createElement(
        'thead',
        { className: className, style: prepareStyles((0, _simpleAssign2$q.default)(styles.root, style)) },
        superHeaderRows,
        baseHeaderRow
      );
    }
  }]);
  return TableHeader;
}(_react$B.Component);

TableHeader.muiName = 'TableHeader';
TableHeader.defaultProps = {
  adjustForCheckbox: true,
  displaySelectAll: true,
  enableSelectAll: true,
  selectAllSelected: false
};
TableHeader.contextTypes = {
  muiTheme: _propTypes2$w.default.object.isRequired
};
TableHeader.propTypes = {
  /**
   * Controls whether or not header rows should be
   * adjusted for a checkbox column. If the select all
   * checkbox is true, this property will not influence
   * the number of columns. This is mainly useful for
   * "super header" rows so that the checkbox column
   * does not create an offset that needs to be accounted
   * for manually.
   */
  adjustForCheckbox: _propTypes2$w.default.bool,
  /**
   * Children passed to table header.
   */
  children: _propTypes2$w.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$w.default.string,
  /**
   * Controls whether or not the select all checkbox is displayed.
   */
  displaySelectAll: _propTypes2$w.default.bool,
  /**
   * If set to true, the select all button will be interactable.
   * If set to false, the button will not be interactable.
   * To hide the checkbox, set displaySelectAll to false.
   */
  enableSelectAll: _propTypes2$w.default.bool,
  /**
   * @ignore
   * Callback when select all has been checked.
   */
  onSelectAll: _propTypes2$w.default.func,
  /**
   * @ignore
   * True when select all has been checked.
   */
  selectAllSelected: _propTypes2$w.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$w.default.object
} ;
TableHeader$1.default = TableHeader;

var TableRow$1 = {};

Object.defineProperty(TableRow$1, "__esModule", {
  value: true
});

var _extends2$k = _extends$3;

var _extends3$k = _interopRequireDefault$Q(_extends2$k);

var _objectWithoutProperties2$k = objectWithoutProperties$2;

var _objectWithoutProperties3$k = _interopRequireDefault$Q(_objectWithoutProperties2$k);

var _getPrototypeOf$r = getPrototypeOf$1.exports;

var _getPrototypeOf2$r = _interopRequireDefault$Q(_getPrototypeOf$r);

var _classCallCheck2$s = classCallCheck$3;

var _classCallCheck3$s = _interopRequireDefault$Q(_classCallCheck2$s);

var _createClass2$s = createClass$2;

var _createClass3$s = _interopRequireDefault$Q(_createClass2$s);

var _possibleConstructorReturn2$r = possibleConstructorReturn$3;

var _possibleConstructorReturn3$r = _interopRequireDefault$Q(_possibleConstructorReturn2$r);

var _inherits2$r = inherits$3;

var _inherits3$r = _interopRequireDefault$Q(_inherits2$r);

var _simpleAssign$p = simpleAssign;

var _simpleAssign2$p = _interopRequireDefault$Q(_simpleAssign$p);

var _react$A = react;

var _react2$z = _interopRequireDefault$Q(_react$A);

var _propTypes$v = propTypes$5.exports;

var _propTypes2$v = _interopRequireDefault$Q(_propTypes$v);

function _interopRequireDefault$Q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$k(props, context, state) {
  var tableRow = context.muiTheme.tableRow;


  var cellBgColor = 'inherit';
  if (props.hovered || state.hovered) {
    cellBgColor = tableRow.hoverColor;
  } else if (props.selected) {
    cellBgColor = tableRow.selectedColor;
  } else if (props.striped) {
    cellBgColor = tableRow.stripeColor;
  }

  return {
    root: {
      borderBottom: props.displayBorder && '1px solid ' + tableRow.borderColor,
      color: tableRow.textColor,
      height: tableRow.height
    },
    cell: {
      backgroundColor: cellBgColor
    }
  };
}

var TableRow = function (_Component) {
  (0, _inherits3$r.default)(TableRow, _Component);

  function TableRow() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$s.default)(this, TableRow);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$r.default)(this, (_ref = TableRow.__proto__ || (0, _getPrototypeOf2$r.default)(TableRow)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.onCellClick = function (event, columnIndex) {
      if (_this.props.selectable && _this.props.onCellClick) {
        _this.props.onCellClick(event, _this.props.rowNumber, columnIndex);
      }
      event.ctrlKey = true;
      _this.onRowClick(event);
    }, _this.onCellHover = function (event, columnIndex) {
      if (_this.props.hoverable) {
        _this.setState({ hovered: true });
        if (_this.props.onCellHover) _this.props.onCellHover(event, _this.props.rowNumber, columnIndex);
        _this.onRowHover(event);
      }
    }, _this.onCellHoverExit = function (event, columnIndex) {
      if (_this.props.hoverable) {
        _this.setState({ hovered: false });
        if (_this.props.onCellHoverExit) _this.props.onCellHoverExit(event, _this.props.rowNumber, columnIndex);
        _this.onRowHoverExit(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$r.default)(_this, _ret);
  }

  (0, _createClass3$s.default)(TableRow, [{
    key: 'onRowClick',
    value: function onRowClick(event) {
      if (this.props.selectable && this.props.onRowClick) {
        this.props.onRowClick(event, this.props.rowNumber);
      }
    }
  }, {
    key: 'onRowHover',
    value: function onRowHover(event) {
      if (this.props.onRowHover) {
        this.props.onRowHover(event, this.props.rowNumber);
      }
    }
  }, {
    key: 'onRowHoverExit',
    value: function onRowHoverExit(event) {
      if (this.props.onRowHoverExit) {
        this.props.onRowHoverExit(event, this.props.rowNumber);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className;
          _props.displayBorder;
          _props.hoverable;
          _props.hovered;
          _props.onCellClick;
          _props.onCellHover;
          _props.onCellHoverExit;
          _props.onRowClick;
          _props.onRowHover;
          _props.onRowHoverExit;
          _props.rowNumber;
          _props.selectable;
          _props.selected;
          _props.striped;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$k.default)(_props, ['className', 'displayBorder', 'hoverable', 'hovered', 'onCellClick', 'onCellHover', 'onCellHoverExit', 'onRowClick', 'onRowHover', 'onRowHoverExit', 'rowNumber', 'selectable', 'selected', 'striped', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$k(this.props, this.context, this.state);

      var rowColumns = _react2$z.default.Children.map(this.props.children, function (child, columnNumber) {
        if (_react2$z.default.isValidElement(child)) {
          return _react2$z.default.cloneElement(child, {
            columnNumber: columnNumber,
            hoverable: _this2.props.hoverable,
            key: _this2.props.rowNumber + '-' + columnNumber,
            onClick: _this2.onCellClick,
            onHover: _this2.onCellHover,
            onHoverExit: _this2.onCellHoverExit,
            style: (0, _simpleAssign2$p.default)({}, styles.cell, child.props.style)
          });
        }
      });

      return _react2$z.default.createElement(
        'tr',
        (0, _extends3$k.default)({
          className: className,
          style: prepareStyles((0, _simpleAssign2$p.default)(styles.root, style))
        }, other),
        rowColumns
      );
    }
  }]);
  return TableRow;
}(_react$A.Component);

TableRow.defaultProps = {
  displayBorder: true,
  hoverable: false,
  hovered: false,
  selectable: true,
  striped: false
};
TableRow.contextTypes = {
  muiTheme: _propTypes2$v.default.object.isRequired
};
TableRow.propTypes = {
  /**
   * Children passed to table row.
   */
  children: _propTypes2$v.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$v.default.string,
  /**
   * If true, row border will be displayed for the row.
   * If false, no border will be drawn.
   */
  displayBorder: _propTypes2$v.default.bool,
  /**
   * Controls whether or not the row responds to hover events.
   */
  hoverable: _propTypes2$v.default.bool,
  /**
   * Controls whether or not the row should be rendered as being
   * hovered. This property is evaluated in addition to this.state.hovered
   * and can be used to synchronize the hovered state with some other
   * external events.
   */
  hovered: _propTypes2$v.default.bool,
  /**
   * @ignore
   * Called when a row cell is clicked.
   * rowNumber is the row number and columnId is
   * the column number or the column key.
   */
  onCellClick: _propTypes2$v.default.func,
  /**
   * @ignore
   * Called when a table cell is hovered.
   * rowNumber is the row number of the hovered row
   * and columnId is the column number or the column key of the cell.
   */
  onCellHover: _propTypes2$v.default.func,
  /**
   * @ignore
   * Called when a table cell is no longer hovered.
   * rowNumber is the row number of the row and columnId
   * is the column number or the column key of the cell.
   */
  onCellHoverExit: _propTypes2$v.default.func,
  /**
   * @ignore
   * Called when row is clicked.
   */
  onRowClick: _propTypes2$v.default.func,
  /**
   * @ignore
   * Called when a table row is hovered.
   * rowNumber is the row number of the hovered row.
   */
  onRowHover: _propTypes2$v.default.func,
  /**
   * @ignore
   * Called when a table row is no longer hovered.
   * rowNumber is the row number of the row that is no longer hovered.
   */
  onRowHoverExit: _propTypes2$v.default.func,
  /**
   * Number to identify the row. This property is
   * automatically populated when used with the TableBody component.
   */
  rowNumber: _propTypes2$v.default.number,
  /**
   * If true, table rows can be selected. If multiple row
   * selection is desired, enable multiSelectable.
   * The default value is true.
   */
  selectable: _propTypes2$v.default.bool,
  /**
   * Indicates that a particular row is selected.
   * This property can be used to programmatically select rows.
   */
  selected: _propTypes2$v.default.bool,
  /**
   * Indicates whether or not the row is striped.
   */
  striped: _propTypes2$v.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$v.default.object
} ;
TableRow$1.default = TableRow;

Object.defineProperty(Table$2, "__esModule", {
  value: true
});
Table$2.default = Table$2.TableRowColumn = Table$2.TableRow = Table$2.TableHeaderColumn = Table$2.TableHeader = Table$2.TableFooter = Table$2.TableBody = Table$2.Table = undefined;

var _Table2 = Table$1;

var _Table3 = _interopRequireDefault$P(_Table2);

var _TableBody2 = TableBody$1;

var _TableBody3 = _interopRequireDefault$P(_TableBody2);

var _TableFooter2 = TableFooter$1;

var _TableFooter3 = _interopRequireDefault$P(_TableFooter2);

var _TableHeader2 = TableHeader$1;

var _TableHeader3 = _interopRequireDefault$P(_TableHeader2);

var _TableHeaderColumn2 = TableHeaderColumn$1;

var _TableHeaderColumn3 = _interopRequireDefault$P(_TableHeaderColumn2);

var _TableRow2 = TableRow$1;

var _TableRow3 = _interopRequireDefault$P(_TableRow2);

var _TableRowColumn2 = TableRowColumn$1;

var _TableRowColumn3 = _interopRequireDefault$P(_TableRowColumn2);

function _interopRequireDefault$P(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Table$2.Table = _Table3.default;
Table$2.TableBody = _TableBody3.default;
Table$2.TableFooter = _TableFooter3.default;
Table$2.TableHeader = _TableHeader3.default;
Table$2.TableHeaderColumn = _TableHeaderColumn3.default;
Table$2.TableRow = _TableRow3.default;
Table$2.TableRowColumn = _TableRowColumn3.default;
Table$2.default = _Table3.default;

var TimePicker$2 = {};

var TimePicker$1 = {};

var TimePickerDialog$1 = {};

var Clock$1 = {};

var TimeDisplay$1 = {};

Object.defineProperty(TimeDisplay$1, "__esModule", {
  value: true
});

var _extends2$j = _extends$3;

var _extends3$j = _interopRequireDefault$O(_extends2$j);

var _slicedToArray2$1 = slicedToArray;

var _slicedToArray3$1 = _interopRequireDefault$O(_slicedToArray2$1);

var _objectWithoutProperties2$j = objectWithoutProperties$2;

var _objectWithoutProperties3$j = _interopRequireDefault$O(_objectWithoutProperties2$j);

var _getPrototypeOf$q = getPrototypeOf$1.exports;

var _getPrototypeOf2$q = _interopRequireDefault$O(_getPrototypeOf$q);

var _classCallCheck2$r = classCallCheck$3;

var _classCallCheck3$r = _interopRequireDefault$O(_classCallCheck2$r);

var _createClass2$r = createClass$2;

var _createClass3$r = _interopRequireDefault$O(_createClass2$r);

var _possibleConstructorReturn2$q = possibleConstructorReturn$3;

var _possibleConstructorReturn3$q = _interopRequireDefault$O(_possibleConstructorReturn2$q);

var _inherits2$q = inherits$3;

var _inherits3$q = _interopRequireDefault$O(_inherits2$q);

var _simpleAssign$o = simpleAssign;

var _simpleAssign2$o = _interopRequireDefault$O(_simpleAssign$o);

var _react$z = react;

var _react2$y = _interopRequireDefault$O(_react$z);

var _propTypes$u = propTypes$5.exports;

var _propTypes2$u = _interopRequireDefault$O(_propTypes$u);

function _interopRequireDefault$O(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TimeDisplay = function (_Component) {
  (0, _inherits3$q.default)(TimeDisplay, _Component);

  function TimeDisplay() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$r.default)(this, TimeDisplay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$q.default)(this, (_ref = TimeDisplay.__proto__ || (0, _getPrototypeOf2$q.default)(TimeDisplay)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      transitionDirection: 'up'
    }, _temp), (0, _possibleConstructorReturn3$q.default)(_this, _ret);
  }

  (0, _createClass3$r.default)(TimeDisplay, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.selectedTime !== this.props.selectedTime) {
        var direction = nextProps.selectedTime > this.props.selectedTime ? 'up' : 'down';

        this.setState({
          transitionDirection: direction
        });
      }
    }
  }, {
    key: 'sanitizeTime',
    value: function sanitizeTime() {
      var hour = this.props.selectedTime.getHours();
      var min = this.props.selectedTime.getMinutes().toString();

      if (this.props.format === 'ampm') {
        hour %= 12;
        hour = hour || 12;
      }

      hour = hour.toString();
      if (hour.length < 2) hour = '0' + hour;
      if (min.length < 2) min = '0' + min;

      return [hour, min];
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          affix = _props.affix,
          format = _props.format,
          mode = _props.mode,
          onSelectAffix = _props.onSelectAffix,
          onSelectHour = _props.onSelectHour,
          onSelectMin = _props.onSelectMin;
          _props.selectedTime;
          var other = (0, _objectWithoutProperties3$j.default)(_props, ['affix', 'format', 'mode', 'onSelectAffix', 'onSelectHour', 'onSelectMin', 'selectedTime']);
      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          timePicker = _context$muiTheme.timePicker;


      var styles = {
        root: {
          padding: '14px 0',
          borderTopLeftRadius: 2,
          borderTopRightRadius: 2,
          backgroundColor: timePicker.headerColor,
          color: timePicker.textColor
        },
        text: {
          margin: '6px 0',
          lineHeight: '58px',
          height: 58,
          fontSize: 58,
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'baseline'
        },
        time: {
          margin: '0 10px'
        },
        affix: {
          flex: 1,
          position: 'relative',
          lineHeight: '17px',
          height: 17,
          fontSize: 17
        },
        affixTop: {
          position: 'absolute',
          top: -20,
          left: 0
        },
        clickable: {
          cursor: 'pointer'
        },
        inactive: {
          opacity: 0.7
        }
      };

      var _sanitizeTime = this.sanitizeTime(),
          _sanitizeTime2 = (0, _slicedToArray3$1.default)(_sanitizeTime, 2),
          hour = _sanitizeTime2[0],
          min = _sanitizeTime2[1];

      var buttons = [];
      if (format === 'ampm') {
        buttons = [_react2$y.default.createElement(
          'div',
          {
            key: 'pm',
            style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.clickable, affix === 'pm' ? {} : styles.inactive)),
            onClick: function onClick() {
              return onSelectAffix('pm');
            }
          },
          'PM'
        ), _react2$y.default.createElement(
          'div',
          {
            key: 'am',
            style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.affixTop, styles.clickable, affix === 'am' ? {} : styles.inactive)),
            onClick: function onClick() {
              return onSelectAffix('am');
            }
          },
          'AM'
        )];
      }

      return _react2$y.default.createElement(
        'div',
        (0, _extends3$j.default)({}, other, { style: prepareStyles(styles.root) }),
        _react2$y.default.createElement(
          'div',
          { style: prepareStyles(styles.text) },
          _react2$y.default.createElement('div', { style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.affix)) }),
          _react2$y.default.createElement(
            'div',
            { style: prepareStyles(styles.time) },
            _react2$y.default.createElement(
              'span',
              {
                style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.clickable, mode === 'hour' ? {} : styles.inactive)),
                onClick: onSelectHour
              },
              hour
            ),
            _react2$y.default.createElement(
              'span',
              null,
              ':'
            ),
            _react2$y.default.createElement(
              'span',
              {
                style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.clickable, mode === 'minute' ? {} : styles.inactive)),
                onClick: onSelectMin
              },
              min
            )
          ),
          _react2$y.default.createElement(
            'div',
            { style: prepareStyles((0, _simpleAssign2$o.default)({}, styles.affix)) },
            buttons
          )
        )
      );
    }
  }]);
  return TimeDisplay;
}(_react$z.Component);

TimeDisplay.defaultProps = {
  affix: '',
  mode: 'hour'
};
TimeDisplay.contextTypes = {
  muiTheme: _propTypes2$u.default.object.isRequired
};
TimeDisplay.propTypes = {
  affix: _propTypes2$u.default.oneOf(['', 'pm', 'am']),
  format: _propTypes2$u.default.oneOf(['ampm', '24hr']),
  mode: _propTypes2$u.default.oneOf(['hour', 'minute']),
  onSelectAffix: _propTypes2$u.default.func,
  onSelectHour: _propTypes2$u.default.func,
  onSelectMin: _propTypes2$u.default.func,
  selectedTime: _propTypes2$u.default.object.isRequired
} ;
TimeDisplay$1.default = TimeDisplay;

var ClockHours$1 = {};

var ClockNumber$1 = {};

var timeUtils = {};

Object.defineProperty(timeUtils, "__esModule", {
  value: true
});
timeUtils.addHours = addHours;
timeUtils.addMinutes = addMinutes;
timeUtils.addSeconds = addSeconds;
timeUtils.formatTime = formatTime;
timeUtils.rad2deg = rad2deg;
timeUtils.getTouchEventOffsetValues = getTouchEventOffsetValues;
timeUtils.isInner = isInner;
function addHours(d, hours) {
  var newDate = clone$1(d);
  newDate.setHours(d.getHours() + hours);
  return newDate;
}

function addMinutes(d, minutes) {
  var newDate = clone$1(d);
  newDate.setMinutes(d.getMinutes() + minutes);
  return newDate;
}

function addSeconds(d, seconds) {
  var newDate = clone$1(d);
  newDate.setSeconds(d.getMinutes() + seconds);
  return newDate;
}

function clone$1(d) {
  return new Date(d.getTime());
}

/**
 * @param date [Date] A Date object.
 * @param format [String] One of 'ampm', '24hr', defaults to 'ampm'.
 * @param pedantic [Boolean] Check time-picker/time-picker.jsx file.
 *
 * @return String A string representing the formatted time.
 */
function formatTime(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ampm';
  var pedantic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (!date) return '';
  var hours = date.getHours();
  var mins = date.getMinutes().toString();

  if (format === 'ampm') {
    var isAM = hours < 12;
    hours = hours % 12;
    var additional = isAM ? ' am' : ' pm';
    hours = (hours || 12).toString();

    if (mins.length < 2) mins = '0' + mins;

    if (pedantic) {
      // Treat midday/midnight specially http://www.nist.gov/pml/div688/times.cfm
      if (hours === '12' && mins === '00') {
        return additional === ' pm' ? '12 noon' : '12 midnight';
      }
    }

    return hours + (mins === '00' ? '' : ':' + mins) + additional;
  }

  hours = hours.toString();

  if (hours.length < 2) hours = '0' + hours;
  if (mins.length < 2) mins = '0' + mins;

  return hours + ':' + mins;
}

function rad2deg(rad) {
  return rad * 57.29577951308232;
}

function getTouchEventOffsetValues(event) {
  var el = event.target;
  var boundingRect = el.getBoundingClientRect();

  return {
    offsetX: event.clientX - boundingRect.left,
    offsetY: event.clientY - boundingRect.top
  };
}

function isInner(props) {
  if (props.type !== 'hour') {
    return false;
  }
  return props.value < 1 || props.value > 12;
}

Object.defineProperty(ClockNumber$1, "__esModule", {
  value: true
});

var _getPrototypeOf$p = getPrototypeOf$1.exports;

var _getPrototypeOf2$p = _interopRequireDefault$N(_getPrototypeOf$p);

var _classCallCheck2$q = classCallCheck$3;

var _classCallCheck3$q = _interopRequireDefault$N(_classCallCheck2$q);

var _createClass2$q = createClass$2;

var _createClass3$q = _interopRequireDefault$N(_createClass2$q);

var _possibleConstructorReturn2$p = possibleConstructorReturn$3;

var _possibleConstructorReturn3$p = _interopRequireDefault$N(_possibleConstructorReturn2$p);

var _inherits2$p = inherits$3;

var _inherits3$p = _interopRequireDefault$N(_inherits2$p);

var _slicedToArray2 = slicedToArray;

var _slicedToArray3 = _interopRequireDefault$N(_slicedToArray2);

var _react$y = react;

var _react2$x = _interopRequireDefault$N(_react$y);

var _propTypes$t = propTypes$5.exports;

var _propTypes2$t = _interopRequireDefault$N(_propTypes$t);

var _timeUtils$4 = timeUtils;

function _interopRequireDefault$N(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$j(props, context) {
  var styles = {
    root: {
      directionInvariant: true,
      display: 'inline-block',
      position: 'absolute',
      width: 32,
      height: 32,
      borderRadius: '100%',
      left: 'calc(50% - 16px)',
      top: 10,
      textAlign: 'center',
      paddingTop: 5,
      userSelect: 'none', /* Chrome all / Safari all */
      fontSize: '1.1em',
      pointerEvents: 'none',
      boxSizing: 'border-box'
    }
  };

  var muiTheme = context.muiTheme;


  var pos = props.value;

  if (props.type === 'hour') {
    pos %= 12;
  } else {
    pos = pos / 5;
  }

  var positions = [[0, 5], [54.5, 16.6], [94.4, 59.5], [109, 114], [94.4, 168.5], [54.5, 208.4], [0, 223], [-54.5, 208.4], [-94.4, 168.5], [-109, 114], [-94.4, 59.5], [-54.5, 19.6]];

  var innerPositions = [[0, 40], [36.9, 49.9], [64, 77], [74, 114], [64, 151], [37, 178], [0, 188], [-37, 178], [-64, 151], [-74, 114], [-64, 77], [-37, 50]];

  if (props.isSelected) {
    styles.root.backgroundColor = muiTheme.timePicker.accentColor;
    styles.root.color = muiTheme.timePicker.selectTextColor;
  }

  var transformPos = positions[pos];

  if ((0, _timeUtils$4.isInner)(props)) {
    styles.root.width = 28;
    styles.root.height = 28;
    styles.root.left = 'calc(50% - 14px)';
    transformPos = innerPositions[pos];
  }

  var _transformPos = transformPos,
      _transformPos2 = (0, _slicedToArray3.default)(_transformPos, 2),
      x = _transformPos2[0],
      y = _transformPos2[1];

  styles.root.transform = 'translate(' + x + 'px, ' + y + 'px)';

  return styles;
}

var ClockNumber = function (_Component) {
  (0, _inherits3$p.default)(ClockNumber, _Component);

  function ClockNumber() {
    (0, _classCallCheck3$q.default)(this, ClockNumber);
    return (0, _possibleConstructorReturn3$p.default)(this, (ClockNumber.__proto__ || (0, _getPrototypeOf2$p.default)(ClockNumber)).apply(this, arguments));
  }

  (0, _createClass3$q.default)(ClockNumber, [{
    key: 'render',
    value: function render() {
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$j(this.props, this.context);
      var clockNumber = this.props.value === 0 ? '00' : this.props.value;

      return _react2$x.default.createElement(
        'span',
        { style: prepareStyles(styles.root) },
        clockNumber
      );
    }
  }]);
  return ClockNumber;
}(_react$y.Component);

ClockNumber.defaultProps = {
  value: 0,
  type: 'minute',
  isSelected: false
};
ClockNumber.contextTypes = {
  muiTheme: _propTypes2$t.default.object.isRequired
};
ClockNumber.propTypes = {
  isSelected: _propTypes2$t.default.bool,
  onSelected: _propTypes2$t.default.func,
  type: _propTypes2$t.default.oneOf(['hour', 'minute']),
  value: _propTypes2$t.default.number
} ;
ClockNumber$1.default = ClockNumber;

var ClockPointer$1 = {};

Object.defineProperty(ClockPointer$1, "__esModule", {
  value: true
});

var _getPrototypeOf$o = getPrototypeOf$1.exports;

var _getPrototypeOf2$o = _interopRequireDefault$M(_getPrototypeOf$o);

var _classCallCheck2$p = classCallCheck$3;

var _classCallCheck3$p = _interopRequireDefault$M(_classCallCheck2$p);

var _createClass2$p = createClass$2;

var _createClass3$p = _interopRequireDefault$M(_createClass2$p);

var _possibleConstructorReturn2$o = possibleConstructorReturn$3;

var _possibleConstructorReturn3$o = _interopRequireDefault$M(_possibleConstructorReturn2$o);

var _inherits2$o = inherits$3;

var _inherits3$o = _interopRequireDefault$M(_inherits2$o);

var _react$x = react;

var _react2$w = _interopRequireDefault$M(_react$x);

var _propTypes$s = propTypes$5.exports;

var _propTypes2$s = _interopRequireDefault$M(_propTypes$s);

var _timeUtils$3 = timeUtils;

function _interopRequireDefault$M(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function calcAngle(value, base) {
  value %= base;
  var angle = 360 / base * value;
  return angle;
}

function getStyles$i(props, context, state) {
  var hasSelected = props.hasSelected,
      type = props.type,
      value = props.value;
  var inner = state.inner;
  var timePicker = context.muiTheme.timePicker;

  var angle = type === 'hour' ? calcAngle(value, 12) : calcAngle(value, 60);

  var styles = {
    root: {
      height: inner ? '30%' : '40%',
      background: timePicker.accentColor,
      width: 2,
      left: 'calc(50% - 1px)',
      position: 'absolute',
      bottom: '50%',
      transformOrigin: 'bottom',
      pointerEvents: 'none',
      transform: 'rotateZ(' + angle + 'deg)'
    },
    mark: {
      boxSizing: 'content-box',
      background: timePicker.selectTextColor,
      border: '4px solid ' + timePicker.accentColor,
      display: hasSelected && 'none',
      width: 7,
      height: 7,
      position: 'absolute',
      top: -5,
      left: -6,
      borderRadius: '100%'
    }
  };

  return styles;
}

var ClockPointer = function (_Component) {
  (0, _inherits3$o.default)(ClockPointer, _Component);

  function ClockPointer() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$p.default)(this, ClockPointer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$o.default)(this, (_ref = ClockPointer.__proto__ || (0, _getPrototypeOf2$o.default)(ClockPointer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inner: false
    }, _temp), (0, _possibleConstructorReturn3$o.default)(_this, _ret);
  }

  (0, _createClass3$p.default)(ClockPointer, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        inner: (0, _timeUtils$3.isInner)(this.props)
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        inner: (0, _timeUtils$3.isInner)(nextProps)
      });
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.value === null) {
        return _react2$w.default.createElement('span', null);
      }

      var styles = getStyles$i(this.props, this.context, this.state);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      return _react2$w.default.createElement(
        'div',
        { style: prepareStyles(styles.root) },
        _react2$w.default.createElement('div', { style: prepareStyles(styles.mark) })
      );
    }
  }]);
  return ClockPointer;
}(_react$x.Component);

ClockPointer.defaultProps = {
  hasSelected: false,
  value: null,
  type: 'minute'
};
ClockPointer.contextTypes = {
  muiTheme: _propTypes2$s.default.object.isRequired
};
ClockPointer.propTypes = {
  hasSelected: _propTypes2$s.default.bool,
  type: _propTypes2$s.default.oneOf(['hour', 'minute']),
  value: _propTypes2$s.default.number
} ;
ClockPointer$1.default = ClockPointer;

Object.defineProperty(ClockHours$1, "__esModule", {
  value: true
});

var _getPrototypeOf$n = getPrototypeOf$1.exports;

var _getPrototypeOf2$n = _interopRequireDefault$L(_getPrototypeOf$n);

var _classCallCheck2$o = classCallCheck$3;

var _classCallCheck3$o = _interopRequireDefault$L(_classCallCheck2$o);

var _createClass2$o = createClass$2;

var _createClass3$o = _interopRequireDefault$L(_createClass2$o);

var _possibleConstructorReturn2$n = possibleConstructorReturn$3;

var _possibleConstructorReturn3$n = _interopRequireDefault$L(_possibleConstructorReturn2$n);

var _inherits2$n = inherits$3;

var _inherits3$n = _interopRequireDefault$L(_inherits2$n);

var _react$w = react;

var _react2$v = _interopRequireDefault$L(_react$w);

var _propTypes$r = propTypes$5.exports;

var _propTypes2$r = _interopRequireDefault$L(_propTypes$r);

var _reactDom$6 = reactDom;

var _reactDom2$6 = _interopRequireDefault$L(_reactDom$6);

var _ClockNumber$1 = ClockNumber$1;

var _ClockNumber2$1 = _interopRequireDefault$L(_ClockNumber$1);

var _ClockPointer$1 = ClockPointer$1;

var _ClockPointer2$1 = _interopRequireDefault$L(_ClockPointer$1);

var _timeUtils$2 = timeUtils;

function _interopRequireDefault$L(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ClockHours = function (_Component) {
  (0, _inherits3$n.default)(ClockHours, _Component);

  function ClockHours() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$o.default)(this, ClockHours);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$n.default)(this, (_ref = ClockHours.__proto__ || (0, _getPrototypeOf2$n.default)(ClockHours)).call.apply(_ref, [this].concat(args))), _this), _this.handleUp = function (event) {
      event.preventDefault();
      _this.setClock(event.nativeEvent, true);
    }, _this.handleMove = function (event) {
      event.preventDefault();
      if (_this.isMousePressed(event) !== 1) return;
      _this.setClock(event.nativeEvent, false);
    }, _this.handleTouchMove = function (event) {
      event.preventDefault();
      _this.setClock(event.changedTouches[0], false);
    }, _this.handleTouchEnd = function (event) {
      event.preventDefault();
      _this.setClock(event.changedTouches[0], true);
    }, _temp), (0, _possibleConstructorReturn3$n.default)(_this, _ret);
  }

  (0, _createClass3$o.default)(ClockHours, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var clockElement = _reactDom2$6.default.findDOMNode(this.refs.mask);

      this.center = {
        x: clockElement.offsetWidth / 2,
        y: clockElement.offsetHeight / 2
      };

      this.basePoint = {
        x: this.center.x,
        y: 0
      };
    }
  }, {
    key: 'isMousePressed',
    value: function isMousePressed(event) {
      if (typeof event.buttons === 'undefined') {
        return event.nativeEvent.which;
      }

      return event.buttons;
    }
  }, {
    key: 'setClock',
    value: function setClock(event, finish) {
      if (typeof event.offsetX === 'undefined') {
        var offset = (0, _timeUtils$2.getTouchEventOffsetValues)(event);

        event.offsetX = offset.offsetX;
        event.offsetY = offset.offsetY;
      }

      var hours = this.getHours(event.offsetX, event.offsetY);

      this.props.onChange(hours, finish);
    }
  }, {
    key: 'getHours',
    value: function getHours(offsetX, offsetY) {
      var step = 30;
      var x = offsetX - this.center.x;
      var y = offsetY - this.center.y;
      var cx = this.basePoint.x - this.center.x;
      var cy = this.basePoint.y - this.center.y;

      var atan = Math.atan2(cx, cy) - Math.atan2(x, y);

      var deg = (0, _timeUtils$2.rad2deg)(atan);
      deg = Math.round(deg / step) * step;
      deg %= 360;

      var value = Math.floor(deg / step) || 0;

      var delta = Math.pow(x, 2) + Math.pow(y, 2);
      var distance = Math.sqrt(delta);

      value = value || 12;
      if (this.props.format === '24hr') {
        if (distance < 90) {
          value += 12;
          value %= 24;
        }
      } else {
        value %= 12;
      }

      return value;
    }
  }, {
    key: 'getSelected',
    value: function getSelected() {
      var hour = this.props.initialHours;

      if (this.props.format === 'ampm') {
        hour %= 12;
        hour = hour || 12;
      }

      return hour;
    }
  }, {
    key: 'getHourNumbers',
    value: function getHourNumbers() {
      var _this2 = this;

      var style = {
        pointerEvents: 'none'
      };
      var hourSize = this.props.format === 'ampm' ? 12 : 24;

      var hours = [];
      for (var i = 1; i <= hourSize; i++) {
        hours.push(i % 24);
      }

      return hours.map(function (hour) {
        var isSelected = _this2.getSelected() === hour;
        return _react2$v.default.createElement(_ClockNumber2$1.default, {
          key: hour,
          style: style,
          isSelected: isSelected,
          type: 'hour',
          value: hour
        });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var styles = {
        root: {
          height: '100%',
          width: '100%',
          borderRadius: '100%',
          position: 'relative',
          pointerEvents: 'none',
          boxSizing: 'border-box'
        },

        hitMask: {
          height: '100%',
          width: '100%',
          pointerEvents: 'auto'
        }
      };

      var prepareStyles = this.context.muiTheme.prepareStyles;

      var hours = this.getSelected();
      var numbers = this.getHourNumbers();

      return _react2$v.default.createElement(
        'div',
        { ref: 'clock', style: prepareStyles(styles.root) },
        _react2$v.default.createElement(_ClockPointer2$1.default, { hasSelected: true, value: hours, type: 'hour' }),
        numbers,
        _react2$v.default.createElement('div', {
          ref: 'mask', style: prepareStyles(styles.hitMask), onTouchMove: this.handleTouchMove,
          onTouchEnd: this.handleTouchEnd, onMouseUp: this.handleUp, onMouseMove: this.handleMove
        })
      );
    }
  }]);
  return ClockHours;
}(_react$w.Component);

ClockHours.defaultProps = {
  initialHours: new Date().getHours(),
  onChange: function onChange() {},
  format: 'ampm'
};
ClockHours.contextTypes = {
  muiTheme: _propTypes2$r.default.object.isRequired
};
ClockHours.propTypes = {
  format: _propTypes2$r.default.oneOf(['ampm', '24hr']),
  initialHours: _propTypes2$r.default.number,
  onChange: _propTypes2$r.default.func
} ;
ClockHours$1.default = ClockHours;

var ClockMinutes$1 = {};

Object.defineProperty(ClockMinutes$1, "__esModule", {
  value: true
});

var _getPrototypeOf$m = getPrototypeOf$1.exports;

var _getPrototypeOf2$m = _interopRequireDefault$K(_getPrototypeOf$m);

var _classCallCheck2$n = classCallCheck$3;

var _classCallCheck3$n = _interopRequireDefault$K(_classCallCheck2$n);

var _createClass2$n = createClass$2;

var _createClass3$n = _interopRequireDefault$K(_createClass2$n);

var _possibleConstructorReturn2$m = possibleConstructorReturn$3;

var _possibleConstructorReturn3$m = _interopRequireDefault$K(_possibleConstructorReturn2$m);

var _inherits2$m = inherits$3;

var _inherits3$m = _interopRequireDefault$K(_inherits2$m);

var _react$v = react;

var _react2$u = _interopRequireDefault$K(_react$v);

var _propTypes$q = propTypes$5.exports;

var _propTypes2$q = _interopRequireDefault$K(_propTypes$q);

var _ClockNumber = ClockNumber$1;

var _ClockNumber2 = _interopRequireDefault$K(_ClockNumber);

var _ClockPointer = ClockPointer$1;

var _ClockPointer2 = _interopRequireDefault$K(_ClockPointer);

var _timeUtils$1 = timeUtils;

function _interopRequireDefault$K(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ClockMinutes = function (_Component) {
  (0, _inherits3$m.default)(ClockMinutes, _Component);

  function ClockMinutes() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$n.default)(this, ClockMinutes);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$m.default)(this, (_ref = ClockMinutes.__proto__ || (0, _getPrototypeOf2$m.default)(ClockMinutes)).call.apply(_ref, [this].concat(args))), _this), _this.handleUp = function (event) {
      event.preventDefault();
      _this.setClock(event.nativeEvent, true);
    }, _this.handleMove = function (event) {
      event.preventDefault();
      if (_this.isMousePressed(event) !== 1) {
        return;
      }
      _this.setClock(event.nativeEvent, false);
    }, _this.handleTouch = function (event) {
      event.preventDefault();
      _this.setClock(event.changedTouches[0], event.type === 'touchend');
    }, _temp), (0, _possibleConstructorReturn3$m.default)(_this, _ret);
  }

  (0, _createClass3$n.default)(ClockMinutes, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var clockElement = this.refs.mask;

      this.center = {
        x: clockElement.offsetWidth / 2,
        y: clockElement.offsetHeight / 2
      };

      this.basePoint = {
        x: this.center.x,
        y: 0
      };
    }
  }, {
    key: 'isMousePressed',
    value: function isMousePressed(event) {
      if (typeof event.buttons === 'undefined') {
        return event.nativeEvent.which;
      }
      return event.buttons;
    }
  }, {
    key: 'setClock',
    value: function setClock(event, finish) {
      if (typeof event.offsetX === 'undefined') {
        var offset = (0, _timeUtils$1.getTouchEventOffsetValues)(event);

        event.offsetX = offset.offsetX;
        event.offsetY = offset.offsetY;
      }

      var minutes = this.getMinutes(event.offsetX, event.offsetY);

      this.props.onChange(minutes, finish);
    }
  }, {
    key: 'getMinutes',
    value: function getMinutes(offsetX, offsetY) {
      var step = 6 * this.props.step;
      var x = offsetX - this.center.x;
      var y = offsetY - this.center.y;
      var cx = this.basePoint.x - this.center.x;
      var cy = this.basePoint.y - this.center.y;

      var atan = Math.atan2(cx, cy) - Math.atan2(x, y);

      var deg = (0, _timeUtils$1.rad2deg)(atan);
      deg = Math.round(deg / step) * step;
      deg %= 360;

      var value = Math.floor(deg / step) || 0;

      return value * this.props.step;
    }
  }, {
    key: 'getMinuteNumbers',
    value: function getMinuteNumbers() {
      var minutes = [];
      for (var i = 0; i < 12; i++) {
        minutes.push(i * 5);
      }
      var selectedMinutes = this.props.initialMinutes;
      var hasSelected = false;

      var numbers = minutes.map(function (minute) {
        var isSelected = selectedMinutes === minute;
        if (isSelected) {
          hasSelected = true;
        }
        return _react2$u.default.createElement(_ClockNumber2.default, {
          key: minute,
          isSelected: isSelected,
          type: 'minute',
          value: minute
        });
      });

      return {
        numbers: numbers,
        hasSelected: hasSelected,
        selected: selectedMinutes
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var styles = {
        root: {
          height: '100%',
          width: '100%',
          borderRadius: '100%',
          position: 'relative',
          pointerEvents: 'none',
          boxSizing: 'border-box'
        },

        hitMask: {
          height: '100%',
          width: '100%',
          pointerEvents: 'auto'
        }
      };

      var prepareStyles = this.context.muiTheme.prepareStyles;

      var minutes = this.getMinuteNumbers();

      return _react2$u.default.createElement(
        'div',
        { ref: 'clock', style: prepareStyles(styles.root) },
        _react2$u.default.createElement(_ClockPointer2.default, { value: minutes.selected, type: 'minute', hasSelected: minutes.hasSelected }),
        minutes.numbers,
        _react2$u.default.createElement('div', {
          ref: 'mask',
          style: prepareStyles(styles.hitMask),
          onTouchMove: this.handleTouch,
          onTouchEnd: this.handleTouch,
          onMouseUp: this.handleUp,
          onMouseMove: this.handleMove
        })
      );
    }
  }]);
  return ClockMinutes;
}(_react$v.Component);

ClockMinutes.defaultProps = {
  initialMinutes: new Date().getMinutes(),
  onChange: function onChange() {},
  step: 1
};
ClockMinutes.contextTypes = {
  muiTheme: _propTypes2$q.default.object.isRequired
};
ClockMinutes.propTypes = {
  initialMinutes: _propTypes2$q.default.number,
  onChange: _propTypes2$q.default.func,
  step: _propTypes2$q.default.number
} ;
ClockMinutes$1.default = ClockMinutes;

Object.defineProperty(Clock$1, "__esModule", {
  value: true
});

var _getPrototypeOf$l = getPrototypeOf$1.exports;

var _getPrototypeOf2$l = _interopRequireDefault$J(_getPrototypeOf$l);

var _classCallCheck2$m = classCallCheck$3;

var _classCallCheck3$m = _interopRequireDefault$J(_classCallCheck2$m);

var _createClass2$m = createClass$2;

var _createClass3$m = _interopRequireDefault$J(_createClass2$m);

var _possibleConstructorReturn2$l = possibleConstructorReturn$3;

var _possibleConstructorReturn3$l = _interopRequireDefault$J(_possibleConstructorReturn2$l);

var _inherits2$l = inherits$3;

var _inherits3$l = _interopRequireDefault$J(_inherits2$l);

var _react$u = react;

var _react2$t = _interopRequireDefault$J(_react$u);

var _propTypes$p = propTypes$5.exports;

var _propTypes2$p = _interopRequireDefault$J(_propTypes$p);

var _TimeDisplay = TimeDisplay$1;

var _TimeDisplay2 = _interopRequireDefault$J(_TimeDisplay);

var _ClockHours = ClockHours$1;

var _ClockHours2 = _interopRequireDefault$J(_ClockHours);

var _ClockMinutes = ClockMinutes$1;

var _ClockMinutes2 = _interopRequireDefault$J(_ClockMinutes);

function _interopRequireDefault$J(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Clock = function (_Component) {
  (0, _inherits3$l.default)(Clock, _Component);

  function Clock() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$m.default)(this, Clock);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$l.default)(this, (_ref = Clock.__proto__ || (0, _getPrototypeOf2$l.default)(Clock)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      selectedTime: null,
      mode: 'hour'
    }, _this.setMode = function (mode) {
      setTimeout(function () {
        _this.setState({
          mode: mode
        });
      }, 100);
    }, _this.handleSelectAffix = function (affix) {
      if (affix === _this.getAffix()) return;

      var hours = _this.state.selectedTime.getHours();

      if (affix === 'am') {
        _this.handleChangeHours(hours - 12, affix);
        return;
      }

      _this.handleChangeHours(hours + 12, affix);
    }, _this.handleChangeHours = function (hours, finished) {
      var time = new Date(_this.state.selectedTime);
      var affix = void 0;

      if (typeof finished === 'string') {
        affix = finished;
        finished = undefined;
      }
      if (!affix) {
        affix = _this.getAffix();
      }
      if (affix === 'pm' && hours < 12) {
        hours += 12;
      }

      time.setHours(hours);
      _this.setState({
        selectedTime: time
      });

      if (finished) {
        setTimeout(function () {
          _this.setState({
            mode: 'minute'
          });

          var onChangeHours = _this.props.onChangeHours;

          if (onChangeHours) {
            onChangeHours(time);
          }
        }, 100);
      }
    }, _this.handleChangeMinutes = function (minutes, finished) {
      var time = new Date(_this.state.selectedTime);
      time.setMinutes(minutes);
      _this.setState({
        selectedTime: time
      });

      var onChangeMinutes = _this.props.onChangeMinutes;

      if (onChangeMinutes && finished) {
        setTimeout(function () {
          onChangeMinutes(time);
        }, 0);
      }
    }, _temp), (0, _possibleConstructorReturn3$l.default)(_this, _ret);
  }

  (0, _createClass3$m.default)(Clock, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var selectedTime = this.props.initialTime || new Date();
      var minutes = selectedTime.getMinutes();
      selectedTime.setMinutes(minutes - minutes % this.props.minutesStep);

      this.setState({
        selectedTime: selectedTime
      });
    }
  }, {
    key: 'getAffix',
    value: function getAffix() {
      if (this.props.format !== 'ampm') return '';

      var hours = this.state.selectedTime.getHours();
      if (hours < 12) {
        return 'am';
      }

      return 'pm';
    }
  }, {
    key: 'getSelectedTime',
    value: function getSelectedTime() {
      return this.state.selectedTime;
    }
  }, {
    key: 'render',
    value: function render() {
      var clock = null;

      var _context$muiTheme = this.context.muiTheme,
          prepareStyles = _context$muiTheme.prepareStyles,
          timePicker = _context$muiTheme.timePicker;


      var styles = {
        root: {
          userSelect: 'none'
        },
        container: {
          height: 280,
          padding: 10,
          position: 'relative',
          boxSizing: 'content-box'
        },
        circle: {
          position: 'absolute',
          top: 20,
          width: 260,
          height: 260,
          borderRadius: '100%',
          backgroundColor: timePicker.clockCircleColor
        }
      };

      if (this.state.mode === 'hour') {
        clock = _react2$t.default.createElement(_ClockHours2.default, {
          key: 'hours',
          format: this.props.format,
          onChange: this.handleChangeHours,
          initialHours: this.state.selectedTime.getHours()
        });
      } else {
        clock = _react2$t.default.createElement(_ClockMinutes2.default, {
          key: 'minutes',
          onChange: this.handleChangeMinutes,
          initialMinutes: this.state.selectedTime.getMinutes(),
          step: this.props.minutesStep
        });
      }

      return _react2$t.default.createElement(
        'div',
        { style: prepareStyles(styles.root) },
        _react2$t.default.createElement(_TimeDisplay2.default, {
          selectedTime: this.state.selectedTime,
          mode: this.state.mode,
          format: this.props.format,
          affix: this.getAffix(),
          onSelectAffix: this.handleSelectAffix,
          onSelectHour: this.setMode.bind(this, 'hour'),
          onSelectMin: this.setMode.bind(this, 'minute')
        }),
        _react2$t.default.createElement(
          'div',
          { style: prepareStyles(styles.container) },
          _react2$t.default.createElement('div', { style: prepareStyles(styles.circle) }),
          clock
        )
      );
    }
  }]);
  return Clock;
}(_react$u.Component);

Clock.defaultProps = {
  initialTime: new Date()
};
Clock.contextTypes = {
  muiTheme: _propTypes2$p.default.object.isRequired
};
Clock.propTypes = {
  format: _propTypes2$p.default.oneOf(['ampm', '24hr']),
  initialTime: _propTypes2$p.default.object,
  minutesStep: _propTypes2$p.default.number,
  onChangeHours: _propTypes2$p.default.func,
  onChangeMinutes: _propTypes2$p.default.func
} ;
Clock$1.default = Clock;

Object.defineProperty(TimePickerDialog$1, "__esModule", {
  value: true
});

var _extends2$i = _extends$3;

var _extends3$i = _interopRequireDefault$I(_extends2$i);

var _objectWithoutProperties2$i = objectWithoutProperties$2;

var _objectWithoutProperties3$i = _interopRequireDefault$I(_objectWithoutProperties2$i);

var _getPrototypeOf$k = getPrototypeOf$1.exports;

var _getPrototypeOf2$k = _interopRequireDefault$I(_getPrototypeOf$k);

var _classCallCheck2$l = classCallCheck$3;

var _classCallCheck3$l = _interopRequireDefault$I(_classCallCheck2$l);

var _createClass2$l = createClass$2;

var _createClass3$l = _interopRequireDefault$I(_createClass2$l);

var _possibleConstructorReturn2$k = possibleConstructorReturn$3;

var _possibleConstructorReturn3$k = _interopRequireDefault$I(_possibleConstructorReturn2$k);

var _inherits2$k = inherits$3;

var _inherits3$k = _interopRequireDefault$I(_inherits2$k);

var _simpleAssign$n = simpleAssign;

var _simpleAssign2$n = _interopRequireDefault$I(_simpleAssign$n);

var _react$t = react;

var _react2$s = _interopRequireDefault$I(_react$t);

var _propTypes$o = propTypes$5.exports;

var _propTypes2$o = _interopRequireDefault$I(_propTypes$o);

var _reactEventListener$2 = reactEventListener_cjs;

var _reactEventListener2$2 = _interopRequireDefault$I(_reactEventListener$2);

var _keycode$2 = keycode.exports;

var _keycode2$2 = _interopRequireDefault$I(_keycode$2);

var _Clock = Clock$1;

var _Clock2 = _interopRequireDefault$I(_Clock);

var _Dialog = Dialog$2;

var _Dialog2 = _interopRequireDefault$I(_Dialog);

var _FlatButton = FlatButton$2;

var _FlatButton2 = _interopRequireDefault$I(_FlatButton);

function _interopRequireDefault$I(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TimePickerDialog = function (_Component) {
  (0, _inherits3$k.default)(TimePickerDialog, _Component);

  function TimePickerDialog() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$l.default)(this, TimePickerDialog);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$k.default)(this, (_ref = TimePickerDialog.__proto__ || (0, _getPrototypeOf2$k.default)(TimePickerDialog)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.handleRequestClose = function () {
      _this.dismiss();
    }, _this.handleClickCancel = function () {
      _this.dismiss();
    }, _this.handleClickOK = function () {
      if (_this.props.onAccept) {
        _this.props.onAccept(_this.refs.clock.getSelectedTime());
      }
      _this.setState({
        open: false
      });
    }, _this.handleKeyUp = function (event) {
      switch ((0, _keycode2$2.default)(event)) {
        case 'enter':
          _this.handleClickOK();
          break;
      }
    }, _temp), (0, _possibleConstructorReturn3$k.default)(_this, _ret);
  }

  (0, _createClass3$l.default)(TimePickerDialog, [{
    key: 'show',
    value: function show() {
      if (this.props.onShow && !this.state.open) this.props.onShow();
      this.setState({
        open: true
      });
    }
  }, {
    key: 'dismiss',
    value: function dismiss() {
      if (this.props.onDismiss && this.state.open) this.props.onDismiss();
      this.setState({
        open: false
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          bodyStyle = _props.bodyStyle,
          initialTime = _props.initialTime;
          _props.onAccept;
          var format = _props.format,
          autoOk = _props.autoOk,
          okLabel = _props.okLabel,
          cancelLabel = _props.cancelLabel,
          style = _props.style,
          minutesStep = _props.minutesStep,
          other = (0, _objectWithoutProperties3$i.default)(_props, ['bodyStyle', 'initialTime', 'onAccept', 'format', 'autoOk', 'okLabel', 'cancelLabel', 'style', 'minutesStep']);


      var styles = {
        root: {
          fontSize: 14,
          color: this.context.muiTheme.timePicker.clockColor
        },
        dialogContent: {
          width: 280
        },
        body: {
          padding: 0
        }
      };

      var actions = [_react2$s.default.createElement(_FlatButton2.default, {
        key: 0,
        label: cancelLabel,
        primary: true,
        onClick: this.handleClickCancel
      }), _react2$s.default.createElement(_FlatButton2.default, {
        key: 1,
        label: okLabel,
        primary: true,
        onClick: this.handleClickOK
      })];

      var onClockChangeMinutes = autoOk === true ? this.handleClickOK : undefined;
      var open = this.state.open;

      return _react2$s.default.createElement(
        _Dialog2.default,
        (0, _extends3$i.default)({}, other, {
          style: (0, _simpleAssign2$n.default)(styles.root, style),
          bodyStyle: (0, _simpleAssign2$n.default)(styles.body, bodyStyle),
          actions: actions,
          contentStyle: styles.dialogContent,
          repositionOnUpdate: false,
          open: open,
          onRequestClose: this.handleRequestClose
        }),
        open && _react2$s.default.createElement(_reactEventListener2$2.default, { target: 'window', onKeyUp: this.handleKeyUp }),
        open && _react2$s.default.createElement(_Clock2.default, {
          ref: 'clock',
          format: format,
          initialTime: initialTime,
          onChangeMinutes: onClockChangeMinutes,
          minutesStep: minutesStep
        })
      );
    }
  }]);
  return TimePickerDialog;
}(_react$t.Component);

TimePickerDialog.defaultProps = {
  okLabel: 'OK',
  cancelLabel: 'Cancel'
};
TimePickerDialog.contextTypes = {
  muiTheme: _propTypes2$o.default.object.isRequired
};
TimePickerDialog.propTypes = {
  autoOk: _propTypes2$o.default.bool,
  bodyStyle: _propTypes2$o.default.object,
  cancelLabel: _propTypes2$o.default.node,
  format: _propTypes2$o.default.oneOf(['ampm', '24hr']),
  initialTime: _propTypes2$o.default.object,
  minutesStep: _propTypes2$o.default.number,
  okLabel: _propTypes2$o.default.node,
  onAccept: _propTypes2$o.default.func,
  onDismiss: _propTypes2$o.default.func,
  onShow: _propTypes2$o.default.func,
  style: _propTypes2$o.default.object
} ;
TimePickerDialog$1.default = TimePickerDialog;

Object.defineProperty(TimePicker$1, "__esModule", {
  value: true
});

var _extends2$h = _extends$3;

var _extends3$h = _interopRequireDefault$H(_extends2$h);

var _objectWithoutProperties2$h = objectWithoutProperties$2;

var _objectWithoutProperties3$h = _interopRequireDefault$H(_objectWithoutProperties2$h);

var _getPrototypeOf$j = getPrototypeOf$1.exports;

var _getPrototypeOf2$j = _interopRequireDefault$H(_getPrototypeOf$j);

var _classCallCheck2$k = classCallCheck$3;

var _classCallCheck3$k = _interopRequireDefault$H(_classCallCheck2$k);

var _createClass2$k = createClass$2;

var _createClass3$k = _interopRequireDefault$H(_createClass2$k);

var _possibleConstructorReturn2$j = possibleConstructorReturn$3;

var _possibleConstructorReturn3$j = _interopRequireDefault$H(_possibleConstructorReturn2$j);

var _inherits2$j = inherits$3;

var _inherits3$j = _interopRequireDefault$H(_inherits2$j);

var _simpleAssign$m = simpleAssign;

var _simpleAssign2$m = _interopRequireDefault$H(_simpleAssign$m);

var _react$s = react;

var _react2$r = _interopRequireDefault$H(_react$s);

var _propTypes$n = propTypes$5.exports;

var _propTypes2$n = _interopRequireDefault$H(_propTypes$n);

var _TimePickerDialog = TimePickerDialog$1;

var _TimePickerDialog2 = _interopRequireDefault$H(_TimePickerDialog);

var _TextField$2 = TextField$6;

var _TextField2$2 = _interopRequireDefault$H(_TextField$2);

var _timeUtils = timeUtils;

function _interopRequireDefault$H(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var emptyTime = new Date();
emptyTime.setHours(0);
emptyTime.setMinutes(0);
emptyTime.setSeconds(0);
emptyTime.setMilliseconds(0);

var TimePicker = function (_Component) {
  (0, _inherits3$j.default)(TimePicker, _Component);

  function TimePicker() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$k.default)(this, TimePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$j.default)(this, (_ref = TimePicker.__proto__ || (0, _getPrototypeOf2$j.default)(TimePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      time: null,
      dialogTime: new Date()
    }, _this.handleAcceptDialog = function (time) {
      _this.setState({
        time: time
      });
      if (_this.props.onChange) _this.props.onChange(null, time);
    }, _this.handleFocusInput = function (event) {
      event.target.blur();
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleClickInput = function (event) {
      event.preventDefault();

      if (!_this.props.disabled) {
        _this.openDialog();
      }

      if (_this.props.onClick) {
        _this.props.onClick(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$j.default)(_this, _ret);
  }

  (0, _createClass3$k.default)(TimePicker, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        time: this.isControlled() ? this.getControlledTime() : this.props.defaultTime
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== this.props.value) {
        this.setState({
          time: this.getControlledTime(nextProps)
        });
      }
    }

    /**
     * Alias for `openDialog()` for an api consistent with TextField.
     */

  }, {
    key: 'focus',
    value: function focus() {
      this.openDialog();
    }
  }, {
    key: 'openDialog',
    value: function openDialog() {
      this.setState({
        dialogTime: this.state.time
      });
      this.refs.dialogWindow.show();
    }
  }, {
    key: 'isControlled',
    value: function isControlled() {
      return this.props.value !== null;
    }
  }, {
    key: 'getControlledTime',
    value: function getControlledTime() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

      var result = null;
      if (props.value instanceof Date) {
        result = props.value;
      }
      return result;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          autoOk = _props.autoOk,
          cancelLabel = _props.cancelLabel;
          _props.defaultTime;
          var dialogBodyStyle = _props.dialogBodyStyle,
          dialogStyle = _props.dialogStyle,
          format = _props.format,
          okLabel = _props.okLabel;
          _props.onFocus;
          _props.onClick;
          var onShow = _props.onShow,
          onDismiss = _props.onDismiss,
          pedantic = _props.pedantic,
          style = _props.style,
          textFieldStyle = _props.textFieldStyle,
          minutesStep = _props.minutesStep,
          other = (0, _objectWithoutProperties3$h.default)(_props, ['autoOk', 'cancelLabel', 'defaultTime', 'dialogBodyStyle', 'dialogStyle', 'format', 'okLabel', 'onFocus', 'onClick', 'onShow', 'onDismiss', 'pedantic', 'style', 'textFieldStyle', 'minutesStep']);
      var prepareStyles = this.context.muiTheme.prepareStyles;
      var time = this.state.time;


      return _react2$r.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$m.default)({}, style)) },
        _react2$r.default.createElement(_TextField2$2.default, (0, _extends3$h.default)({}, other, {
          style: textFieldStyle,
          ref: 'input',
          value: time === emptyTime ? null : (0, _timeUtils.formatTime)(time, format, pedantic),
          onFocus: this.handleFocusInput,
          onClick: this.handleClickInput
        })),
        _react2$r.default.createElement(_TimePickerDialog2.default, {
          ref: 'dialogWindow',
          bodyStyle: dialogBodyStyle,
          initialTime: this.state.dialogTime,
          onAccept: this.handleAcceptDialog,
          onShow: onShow,
          onDismiss: onDismiss,
          format: format,
          okLabel: okLabel,
          cancelLabel: cancelLabel,
          autoOk: autoOk,
          style: dialogStyle,
          minutesStep: minutesStep
        })
      );
    }
  }]);
  return TimePicker;
}(_react$s.Component);

TimePicker.defaultProps = {
  autoOk: false,
  cancelLabel: 'Cancel',
  defaultTime: null,
  disabled: false,
  format: 'ampm',
  okLabel: 'OK',
  pedantic: false,
  style: {},
  value: null,
  minutesStep: 1
};
TimePicker.contextTypes = {
  muiTheme: _propTypes2$n.default.object.isRequired
};
TimePicker.propTypes = {
  /**
   * If true, automatically accept and close the picker on set minutes.
   */
  autoOk: _propTypes2$n.default.bool,
  /**
   * Override the label of the 'Cancel' button.
   */
  cancelLabel: _propTypes2$n.default.node,
  /**
   * The initial time value of the TimePicker.
   */
  defaultTime: _propTypes2$n.default.object,
  /**
   * Override the inline-styles of TimePickerDialog's body element.
   */
  dialogBodyStyle: _propTypes2$n.default.object,
  /**
   * Override the inline-styles of TimePickerDialog's root element.
   */
  dialogStyle: _propTypes2$n.default.object,
  /**
   * If true, the TimePicker is disabled.
   */
  disabled: _propTypes2$n.default.bool,
  /**
   * Tells the component to display the picker in `ampm` (12hr) format or `24hr` format.
   */
  format: _propTypes2$n.default.oneOf(['ampm', '24hr']),
  /**
   * How many minutes should be added/subtracted when moving the clock pointer.
   */
  minutesStep: _propTypes2$n.default.number,
  /**
   * Override the label of the 'OK' button.
   */
  okLabel: _propTypes2$n.default.node,
  /**
   * Callback function that is fired when the time value changes. The time value is passed in a Date Object.
   * Since there is no particular event associated with the change the first argument will always be null
   * and the second argument will be the new Date instance.
   */
  onChange: _propTypes2$n.default.func,
  /**
   * Callback function fired when the TimePicker is tapped or clicked.
   */
  onClick: _propTypes2$n.default.func,
  /**
   * Callback function fired when the TimePicker dialog is dismissed.
   */
  onDismiss: _propTypes2$n.default.func,
  /**
   * Callback function fired when the TimePicker `TextField` gains focus.
   */
  onFocus: _propTypes2$n.default.func,
  /**
   * Callback function fired when the TimePicker dialog is shown.
   */
  onShow: _propTypes2$n.default.func,
  /**
   * If true, uses ("noon" / "midnight") instead of ("12 a.m." / "12 p.m.").
   *
   * It's technically more correct to refer to "12 noon" and "12 midnight" rather than "12 a.m." and "12 p.m."
   * and it avoids confusion between different locales. By default (for compatibility reasons) TimePicker uses
   * ("12 a.m." / "12 p.m.").
   */
  pedantic: _propTypes2$n.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$n.default.object,
  /**
   * Override the inline-styles of TimePicker's TextField element.
   */
  textFieldStyle: _propTypes2$n.default.object,
  /**
   * Sets the time for the Time Picker programmatically.
   */
  value: _propTypes2$n.default.object
} ;
TimePicker$1.default = TimePicker;

Object.defineProperty(TimePicker$2, "__esModule", {
  value: true
});
TimePicker$2.default = undefined;

var _TimePicker = TimePicker$1;

var _TimePicker2 = _interopRequireDefault$G(_TimePicker);

function _interopRequireDefault$G(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

TimePicker$2.default = _TimePicker2.default;

var Toggle$2 = {};

var Toggle$1 = {};

Object.defineProperty(Toggle$1, "__esModule", {
  value: true
});

var _extends2$g = _extends$3;

var _extends3$g = _interopRequireDefault$F(_extends2$g);

var _objectWithoutProperties2$g = objectWithoutProperties$2;

var _objectWithoutProperties3$g = _interopRequireDefault$F(_objectWithoutProperties2$g);

var _getPrototypeOf$i = getPrototypeOf$1.exports;

var _getPrototypeOf2$i = _interopRequireDefault$F(_getPrototypeOf$i);

var _classCallCheck2$j = classCallCheck$3;

var _classCallCheck3$j = _interopRequireDefault$F(_classCallCheck2$j);

var _createClass2$j = createClass$2;

var _createClass3$j = _interopRequireDefault$F(_createClass2$j);

var _possibleConstructorReturn2$i = possibleConstructorReturn$3;

var _possibleConstructorReturn3$i = _interopRequireDefault$F(_possibleConstructorReturn2$i);

var _inherits2$i = inherits$3;

var _inherits3$i = _interopRequireDefault$F(_inherits2$i);

var _simpleAssign$l = simpleAssign;

var _simpleAssign2$l = _interopRequireDefault$F(_simpleAssign$l);

var _react$r = react;

var _react2$q = _interopRequireDefault$F(_react$r);

var _propTypes$m = propTypes$5.exports;

var _propTypes2$m = _interopRequireDefault$F(_propTypes$m);

var _transitions$b = transitions;

var _transitions2$b = _interopRequireDefault$F(_transitions$b);

var _Paper$3 = Paper$2;

var _Paper2$3 = _interopRequireDefault$F(_Paper$3);

var _EnhancedSwitch = EnhancedSwitch$1;

var _EnhancedSwitch2 = _interopRequireDefault$F(_EnhancedSwitch);

function _interopRequireDefault$F(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$h(props, context, state) {
  var disabled = props.disabled,
      elementStyle = props.elementStyle,
      trackSwitchedStyle = props.trackSwitchedStyle,
      thumbSwitchedStyle = props.thumbSwitchedStyle,
      trackStyle = props.trackStyle,
      thumbStyle = props.thumbStyle,
      iconStyle = props.iconStyle,
      rippleStyle = props.rippleStyle,
      labelStyle = props.labelStyle;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      toggle = _context$muiTheme.toggle;


  var toggleSize = 20;
  var toggleTrackWidth = 36;
  var styles = {
    icon: {
      width: 36,
      padding: '4px 0px 6px 2px'
    },
    ripple: {
      top: -10,
      left: -10,
      color: state.switched ? toggle.thumbOnColor : baseTheme.palette.textColor
    },
    toggleElement: {
      width: toggleTrackWidth
    },
    track: {
      transition: _transitions2$b.default.easeOut(),
      width: '100%',
      height: 14,
      borderRadius: 30,
      backgroundColor: toggle.trackOffColor
    },
    thumb: {
      transition: _transitions2$b.default.easeOut(),
      position: 'absolute',
      top: 1,
      left: 0,
      width: toggleSize,
      height: toggleSize,
      lineHeight: '24px',
      borderRadius: '50%',
      backgroundColor: toggle.thumbOffColor
    },
    trackWhenSwitched: {
      backgroundColor: toggle.trackOnColor
    },
    thumbWhenSwitched: {
      backgroundColor: toggle.thumbOnColor,
      left: '100%'
    },
    trackWhenDisabled: {
      backgroundColor: toggle.trackDisabledColor
    },
    thumbWhenDisabled: {
      backgroundColor: toggle.thumbDisabledColor
    },
    label: {
      color: disabled ? toggle.labelDisabledColor : toggle.labelColor,
      width: 'calc(100% - ' + (toggleTrackWidth + 10) + 'px)'
    }
  };

  (0, _simpleAssign2$l.default)(styles.track, trackStyle, state.switched && styles.trackWhenSwitched, state.switched && trackSwitchedStyle, disabled && styles.trackWhenDisabled);

  (0, _simpleAssign2$l.default)(styles.thumb, thumbStyle, state.switched && styles.thumbWhenSwitched, state.switched && thumbSwitchedStyle, disabled && styles.thumbWhenDisabled);

  if (state.switched) {
    styles.thumb.marginLeft = 0 - styles.thumb.width;
  }

  (0, _simpleAssign2$l.default)(styles.icon, iconStyle);

  (0, _simpleAssign2$l.default)(styles.ripple, rippleStyle);

  (0, _simpleAssign2$l.default)(styles.label, labelStyle);

  (0, _simpleAssign2$l.default)(styles.toggleElement, elementStyle);

  return styles;
}

var Toggle = function (_Component) {
  (0, _inherits3$i.default)(Toggle, _Component);

  function Toggle() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$j.default)(this, Toggle);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$i.default)(this, (_ref = Toggle.__proto__ || (0, _getPrototypeOf2$i.default)(Toggle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      switched: false
    }, _this.handleStateChange = function (newSwitched) {
      _this.setState({
        switched: newSwitched
      });
    }, _this.handleToggle = function (event, isInputChecked) {
      if (_this.props.onToggle) {
        _this.props.onToggle(event, isInputChecked);
      }
    }, _temp), (0, _possibleConstructorReturn3$i.default)(_this, _ret);
  }

  (0, _createClass3$j.default)(Toggle, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          toggled = _props.toggled,
          defaultToggled = _props.defaultToggled,
          valueLink = _props.valueLink;


      if (toggled || defaultToggled || valueLink && valueLink.value) {
        this.setState({
          switched: true
        });
      }
    }
  }, {
    key: 'isToggled',
    value: function isToggled() {
      return this.refs.enhancedSwitch.isSwitched();
    }
  }, {
    key: 'setToggled',
    value: function setToggled(newToggledValue) {
      this.refs.enhancedSwitch.setSwitched(newToggledValue);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          defaultToggled = _props2.defaultToggled;
          _props2.elementStyle;
          _props2.onToggle;
          _props2.trackSwitchedStyle;
          _props2.thumbSwitchedStyle;
          var toggled = _props2.toggled,
          other = (0, _objectWithoutProperties3$g.default)(_props2, ['defaultToggled', 'elementStyle', 'onToggle', 'trackSwitchedStyle', 'thumbSwitchedStyle', 'toggled']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$h(this.props, this.context, this.state);

      var toggleElement = _react2$q.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$l.default)({}, styles.toggleElement)) },
        _react2$q.default.createElement('div', { style: prepareStyles((0, _simpleAssign2$l.default)({}, styles.track)) }),
        _react2$q.default.createElement(_Paper2$3.default, { style: styles.thumb, circle: true, zDepth: 1 })
      );

      var enhancedSwitchProps = {
        ref: 'enhancedSwitch',
        inputType: 'checkbox',
        switchElement: toggleElement,
        rippleStyle: styles.ripple,
        rippleColor: styles.ripple.color,
        iconStyle: styles.icon,
        trackStyle: styles.track,
        thumbStyle: styles.thumb,
        labelStyle: styles.label,
        switched: this.state.switched,
        onSwitch: this.handleToggle,
        onParentShouldUpdate: this.handleStateChange,
        labelPosition: this.props.labelPosition
      };

      if (this.props.hasOwnProperty('toggled')) {
        enhancedSwitchProps.checked = toggled;
      } else if (this.props.hasOwnProperty('defaultToggled')) {
        enhancedSwitchProps.defaultChecked = defaultToggled;
      }

      return _react2$q.default.createElement(_EnhancedSwitch2.default, (0, _extends3$g.default)({}, other, enhancedSwitchProps));
    }
  }]);
  return Toggle;
}(_react$r.Component);

Toggle.defaultProps = {
  defaultToggled: false,
  disabled: false,
  labelPosition: 'left'
};
Toggle.contextTypes = {
  muiTheme: _propTypes2$m.default.object.isRequired
};
Toggle.propTypes = {
  /**
   * Determines whether the Toggle is initially turned on.
   * **Warning:** This cannot be used in conjunction with `toggled`.
   * Decide between using a controlled or uncontrolled input element and remove one of these props.
   * More info: https://fb.me/react-controlled-components
   */
  defaultToggled: _propTypes2$m.default.bool,
  /**
   * Will disable the toggle if true.
   */
  disabled: _propTypes2$m.default.bool,
  /**
   * Overrides the inline-styles of the Toggle element.
   */
  elementStyle: _propTypes2$m.default.object,
  /**
   * Overrides the inline-styles of the Icon element.
   */
  iconStyle: _propTypes2$m.default.object,
  /**
   * Overrides the inline-styles of the input element.
   */
  inputStyle: _propTypes2$m.default.object,
  /**
   * Label for toggle.
   */
  label: _propTypes2$m.default.node,
  /**
   * Where the label will be placed next to the toggle.
   */
  labelPosition: _propTypes2$m.default.oneOf(['left', 'right']),
  /**
   * Overrides the inline-styles of the Toggle element label.
   */
  labelStyle: _propTypes2$m.default.object,
  /**
   * Callback function that is fired when the toggle switch is toggled.
   *
   * @param {object} event Change event targeting the toggle.
   * @param {bool} isInputChecked The new value of the toggle.
   */
  onToggle: _propTypes2$m.default.func,
  /**
   * Override style of ripple.
   */
  rippleStyle: _propTypes2$m.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$m.default.object,
  /**
   * Override style for thumb.
   */
  thumbStyle: _propTypes2$m.default.object,
  /**
  * Override the inline styles for thumb when the toggle switch is toggled on.
  */
  thumbSwitchedStyle: _propTypes2$m.default.object,
  /**
   * Toggled if set to true.
   */
  toggled: _propTypes2$m.default.bool,
  /**
   * Override style for track.
   */
  trackStyle: _propTypes2$m.default.object,
  /**
  * Override the inline styles for track when the toggle switch is toggled on.
  */
  trackSwitchedStyle: _propTypes2$m.default.object,
  /**
   * ValueLink prop for when using controlled toggle.
   */
  valueLink: _propTypes2$m.default.object
} ;
Toggle$1.default = Toggle;

Object.defineProperty(Toggle$2, "__esModule", {
  value: true
});
Toggle$2.default = undefined;

var _Toggle = Toggle$1;

var _Toggle2 = _interopRequireDefault$E(_Toggle);

function _interopRequireDefault$E(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Toggle$2.default = _Toggle2.default;

var Toolbar$2 = {};

var Toolbar$1 = {};

Object.defineProperty(Toolbar$1, "__esModule", {
  value: true
});

var _extends2$f = _extends$3;

var _extends3$f = _interopRequireDefault$D(_extends2$f);

var _objectWithoutProperties2$f = objectWithoutProperties$2;

var _objectWithoutProperties3$f = _interopRequireDefault$D(_objectWithoutProperties2$f);

var _getPrototypeOf$h = getPrototypeOf$1.exports;

var _getPrototypeOf2$h = _interopRequireDefault$D(_getPrototypeOf$h);

var _classCallCheck2$i = classCallCheck$3;

var _classCallCheck3$i = _interopRequireDefault$D(_classCallCheck2$i);

var _createClass2$i = createClass$2;

var _createClass3$i = _interopRequireDefault$D(_createClass2$i);

var _possibleConstructorReturn2$h = possibleConstructorReturn$3;

var _possibleConstructorReturn3$h = _interopRequireDefault$D(_possibleConstructorReturn2$h);

var _inherits2$h = inherits$3;

var _inherits3$h = _interopRequireDefault$D(_inherits2$h);

var _simpleAssign$k = simpleAssign;

var _simpleAssign2$k = _interopRequireDefault$D(_simpleAssign$k);

var _react$q = react;

var _react2$p = _interopRequireDefault$D(_react$q);

var _propTypes$l = propTypes$5.exports;

var _propTypes2$l = _interopRequireDefault$D(_propTypes$l);

function _interopRequireDefault$D(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$g(props, context) {
  var noGutter = props.noGutter;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      toolbar = _context$muiTheme.toolbar;


  return {
    root: {
      boxSizing: 'border-box',
      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
      backgroundColor: toolbar.backgroundColor,
      height: toolbar.height,
      padding: noGutter ? 0 : '0px ' + baseTheme.spacing.desktopGutter + 'px',
      display: 'flex',
      justifyContent: 'space-between'
    }
  };
}

var Toolbar = function (_Component) {
  (0, _inherits3$h.default)(Toolbar, _Component);

  function Toolbar() {
    (0, _classCallCheck3$i.default)(this, Toolbar);
    return (0, _possibleConstructorReturn3$h.default)(this, (Toolbar.__proto__ || (0, _getPrototypeOf2$h.default)(Toolbar)).apply(this, arguments));
  }

  (0, _createClass3$i.default)(Toolbar, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className;
          _props.noGutter;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$f.default)(_props, ['children', 'className', 'noGutter', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$g(this.props, this.context);

      return _react2$p.default.createElement(
        'div',
        (0, _extends3$f.default)({}, other, { className: className, style: prepareStyles((0, _simpleAssign2$k.default)({}, styles.root, style)) }),
        children
      );
    }
  }]);
  return Toolbar;
}(_react$q.Component);

Toolbar.defaultProps = {
  noGutter: false
};
Toolbar.contextTypes = {
  muiTheme: _propTypes2$l.default.object.isRequired
};
Toolbar.propTypes = {
  /**
   * Can be a `ToolbarGroup` to render a group of related items.
   */
  children: _propTypes2$l.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$l.default.string,
  /**
   * Do not apply `desktopGutter` to the `Toolbar`.
   */
  noGutter: _propTypes2$l.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$l.default.object
} ;
Toolbar$1.default = Toolbar;

var ToolbarGroup$1 = {};

Object.defineProperty(ToolbarGroup$1, "__esModule", {
  value: true
});

var _extends2$e = _extends$3;

var _extends3$e = _interopRequireDefault$C(_extends2$e);

var _objectWithoutProperties2$e = objectWithoutProperties$2;

var _objectWithoutProperties3$e = _interopRequireDefault$C(_objectWithoutProperties2$e);

var _getPrototypeOf$g = getPrototypeOf$1.exports;

var _getPrototypeOf2$g = _interopRequireDefault$C(_getPrototypeOf$g);

var _classCallCheck2$h = classCallCheck$3;

var _classCallCheck3$h = _interopRequireDefault$C(_classCallCheck2$h);

var _createClass2$h = createClass$2;

var _createClass3$h = _interopRequireDefault$C(_createClass2$h);

var _possibleConstructorReturn2$g = possibleConstructorReturn$3;

var _possibleConstructorReturn3$g = _interopRequireDefault$C(_possibleConstructorReturn2$g);

var _inherits2$g = inherits$3;

var _inherits3$g = _interopRequireDefault$C(_inherits2$g);

var _simpleAssign$j = simpleAssign;

var _simpleAssign2$j = _interopRequireDefault$C(_simpleAssign$j);

var _react$p = react;

var _react2$o = _interopRequireDefault$C(_react$p);

var _propTypes$k = propTypes$5.exports;

var _propTypes2$k = _interopRequireDefault$C(_propTypes$k);

function _interopRequireDefault$C(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$f(props, context) {
  var firstChild = props.firstChild,
      lastChild = props.lastChild;
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      button = _context$muiTheme.button,
      toolbar = _context$muiTheme.toolbar;


  var marginHorizontal = baseTheme.spacing.desktopGutter;
  var marginVertical = (toolbar.height - button.height) / 2;

  var styles = {
    root: {
      position: 'relative',
      marginLeft: firstChild ? -marginHorizontal : undefined,
      marginRight: lastChild ? -marginHorizontal : undefined,
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    dropDownMenu: {
      root: {
        color: toolbar.color, // removes hover color change, we want to keep it
        marginRight: baseTheme.spacing.desktopGutter,
        flex: 1,
        whiteSpace: 'nowrap'
      },
      controlBg: {
        backgroundColor: toolbar.menuHoverColor,
        borderRadius: 0
      },
      underline: {
        display: 'none'
      }
    },
    button: {
      margin: marginVertical + 'px ' + marginHorizontal + 'px',
      position: 'relative'
    },
    icon: {
      root: {
        cursor: 'pointer',
        lineHeight: toolbar.height + 'px',
        paddingLeft: baseTheme.spacing.desktopGutter
      }
    },
    span: {
      color: toolbar.iconColor,
      lineHeight: toolbar.height + 'px'
    }
  };

  return styles;
}

var ToolbarGroup = function (_Component) {
  (0, _inherits3$g.default)(ToolbarGroup, _Component);

  function ToolbarGroup() {
    (0, _classCallCheck3$h.default)(this, ToolbarGroup);
    return (0, _possibleConstructorReturn3$g.default)(this, (ToolbarGroup.__proto__ || (0, _getPrototypeOf2$g.default)(ToolbarGroup)).apply(this, arguments));
  }

  (0, _createClass3$h.default)(ToolbarGroup, [{
    key: 'handleMouseLeaveFontIcon',
    value: function handleMouseLeaveFontIcon(style) {
      return function (event) {
        event.target.style.zIndex = 'auto';
        event.target.style.color = style.root.color;
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className;
          _props.firstChild;
          _props.lastChild;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$e.default)(_props, ['children', 'className', 'firstChild', 'lastChild', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$f(this.props, this.context);

      var newChildren = _react2$o.default.Children.map(children, function (currentChild) {
        if (!currentChild) {
          return null;
        }
        if (!currentChild.type) {
          return currentChild;
        }
        switch (currentChild.type.muiName) {
          case 'DropDownMenu':
            return _react2$o.default.cloneElement(currentChild, {
              style: (0, _simpleAssign2$j.default)({}, styles.dropDownMenu.root, currentChild.props.style),
              underlineStyle: styles.dropDownMenu.underline
            });
          case 'RaisedButton':
          case 'FlatButton':
            return _react2$o.default.cloneElement(currentChild, {
              style: (0, _simpleAssign2$j.default)({}, styles.button, currentChild.props.style)
            });
          case 'FontIcon':
            return _react2$o.default.cloneElement(currentChild, {
              style: (0, _simpleAssign2$j.default)({}, styles.icon.root, currentChild.props.style),
              color: currentChild.props.color || _this2.context.muiTheme.toolbar.iconColor,
              hoverColor: currentChild.props.hoverColor || _this2.context.muiTheme.toolbar.hoverColor
            });
          case 'ToolbarSeparator':
          case 'ToolbarTitle':
            return _react2$o.default.cloneElement(currentChild, {
              style: (0, _simpleAssign2$j.default)({}, styles.span, currentChild.props.style)
            });
          default:
            return currentChild;
        }
      }, this);

      return _react2$o.default.createElement(
        'div',
        (0, _extends3$e.default)({}, other, { className: className, style: prepareStyles((0, _simpleAssign2$j.default)({}, styles.root, style)) }),
        newChildren
      );
    }
  }]);
  return ToolbarGroup;
}(_react$p.Component);

ToolbarGroup.defaultProps = {
  firstChild: false,
  lastChild: false
};
ToolbarGroup.contextTypes = {
  muiTheme: _propTypes2$k.default.object.isRequired
};
ToolbarGroup.propTypes = {
  /**
   * Can be any node or number of nodes.
   */
  children: _propTypes2$k.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$k.default.string,
  /**
   * Set this to true for if the `ToolbarGroup` is the first child of `Toolbar`
   * to prevent setting the left gap.
   */
  firstChild: _propTypes2$k.default.bool,
  /**
   * Set this to true for if the `ToolbarGroup` is the last child of `Toolbar`
   * to prevent setting the right gap.
   */
  lastChild: _propTypes2$k.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$k.default.object
} ;
ToolbarGroup$1.default = ToolbarGroup;

var ToolbarSeparator$1 = {};

Object.defineProperty(ToolbarSeparator$1, "__esModule", {
  value: true
});

var _extends2$d = _extends$3;

var _extends3$d = _interopRequireDefault$B(_extends2$d);

var _objectWithoutProperties2$d = objectWithoutProperties$2;

var _objectWithoutProperties3$d = _interopRequireDefault$B(_objectWithoutProperties2$d);

var _getPrototypeOf$f = getPrototypeOf$1.exports;

var _getPrototypeOf2$f = _interopRequireDefault$B(_getPrototypeOf$f);

var _classCallCheck2$g = classCallCheck$3;

var _classCallCheck3$g = _interopRequireDefault$B(_classCallCheck2$g);

var _createClass2$g = createClass$2;

var _createClass3$g = _interopRequireDefault$B(_createClass2$g);

var _possibleConstructorReturn2$f = possibleConstructorReturn$3;

var _possibleConstructorReturn3$f = _interopRequireDefault$B(_possibleConstructorReturn2$f);

var _inherits2$f = inherits$3;

var _inherits3$f = _interopRequireDefault$B(_inherits2$f);

var _simpleAssign$i = simpleAssign;

var _simpleAssign2$i = _interopRequireDefault$B(_simpleAssign$i);

var _react$o = react;

var _react2$n = _interopRequireDefault$B(_react$o);

var _propTypes$j = propTypes$5.exports;

var _propTypes2$j = _interopRequireDefault$B(_propTypes$j);

function _interopRequireDefault$B(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$e(props, context) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      toolbar = _context$muiTheme.toolbar;


  return {
    root: {
      backgroundColor: toolbar.separatorColor,
      display: 'block',
      height: baseTheme.spacing.desktopGutterMore,
      marginLeft: baseTheme.spacing.desktopGutter,
      width: 1
    }
  };
}

var ToolbarSeparator = function (_Component) {
  (0, _inherits3$f.default)(ToolbarSeparator, _Component);

  function ToolbarSeparator() {
    (0, _classCallCheck3$g.default)(this, ToolbarSeparator);
    return (0, _possibleConstructorReturn3$f.default)(this, (ToolbarSeparator.__proto__ || (0, _getPrototypeOf2$f.default)(ToolbarSeparator)).apply(this, arguments));
  }

  (0, _createClass3$g.default)(ToolbarSeparator, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          other = (0, _objectWithoutProperties3$d.default)(_props, ['className', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$e(this.props, this.context);

      return _react2$n.default.createElement('span', (0, _extends3$d.default)({}, other, { className: className, style: prepareStyles((0, _simpleAssign2$i.default)({}, styles.root, style)) }));
    }
  }]);
  return ToolbarSeparator;
}(_react$o.Component);

ToolbarSeparator.muiName = 'ToolbarSeparator';
ToolbarSeparator.contextTypes = {
  muiTheme: _propTypes2$j.default.object.isRequired
};
ToolbarSeparator.propTypes = {
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$j.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$j.default.object
} ;
ToolbarSeparator$1.default = ToolbarSeparator;

var ToolbarTitle$1 = {};

Object.defineProperty(ToolbarTitle$1, "__esModule", {
  value: true
});

var _extends2$c = _extends$3;

var _extends3$c = _interopRequireDefault$A(_extends2$c);

var _objectWithoutProperties2$c = objectWithoutProperties$2;

var _objectWithoutProperties3$c = _interopRequireDefault$A(_objectWithoutProperties2$c);

var _getPrototypeOf$e = getPrototypeOf$1.exports;

var _getPrototypeOf2$e = _interopRequireDefault$A(_getPrototypeOf$e);

var _classCallCheck2$f = classCallCheck$3;

var _classCallCheck3$f = _interopRequireDefault$A(_classCallCheck2$f);

var _createClass2$f = createClass$2;

var _createClass3$f = _interopRequireDefault$A(_createClass2$f);

var _possibleConstructorReturn2$e = possibleConstructorReturn$3;

var _possibleConstructorReturn3$e = _interopRequireDefault$A(_possibleConstructorReturn2$e);

var _inherits2$e = inherits$3;

var _inherits3$e = _interopRequireDefault$A(_inherits2$e);

var _simpleAssign$h = simpleAssign;

var _simpleAssign2$h = _interopRequireDefault$A(_simpleAssign$h);

var _react$n = react;

var _react2$m = _interopRequireDefault$A(_react$n);

var _propTypes$i = propTypes$5.exports;

var _propTypes2$i = _interopRequireDefault$A(_propTypes$i);

function _interopRequireDefault$A(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$d(props, context) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      toolbar = _context$muiTheme.toolbar;


  return {
    root: {
      paddingRight: baseTheme.spacing.desktopGutterLess,
      lineHeight: toolbar.height + 'px',
      fontSize: toolbar.titleFontSize,
      fontFamily: baseTheme.fontFamily,
      position: 'relative',
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap',
      overflow: 'hidden'
    }
  };
}

var ToolbarTitle = function (_Component) {
  (0, _inherits3$e.default)(ToolbarTitle, _Component);

  function ToolbarTitle() {
    (0, _classCallCheck3$f.default)(this, ToolbarTitle);
    return (0, _possibleConstructorReturn3$e.default)(this, (ToolbarTitle.__proto__ || (0, _getPrototypeOf2$e.default)(ToolbarTitle)).apply(this, arguments));
  }

  (0, _createClass3$f.default)(ToolbarTitle, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          text = _props.text,
          other = (0, _objectWithoutProperties3$c.default)(_props, ['style', 'text']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$d(this.props, this.context);

      return _react2$m.default.createElement(
        'span',
        (0, _extends3$c.default)({
          style: prepareStyles((0, _simpleAssign2$h.default)({}, styles.root, style))
        }, other),
        text
      );
    }
  }]);
  return ToolbarTitle;
}(_react$n.Component);

ToolbarTitle.muiName = 'ToolbarTitle';
ToolbarTitle.contextTypes = {
  muiTheme: _propTypes2$i.default.object.isRequired
};
ToolbarTitle.propTypes = {
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$i.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$i.default.object,
  /**
   * The text to be displayed.
   */
  text: _propTypes2$i.default.node
} ;
ToolbarTitle$1.default = ToolbarTitle;

Object.defineProperty(Toolbar$2, "__esModule", {
  value: true
});
Toolbar$2.default = Toolbar$2.ToolbarTitle = Toolbar$2.ToolbarSeparator = Toolbar$2.ToolbarGroup = Toolbar$2.Toolbar = undefined;

var _Toolbar2 = Toolbar$1;

var _Toolbar3 = _interopRequireDefault$z(_Toolbar2);

var _ToolbarGroup2 = ToolbarGroup$1;

var _ToolbarGroup3 = _interopRequireDefault$z(_ToolbarGroup2);

var _ToolbarSeparator2 = ToolbarSeparator$1;

var _ToolbarSeparator3 = _interopRequireDefault$z(_ToolbarSeparator2);

var _ToolbarTitle2 = ToolbarTitle$1;

var _ToolbarTitle3 = _interopRequireDefault$z(_ToolbarTitle2);

function _interopRequireDefault$z(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Toolbar$2.Toolbar = _Toolbar3.default;
Toolbar$2.ToolbarGroup = _ToolbarGroup3.default;
Toolbar$2.ToolbarSeparator = _ToolbarSeparator3.default;
Toolbar$2.ToolbarTitle = _ToolbarTitle3.default;
Toolbar$2.default = _Toolbar3.default;

var LOADING = 'LOADING';
var SUCCESS = 'SUCCESS';
var WARNING = 'WARNING';
var ERROR = 'ERROR';
var ACTION_MESSAGE = 'ACTION_MESSAGE';

var styles$a = {
    content: {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        fontSize: '15px'
    },
    icon: {
        color: '#ffffff',
        marginLeft: '15px'
    }
};

var FeedbackSnackbarBody = function (_PureComponent) {
    _default$16(FeedbackSnackbarBody, _PureComponent);

    function FeedbackSnackbarBody() {
        _default$17(this, FeedbackSnackbarBody);

        return _default$18(this, (FeedbackSnackbarBody.__proto__ || _Object$getPrototypeOf(FeedbackSnackbarBody)).apply(this, arguments));
    }

    _default$19(FeedbackSnackbarBody, [{
        key: 'render',
        value: function render() {
            var icon = void 0;
            switch (this.props.type) {
                case SUCCESS:
                    icon = react.createElement(
                        _default$_,
                        { className: 'material-icons', style: styles$a.icon },
                        'done'
                    );
                    break;
                case LOADING:
                    icon = react.createElement(_default$a, { style: styles$a.icon, color: '#ffffff', size: 28, thickness: 2 });
                    break;
                case ERROR:
                    icon = react.createElement(
                        _default$_,
                        { className: 'material-icons', style: styles$a.icon },
                        'error'
                    );
                    break;
                default:
                    icon = react.createElement(
                        _default$_,
                        { className: 'material-icons', style: styles$a.icon },
                        'warning'
                    );
                    break;
            }
            var snackBarContent = react.createElement(
                'div',
                { style: styles$a.content },
                react.createElement(
                    'div',
                    null,
                    this.props.message
                ),
                icon
            );
            return snackBarContent;
        }
    }]);

    return FeedbackSnackbarBody;
}(react.PureComponent);

FeedbackSnackbarBody.propTypes = {
    type: PropTypes$2.string,
    message: PropTypes$2.string
};
FeedbackSnackbarBody.defaultProps = {
    type: '',
    message: ''
};

var styles$9 = {
    success: {
        backgroundColor: '#8ac542'
    },
    warning: {
        backgroundColor: '#ffa726'
    },
    error: {
        backgroundColor: '#f44336'
    },
    loading: {
        backgroundColor: '#757575'
    }
};

var FeedbackSnackbar = function (_PureComponent) {
    _default$16(FeedbackSnackbar, _PureComponent);

    _default$19(FeedbackSnackbar, null, [{
        key: 'getStyle',
        value: function getStyle(type) {
            switch (type) {
                case SUCCESS:
                    return styles$9.success;
                case LOADING:
                    return styles$9.loading;
                case ERROR:
                    return styles$9.error;
                case WARNING:
                    return styles$9.warning;
                default:
                    return null;
            }
        }
    }]);

    function FeedbackSnackbar(props) {
        _default$17(this, FeedbackSnackbar);

        var _this = _default$18(this, (FeedbackSnackbar.__proto__ || _Object$getPrototypeOf(FeedbackSnackbar)).call(this, props));

        _this.handleRequestClose = function () {
            if (_this.props.conf.type !== LOADING) {
                _this.setState({
                    show: false
                });

                if (_this.props.onClose) {
                    _this.props.onClose();
                }
            }
        };

        _this.state = {
            show: props.show,
            conf: props.conf
        };
        return _this;
    }

    _default$19(FeedbackSnackbar, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _this2 = this;

            var newProps = _Object$assign({}, nextProps);

            if (typeof this.state.snackbarTimerId !== 'undefined') {
                clearTimeout(this.state.snackbarTimerId);
            }

            // Hack to hide previous snackbar before changing its style
            if (this.props.show && newProps.show) {
                var newShow = nextProps.show;
                var newConf = nextProps.conf;
                newProps.show = false;
                newProps.conf = this.props.conf;
                this.state.snackbarTimerId = setTimeout(function () {
                    _this2.setState({
                        show: newShow,
                        conf: newConf
                    });
                }, 500);
            }

            this.setState({
                show: newProps.show,
                conf: newProps.conf
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var snackBarContent = this.state.conf.type === ACTION_MESSAGE ? this.state.conf.message : react.createElement(FeedbackSnackbarBody, { type: this.state.conf.type, message: this.state.conf.message });

            return react.createElement(_default$5, {
                action: this.state.conf.action,
                onActionClick: this.state.conf.onActionClick,
                open: this.state.show,
                message: snackBarContent,
                onRequestClose: this.handleRequestClose,
                bodyStyle: FeedbackSnackbar.getStyle(this.state.conf.type)
            });
        }
    }]);

    return FeedbackSnackbar;
}(react.PureComponent);

FeedbackSnackbar.propTypes = {
    show: PropTypes$2.bool.isRequired,
    conf: PropTypes$2.shape({
        type: PropTypes$2.string,
        message: PropTypes$2.string,
        action: PropTypes$2.string,
        onActionClick: PropTypes$2.func
    }),
    onClose: PropTypes$2.func
};
FeedbackSnackbar.defaultProps = {
    conf: {
        type: '',
        message: '',
        action: '',
        onActionClick: null
    },
    onClose: null
};

({
    wrapperStyle: PropTypes$2.object,
    errorStyle: PropTypes$2.object,
    errorText: PropTypes$2.string,
    onChange: PropTypes$2.func.isRequired
});

var DatePicker = function (_React$Component) {
    _default$16(DatePicker, _React$Component);

    function DatePicker(props) {
        _default$17(this, DatePicker);

        var _this = _default$18(this, (DatePicker.__proto__ || _Object$getPrototypeOf(DatePicker)).call(this, props));

        _this.onDateSelect = _this.onDateSelect.bind(_this);
        _this.formatDate = _this.formatDate.bind(_this);
        _this.state = { value: _this.props.value };
        return _this;
    }

    _default$19(DatePicker, [{
        key: 'onDateSelect',
        value: function onDateSelect(event, date) {
            this.setState({ value: date });
            this.props.onChange({
                target: {
                    value: date
                }
            });
        }
    }, {
        key: 'formatDate',
        value: function formatDate(date) {
            var dd = date.getDate();
            var mm = date.getMonth() + 1;
            var yyyy = date.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }

            switch (this.dateFormat) {
                case 'dd-MM-yyyy':
                    return dd + '-' + mm + '-' + yyyy;
                case 'yyyy-MM-dd':
                    return yyyy + '-' + mm + '-' + dd;
                default:
                    return dd + '-' + mm + '-' + yyyy;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                allowFuture = _props.allowFuture;
                _props.dateFormat;
                var other = _default$1a(_props, ['allowFuture', 'dateFormat']);

            return react.createElement(
                'div',
                null,
                react.createElement(_default$9, _default$15({}, other, {
                    value: this.state.value,
                    floatingLabelText: this.props.floatingLabelText,
                    maxDate: allowFuture ? undefined : new Date(),
                    errorText: this.props.errorText,
                    formatDate: this.formatDate,
                    onChange: this.onDateSelect
                }))
            );
        }
    }]);

    return DatePicker;
}(react.Component);

DatePicker.propTypes = {
    floatingLabelText: PropTypes$2.string.isRequired,
    onChange: PropTypes$2.func.isRequired,
    errorText: PropTypes$2.string,
    dateFormat: PropTypes$2.oneOf(['dd-MM-yyyy', 'yyyy-MM-dd']),
    allowFuture: PropTypes$2.bool,
    value: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.object])
};

DatePicker.defaultProps = {
    errorText: '',
    value: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.object]),
    dateFormat: 'dd-MM-yyyy',
    allowFuture: false
};

({
    value: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number, PropTypes$2.bool]),
    menuItems: PropTypes$2.oneOfType([PropTypes$2.array, PropTypes$2.object]),
    onFocus: PropTypes$2.func,
    disabled: PropTypes$2.bool,
    fullWidth: PropTypes$2.bool,
    onBlur: PropTypes$2.func,
    hintText: PropTypes$2.string,
    onChange: PropTypes$2.func.isRequired,
    noOptionsLabel: PropTypes$2.string,
    includeEmpty: PropTypes$2.bool,
    emptyLabel: PropTypes$2.string
});

({
    value: null,
    menuItems: [],
    disabled: false,
    fullWidth: false,
    hintText: 'Select item',
    onFocus: PropTypes$2.func,
    onBlur: PropTypes$2.func,
    noOptionsLabel: '-',
    includeEmpty: false,
    emptyLabel: ''
});

var MultiToggle = function (_Component) {
    _default$16(MultiToggle, _Component);

    function MultiToggle() {
        var _ref;

        var _temp, _this, _ret;

        _default$17(this, MultiToggle);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _default$18(this, (_ref = MultiToggle.__proto__ || _Object$getPrototypeOf(MultiToggle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            values: _this.props.items.reduce(function (prev, curr) {
                if (curr.value) {
                    prev.push(curr.name);
                }
                return prev;
            }, [])
        }, _temp), _default$18(_this, _ret);
    }

    _default$19(MultiToggle, [{
        key: 'handleToggle',
        value: function handleToggle(value, event, checked) {
            var _this2 = this;

            this.setState(function (oldState) {
                if (checked) {
                    if (oldState.values.indexOf(value) === -1) {
                        oldState.values.push(value);
                    }
                } else if (oldState.values.indexOf(value) !== -1) {
                    oldState.values.splice(oldState.values.indexOf(value), 1);
                }
                return oldState;
            }, function () {
                _this2.props.onChange({ target: { value: _this2.state.values } });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var style = _Object$assign({}, this.context.muiTheme.forms, this.props.style);

            return react.createElement(
                'div',
                null,
                react.createElement(
                    'div',
                    { style: { marginTop: 16, marginBottom: 8 } },
                    this.props.label
                ),
                this.props.items.map(function (item) {
                    var togglor = _this3.handleToggle.bind(_this3, item.name);

                    return react.createElement(_default$b, {
                        key: item.name,
                        name: item.name,
                        value: 'true',
                        defaultChecked: item.value === true,
                        label: item.text,
                        onCheck: togglor,
                        style: style,
                        labelPosition: 'right'
                    });
                })
            );
        }
    }]);

    return MultiToggle;
}(react.Component);

MultiToggle.propTypes = {
    label: PropTypes$2.string.isRequired,
    onChange: PropTypes$2.func.isRequired,
    items: PropTypes$2.arrayOf(PropTypes$2.shape({
        name: PropTypes$2.string.isRequired,
        value: PropTypes$2.bool,
        text: PropTypes$2.string.isRequired
    })),
    style: PropTypes$2.object
};

MultiToggle.contextTypes = {
    muiTheme: PropTypes$2.object
};

var TextField$3 = function (_Component) {
    _default$16(TextField, _Component);

    function TextField(props) {
        _default$17(this, TextField);

        var _this = _default$18(this, (TextField.__proto__ || _Object$getPrototypeOf(TextField)).call(this, props));

        _this.change = function (e, value) {
            _this.setState({ value: value });
        };

        _this.state = {
            value: _this.props.value
        };
        return _this;
    }

    _default$19(TextField, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            this.setState({ value: props.value });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props;
                _props.changeEvent;
                var other = _default$1a(_props, ['changeEvent']);

            var errorStyle = {
                lineHeight: this.props.multiLine ? '48px' : '12px',
                marginTop: this.props.multiLine ? -16 : 0
            };

            var inputStyle = other.type === 'search' ? { WebkitAppearance: 'textfield' } : {};

            return react.createElement(_default$f, _default$15({
                errorStyle: errorStyle
            }, other, {
                value: this.state.value,
                onChange: this.change,
                inputStyle: inputStyle
            }));
        }
    }]);

    return TextField;
}(react.Component);

TextField$3.propTypes = {
    changeEvent: PropTypes$2.any,
    value: PropTypes$2.string,
    multiLine: PropTypes$2.bool
};

TextField$3.defaultProps = {
    changeEvent: 'onBlur',
    value: '',
    multiLine: false
};

function Heading(props) {
    var level = props.level,
        text = props.text,
        style = props.style,
        children = props.children,
        other = _default$1a(props, ['level', 'text', 'style', 'children']);

    var tag = { type: level <= 6 ? 'h' + level : 'span' };
    var headingStyle = _default$15({
        fontSize: 24,
        fontWeight: 300,
        color: 'rgba(0, 0, 0, 0.87)',
        padding: '16px 0 5px 0',
        margin: 0
    }, style);

    return react.createElement(
        tag.type,
        _default$15({}, other, { style: headingStyle }),
        children || text
    );
}

Heading.propTypes = {
    level: PropTypes$2.oneOf([1, 2, 3, 4, 5, 6]),
    text: PropTypes$2.string
};

Heading.defaultProps = {
    level: 1
};

({
    children: PropTypes$2.oneOfType([PropTypes$2.array, PropTypes$2.object]),
    mainStyle: PropTypes$2.object
});

({
    children: PropTypes$2.oneOfType([PropTypes$2.array.isRequired, PropTypes$2.object.isRequired])
});

({
    children: PropTypes$2.oneOfType([PropTypes$2.array, PropTypes$2.object]),
    childWrapStyle: PropTypes$2.object,
    mainStyle: PropTypes$2.object,
    sizeRatio: PropTypes$2.array
});

function ListSelect(props) {
    function listItemDoubleClicked(event) {
        var clickedItemValue = event.target.value;

        if (props.onItemDoubleClick) {
            props.onItemDoubleClick(clickedItemValue);
        }
    }

    var options = props.source.map(function (item) {
        return react.createElement(
            'option',
            {
                key: item.value,
                style: { padding: '.25rem' },
                onDoubleClick: listItemDoubleClicked,
                value: item.value
            },
            item.label
        );
    });

    return react.createElement(
        'div',
        { className: 'list-select' },
        react.createElement(
            'select',
            { size: props.size || 15, style: _Object$assign({ overflowX: 'auto' }, props.listStyle) },
            options
        )
    );
}
ListSelect.propTypes = {
    source: PropTypes$2.arrayOf(PropTypes$2.shape({
        label: PropTypes$2.string,
        value: PropTypes$2.string
    })).isRequired,
    onItemDoubleClick: PropTypes$2.func.isRequired,
    listStyle: PropTypes$2.object,
    size: PropTypes$2.number
};

var styles$8 = {
    list: {
        width: '100%',
        outline: 'none',
        border: 'none',
        padding: '0rem 1rem',
        overflowX: 'auto'
    },
    textField: {
        marginLeft: '1rem',
        marginBottom: '11px'
    }
};

var ListSelectWithLocalSearch = function (_Component) {
    _default$16(ListSelectWithLocalSearch, _Component);

    function ListSelectWithLocalSearch(props) {
        _default$17(this, ListSelectWithLocalSearch);

        var _this = _default$18(this, (ListSelectWithLocalSearch.__proto__ || _Object$getPrototypeOf(ListSelectWithLocalSearch)).call(this, props));

        _this.filterList = function (event) {
            _this.setState({
                textSearch: event.target.value
            });
        };

        _this.state = {
            textSearch: ''
        };
        return _this;
    }

    _default$19(ListSelectWithLocalSearch, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return react.createElement(
                'div',
                null,
                react.createElement(_default$g, {
                    style: styles$8.textField,
                    hintText: this.props.hintLabel,
                    onChange: this.filterList,
                    value: this.state.textSearch
                }),
                react.createElement(ListSelect, _default$15({}, this.props, {
                    listStyle: styles$8.list,
                    source: this.props.source.filter(function (option) {
                        return option.label.toLowerCase().indexOf(_this2.state.textSearch.toLowerCase()) !== -1;
                    }),
                    size: 12
                }))
            );
        }
    }]);

    return ListSelectWithLocalSearch;
}(react.Component);

ListSelectWithLocalSearch.propTypes = {
    source: PropTypes$2.array.isRequired,
    hintLabel: PropTypes$2.string
};

ListSelectWithLocalSearch.defaultProps = {
    source: [],
    hintLabel: ''
};

var ListSelectAsync = function (_Component) {
    _default$16(ListSelectAsync, _Component);

    function ListSelectAsync() {
        var _ref;

        var _temp, _this, _ret;

        _default$17(this, ListSelectAsync);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _default$18(this, (_ref = ListSelectAsync.__proto__ || _Object$getPrototypeOf(ListSelectAsync)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            listSource: []
        }, _temp), _default$18(_this, _ret);
    }

    _default$19(ListSelectAsync, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            if (!this.props.source) {
                return;
            }

            this.subscription = this.props.source.subscribe(function (listValues) {
                return _this2.setState({ listSource: listValues });
            }, function (error) {
                return log.error(error);
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.subscription && this.subscription.unsubscribe();
        }
    }, {
        key: 'render',
        value: function render() {
            return react.createElement(ListSelect, _default$15({}, this.props, {
                onItemDoubleClick: this.props.onItemDoubleClick,
                source: this.state.listSource,
                listStyle: this.props.listStyle
            }));
        }
    }]);

    return ListSelectAsync;
}(react.Component);

ListSelectAsync.propTypes = {
    source: PropTypes$2.instanceOf(Observable),
    onItemDoubleClick: PropTypes$2.func.isRequired,
    listStyle: PropTypes$2.object
};

var loadingStatusMask = {
    left: '45%',
    position: 'fixed',
    top: '45%'
};

function LoadingMask(_ref) {
    var _ref$style = _ref.style,
        style = _ref$style === undefined ? {} : _ref$style,
        _ref$large = _ref.large,
        large = _ref$large === undefined ? false : _ref$large,
        _ref$small = _ref.small,
        small = _ref$small === undefined ? false : _ref$small;

    return react.createElement(
        'div',
        { style: _Object$assign({}, loadingStatusMask, style) },
        react.createElement(CircularProgress$1, { large: large, small: small })
    );
}

LoadingMask.propTypes = {
    style: PropTypes$2.object,
    large: PropTypes$2.bool,
    small: PropTypes$2.bool
};

({
    style: PropTypes$2.object,
    message: PropTypes$2.string
});

var noop$2 = function noop() {};

var Pagination = function (_Component) {
    _default$16(Pagination, _Component);

    function Pagination(props) {
        _default$17(this, Pagination);

        return _default$18(this, (Pagination.__proto__ || _Object$getPrototypeOf(Pagination)).call(this, props));
    }

    _default$19(Pagination, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                hasPreviousPage = _props.hasPreviousPage,
                hasNextPage = _props.hasNextPage,
                onPreviousPageClick = _props.onPreviousPageClick,
                onNextPageClick = _props.onNextPageClick,
                currentlyShown = _props.currentlyShown,
                total = _props.total;

            var pagerButtonClasses = ['material-icons', 'waves-effect'];

            var previousPageClasses = classes(pagerButtonClasses, { 'data-table-pager--previous-page__disabled': !hasPreviousPage() });
            var nextPageClasses = classes(pagerButtonClasses, { 'data-table-pager--next-page__disabled': !hasNextPage() });

            return react.createElement(
                'div',
                { className: 'data-table-pager' },
                react.createElement(
                    'ul',
                    { className: 'data-table-pager--buttons' },
                    total ? react.createElement(
                        'li',
                        { className: 'data-table-pager--page-info' },
                        react.createElement(
                            'span',
                            null,
                            currentlyShown,
                            ' / ',
                            total
                        )
                    ) : '',
                    react.createElement(
                        'li',
                        { className: 'data-table-pager--previous-page' },
                        react.createElement(
                            'i',
                            {
                                className: previousPageClasses,
                                onClick: hasPreviousPage() ? onPreviousPageClick : noop$2
                            },
                            'navigate_before'
                        )
                    ),
                    react.createElement(
                        'li',
                        { className: 'data-table-pager--next-page' },
                        react.createElement(
                            'i',
                            {
                                className: nextPageClasses,
                                onClick: hasNextPage() ? onNextPageClick : noop$2
                            },
                            'navigate_next'
                        )
                    )
                )
            );
        }
    }]);

    return Pagination;
}(react.Component);

Pagination.propTypes = {
    hasPreviousPage: PropTypes$2.func,
    hasNextPage: PropTypes$2.func,
    onPreviousPageClick: PropTypes$2.func,
    onNextPageClick: PropTypes$2.func,
    total: PropTypes$2.number,
    currentlyShown: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number])
};

Pagination.defaultProps = {
    hasPreviousPage: noop$2,
    hasNextPage: noop$2,
    onPreviousPageClick: noop$2,
    onNextPageClick: noop$2,
    total: 0,
    currentlyShown: 0
};

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */

function identity$3(value) {
  return value;
}

var identity_1 = identity$3;

/** Detect free variable `global` from Node.js. */

var freeGlobal$1 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

var _freeGlobal = freeGlobal$1;

var freeGlobal = _freeGlobal;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root$c = freeGlobal || freeSelf || Function('return this')();

var _root = root$c;

var root$b = _root;

/** Built-in value references. */
var Symbol$7 = root$b.Symbol;

var _Symbol = Symbol$7;

var Symbol$6 = _Symbol;

/** Used for built-in method references. */
var objectProto$h = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$e = objectProto$h.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$h.toString;

/** Built-in value references. */
var symToStringTag$1 = Symbol$6 ? Symbol$6.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$e.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

var _getRawTag = getRawTag$1;

/** Used for built-in method references. */

var objectProto$g = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto$g.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}

var _objectToString = objectToString$1;

var Symbol$5 = _Symbol,
    getRawTag = _getRawTag,
    objectToString = _objectToString;

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol$5 ? Symbol$5.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag$8(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

var _baseGetTag = baseGetTag$8;

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */

function isObject$8(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var isObject_1 = isObject$8;

var baseGetTag$7 = _baseGetTag,
    isObject$7 = isObject_1;

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag$2 = '[object Function]',
    genTag$1 = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction$2(value) {
  if (!isObject$7(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag$7(value);
  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
}

var isFunction_1 = isFunction$2;

var root$a = _root;

/** Used to detect overreaching core-js shims. */
var coreJsData$1 = root$a['__core-js_shared__'];

var _coreJsData = coreJsData$1;

var coreJsData = _coreJsData;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked$1(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

var _isMasked = isMasked$1;

/** Used for built-in method references. */

var funcProto$2 = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString$2 = funcProto$2.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$2.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

var _toSource = toSource$2;

var isFunction$1 = isFunction_1,
    isMasked = _isMasked,
    isObject$6 = isObject_1,
    toSource$1 = _toSource;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto$1 = Function.prototype,
    objectProto$f = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString$1 = funcProto$1.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$d = objectProto$f.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString$1.call(hasOwnProperty$d).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative$1(value) {
  if (!isObject$6(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource$1(value));
}

var _baseIsNative = baseIsNative$1;

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */

function getValue$1(object, key) {
  return object == null ? undefined : object[key];
}

var _getValue = getValue$1;

var baseIsNative = _baseIsNative,
    getValue = _getValue;

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative$7(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

var _getNative = getNative$7;

var getNative$6 = _getNative,
    root$9 = _root;

/* Built-in method references that are verified to be native. */
var WeakMap$2 = getNative$6(root$9, 'WeakMap');

var _WeakMap = WeakMap$2;

var WeakMap$1 = _WeakMap;

/** Used to store function metadata. */
var metaMap$2 = WeakMap$1 && new WeakMap$1;

var _metaMap = metaMap$2;

var identity$2 = identity_1,
    metaMap$1 = _metaMap;

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData$2 = !metaMap$1 ? identity$2 : function(func, data) {
  metaMap$1.set(func, data);
  return func;
};

var _baseSetData = baseSetData$2;

var isObject$5 = isObject_1;

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate$4 = (function() {
  function object() {}
  return function(proto) {
    if (!isObject$5(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

var _baseCreate = baseCreate$4;

var baseCreate$3 = _baseCreate,
    isObject$4 = isObject_1;

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor$4(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate$3(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return isObject$4(result) ? result : thisBinding;
  };
}

var _createCtor = createCtor$4;

var createCtor$3 = _createCtor,
    root$8 = _root;

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$6 = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind$1(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG$6,
      Ctor = createCtor$3(func);

  function wrapper() {
    var fn = (this && this !== root$8 && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

var _createBind = createBind$1;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */

function apply$3(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

var _apply = apply$3;

/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax$3 = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs$2(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax$3(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

var _composeArgs = composeArgs$2;

/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax$2 = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight$2(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax$2(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

var _composeArgsRight = composeArgsRight$2;

/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */

function countHolders$1(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

var _countHolders = countHolders$1;

/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */

function baseLodash$3() {
  // No operation performed.
}

var _baseLodash = baseLodash$3;

var baseCreate$2 = _baseCreate,
    baseLodash$2 = _baseLodash;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper$3(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper$3.prototype = baseCreate$2(baseLodash$2.prototype);
LazyWrapper$3.prototype.constructor = LazyWrapper$3;

var _LazyWrapper = LazyWrapper$3;

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */

function noop$1() {
  // No operation performed.
}

var noop_1 = noop$1;

var metaMap = _metaMap,
    noop = noop_1;

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData$2 = !metaMap ? noop : function(func) {
  return metaMap.get(func);
};

var _getData = getData$2;

/** Used to lookup unminified function names. */

var realNames$1 = {};

var _realNames = realNames$1;

var realNames = _realNames;

/** Used for built-in method references. */
var objectProto$e = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$c = objectProto$e.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName$1(func) {
  var result = (func.name + ''),
      array = realNames[result],
      length = hasOwnProperty$c.call(realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

var _getFuncName = getFuncName$1;

var baseCreate$1 = _baseCreate,
    baseLodash$1 = _baseLodash;

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper$2(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper$2.prototype = baseCreate$1(baseLodash$1.prototype);
LodashWrapper$2.prototype.constructor = LodashWrapper$2;

var _LodashWrapper = LodashWrapper$2;

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */

var isArray$d = Array.isArray;

var isArray_1 = isArray$d;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

function isObjectLike$c(value) {
  return value != null && typeof value == 'object';
}

var isObjectLike_1 = isObjectLike$c;

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */

function copyArray$4(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

var _copyArray = copyArray$4;

var LazyWrapper$2 = _LazyWrapper,
    LodashWrapper$1 = _LodashWrapper,
    copyArray$3 = _copyArray;

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone$1(wrapper) {
  if (wrapper instanceof LazyWrapper$2) {
    return wrapper.clone();
  }
  var result = new LodashWrapper$1(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = copyArray$3(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

var _wrapperClone = wrapperClone$1;

var LazyWrapper$1 = _LazyWrapper,
    LodashWrapper = _LodashWrapper,
    baseLodash = _baseLodash,
    isArray$c = isArray_1,
    isObjectLike$b = isObjectLike_1,
    wrapperClone = _wrapperClone;

/** Used for built-in method references. */
var objectProto$d = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$b = objectProto$d.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash$1(value) {
  if (isObjectLike$b(value) && !isArray$c(value) && !(value instanceof LazyWrapper$1)) {
    if (value instanceof LodashWrapper) {
      return value;
    }
    if (hasOwnProperty$b.call(value, '__wrapped__')) {
      return wrapperClone(value);
    }
  }
  return new LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash$1.prototype = baseLodash.prototype;
lodash$1.prototype.constructor = lodash$1;

var wrapperLodash = lodash$1;

var LazyWrapper = _LazyWrapper,
    getData$1 = _getData,
    getFuncName = _getFuncName,
    lodash = wrapperLodash;

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable$1(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData$1(other);
  return !!data && func === data[0];
}

var _isLaziable = isLaziable$1;

/** Used to detect hot functions by number of calls within a span of milliseconds. */

var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut$2(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

var _shortOut = shortOut$2;

var baseSetData$1 = _baseSetData,
    shortOut$1 = _shortOut;

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData$2 = shortOut$1(baseSetData$1);

var _setData = setData$2;

/** Used to match wrap detail comments. */

var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails$1(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

var _getWrapDetails = getWrapDetails$1;

/** Used to match wrap detail comments. */

var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails$1(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

var _insertWrapDetails = insertWrapDetails$1;

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */

function constant$1(value) {
  return function() {
    return value;
  };
}

var constant_1 = constant$1;

var getNative$5 = _getNative;

var defineProperty$2 = (function() {
  try {
    var func = getNative$5(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

var _defineProperty = defineProperty$2;

var constant = constant_1,
    defineProperty$1 = _defineProperty,
    identity$1 = identity_1;

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString$1 = !defineProperty$1 ? identity$1 : function(func, string) {
  return defineProperty$1(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

var _baseSetToString = baseSetToString$1;

var baseSetToString = _baseSetToString,
    shortOut = _shortOut;

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString$2 = shortOut(baseSetToString);

var _setToString = setToString$2;

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */

function arrayEach$2(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

var _arrayEach = arrayEach$2;

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

function baseFindIndex$1(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

var _baseFindIndex = baseFindIndex$1;

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */

function baseIsNaN$1(value) {
  return value !== value;
}

var _baseIsNaN = baseIsNaN$1;

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

function strictIndexOf$1(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

var _strictIndexOf = strictIndexOf$1;

var baseFindIndex = _baseFindIndex,
    baseIsNaN = _baseIsNaN,
    strictIndexOf = _strictIndexOf;

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf$1(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

var _baseIndexOf = baseIndexOf$1;

var baseIndexOf = _baseIndexOf;

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes$1(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

var _arrayIncludes = arrayIncludes$1;

var arrayEach$1 = _arrayEach,
    arrayIncludes = _arrayIncludes;

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$5 = 1,
    WRAP_BIND_KEY_FLAG$4 = 2,
    WRAP_CURRY_FLAG$5 = 8,
    WRAP_CURRY_RIGHT_FLAG$2 = 16,
    WRAP_PARTIAL_FLAG$2 = 32,
    WRAP_PARTIAL_RIGHT_FLAG$2 = 64,
    WRAP_ARY_FLAG$3 = 128,
    WRAP_REARG_FLAG$2 = 256,
    WRAP_FLIP_FLAG$1 = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG$3],
  ['bind', WRAP_BIND_FLAG$5],
  ['bindKey', WRAP_BIND_KEY_FLAG$4],
  ['curry', WRAP_CURRY_FLAG$5],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG$2],
  ['flip', WRAP_FLIP_FLAG$1],
  ['partial', WRAP_PARTIAL_FLAG$2],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG$2],
  ['rearg', WRAP_REARG_FLAG$2]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails$1(details, bitmask) {
  arrayEach$1(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

var _updateWrapDetails = updateWrapDetails$1;

var getWrapDetails = _getWrapDetails,
    insertWrapDetails = _insertWrapDetails,
    setToString$1 = _setToString,
    updateWrapDetails = _updateWrapDetails;

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString$2(wrapper, reference, bitmask) {
  var source = (reference + '');
  return setToString$1(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
}

var _setWrapToString = setWrapToString$2;

var isLaziable = _isLaziable,
    setData$1 = _setData,
    setWrapToString$1 = _setWrapToString;

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$4 = 1,
    WRAP_BIND_KEY_FLAG$3 = 2,
    WRAP_CURRY_BOUND_FLAG$1 = 4,
    WRAP_CURRY_FLAG$4 = 8,
    WRAP_PARTIAL_FLAG$1 = 32,
    WRAP_PARTIAL_RIGHT_FLAG$1 = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry$2(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG$4,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG$1 : WRAP_PARTIAL_RIGHT_FLAG$1);
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG$1 : WRAP_PARTIAL_FLAG$1);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG$1)) {
    bitmask &= ~(WRAP_BIND_FLAG$4 | WRAP_BIND_KEY_FLAG$3);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (isLaziable(func)) {
    setData$1(result, newData);
  }
  result.placeholder = placeholder;
  return setWrapToString$1(result, func, bitmask);
}

var _createRecurry = createRecurry$2;

/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */

function getHolder$2(func) {
  var object = func;
  return object.placeholder;
}

var _getHolder = getHolder$2;

/** Used as references for various `Number` constants. */

var MAX_SAFE_INTEGER$1 = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex$3(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

var _isIndex = isIndex$3;

var copyArray$2 = _copyArray,
    isIndex$2 = _isIndex;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin$1 = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder$1(array, indexes) {
  var arrLength = array.length,
      length = nativeMin$1(indexes.length, arrLength),
      oldArray = copyArray$2(array);

  while (length--) {
    var index = indexes[length];
    array[length] = isIndex$2(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

var _reorder = reorder$1;

/** Used as the internal argument placeholder. */

var PLACEHOLDER$1 = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders$3(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER$1) {
      array[index] = PLACEHOLDER$1;
      result[resIndex++] = index;
    }
  }
  return result;
}

var _replaceHolders = replaceHolders$3;

var composeArgs$1 = _composeArgs,
    composeArgsRight$1 = _composeArgsRight,
    countHolders = _countHolders,
    createCtor$2 = _createCtor,
    createRecurry$1 = _createRecurry,
    getHolder$1 = _getHolder,
    reorder = _reorder,
    replaceHolders$2 = _replaceHolders,
    root$7 = _root;

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$3 = 1,
    WRAP_BIND_KEY_FLAG$2 = 2,
    WRAP_CURRY_FLAG$3 = 8,
    WRAP_CURRY_RIGHT_FLAG$1 = 16,
    WRAP_ARY_FLAG$2 = 128,
    WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid$2(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG$2,
      isBind = bitmask & WRAP_BIND_FLAG$3,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG$2,
      isCurried = bitmask & (WRAP_CURRY_FLAG$3 | WRAP_CURRY_RIGHT_FLAG$1),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : createCtor$2(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder$1(wrapper),
          holdersCount = countHolders(args, placeholder);
    }
    if (partials) {
      args = composeArgs$1(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight$1(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders$2(args, placeholder);
      return createRecurry$1(
        func, bitmask, createHybrid$2, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = reorder(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== root$7 && this instanceof wrapper) {
      fn = Ctor || createCtor$2(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

var _createHybrid = createHybrid$2;

var apply$2 = _apply,
    createCtor$1 = _createCtor,
    createHybrid$1 = _createHybrid,
    createRecurry = _createRecurry,
    getHolder = _getHolder,
    replaceHolders$1 = _replaceHolders,
    root$6 = _root;

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry$1(func, bitmask, arity) {
  var Ctor = createCtor$1(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = getHolder(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : replaceHolders$1(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return createRecurry(
        func, bitmask, createHybrid$1, wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== root$6 && this instanceof wrapper) ? Ctor : func;
    return apply$2(fn, this, args);
  }
  return wrapper;
}

var _createCurry = createCurry$1;

var apply$1 = _apply,
    createCtor = _createCtor,
    root$5 = _root;

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$2 = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial$1(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG$2,
      Ctor = createCtor(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== root$5 && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply$1(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

var _createPartial = createPartial$1;

var composeArgs = _composeArgs,
    composeArgsRight = _composeArgsRight,
    replaceHolders = _replaceHolders;

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$1 = 1,
    WRAP_BIND_KEY_FLAG$1 = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG$2 = 8,
    WRAP_ARY_FLAG$1 = 128,
    WRAP_REARG_FLAG$1 = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData$1(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG$1 | WRAP_BIND_KEY_FLAG$1 | WRAP_ARY_FLAG$1);

  var isCombo =
    ((srcBitmask == WRAP_ARY_FLAG$1) && (bitmask == WRAP_CURRY_FLAG$2)) ||
    ((srcBitmask == WRAP_ARY_FLAG$1) && (bitmask == WRAP_REARG_FLAG$1) && (data[7].length <= source[8])) ||
    ((srcBitmask == (WRAP_ARY_FLAG$1 | WRAP_REARG_FLAG$1)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG$2));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & WRAP_BIND_FLAG$1) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & WRAP_BIND_FLAG$1 ? 0 : WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & WRAP_ARY_FLAG$1) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

var _mergeData = mergeData$1;

var baseGetTag$6 = _baseGetTag,
    isObjectLike$a = isObjectLike_1;

/** `Object#toString` result references. */
var symbolTag$3 = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol$5(value) {
  return typeof value == 'symbol' ||
    (isObjectLike$a(value) && baseGetTag$6(value) == symbolTag$3);
}

var isSymbol_1 = isSymbol$5;

var isObject$3 = isObject_1,
    isSymbol$4 = isSymbol_1;

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber$1(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol$4(value)) {
    return NAN;
  }
  if (isObject$3(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject$3(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

var toNumber_1 = toNumber$1;

var toNumber = toNumber_1;

/** Used as references for various `Number` constants. */
var INFINITY$2 = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite$1(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY$2 || value === -INFINITY$2) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

var toFinite_1 = toFinite$1;

var toFinite = toFinite_1;

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger$1(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

var toInteger_1 = toInteger$1;

var baseSetData = _baseSetData,
    createBind = _createBind,
    createCurry = _createCurry,
    createHybrid = _createHybrid,
    createPartial = _createPartial,
    getData = _getData,
    mergeData = _mergeData,
    setData = _setData,
    setWrapToString = _setWrapToString,
    toInteger = toInteger_1;

/** Error message constants. */
var FUNC_ERROR_TEXT$1 = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG$1 = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$1 = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap$3(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : nativeMax$1(toInteger(ary), 0);
  arity = arity === undefined ? arity : toInteger(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : getData(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    mergeData(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : nativeMax$1(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG$1 | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG$1 | WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = createBind(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG$1 || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = createCurry(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = createPartial(func, bitmask, thisArg, partials);
  } else {
    result = createHybrid.apply(undefined, newData);
  }
  var setter = data ? baseSetData : setData;
  return setWrapToString(setter(result, newData), func, bitmask);
}

var _createWrap = createWrap$3;

var createWrap$2 = _createWrap;

/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return createWrap$2(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

var ary_1 = ary;

var defineProperty = _defineProperty;

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue$2(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

var _baseAssignValue = baseAssignValue$2;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */

function eq$3(value, other) {
  return value === other || (value !== value && other !== other);
}

var eq_1 = eq$3;

var baseAssignValue$1 = _baseAssignValue,
    eq$2 = eq_1;

/** Used for built-in method references. */
var objectProto$c = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$a = objectProto$c.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue$2(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty$a.call(object, key) && eq$2(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue$1(object, key, value);
  }
}

var _assignValue = assignValue$2;

var assignValue$1 = _assignValue,
    baseAssignValue = _baseAssignValue;

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject$4(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue$1(object, key, newValue);
    }
  }
  return object;
}

var _copyObject = copyObject$4;

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */

function baseTimes$1(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

var _baseTimes = baseTimes$1;

var baseGetTag$5 = _baseGetTag,
    isObjectLike$9 = isObjectLike_1;

/** `Object#toString` result references. */
var argsTag$3 = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments$1(value) {
  return isObjectLike$9(value) && baseGetTag$5(value) == argsTag$3;
}

var _baseIsArguments = baseIsArguments$1;

var baseIsArguments = _baseIsArguments,
    isObjectLike$8 = isObjectLike_1;

/** Used for built-in method references. */
var objectProto$b = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$9 = objectProto$b.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable$1 = objectProto$b.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments$3 = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike$8(value) && hasOwnProperty$9.call(value, 'callee') &&
    !propertyIsEnumerable$1.call(value, 'callee');
};

var isArguments_1 = isArguments$3;

var isBuffer$3 = {exports: {}};

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */

function stubFalse() {
  return false;
}

var stubFalse_1 = stubFalse;

(function (module, exports) {
var root = _root,
    stubFalse = stubFalse_1;

/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;
}(isBuffer$3, isBuffer$3.exports));

/** Used as references for various `Number` constants. */

var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength$3(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

var isLength_1 = isLength$3;

var baseGetTag$4 = _baseGetTag,
    isLength$2 = isLength_1,
    isObjectLike$7 = isObjectLike_1;

/** `Object#toString` result references. */
var argsTag$2 = '[object Arguments]',
    arrayTag$2 = '[object Array]',
    boolTag$3 = '[object Boolean]',
    dateTag$3 = '[object Date]',
    errorTag$3 = '[object Error]',
    funcTag$1 = '[object Function]',
    mapTag$5 = '[object Map]',
    numberTag$3 = '[object Number]',
    objectTag$4 = '[object Object]',
    regexpTag$3 = '[object RegExp]',
    setTag$5 = '[object Set]',
    stringTag$4 = '[object String]',
    weakMapTag$3 = '[object WeakMap]';

var arrayBufferTag$3 = '[object ArrayBuffer]',
    dataViewTag$4 = '[object DataView]',
    float32Tag$2 = '[object Float32Array]',
    float64Tag$2 = '[object Float64Array]',
    int8Tag$2 = '[object Int8Array]',
    int16Tag$2 = '[object Int16Array]',
    int32Tag$2 = '[object Int32Array]',
    uint8Tag$2 = '[object Uint8Array]',
    uint8ClampedTag$2 = '[object Uint8ClampedArray]',
    uint16Tag$2 = '[object Uint16Array]',
    uint32Tag$2 = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] =
typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] =
typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] =
typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] =
typedArrayTags[uint32Tag$2] = true;
typedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] =
typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] =
typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] =
typedArrayTags[errorTag$3] = typedArrayTags[funcTag$1] =
typedArrayTags[mapTag$5] = typedArrayTags[numberTag$3] =
typedArrayTags[objectTag$4] = typedArrayTags[regexpTag$3] =
typedArrayTags[setTag$5] = typedArrayTags[stringTag$4] =
typedArrayTags[weakMapTag$3] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray$1(value) {
  return isObjectLike$7(value) &&
    isLength$2(value.length) && !!typedArrayTags[baseGetTag$4(value)];
}

var _baseIsTypedArray = baseIsTypedArray$1;

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */

function baseUnary$3(func) {
  return function(value) {
    return func(value);
  };
}

var _baseUnary = baseUnary$3;

var _nodeUtil = {exports: {}};

(function (module, exports) {
var freeGlobal = _freeGlobal;

/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;
}(_nodeUtil, _nodeUtil.exports));

var baseIsTypedArray = _baseIsTypedArray,
    baseUnary$2 = _baseUnary,
    nodeUtil$2 = _nodeUtil.exports;

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil$2 && nodeUtil$2.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray$2 = nodeIsTypedArray ? baseUnary$2(nodeIsTypedArray) : baseIsTypedArray;

var isTypedArray_1 = isTypedArray$2;

var baseTimes = _baseTimes,
    isArguments$2 = isArguments_1,
    isArray$b = isArray_1,
    isBuffer$2 = isBuffer$3.exports,
    isIndex$1 = _isIndex,
    isTypedArray$1 = isTypedArray_1;

/** Used for built-in method references. */
var objectProto$a = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$8 = objectProto$a.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys$2(value, inherited) {
  var isArr = isArray$b(value),
      isArg = !isArr && isArguments$2(value),
      isBuff = !isArr && !isArg && isBuffer$2(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray$1(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$8.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex$1(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

var _arrayLikeKeys = arrayLikeKeys$2;

/** Used for built-in method references. */

var objectProto$9 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype$3(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$9;

  return value === proto;
}

var _isPrototype = isPrototype$3;

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */

function overArg$2(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

var _overArg = overArg$2;

var overArg$1 = _overArg;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys$1 = overArg$1(Object.keys, Object);

var _nativeKeys = nativeKeys$1;

var isPrototype$2 = _isPrototype,
    nativeKeys = _nativeKeys;

/** Used for built-in method references. */
var objectProto$8 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$7 = objectProto$8.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys$1(object) {
  if (!isPrototype$2(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$7.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

var _baseKeys = baseKeys$1;

var isFunction = isFunction_1,
    isLength$1 = isLength_1;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike$2(value) {
  return value != null && isLength$1(value.length) && !isFunction(value);
}

var isArrayLike_1 = isArrayLike$2;

var arrayLikeKeys$1 = _arrayLikeKeys,
    baseKeys = _baseKeys,
    isArrayLike$1 = isArrayLike_1;

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys$4(object) {
  return isArrayLike$1(object) ? arrayLikeKeys$1(object) : baseKeys(object);
}

var keys_1 = keys$4;

var copyObject$3 = _copyObject,
    keys$3 = keys_1;

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign$1(object, source) {
  return object && copyObject$3(source, keys$3(source), object);
}

var _baseAssign = baseAssign$1;

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */

function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}

var _listCacheClear = listCacheClear$1;

var eq$1 = eq_1;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

var _assocIndexOf = assocIndexOf$4;

var assocIndexOf$3 = _assocIndexOf;

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete$1(key) {
  var data = this.__data__,
      index = assocIndexOf$3(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

var _listCacheDelete = listCacheDelete$1;

var assocIndexOf$2 = _assocIndexOf;

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet$1(key) {
  var data = this.__data__,
      index = assocIndexOf$2(data, key);

  return index < 0 ? undefined : data[index][1];
}

var _listCacheGet = listCacheGet$1;

var assocIndexOf$1 = _assocIndexOf;

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}

var _listCacheHas = listCacheHas$1;

var assocIndexOf = _assocIndexOf;

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet$1(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

var _listCacheSet = listCacheSet$1;

var listCacheClear = _listCacheClear,
    listCacheDelete = _listCacheDelete,
    listCacheGet = _listCacheGet,
    listCacheHas = _listCacheHas,
    listCacheSet = _listCacheSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache$4(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype['delete'] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;

var _ListCache = ListCache$4;

var ListCache$3 = _ListCache;

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear$1() {
  this.__data__ = new ListCache$3;
  this.size = 0;
}

var _stackClear = stackClear$1;

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

function stackDelete$1(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

var _stackDelete = stackDelete$1;

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

function stackGet$1(key) {
  return this.__data__.get(key);
}

var _stackGet = stackGet$1;

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

function stackHas$1(key) {
  return this.__data__.has(key);
}

var _stackHas = stackHas$1;

var getNative$4 = _getNative,
    root$4 = _root;

/* Built-in method references that are verified to be native. */
var Map$3 = getNative$4(root$4, 'Map');

var _Map = Map$3;

var getNative$3 = _getNative;

/* Built-in method references that are verified to be native. */
var nativeCreate$4 = getNative$3(Object, 'create');

var _nativeCreate = nativeCreate$4;

var nativeCreate$3 = _nativeCreate;

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}

var _hashClear = hashClear$1;

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

var _hashDelete = hashDelete$1;

var nativeCreate$2 = _nativeCreate;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto$7 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$6 = objectProto$7.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? undefined : result;
  }
  return hasOwnProperty$6.call(data, key) ? data[key] : undefined;
}

var _hashGet = hashGet$1;

var nativeCreate$1 = _nativeCreate;

/** Used for built-in method references. */
var objectProto$6 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1 ? (data[key] !== undefined) : hasOwnProperty$5.call(data, key);
}

var _hashHas = hashHas$1;

var nativeCreate = _nativeCreate;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;
  return this;
}

var _hashSet = hashSet$1;

var hashClear = _hashClear,
    hashDelete = _hashDelete,
    hashGet = _hashGet,
    hashHas = _hashHas,
    hashSet = _hashSet;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash$1(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash$1.prototype.clear = hashClear;
Hash$1.prototype['delete'] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;

var _Hash = Hash$1;

var Hash = _Hash,
    ListCache$2 = _ListCache,
    Map$2 = _Map;

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map$2 || ListCache$2),
    'string': new Hash
  };
}

var _mapCacheClear = mapCacheClear$1;

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */

function isKeyable$1(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

var _isKeyable = isKeyable$1;

var isKeyable = _isKeyable;

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData$4(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

var _getMapData = getMapData$4;

var getMapData$3 = _getMapData;

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

var _mapCacheDelete = mapCacheDelete$1;

var getMapData$2 = _getMapData;

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}

var _mapCacheGet = mapCacheGet$1;

var getMapData$1 = _getMapData;

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}

var _mapCacheHas = mapCacheHas$1;

var getMapData = _getMapData;

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

var _mapCacheSet = mapCacheSet$1;

var mapCacheClear = _mapCacheClear,
    mapCacheDelete = _mapCacheDelete,
    mapCacheGet = _mapCacheGet,
    mapCacheHas = _mapCacheHas,
    mapCacheSet = _mapCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache$3(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache$3.prototype.clear = mapCacheClear;
MapCache$3.prototype['delete'] = mapCacheDelete;
MapCache$3.prototype.get = mapCacheGet;
MapCache$3.prototype.has = mapCacheHas;
MapCache$3.prototype.set = mapCacheSet;

var _MapCache = MapCache$3;

var ListCache$1 = _ListCache,
    Map$1 = _Map,
    MapCache$2 = _MapCache;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet$1(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache$1) {
    var pairs = data.__data__;
    if (!Map$1 || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache$2(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

var _stackSet = stackSet$1;

var ListCache = _ListCache,
    stackClear = _stackClear,
    stackDelete = _stackDelete,
    stackGet = _stackGet,
    stackHas = _stackHas,
    stackSet = _stackSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack$3(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack$3.prototype.clear = stackClear;
Stack$3.prototype['delete'] = stackDelete;
Stack$3.prototype.get = stackGet;
Stack$3.prototype.has = stackHas;
Stack$3.prototype.set = stackSet;

var _Stack = Stack$3;

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function nativeKeysIn$1(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

var _nativeKeysIn = nativeKeysIn$1;

var isObject$2 = isObject_1,
    isPrototype$1 = _isPrototype,
    nativeKeysIn = _nativeKeysIn;

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn$1(object) {
  if (!isObject$2(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype$1(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty$4.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

var _baseKeysIn = baseKeysIn$1;

var arrayLikeKeys = _arrayLikeKeys,
    baseKeysIn = _baseKeysIn,
    isArrayLike = isArrayLike_1;

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn$3(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

var keysIn_1 = keysIn$3;

var copyObject$2 = _copyObject,
    keysIn$2 = keysIn_1;

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn$1(object, source) {
  return object && copyObject$2(source, keysIn$2(source), object);
}

var _baseAssignIn = baseAssignIn$1;

var _cloneBuffer = {exports: {}};

(function (module, exports) {
var root = _root;

/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
}(_cloneBuffer, _cloneBuffer.exports));

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */

function arrayFilter$1(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

var _arrayFilter = arrayFilter$1;

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */

function stubArray$2() {
  return [];
}

var stubArray_1 = stubArray$2;

var arrayFilter = _arrayFilter,
    stubArray$1 = stubArray_1;

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$4.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols$1 = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols$1(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

var _getSymbols = getSymbols$3;

var copyObject$1 = _copyObject,
    getSymbols$2 = _getSymbols;

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols$1(source, object) {
  return copyObject$1(source, getSymbols$2(source), object);
}

var _copySymbols = copySymbols$1;

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */

function arrayPush$3(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

var _arrayPush = arrayPush$3;

var overArg = _overArg;

/** Built-in value references. */
var getPrototype$3 = overArg(Object.getPrototypeOf, Object);

var _getPrototype = getPrototype$3;

var arrayPush$2 = _arrayPush,
    getPrototype$2 = _getPrototype,
    getSymbols$1 = _getSymbols,
    stubArray = stubArray_1;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush$2(result, getSymbols$1(object));
    object = getPrototype$2(object);
  }
  return result;
};

var _getSymbolsIn = getSymbolsIn$2;

var copyObject = _copyObject,
    getSymbolsIn$1 = _getSymbolsIn;

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn$1(source, object) {
  return copyObject(source, getSymbolsIn$1(source), object);
}

var _copySymbolsIn = copySymbolsIn$1;

var arrayPush$1 = _arrayPush,
    isArray$a = isArray_1;

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys$2(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$a(object) ? result : arrayPush$1(result, symbolsFunc(object));
}

var _baseGetAllKeys = baseGetAllKeys$2;

var baseGetAllKeys$1 = _baseGetAllKeys,
    getSymbols = _getSymbols,
    keys$2 = keys_1;

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys$2(object) {
  return baseGetAllKeys$1(object, keys$2, getSymbols);
}

var _getAllKeys = getAllKeys$2;

var baseGetAllKeys = _baseGetAllKeys,
    getSymbolsIn = _getSymbolsIn,
    keysIn$1 = keysIn_1;

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn$1(object) {
  return baseGetAllKeys(object, keysIn$1, getSymbolsIn);
}

var _getAllKeysIn = getAllKeysIn$1;

var getNative$2 = _getNative,
    root$3 = _root;

/* Built-in method references that are verified to be native. */
var DataView$1 = getNative$2(root$3, 'DataView');

var _DataView = DataView$1;

var getNative$1 = _getNative,
    root$2 = _root;

/* Built-in method references that are verified to be native. */
var Promise$2 = getNative$1(root$2, 'Promise');

var _Promise = Promise$2;

var getNative = _getNative,
    root$1 = _root;

/* Built-in method references that are verified to be native. */
var Set$1 = getNative(root$1, 'Set');

var _Set = Set$1;

var DataView = _DataView,
    Map = _Map,
    Promise$1 = _Promise,
    Set = _Set,
    WeakMap = _WeakMap,
    baseGetTag$3 = _baseGetTag,
    toSource = _toSource;

/** `Object#toString` result references. */
var mapTag$4 = '[object Map]',
    objectTag$3 = '[object Object]',
    promiseTag = '[object Promise]',
    setTag$4 = '[object Set]',
    weakMapTag$2 = '[object WeakMap]';

var dataViewTag$3 = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise$1),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag$5 = baseGetTag$3;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag$5(new DataView(new ArrayBuffer(1))) != dataViewTag$3) ||
    (Map && getTag$5(new Map) != mapTag$4) ||
    (Promise$1 && getTag$5(Promise$1.resolve()) != promiseTag) ||
    (Set && getTag$5(new Set) != setTag$4) ||
    (WeakMap && getTag$5(new WeakMap) != weakMapTag$2)) {
  getTag$5 = function(value) {
    var result = baseGetTag$3(value),
        Ctor = result == objectTag$3 ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag$3;
        case mapCtorString: return mapTag$4;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag$4;
        case weakMapCtorString: return weakMapTag$2;
      }
    }
    return result;
  };
}

var _getTag = getTag$5;

/** Used for built-in method references. */

var objectProto$3 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$3.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray$1(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty$3.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

var _initCloneArray = initCloneArray$1;

var root = _root;

/** Built-in value references. */
var Uint8Array$2 = root.Uint8Array;

var _Uint8Array = Uint8Array$2;

var Uint8Array$1 = _Uint8Array;

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer$3(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
  return result;
}

var _cloneArrayBuffer = cloneArrayBuffer$3;

var cloneArrayBuffer$2 = _cloneArrayBuffer;

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView$1(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer$2(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

var _cloneDataView = cloneDataView$1;

/** Used to match `RegExp` flags from their coerced string values. */

var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp$1(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

var _cloneRegExp = cloneRegExp$1;

var Symbol$4 = _Symbol;

/** Used to convert symbols to primitives and strings. */
var symbolProto$2 = Symbol$4 ? Symbol$4.prototype : undefined,
    symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol$1(symbol) {
  return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol)) : {};
}

var _cloneSymbol = cloneSymbol$1;

var cloneArrayBuffer$1 = _cloneArrayBuffer;

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray$1(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer$1(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

var _cloneTypedArray = cloneTypedArray$1;

var cloneArrayBuffer = _cloneArrayBuffer,
    cloneDataView = _cloneDataView,
    cloneRegExp = _cloneRegExp,
    cloneSymbol = _cloneSymbol,
    cloneTypedArray = _cloneTypedArray;

/** `Object#toString` result references. */
var boolTag$2 = '[object Boolean]',
    dateTag$2 = '[object Date]',
    mapTag$3 = '[object Map]',
    numberTag$2 = '[object Number]',
    regexpTag$2 = '[object RegExp]',
    setTag$3 = '[object Set]',
    stringTag$3 = '[object String]',
    symbolTag$2 = '[object Symbol]';

var arrayBufferTag$2 = '[object ArrayBuffer]',
    dataViewTag$2 = '[object DataView]',
    float32Tag$1 = '[object Float32Array]',
    float64Tag$1 = '[object Float64Array]',
    int8Tag$1 = '[object Int8Array]',
    int16Tag$1 = '[object Int16Array]',
    int32Tag$1 = '[object Int32Array]',
    uint8Tag$1 = '[object Uint8Array]',
    uint8ClampedTag$1 = '[object Uint8ClampedArray]',
    uint16Tag$1 = '[object Uint16Array]',
    uint32Tag$1 = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag$1(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag$2:
      return cloneArrayBuffer(object);

    case boolTag$2:
    case dateTag$2:
      return new Ctor(+object);

    case dataViewTag$2:
      return cloneDataView(object, isDeep);

    case float32Tag$1: case float64Tag$1:
    case int8Tag$1: case int16Tag$1: case int32Tag$1:
    case uint8Tag$1: case uint8ClampedTag$1: case uint16Tag$1: case uint32Tag$1:
      return cloneTypedArray(object, isDeep);

    case mapTag$3:
      return new Ctor;

    case numberTag$2:
    case stringTag$3:
      return new Ctor(object);

    case regexpTag$2:
      return cloneRegExp(object);

    case setTag$3:
      return new Ctor;

    case symbolTag$2:
      return cloneSymbol(object);
  }
}

var _initCloneByTag = initCloneByTag$1;

var baseCreate = _baseCreate,
    getPrototype$1 = _getPrototype,
    isPrototype = _isPrototype;

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject$1(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype$1(object))
    : {};
}

var _initCloneObject = initCloneObject$1;

var getTag$4 = _getTag,
    isObjectLike$6 = isObjectLike_1;

/** `Object#toString` result references. */
var mapTag$2 = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap$1(value) {
  return isObjectLike$6(value) && getTag$4(value) == mapTag$2;
}

var _baseIsMap = baseIsMap$1;

var baseIsMap = _baseIsMap,
    baseUnary$1 = _baseUnary,
    nodeUtil$1 = _nodeUtil.exports;

/* Node.js helper references. */
var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;

var isMap_1 = isMap$1;

var getTag$3 = _getTag,
    isObjectLike$5 = isObjectLike_1;

/** `Object#toString` result references. */
var setTag$2 = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet$1(value) {
  return isObjectLike$5(value) && getTag$3(value) == setTag$2;
}

var _baseIsSet = baseIsSet$1;

var baseIsSet = _baseIsSet,
    baseUnary = _baseUnary,
    nodeUtil = _nodeUtil.exports;

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet$1 = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

var isSet_1 = isSet$1;

var Stack$2 = _Stack,
    arrayEach = _arrayEach,
    assignValue = _assignValue,
    baseAssign = _baseAssign,
    baseAssignIn = _baseAssignIn,
    cloneBuffer = _cloneBuffer.exports,
    copyArray$1 = _copyArray,
    copySymbols = _copySymbols,
    copySymbolsIn = _copySymbolsIn,
    getAllKeys$1 = _getAllKeys,
    getAllKeysIn = _getAllKeysIn,
    getTag$2 = _getTag,
    initCloneArray = _initCloneArray,
    initCloneByTag = _initCloneByTag,
    initCloneObject = _initCloneObject,
    isArray$9 = isArray_1,
    isBuffer$1 = isBuffer$3.exports,
    isMap = isMap_1,
    isObject$1 = isObject_1,
    isSet = isSet_1,
    keys$1 = keys_1;

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG$1 = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG$1 = 4;

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]',
    arrayTag$1 = '[object Array]',
    boolTag$1 = '[object Boolean]',
    dateTag$1 = '[object Date]',
    errorTag$2 = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag$1 = '[object Map]',
    numberTag$1 = '[object Number]',
    objectTag$2 = '[object Object]',
    regexpTag$1 = '[object RegExp]',
    setTag$1 = '[object Set]',
    stringTag$2 = '[object String]',
    symbolTag$1 = '[object Symbol]',
    weakMapTag$1 = '[object WeakMap]';

var arrayBufferTag$1 = '[object ArrayBuffer]',
    dataViewTag$1 = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag$1] = cloneableTags[arrayTag$1] =
cloneableTags[arrayBufferTag$1] = cloneableTags[dataViewTag$1] =
cloneableTags[boolTag$1] = cloneableTags[dateTag$1] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag$1] =
cloneableTags[numberTag$1] = cloneableTags[objectTag$2] =
cloneableTags[regexpTag$1] = cloneableTags[setTag$1] =
cloneableTags[stringTag$2] = cloneableTags[symbolTag$1] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag$2] = cloneableTags[funcTag] =
cloneableTags[weakMapTag$1] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone$2(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG$1,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG$1;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject$1(value)) {
    return value;
  }
  var isArr = isArray$9(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray$1(value, result);
    }
  } else {
    var tag = getTag$2(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer$1(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag$2 || tag == argsTag$1 || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack$2);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone$2(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone$2(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys$1)
    : (isFlat ? keysIn : keys$1);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone$2(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

var _baseClone = baseClone$2;

var baseClone$1 = _baseClone;

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone$1(value, CLONE_SYMBOLS_FLAG);
}

var clone_1 = clone;

var createWrap$1 = _createWrap;

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = createWrap$1(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

var curry_1 = curry;

var baseGetTag$2 = _baseGetTag,
    getPrototype = _getPrototype,
    isObjectLike$4 = isObjectLike_1;

/** `Object#toString` result references. */
var objectTag$1 = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto$2 = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject$1(value) {
  if (!isObjectLike$4(value) || baseGetTag$2(value) != objectTag$1) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty$2.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

var isPlainObject_1 = isPlainObject$1;

var baseGetTag$1 = _baseGetTag,
    isObjectLike$3 = isObjectLike_1,
    isPlainObject = isPlainObject_1;

/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    errorTag$1 = '[object Error]';

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */
function isError(value) {
  if (!isObjectLike$3(value)) {
    return false;
  }
  var tag = baseGetTag$1(value);
  return tag == errorTag$1 || tag == domExcTag ||
    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
}

var isError_1 = isError;

var getTag$1 = _getTag,
    isObjectLike$2 = isObjectLike_1;

/** `Object#toString` result references. */
var weakMapTag = '[object WeakMap]';

/**
 * Checks if `value` is classified as a `WeakMap` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
 * @example
 *
 * _.isWeakMap(new WeakMap);
 * // => true
 *
 * _.isWeakMap(new Map);
 * // => false
 */
function isWeakMap(value) {
  return isObjectLike$2(value) && getTag$1(value) == weakMapTag;
}

var isWeakMap_1 = isWeakMap;

/** Used to stand-in for `undefined` hash values. */

var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

var _setCacheAdd = setCacheAdd$1;

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */

function setCacheHas$1(value) {
  return this.__data__.has(value);
}

var _setCacheHas = setCacheHas$1;

var MapCache$1 = _MapCache,
    setCacheAdd = _setCacheAdd,
    setCacheHas = _setCacheHas;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache$1(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache$1;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
SetCache$1.prototype.has = setCacheHas;

var _SetCache = SetCache$1;

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */

function arraySome$1(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

var _arraySome = arraySome$1;

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

function cacheHas$1(cache, key) {
  return cache.has(key);
}

var _cacheHas = cacheHas$1;

var SetCache = _SetCache,
    arraySome = _arraySome,
    cacheHas = _cacheHas;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$5 = 1,
    COMPARE_UNORDERED_FLAG$3 = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG$3) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

var _equalArrays = equalArrays$2;

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */

function mapToArray$1(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

var _mapToArray = mapToArray$1;

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */

function setToArray$1(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

var _setToArray = setToArray$1;

var Symbol$3 = _Symbol,
    Uint8Array = _Uint8Array,
    eq = eq_1,
    equalArrays$1 = _equalArrays,
    mapToArray = _mapToArray,
    setToArray = _setToArray;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$4 = 1,
    COMPARE_UNORDERED_FLAG$2 = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag$1 = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto$1 = Symbol$3 ? Symbol$3.prototype : undefined,
    symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag$1:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$2;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

var _equalByTag = equalByTag$1;

var getAllKeys = _getAllKeys;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$3 = 1;

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

var _equalObjects = equalObjects$1;

var Stack$1 = _Stack,
    equalArrays = _equalArrays,
    equalByTag = _equalByTag,
    equalObjects = _equalObjects,
    getTag = _getTag,
    isArray$8 = isArray_1,
    isBuffer = isBuffer$3.exports,
    isTypedArray = isTypedArray_1;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$2 = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray$8(object),
      othIsArr = isArray$8(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack$1);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack$1);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack$1);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

var _baseIsEqualDeep = baseIsEqualDeep$1;

var baseIsEqualDeep = _baseIsEqualDeep,
    isObjectLike$1 = isObjectLike_1;

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual$2(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike$1(value) && !isObjectLike$1(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$2, stack);
}

var _baseIsEqual = baseIsEqual$2;

var Stack = _Stack,
    baseIsEqual$1 = _baseIsEqual;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$1 = 1,
    COMPARE_UNORDERED_FLAG$1 = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch$1(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

var _baseIsMatch = baseIsMatch$1;

var isObject = isObject_1;

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable$2(value) {
  return value === value && !isObject(value);
}

var _isStrictComparable = isStrictComparable$2;

var isStrictComparable$1 = _isStrictComparable,
    keys = keys_1;

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData$1(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable$1(value)];
  }
  return result;
}

var _getMatchData = getMatchData$1;

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */

function matchesStrictComparable$2(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

var _matchesStrictComparable = matchesStrictComparable$2;

var baseIsMatch = _baseIsMatch,
    getMatchData = _getMatchData,
    matchesStrictComparable$1 = _matchesStrictComparable;

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches$1(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

var _baseMatches = baseMatches$1;

var isArray$7 = isArray_1,
    isSymbol$3 = isSymbol_1;

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey$3(value, object) {
  if (isArray$7(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol$3(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

var _isKey = isKey$3;

var MapCache = _MapCache;

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize$1(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize$1.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize$1.Cache = MapCache;

var memoize_1 = memoize$1;

var memoize = memoize_1;

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped$1(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

var _memoizeCapped = memoizeCapped$1;

var memoizeCapped = _memoizeCapped;

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath$2 = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

var _stringToPath = stringToPath$2;

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */

function arrayMap$2(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

var _arrayMap = arrayMap$2;

var Symbol$2 = _Symbol,
    arrayMap$1 = _arrayMap,
    isArray$6 = isArray_1,
    isSymbol$2 = isSymbol_1;

/** Used as references for various `Number` constants. */
var INFINITY$1 = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol$2 ? Symbol$2.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString$1(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray$6(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap$1(value, baseToString$1) + '';
  }
  if (isSymbol$2(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY$1) ? '-0' : result;
}

var _baseToString = baseToString$1;

var baseToString = _baseToString;

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString$2(value) {
  return value == null ? '' : baseToString(value);
}

var toString_1 = toString$2;

var isArray$5 = isArray_1,
    isKey$2 = _isKey,
    stringToPath$1 = _stringToPath,
    toString$1 = toString_1;

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath$2(value, object) {
  if (isArray$5(value)) {
    return value;
  }
  return isKey$2(value, object) ? [value] : stringToPath$1(toString$1(value));
}

var _castPath = castPath$2;

var isSymbol$1 = isSymbol_1;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey$5(value) {
  if (typeof value == 'string' || isSymbol$1(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

var _toKey = toKey$5;

var castPath$1 = _castPath,
    toKey$4 = _toKey;

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet$2(object, path) {
  path = castPath$1(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey$4(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

var _baseGet = baseGet$2;

var baseGet$1 = _baseGet;

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get$1(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet$1(object, path);
  return result === undefined ? defaultValue : result;
}

var get_1 = get$1;

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */

function baseHasIn$1(object, key) {
  return object != null && key in Object(object);
}

var _baseHasIn = baseHasIn$1;

var castPath = _castPath,
    isArguments$1 = isArguments_1,
    isArray$4 = isArray_1,
    isIndex = _isIndex,
    isLength = isLength_1,
    toKey$3 = _toKey;

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath$1(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey$3(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray$4(object) || isArguments$1(object));
}

var _hasPath = hasPath$1;

var baseHasIn = _baseHasIn,
    hasPath = _hasPath;

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn$1(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

var hasIn_1 = hasIn$1;

var baseIsEqual = _baseIsEqual,
    get = get_1,
    hasIn = hasIn_1,
    isKey$1 = _isKey,
    isStrictComparable = _isStrictComparable,
    matchesStrictComparable = _matchesStrictComparable,
    toKey$2 = _toKey;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty$1(path, srcValue) {
  if (isKey$1(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey$2(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

var _baseMatchesProperty = baseMatchesProperty$1;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */

function baseProperty$1(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

var _baseProperty = baseProperty$1;

var baseGet = _baseGet;

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep$1(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

var _basePropertyDeep = basePropertyDeep$1;

var baseProperty = _baseProperty,
    basePropertyDeep = _basePropertyDeep,
    isKey = _isKey,
    toKey$1 = _toKey;

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property$1(path) {
  return isKey(path) ? baseProperty(toKey$1(path)) : basePropertyDeep(path);
}

var property_1 = property$1;

var baseMatches = _baseMatches,
    baseMatchesProperty = _baseMatchesProperty,
    identity = identity_1,
    isArray$3 = isArray_1,
    property = property_1;

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee$1(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray$3(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

var _baseIteratee = baseIteratee$1;

var baseClone = _baseClone,
    baseIteratee = _baseIteratee;

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */
function iteratee(func) {
  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
}

var iteratee_1 = iteratee;

var Symbol$1 = _Symbol,
    isArguments = isArguments_1,
    isArray$2 = isArray_1;

/** Built-in value references. */
var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable$1(value) {
  return isArray$2(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

var _isFlattenable = isFlattenable$1;

var arrayPush = _arrayPush,
    isFlattenable = _isFlattenable;

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten$1(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten$1(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

var _baseFlatten = baseFlatten$1;

var baseFlatten = _baseFlatten;

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten$1(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

var flatten_1 = flatten$1;

var apply = _apply;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest$1(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

var _overRest = overRest$1;

var flatten = flatten_1,
    overRest = _overRest,
    setToString = _setToString;

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest$1(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

var _flatRest = flatRest$1;

var createWrap = _createWrap,
    flatRest = _flatRest;

/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = flatRest(function(func, indexes) {
  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

var rearg_1 = rearg;

var arrayMap = _arrayMap,
    copyArray = _copyArray,
    isArray$1 = isArray_1,
    isSymbol = isSymbol_1,
    stringToPath = _stringToPath,
    toKey = _toKey,
    toString = toString_1;

/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if (isArray$1(value)) {
    return arrayMap(value, toKey);
  }
  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
}

var toPath_1 = toPath;

var _util = {
  'ary': ary_1,
  'assign': _baseAssign,
  'clone': clone_1,
  'curry': curry_1,
  'forEach': _arrayEach,
  'isArray': isArray_1,
  'isError': isError_1,
  'isFunction': isFunction_1,
  'isWeakMap': isWeakMap_1,
  'iteratee': iteratee_1,
  'keys': _baseKeys,
  'rearg': rearg_1,
  'toInteger': toInteger_1,
  'toPath': toPath_1
};

var baseConvert = _baseConvert,
    util = _util;

/**
 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
 * version with conversion `options` applied. If `name` is an object its methods
 * will be converted.
 *
 * @param {string} name The name of the function to wrap.
 * @param {Function} [func] The function to wrap.
 * @param {Object} [options] The options object. See `baseConvert` for more details.
 * @returns {Function|Object} Returns the converted function or object.
 */
function convert$1(name, func, options) {
  return baseConvert(util, name, func, options);
}

var convert_1 = convert$1;

var baseGetTag = _baseGetTag,
    isArray = isArray_1,
    isObjectLike = isObjectLike_1;

/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
}

var isString_1 = isString;

var _falseOptions = {
  'cap': false,
  'curry': false,
  'fixed': false,
  'immutable': false,
  'rearg': false
};

var convert = convert_1,
    func = convert('isString', isString_1, _falseOptions);

func.placeholder = placeholder;

({

    /**
     * The label of the select field
     */
    label: PropTypes$2.string,

    /**
     * The select field items (rendered as MenuItems)
     */
    items: PropTypes$2.arrayOf(PropTypes$2.shape({
        id: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number]).isRequired,
        name: PropTypes$2.string
    })),

    /**
     * If true, the select field will support multiple selection. A check mark will show before selected items.
     */
    multiple: PropTypes$2.bool,

    /**
     * If true, a spinner will be shown in the select menu. If string, the loading text will be shown.
     */
    loading: PropTypes$2.oneOfType([PropTypes$2.bool, PropTypes$2.string]),

    /**
     * onChange callback, that is fired when the select field's value changes
     *
     * The onChange callback will receive one argument: The item selected (if items are provided) or the value selected
     */
    onChange: PropTypes$2.func,

    /**
     * The value(s) of the select field
     */
    value: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number, PropTypes$2.arrayOf(PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number]))]),

    /**
     * Override the inline-styles of the root element
     */
    style: PropTypes$2.object,

    /**
     * If set, adds a class to the element in the format d2-ui-selectfield-selector
     */
    selector: PropTypes$2.string,

    /**
     * If set, shows the error message below the SelectField
     */
    errorText: PropTypes$2.string,

    /**
     * MenuItems to show in the dropdown
     */
    children: PropTypes$2.node
});

var styles$7 = {
    container: {
        padding: '16px 32px 0 24px',
        position: 'relative',
        flex: 1
    },
    closeButton: {
        position: 'absolute',
        cursor: 'pointer',
        top: '2rem',
        right: '.75rem',
        fontSize: '1rem',
        color: '#AAA'
    },
    list: {
        paddingTop: 0,
        paddingBottom: 0,
        backgroundColor: 'transparent',
        marginTop: 16
    },
    item: {
        fontSize: 14,
        borderRadius: 5,
        margin: '0 8px'
    },
    activeItem: {
        fontSize: 14,
        fontWeight: 700,
        color: '#2196f3',
        backgroundColor: '#e0e0e0',
        borderRadius: 5,
        margin: '0 8px'
    },
    sidebar: {
        backgroundColor: '#f3f3f3',
        overflowY: 'auto',
        width: 295
    }
};

var Sidebar = function (_Component) {
    _default$16(Sidebar, _Component);

    function Sidebar() {
        var _ref;

        var _temp, _this, _ret;

        _default$17(this, Sidebar);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _default$18(this, (_ref = Sidebar.__proto__ || _Object$getPrototypeOf(Sidebar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            currentSection: _this.props.currentSection || _this.props.sections[0] && _this.props.sections[0].key,
            searchText: ''
        }, _this.changeSearchText = function () {
            _this.setState({ searchText: _this.searchBox.getValue() }, function () {
                if (_this.props.onChangeSearchText) {
                    _this.props.onChangeSearchText(_this.state.searchText);
                }
            });
        }, _this.onClear = function () {
            _this.setState({ searchText: '' }, function () {
                if (_this.props.onChangeSearchText) {
                    _this.props.onChangeSearchText(_this.state.searchText);
                }
            });
        }, _temp), _default$18(_this, _ret);
    }

    _default$19(Sidebar, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            var _this2 = this;

            if (props.currentSection) {
                this.setState({ currentSection: props.currentSection });
            }

            if (props.searchText && props.searchText !== this.state.searchText) {
                this.setState({ searchText: props.searchText }, function () {
                    _this2.changeSearchText();
                });
            }
        }
    }, {
        key: 'setSection',
        value: function setSection(key) {
            // TODO: Refactor as this behavior is sort of silly. The current version of the SideBar with managed state should
            // probably be a HoC and a simpler version of the header bar should be available for more dynamic scenarios.
            this.props.onSectionClick(key);

            if (key !== this.state.currentSection) {
                this.setState({ currentSection: key });
                this.props.onChangeSection(key);
            }
        }
    }, {
        key: 'clearSearchBox',
        value: function clearSearchBox() {
            this.setState({ searchText: '' });
        }
    }, {
        key: 'renderSidebarButtons',
        value: function renderSidebarButtons() {
            if (this.props.sideBarButtons) {
                return react.createElement(
                    'div',
                    { style: { padding: '1rem 0 0' } },
                    this.props.sideBarButtons
                );
            }
            return null;
        }
    }, {
        key: 'renderSearchField',
        value: function renderSearchField() {
            var _this3 = this;

            if (this.props.showSearchField) {
                return react.createElement(
                    'div',
                    { style: styles$7.container },
                    react.createElement(_default$f, {
                        hintText: this.props.searchFieldLabel,
                        style: { width: '100%' },
                        value: this.state.searchText,
                        onChange: this.changeSearchText,
                        ref: function ref(_ref2) {
                            _this3.searchBox = _ref2;
                        }
                    }),
                    this.state.searchText ? react.createElement(
                        _default$_,
                        { style: styles$7.closeButton, className: 'material-icons', onClick: this.onClear },
                        'clear'
                    ) : undefined
                );
            }

            return null;
        }
    }, {
        key: 'renderSections',
        value: function renderSections() {
            var _this4 = this;

            return react.createElement(
                _default$e,
                { style: styles$7.list },
                this.props.sections.map(function (section) {
                    var listItemStyle = section.key === _this4.state.currentSection && !_this4.state.searchText ? styles$7.activeItem : styles$7.item;
                    var icon = typeof section.icon === 'string' || section.icon instanceof String ? react.createElement(
                        _default$_,
                        { className: 'material-icons' },
                        section.icon
                    ) : section.icon;

                    return react.createElement(_default$d, {
                        key: section.key,
                        primaryText: section.label,
                        onClick: _this4.setSection.bind(_this4, section.key),
                        style: listItemStyle,
                        leftIcon: icon,
                        containerElement: section.containerElement
                    });
                })
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return react.createElement(
                'div',
                { style: _Object$assign(styles$7.sidebar, this.props.styles.leftBar), className: 'left-bar' },
                this.renderSidebarButtons(),
                this.renderSearchField(),
                this.renderSections()
            );
        }
    }]);

    return Sidebar;
}(react.Component);

Sidebar.propTypes = {
    sections: PropTypes$2.arrayOf(PropTypes$2.shape({
        key: PropTypes$2.string,
        label: PropTypes$2.string,
        containerElement: PropTypes$2.object,
        icon: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.element])
    })).isRequired,
    currentSection: PropTypes$2.string,
    onChangeSection: PropTypes$2.func,
    onSectionClick: PropTypes$2.func,
    showSearchField: PropTypes$2.bool,
    searchFieldLabel: PropTypes$2.string,
    onChangeSearchText: PropTypes$2.func,
    sideBarButtons: PropTypes$2.element,
    styles: PropTypes$2.shape({
        leftBar: PropTypes$2.object
    })
};

Sidebar.contextTypes = {
    muiTheme: PropTypes$2.object
};

Sidebar.defaultProps = {
    showSearchField: false,
    styles: {
        leftBar: {}
    },
    onSectionClick: function onSectionClick() {}
};

var publishState = _Symbol$1('publishState');
var publishError = _Symbol$1('publishError');

var observableSymbol = _Symbol$1('observable');

(function (_Observable) {
    _default$16(Store, _Observable);

    function Store(initialValue) {
        _default$17(this, Store);

        var _this = _default$18(this, (Store.__proto__ || _Object$getPrototypeOf(Store)).call(this));

        _this[observableSymbol] = new ReplaySubject(1);

        if (initialValue) {
            _Promise$1.resolve(initialValue).then(function (value) {
                _this.setState(value);
            }).catch(function (error) {
                _this[publishError](error);
            });
        }
        return _this;
    }

    _default$19(Store, [{
        key: 'setState',
        value: function setState(newState) {
            this.state = newState;
            this[publishState]();
        }
    }, {
        key: 'getState',
        value: function getState() {
            return this.state;
        }
    }, {
        key: 'setSource',
        value: function setSource(observableSource) {
            var _this2 = this;

            observableSource.subscribe(function (value) {
                return _this2.setState(value);
            }, function (error) {
                return _this2[publishError]('Rethrown error from source: ' + error);
            });
        }
    }, {
        key: '_subscribe',
        value: function _subscribe(observer) {
            return this[observableSymbol].subscribe(observer);
        }

        /** ***************************************************************************************************************
         * Private methods
         **************************************************************************************************************** */

    }, {
        key: publishState,
        value: function value() {
            return this[observableSymbol].next(this.state);
        }
    }, {
        key: publishError,
        value: function value(error) {
            return this[observableSymbol].error(error);
        }

        /** ***************************************************************************************************************
         * Static methods
         **************************************************************************************************************** */

    }], [{
        key: 'create',
        value: function create(storeConfig) {
            var initialState = void 0;
            var mergeObject = {};

            if (storeConfig) {
                if (storeConfig.getInitialState) {
                    initialState = storeConfig && storeConfig.getInitialState();
                }

                _Object$keys(storeConfig).filter(function (keyName) {
                    return keyName !== 'getInitialState';
                }).forEach(function (keyName) {
                    mergeObject[keyName] = storeConfig[keyName];
                    return mergeObject;
                });
            }

            return _Object$assign(new Store(initialState), mergeObject);
        }
    }]);

    return Store;
})(Observable);

({
    /**
     * Override the inline-styles of the root element
     */
    style: PropTypes$2.object,

    /**
     * If set, adds a class to the element in the format d2-ui-tabs-selector
     */
    selector: PropTypes$2.string
});

var Tab = function (_Component) {
    _default$16(Tab, _Component);

    function Tab() {
        _default$17(this, Tab);

        return _default$18(this, (Tab.__proto__ || _Object$getPrototypeOf(Tab)).apply(this, arguments));
    }

    _default$19(Tab, [{
        key: 'render',
        value: function render() {
            var className = createClassName('d2-ui-tab', this.props.selector);

            return react.createElement(Tab$1, _default$15({
                className: className
            }, this.props));
        }
    }]);

    return Tab;
}(react.Component);Tab.propTypes = {
    /**
     * If set, adds a class to the element in the format d2-ui-tab-selector
     */
    selector: PropTypes$2.string
};
Tab.muiName = 'Tab';

({
  /**
   * If set, expands the TextField to the full width of its parent
   */
  fullWidth: PropTypes$2.bool,

  /**
   * The textfield label
   */
  label: PropTypes$2.string,

  /**
   * If set, allows textfield to expand to more than one line
   */
  multiline: PropTypes$2.bool,

  /**
   * onChange callback, that is fired when the textfield's value changes
   *
   * The onChange callback will receive one argument: The new value of the text field
   */
  onChange: PropTypes$2.func.isRequired,

  /**
  * onClick callback, that is fired when the textfield is clicked
  *
  */
  onClick: PropTypes$2.func,

  /**
   * If set, sets the Hint text (v0.19)
   */
  placeholder: PropTypes$2.string,

  /**
   * If set, and multiline is true, sets the initial number of lines
   */
  rows: PropTypes$2.number,

  /**
   * If set, and multiline is true, sets the maximum number of lines
   */
  rowsMax: PropTypes$2.number,

  /**
   * If set, adds a class to the element in the format d2-ui-textfield-selector
   */
  selector: PropTypes$2.string,

  /**
   * Override the inline-styles of the root element
   */
  style: PropTypes$2.object,

  /**
   * The input type of the textfield
   */
  type: PropTypes$2.oneOf(['text', 'number']),

  /**
   * The value of the textfield
   */
  value: PropTypes$2.oneOfType([PropTypes$2.string, PropTypes$2.number])
});

var TreeView = function (_React$Component) {
    _default$16(TreeView, _React$Component);

    function TreeView(props) {
        _default$17(this, TreeView);

        var _this = _default$18(this, (TreeView.__proto__ || _Object$getPrototypeOf(TreeView)).call(this, props));

        _this.state = {
            collapsed: !props.initiallyExpanded,
            hasBeenExpanded: props.initiallyExpanded
        };

        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }

    _default$19(TreeView, [{
        key: 'toggleCollapsed',
        value: function toggleCollapsed() {
            var _this2 = this;

            this.setState(function (state) {
                return {
                    collapsed: !state.collapsed,
                    hasBeenExpanded: true
                };
            }, function () {
                if (!_this2.state.collapsed && typeof _this2.props.onExpand === 'function') {
                    _this2.props.onExpand();
                }
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            // When initiallyExpanded status changed and the tree is collapsed we fire a toggleEvent to open it up
            if (newProps.initiallyExpanded && this.state.collapsed) {
                this.toggleCollapsed();
            }
        }
    }, {
        key: 'handleClick',
        value: function handleClick(e) {
            if (this.props.onClick) {
                this.props.onClick(e);
            }
            if (e !== undefined) {
                e.stopPropagation();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var styles = {
                tree: {
                    marginLeft: 16,
                    whiteSpace: 'nowrap'
                },
                itemLabel: {
                    display: 'inline-block',
                    position: 'relative'
                },
                arrow: {
                    display: 'inline-block',
                    position: 'absolute',
                    left: -16,
                    top: -1,
                    width: 11,
                    height: 16,
                    paddingLeft: 4,
                    textAlign: 'center',
                    cursor: 'pointer'
                },
                arrowSymbol: {
                    transition: 'transform 150ms ease-out',
                    transform: this.state.collapsed ? '' : 'rotate(90deg)',
                    position: 'absolute'
                },
                clickTarget: {
                    cursor: this.props.onClick && 'pointer'
                },
                children: {
                    position: 'relative',
                    marginLeft: 16,
                    height: this.state.collapsed ? 0 : 'inherit'
                }
            };

            var label = react.createElement(
                'div',
                { style: styles.itemLabel },
                react.createElement(
                    'div',
                    { className: 'arrow', style: styles.arrow, onClick: this.toggleCollapsed.bind(this) },
                    react.createElement(
                        'div',
                        { style: styles.arrowSymbol },
                        this.props.arrowSymbol
                    )
                ),
                react.createElement(
                    'div',
                    { className: 'label', onClick: this.handleClick, style: styles.clickTarget },
                    this.props.label
                )
            );

            styles.children.display = this.state.collapsed ? 'none' : 'block';

            // Render children if not collapsed, or (persistent and has been expanded)
            var children = (!this.state.collapsed || this.props.persistent && this.state.hasBeenExpanded) && react.createElement(
                'div',
                { className: 'children', style: styles.children },
                this.props.children
            );

            var className = 'tree-view ' + this.props.className;
            return react.createElement(
                'div',
                { className: className, style: _Object$assign(styles.tree, this.props.style) },
                label,
                children
            );
        }
    }]);

    return TreeView;
}(react.Component);

// TODO: Documentation


TreeView.propTypes = {
    children: PropTypes$2.node,
    persistent: PropTypes$2.bool,
    initiallyExpanded: PropTypes$2.bool,
    arrowSymbol: PropTypes$2.node,
    style: PropTypes$2.object,
    className: PropTypes$2.string,
    onExpand: PropTypes$2.func,
    onClick: PropTypes$2.func
};

TreeView.defaultProps = {
    persistent: false,
    initiallyExpanded: false,
    arrowSymbol: '▸',
    style: {}
};

var theme = {
    spacing: _default$8,
    fontFamily: 'Roboto, sans-serif',
    palette: {
        primary1Color: '#004ba0',
        primary2Color: blue700_1,
        primary3Color: blue100_1,
        accent1Color: orange500_1,
        accent2Color: grey100_1,
        accent3Color: orangeA200_1,
        textColor: darkBlack_1,
        alternateTextColor: white_1,
        canvasColor: white_1,
        borderColor: grey400_1,
        disabledColor: fade_1(darkBlack_1, 0.3)
    }
};

_default$7(theme);

var styles$6 = {
    datePicker: { width: '100%' },
    year: { width: 95, marginRight: 16 },
    month: { width: 125 },
    week: { width: 105 },
    biMonth: { width: 200 },
    quarter: { width: 200 },
    sixMonth: { width: 200 },
    line: { marginTop: 0 }
};

var getYear = function getYear(date) {
    return new Date(date).getFullYear();
};
var getTwoDigitMonth = function getTwoDigitMonth(date) {
    var month = new Date(date).getMonth() + 1; // Month is 0 indexed

    return ('0' + month).slice(-2);
};
var getTwoDigitDay = function getTwoDigitDay(date) {
    var day = new Date(date).getDate();

    return ('0' + day).slice(-2);
};
var formattedDate = function formattedDate(date) {
    return '' + getYear(date) + getTwoDigitMonth(date) + getTwoDigitDay(date);
};
var getWeekYear = function getWeekYear(date) {
    // Create a new date object for the thursday of this week
    var target = new Date(date);
    target.setDate(target.getDate() - (date.getDay() + 6) % 7 + 3);

    return target.getFullYear();
};
var isWeekValid = function isWeekValid(date, week) {
    return (
        // It's not possible to have a week 53 in a 52 week year
        !is53WeekISOYear(date) && Number(week) !== 53
    );
};

var PeriodPicker = function (_React$Component) {
    _default$16(PeriodPicker, _React$Component);

    function PeriodPicker(props, context) {
        _default$17(this, PeriodPicker);

        var _this = _default$18(this, (PeriodPicker.__proto__ || _Object$getPrototypeOf(PeriodPicker)).call(this, props, context));

        _this.state = {};

        var i18n = context.d2.i18n;
        _this.getTranslation = i18n.getTranslation.bind(i18n);
        return _this;
    }

    _default$19(PeriodPicker, [{
        key: 'getPeriod',
        value: function getPeriod() {
            var date = this.state.year && this.state.week && getFirstDateOfWeek(this.state.year, this.state.week);
            switch (this.props.periodType) {
                case 'Daily':
                    return this.state.date && formattedDate(this.state.date);
                case 'Weekly':
                    if (date) {
                        this.setState({ invalidWeek: !isWeekValid(date, this.state.week) });
                    }
                    return date && isWeekValid(date, this.state.week) && getWeekYear(date) + 'W' + this.state.week;
                case 'WeeklyWednesday':
                    if (date) {
                        this.setState({ invalidWeek: !isWeekValid(date, this.state.week) });
                    }
                    return date && isWeekValid(date, this.state.week) && getWeekYear(date) + 'WedW' + this.state.week;
                case 'WeeklyThursday':
                    if (date) {
                        this.setState({ invalidWeek: !isWeekValid(date, this.state.week) });
                    }
                    return date && isWeekValid(date, this.state.week) && getWeekYear(date) + 'ThuW' + this.state.week;
                case 'WeeklySaturday':
                    if (date) {
                        this.setState({ invalidWeek: !isWeekValid(date, this.state.week) });
                    }
                    return date && isWeekValid(date, this.state.week) && getWeekYear(date) + 'SatW' + this.state.week;
                case 'WeeklySunday':
                    if (date) {
                        this.setState({ invalidWeek: !isWeekValid(date, this.state.week) });
                    }
                    return date && isWeekValid(date, this.state.week) && getWeekYear(date) + 'SunW' + this.state.week;
                case 'Monthly':
                    return this.state.year && this.state.month && '' + this.state.year + this.state.month;
                case 'BiMonthly':
                    return this.state.year && this.state.biMonth && this.state.year + '0' + this.state.biMonth + 'B';
                case 'Quarterly':
                    return this.state.year && this.state.quarter && this.state.year + 'Q' + this.state.quarter;
                case 'SixMonthly':
                    return this.state.year && this.state.sixMonth && this.state.year + 'S' + this.state.sixMonth;
                case 'SixMonthlyApril':
                    return this.state.year && this.state.sixMonth && this.state.year + 'AprilS' + this.state.sixMonth;
                case 'Yearly':
                    return this.state.year;
                case 'FinancialApril':
                    return this.state.year && this.state.year + 'April';
                case 'FinancialJuly':
                    return this.state.year && this.state.year + 'July';
                case 'FinancialOct':
                    return this.state.year && this.state.year + 'Oct';

                default:
                    log.error('Unknown period type: ' + this.props.periodType);
                    return false;
            }
        }
    }, {
        key: 'handleChange',
        value: function handleChange() {
            if (this.getPeriod()) {
                this.props.onPickPeriod(this.getPeriod());
            }
        }
    }, {
        key: 'renderOptionPicker',
        value: function renderOptionPicker(name, options) {
            var _this2 = this;

            var changeState = function changeState(e, i, value) {
                return _this2.setState(_default$1b({}, name, value), _this2.handleChange);
            };
            var isInvalid = name === 'week' && this.state.invalidWeek;

            return react.createElement(
                _default$6,
                {
                    value: this.state[name],
                    onChange: changeState,
                    style: styles$6[name],
                    floatingLabelText: this.getTranslation(name),
                    floatingLabelStyle: isInvalid ? { color: 'red' } : {}
                },
                react.createElement(_default$c, { key: '', value: this.state[name], primaryText: '\xA0' }),
                _Object$keys(options).sort().map(function (value) {
                    return react.createElement(_default$c, {
                        key: value,
                        value: value,
                        primaryText: /[^0-9]/.test(options[value]) ? _this2.getTranslation(options[value]) : options[value]
                    });
                })
            );
        }
    }, {
        key: 'renderYearPicker',
        value: function renderYearPicker() {
            var years = {};
            var currentYear = new Date().getFullYear();
            for (var year = 2014; year < currentYear + 5; year++) {
                years[year] = year;
            }

            return this.renderOptionPicker('year', years);
        }
    }, {
        key: 'renderMonthPicker',
        value: function renderMonthPicker() {
            var months = {
                '01': 'jan',
                '02': 'feb',
                '03': 'mar',
                '04': 'apr',
                '05': 'may',
                '06': 'jun',
                '07': 'jul',
                '08': 'aug',
                '09': 'sep',
                10: 'oct',
                11: 'nov',
                12: 'dec'
            };
            return this.renderOptionPicker('month', months);
        }
    }, {
        key: 'renderWeekPicker',
        value: function renderWeekPicker() {
            var weeks = {};
            var weekLimit = 53;
            for (var week = 1; week <= weekLimit; week++) {
                weeks[('0' + week).substr(-2)] = week;
            }

            return this.renderOptionPicker('week', weeks);
        }
    }, {
        key: 'renderBiMonthPicker',
        value: function renderBiMonthPicker() {
            var biMonths = { 1: 'jan-feb', 2: 'mar-apr', 3: 'may-jun', 4: 'jul-aug', 5: 'sep-oct', 6: 'nov-dec' };
            return this.renderOptionPicker('biMonth', biMonths);
        }
    }, {
        key: 'renderQuarterPicker',
        value: function renderQuarterPicker() {
            var quarters = { 1: 'Q1', 2: 'Q2', 3: 'Q3', 4: 'Q4' };
            return this.renderOptionPicker('quarter', quarters);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var setDateState = function setDateState(nothing, date) {
                var year = getYear(date);
                var month = getTwoDigitMonth(date);
                _this3.setState({ date: date, year: year, month: month }, _this3.handleChange);
            };

            switch (this.props.periodType) {
                case 'Daily':
                    return react.createElement(_default$9, {
                        floatingLabelText: this.getTranslation('day'),
                        onChange: setDateState,
                        autoOk: true,
                        container: 'inline',
                        style: styles$6.datePicker
                    });
                case 'Weekly':
                case 'WeeklyWednesday':
                case 'WeeklyThursday':
                case 'WeeklySaturday':
                case 'WeeklySunday':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderWeekPicker()
                    );
                case 'Monthly':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderMonthPicker()
                    );
                case 'BiMonthly':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderBiMonthPicker()
                    );
                case 'Quarterly':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderQuarterPicker()
                    );
                case 'SixMonthly':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderOptionPicker('sixMonth', { 1: 'jan-jun', 2: 'jul-dec' })
                    );
                case 'SixMonthlyApril':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker(),
                        this.renderOptionPicker('sixMonth', { 1: 'apr-sep', 2: 'oct-mar' })
                    );
                case 'Yearly':
                case 'FinancialApril':
                case 'FinancialJuly':
                case 'FinancialOct':
                    return react.createElement(
                        'div',
                        { style: styles$6.line },
                        this.renderYearPicker()
                    );

                default:
                    return null;
            }
        }
    }]);

    return PeriodPicker;
}(react.Component);

PeriodPicker.propTypes = {
    periodType: PropTypes$2.oneOf(['Daily', 'Weekly', 'WeeklyWednesday', 'WeeklyThursday', 'WeeklySaturday', 'WeeklySunday', 'Monthly', 'BiMonthly', 'Quarterly', 'SixMonthly', 'SixMonthlyApril', 'Yearly', 'FinancialApril', 'FinancialJuly', 'FinancialOct']).isRequired,

    onPickPeriod: PropTypes$2.func.isRequired
};
PeriodPicker.contextTypes = { d2: PropTypes$2.object.isRequired };

var AutoComplete$2 = {};

var AutoComplete$1 = {};

var TextField$2 = {};

var TextField$1 = {};

var EnhancedTextarea$1 = {};

Object.defineProperty(EnhancedTextarea$1, "__esModule", {
  value: true
});

var _extends2$b = _extends$3;

var _extends3$b = _interopRequireDefault$y(_extends2$b);

var _objectWithoutProperties2$b = objectWithoutProperties$2;

var _objectWithoutProperties3$b = _interopRequireDefault$y(_objectWithoutProperties2$b);

var _getPrototypeOf$d = getPrototypeOf$1.exports;

var _getPrototypeOf2$d = _interopRequireDefault$y(_getPrototypeOf$d);

var _classCallCheck2$e = classCallCheck$3;

var _classCallCheck3$e = _interopRequireDefault$y(_classCallCheck2$e);

var _createClass2$e = createClass$2;

var _createClass3$e = _interopRequireDefault$y(_createClass2$e);

var _possibleConstructorReturn2$d = possibleConstructorReturn$3;

var _possibleConstructorReturn3$d = _interopRequireDefault$y(_possibleConstructorReturn2$d);

var _inherits2$d = inherits$3;

var _inherits3$d = _interopRequireDefault$y(_inherits2$d);

var _simpleAssign$g = simpleAssign;

var _simpleAssign2$g = _interopRequireDefault$y(_simpleAssign$g);

var _react$m = react;

var _react2$l = _interopRequireDefault$y(_react$m);

var _propTypes$h = propTypes$5.exports;

var _propTypes2$h = _interopRequireDefault$y(_propTypes$h);

var _reactEventListener$1 = reactEventListener_cjs$1;

var _reactEventListener2$1 = _interopRequireDefault$y(_reactEventListener$1);

function _interopRequireDefault$y(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rowsHeight = 24;

function getStyles$c(props, context, state) {
  return {
    root: {
      position: 'relative' // because the shadow has position: 'absolute'
    },
    textarea: {
      height: state.height,
      width: '100%',
      resize: 'none',
      font: 'inherit',
      padding: 0,
      cursor: 'inherit'
    },
    shadow: {
      resize: 'none',
      // Overflow also needed to here to remove the extra row
      // added to textareas in Firefox.
      overflow: 'hidden',
      // Visibility needed to hide the extra text area on ipads
      visibility: 'hidden',
      position: 'absolute',
      height: 'auto'
    }
  };
}

var EnhancedTextarea = function (_Component) {
  (0, _inherits3$d.default)(EnhancedTextarea, _Component);

  function EnhancedTextarea() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$e.default)(this, EnhancedTextarea);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$d.default)(this, (_ref = EnhancedTextarea.__proto__ || (0, _getPrototypeOf2$d.default)(EnhancedTextarea)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      height: null
    }, _this.handleResize = function (event) {
      _this.syncHeightWithShadow(_this.props.value, event);
    }, _this.handleChange = function (event) {
      if (!_this.props.hasOwnProperty('value')) {
        _this.syncHeightWithShadow(event.target.value);
      }

      if (_this.props.hasOwnProperty('valueLink')) {
        _this.props.valueLink.requestChange(event.target.value);
      }

      if (_this.props.onChange) {
        _this.props.onChange(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$d.default)(_this, _ret);
  }

  (0, _createClass3$e.default)(EnhancedTextarea, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        height: this.props.rows * rowsHeight
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.syncHeightWithShadow(this.props.value);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== this.props.value || nextProps.rowsMax !== this.props.rowsMax) {
        this.syncHeightWithShadow(nextProps.value, null, nextProps);
      }
    }
  }, {
    key: 'getInputNode',
    value: function getInputNode() {
      return this.refs.input;
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      this.getInputNode().value = value;
      this.syncHeightWithShadow(value);
    }
  }, {
    key: 'syncHeightWithShadow',
    value: function syncHeightWithShadow(newValue, event, props) {
      var shadow = this.refs.shadow;
      var displayText = this.props.hintText && (newValue === '' || newValue === undefined || newValue === null) ? this.props.hintText : newValue;

      if (displayText !== undefined) {
        shadow.value = displayText;
      }

      var newHeight = shadow.scrollHeight;

      // Guarding for jsdom, where scrollHeight isn't present.
      // See https://github.com/tmpvar/jsdom/issues/1013
      if (newHeight === undefined) return;

      props = props || this.props;

      if (props.rowsMax >= props.rows) {
        newHeight = Math.min(props.rowsMax * rowsHeight, newHeight);
      }

      newHeight = Math.max(newHeight, rowsHeight);

      if (this.state.height !== newHeight) {
        var input = this.refs.input;
        var cursorPosition = input.selectionStart;
        this.setState({
          height: newHeight
        }, function () {
          input.setSelectionRange(cursorPosition, cursorPosition);
        });

        if (props.onHeightChange) {
          props.onHeightChange(event, newHeight);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.onChange;
          _props.onHeightChange;
          _props.rows;
          _props.rowsMax;
          var shadowStyle = _props.shadowStyle,
          style = _props.style;
          _props.hintText;
          var textareaStyle = _props.textareaStyle,
          valueLink = _props.valueLink,
          other = (0, _objectWithoutProperties3$b.default)(_props, ['onChange', 'onHeightChange', 'rows', 'rowsMax', 'shadowStyle', 'style', 'hintText', 'textareaStyle', 'valueLink']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$c(this.props, this.context, this.state);
      var rootStyles = (0, _simpleAssign2$g.default)(styles.root, style);
      var textareaStyles = (0, _simpleAssign2$g.default)(styles.textarea, textareaStyle);
      var shadowStyles = (0, _simpleAssign2$g.default)({}, textareaStyles, styles.shadow, shadowStyle);
      var props = {};

      if (this.props.hasOwnProperty('valueLink')) {
        other.value = valueLink.value;
        props.valueLink = valueLink;
      }

      return _react2$l.default.createElement(
        'div',
        { style: prepareStyles(rootStyles) },
        _react2$l.default.createElement(_reactEventListener2$1.default, { target: 'window', onResize: this.handleResize }),
        _react2$l.default.createElement('textarea', (0, _extends3$b.default)({
          ref: 'shadow',
          style: prepareStyles(shadowStyles),
          tabIndex: '-1',
          rows: this.props.rows,
          defaultValue: this.props.defaultValue,
          readOnly: true,
          value: this.props.value
        }, props)),
        _react2$l.default.createElement('textarea', (0, _extends3$b.default)({}, other, {
          ref: 'input',
          rows: this.props.rows,
          style: prepareStyles(textareaStyles),
          onChange: this.handleChange
        }))
      );
    }
  }]);
  return EnhancedTextarea;
}(_react$m.Component);

EnhancedTextarea.defaultProps = {
  rows: 1
};
EnhancedTextarea.contextTypes = {
  muiTheme: _propTypes2$h.default.object.isRequired
};
EnhancedTextarea.propTypes = {
  defaultValue: _propTypes2$h.default.any,
  disabled: _propTypes2$h.default.bool,
  hintText: _propTypes2$h.default.node,
  onChange: _propTypes2$h.default.func,
  onHeightChange: _propTypes2$h.default.func,
  rows: _propTypes2$h.default.number,
  rowsMax: _propTypes2$h.default.number,
  shadowStyle: _propTypes2$h.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$h.default.object,
  textareaStyle: _propTypes2$h.default.object,
  value: _propTypes2$h.default.string,
  valueLink: _propTypes2$h.default.object
} ;
EnhancedTextarea$1.default = EnhancedTextarea;

var TextFieldHint$1 = {};

Object.defineProperty(TextFieldHint$1, "__esModule", {
  value: true
});

var _simpleAssign$f = simpleAssign;

var _simpleAssign2$f = _interopRequireDefault$x(_simpleAssign$f);

var _react$l = react;

var _react2$k = _interopRequireDefault$x(_react$l);

var _propTypes$g = propTypes$5.exports;

var _propTypes2$g = _interopRequireDefault$x(_propTypes$g);

var _transitions$a = transitions$1;

var _transitions2$a = _interopRequireDefault$x(_transitions$a);

function _interopRequireDefault$x(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$b(props) {
  var hintColor = props.muiTheme.textField.hintColor,
      show = props.show;


  return {
    root: {
      position: 'absolute',
      opacity: show ? 1 : 0,
      color: hintColor,
      transition: _transitions2$a.default.easeOut(),
      bottom: 12
    }
  };
}

var TextFieldHint = function TextFieldHint(props) {
  var prepareStyles = props.muiTheme.prepareStyles,
      style = props.style,
      text = props.text;


  var styles = getStyles$b(props);

  return _react2$k.default.createElement(
    'div',
    { style: prepareStyles((0, _simpleAssign2$f.default)(styles.root, style)) },
    text
  );
};

TextFieldHint.propTypes = {
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$g.default.object.isRequired,
  /**
   * True if the hint text should be visible.
   */
  show: _propTypes2$g.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$g.default.object,
  /**
   * The hint text displayed.
   */
  text: _propTypes2$g.default.node
} ;

TextFieldHint.defaultProps = {
  show: true
};

TextFieldHint$1.default = TextFieldHint;

var TextFieldLabel$1 = {};

Object.defineProperty(TextFieldLabel$1, "__esModule", {
  value: true
});

var _simpleAssign$e = simpleAssign;

var _simpleAssign2$e = _interopRequireDefault$w(_simpleAssign$e);

var _react$k = react;

var _react2$j = _interopRequireDefault$w(_react$k);

var _propTypes$f = propTypes$5.exports;

var _propTypes2$f = _interopRequireDefault$w(_propTypes$f);

var _transitions$9 = transitions$1;

var _transitions2$9 = _interopRequireDefault$w(_transitions$9);

function _interopRequireDefault$w(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$a(props) {
  var defaultStyles = {
    position: 'absolute',
    lineHeight: '22px',
    top: 38,
    transition: _transitions2$9.default.easeOut(),
    zIndex: 1, // Needed to display label above Chrome's autocomplete field background
    transform: 'scale(1) translate(0, 0)',
    transformOrigin: 'left top',
    pointerEvents: 'auto',
    userSelect: 'none'
  };

  var shrinkStyles = props.shrink ? (0, _simpleAssign2$e.default)({
    transform: 'scale(0.75) translate(0, -28px)',
    pointerEvents: 'none'
  }, props.shrinkStyle) : null;

  return {
    root: (0, _simpleAssign2$e.default)(defaultStyles, props.style, shrinkStyles)
  };
}

var TextFieldLabel = function TextFieldLabel(props) {
  var muiTheme = props.muiTheme,
      className = props.className,
      children = props.children,
      htmlFor = props.htmlFor,
      onClick = props.onClick;
  var prepareStyles = muiTheme.prepareStyles;

  var styles = getStyles$a(props);

  return _react2$j.default.createElement(
    'label',
    {
      className: className,
      style: prepareStyles(styles.root),
      htmlFor: htmlFor,
      onClick: onClick
    },
    children
  );
};

TextFieldLabel.propTypes = {
  /**
   * The label contents.
   */
  children: _propTypes2$f.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$f.default.string,
  /**
   * Disables the label if set to true.
   */
  disabled: _propTypes2$f.default.bool,
  /**
   * The id of the target element that this label should refer to.
   */
  htmlFor: _propTypes2$f.default.string,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$f.default.object.isRequired,
  /**
   * Callback function for when the label is selected via a touch tap.
   *
   * @param {object} event TouchTap event targeting the text field label.
   */
  onClick: _propTypes2$f.default.func,
  /**
   * True if the floating label should shrink.
   */
  shrink: _propTypes2$f.default.bool,
  /**
   * Override the inline-styles of the root element when shrunk.
   */
  shrinkStyle: _propTypes2$f.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$f.default.object
} ;

TextFieldLabel.defaultProps = {
  disabled: false,
  shrink: false
};

TextFieldLabel$1.default = TextFieldLabel;

var TextFieldUnderline$1 = {};

Object.defineProperty(TextFieldUnderline$1, "__esModule", {
  value: true
});

var _simpleAssign$d = simpleAssign;

var _simpleAssign2$d = _interopRequireDefault$v(_simpleAssign$d);

var _react$j = react;

var _react2$i = _interopRequireDefault$v(_react$j);

var _propTypes$e = propTypes$5.exports;

var _propTypes2$e = _interopRequireDefault$v(_propTypes$e);

var _transitions$8 = transitions$1;

var _transitions2$8 = _interopRequireDefault$v(_transitions$8);

function _interopRequireDefault$v(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
   * True if the parent `TextField` is disabled.
   */
  disabled: _propTypes2$e.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is disabled.
   */
  disabledStyle: _propTypes2$e.default.object,
  /**
   * True if the parent `TextField` has an error.
   */
  error: _propTypes2$e.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` has an error.
   */
  errorStyle: _propTypes2$e.default.object,
  /**
   * True if the parent `TextField` is focused.
   */
  focus: _propTypes2$e.default.bool,
  /**
   * Override the inline-styles of the underline when parent `TextField` is focused.
   */
  focusStyle: _propTypes2$e.default.object,
  /**
   * @ignore
   * The material-ui theme applied to this component.
   */
  muiTheme: _propTypes2$e.default.object.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$e.default.object
};

var defaultProps = {
  disabled: false,
  disabledStyle: {},
  error: false,
  errorStyle: {},
  focus: false,
  focusStyle: {},
  style: {}
};

var TextFieldUnderline = function TextFieldUnderline(props) {
  var disabled = props.disabled,
      disabledStyle = props.disabledStyle,
      error = props.error,
      errorStyle = props.errorStyle,
      focus = props.focus,
      focusStyle = props.focusStyle,
      muiTheme = props.muiTheme,
      style = props.style;
  var errorStyleColor = errorStyle.color;
  var prepareStyles = muiTheme.prepareStyles,
      _muiTheme$textField = muiTheme.textField,
      borderColor = _muiTheme$textField.borderColor,
      disabledTextColor = _muiTheme$textField.disabledTextColor,
      errorColor = _muiTheme$textField.errorColor,
      focusColor = _muiTheme$textField.focusColor;


  var styles = {
    root: {
      borderTop: 'none',
      borderLeft: 'none',
      borderRight: 'none',
      borderBottomStyle: 'solid',
      borderBottomWidth: 1,
      borderColor: borderColor,
      bottom: 8,
      boxSizing: 'content-box',
      margin: 0,
      position: 'absolute',
      width: '100%'
    },
    disabled: {
      borderBottomStyle: 'dotted',
      borderBottomWidth: 2,
      borderColor: disabledTextColor
    },
    focus: {
      borderBottomStyle: 'solid',
      borderBottomWidth: 2,
      borderColor: focusColor,
      transform: 'scaleX(0)',
      transition: _transitions2$8.default.easeOut()
    },
    error: {
      borderColor: errorStyleColor ? errorStyleColor : errorColor,
      transform: 'scaleX(1)'
    }
  };

  var underline = (0, _simpleAssign2$d.default)({}, styles.root, style);
  var focusedUnderline = (0, _simpleAssign2$d.default)({}, underline, styles.focus, focusStyle);

  if (disabled) underline = (0, _simpleAssign2$d.default)({}, underline, styles.disabled, disabledStyle);
  if (focus) focusedUnderline = (0, _simpleAssign2$d.default)({}, focusedUnderline, { transform: 'scaleX(1)' });
  if (error) focusedUnderline = (0, _simpleAssign2$d.default)({}, focusedUnderline, styles.error);

  return _react2$i.default.createElement(
    'div',
    null,
    _react2$i.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(underline) }),
    _react2$i.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(focusedUnderline) })
  );
};

TextFieldUnderline.propTypes = propTypes ;
TextFieldUnderline.defaultProps = defaultProps;

TextFieldUnderline$1.default = TextFieldUnderline;

Object.defineProperty(TextField$1, "__esModule", {
  value: true
});

var _extends2$a = _extends$3;

var _extends3$a = _interopRequireDefault$u(_extends2$a);

var _objectWithoutProperties2$a = objectWithoutProperties$2;

var _objectWithoutProperties3$a = _interopRequireDefault$u(_objectWithoutProperties2$a);

var _getPrototypeOf$c = getPrototypeOf$1.exports;

var _getPrototypeOf2$c = _interopRequireDefault$u(_getPrototypeOf$c);

var _classCallCheck2$d = classCallCheck$3;

var _classCallCheck3$d = _interopRequireDefault$u(_classCallCheck2$d);

var _createClass2$d = createClass$2;

var _createClass3$d = _interopRequireDefault$u(_createClass2$d);

var _possibleConstructorReturn2$c = possibleConstructorReturn$3;

var _possibleConstructorReturn3$c = _interopRequireDefault$u(_possibleConstructorReturn2$c);

var _inherits2$c = inherits$3;

var _inherits3$c = _interopRequireDefault$u(_inherits2$c);

var _simpleAssign$c = simpleAssign;

var _simpleAssign2$c = _interopRequireDefault$u(_simpleAssign$c);

var _react$i = react;

var _react2$h = _interopRequireDefault$u(_react$i);

var _propTypes$d = propTypes$5.exports;

var _propTypes2$d = _interopRequireDefault$u(_propTypes$d);

var _reactDom$5 = reactDom;

var _reactDom2$5 = _interopRequireDefault$u(_reactDom$5);

var _shallowEqual$4 = shallowEqual$1;

var _shallowEqual2$4 = _interopRequireDefault$u(_shallowEqual$4);

var _transitions$7 = transitions$1;

var _transitions2$7 = _interopRequireDefault$u(_transitions$7);

var _EnhancedTextarea = EnhancedTextarea$1;

var _EnhancedTextarea2 = _interopRequireDefault$u(_EnhancedTextarea);

var _TextFieldHint = TextFieldHint$1;

var _TextFieldHint2 = _interopRequireDefault$u(_TextFieldHint);

var _TextFieldLabel = TextFieldLabel$1;

var _TextFieldLabel2 = _interopRequireDefault$u(_TextFieldLabel);

var _TextFieldUnderline = TextFieldUnderline$1;

var _TextFieldUnderline2 = _interopRequireDefault$u(_TextFieldUnderline);

var _warning = warning_1$1;

var _warning2 = _interopRequireDefault$u(_warning);

function _interopRequireDefault$u(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStyles$9 = function getStyles(props, context, state) {
  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      _context$muiTheme$tex = _context$muiTheme.textField,
      floatingLabelColor = _context$muiTheme$tex.floatingLabelColor,
      focusColor = _context$muiTheme$tex.focusColor,
      textColor = _context$muiTheme$tex.textColor,
      disabledTextColor = _context$muiTheme$tex.disabledTextColor,
      backgroundColor = _context$muiTheme$tex.backgroundColor,
      errorColor = _context$muiTheme$tex.errorColor;


  var styles = {
    root: {
      fontSize: 16,
      lineHeight: '24px',
      width: props.fullWidth ? '100%' : 256,
      height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),
      display: 'inline-block',
      position: 'relative',
      backgroundColor: backgroundColor,
      fontFamily: baseTheme.fontFamily,
      transition: _transitions2$7.default.easeOut('200ms', 'height'),
      cursor: props.disabled ? 'not-allowed' : 'auto'
    },
    error: {
      position: 'relative',
      bottom: 2,
      fontSize: 12,
      lineHeight: '12px',
      color: errorColor,
      transition: _transitions2$7.default.easeOut()
    },
    floatingLabel: {
      color: props.disabled ? disabledTextColor : floatingLabelColor,
      pointerEvents: 'none'
    },
    input: {
      padding: 0,
      position: 'relative',
      width: '100%',
      border: 'none',
      outline: 'none',
      backgroundColor: 'rgba(0,0,0,0)',
      color: props.disabled ? disabledTextColor : textColor,
      cursor: 'inherit',
      font: 'inherit',
      WebkitOpacity: 1,
      WebkitTapHighlightColor: 'rgba(0,0,0,0)' // Remove mobile color flashing (deprecated style).
    },
    inputNative: {
      appearance: 'textfield' // Improve type search style.
    }
  };

  styles.textarea = (0, _simpleAssign2$c.default)({}, styles.input, {
    marginTop: props.floatingLabelText ? 36 : 12,
    marginBottom: props.floatingLabelText ? -36 : -12,
    boxSizing: 'border-box',
    font: 'inherit'
  });

  // Do not assign a height to the textarea as he handles it on his own.
  styles.input.height = '100%';

  if (state.isFocused) {
    styles.floatingLabel.color = focusColor;
  }

  if (props.floatingLabelText) {
    styles.input.boxSizing = 'border-box';

    if (!props.multiLine) {
      styles.input.marginTop = 14;
    }

    if (state.errorText) {
      styles.error.bottom = !props.multiLine ? styles.error.fontSize + 3 : 3;
    }
  }

  if (state.errorText) {
    if (state.isFocused) {
      styles.floatingLabel.color = styles.error.color;
    }
  }

  return styles;
};

/**
 * Check if a value is valid to be displayed inside an input.
 *
 * @param The value to check.
 * @returns True if the string provided is valid, false otherwise.
 */
function isValid(value) {
  return value !== '' && value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);
}

var TextField = function (_Component) {
  (0, _inherits3$c.default)(TextField, _Component);

  function TextField() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$d.default)(this, TextField);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$c.default)(this, (_ref = TextField.__proto__ || (0, _getPrototypeOf2$c.default)(TextField)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isFocused: false,
      errorText: undefined,
      hasValue: false
    }, _this.handleInputBlur = function (event) {
      _this.setState({ isFocused: false });
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleInputChange = function (event) {
      if (!_this.props.hasOwnProperty('value')) {
        _this.setState({ hasValue: isValid(event.target.value) });
      }
      if (_this.props.onChange) {
        _this.props.onChange(event, event.target.value);
      }
    }, _this.handleInputFocus = function (event) {
      if (_this.props.disabled) {
        return;
      }
      _this.setState({ isFocused: true });
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleHeightChange = function (event, height) {
      var newHeight = height + 24;
      if (_this.props.floatingLabelText) {
        newHeight += 24;
      }
      _reactDom2$5.default.findDOMNode(_this).style.height = newHeight + 'px';
    }, _temp), (0, _possibleConstructorReturn3$c.default)(_this, _ret);
  }

  (0, _createClass3$d.default)(TextField, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          children = _props.children,
          name = _props.name,
          hintText = _props.hintText,
          floatingLabelText = _props.floatingLabelText,
          id = _props.id;


      var propsLeaf = children ? children.props : this.props;

      this.setState({
        errorText: this.props.errorText,
        hasValue: isValid(propsLeaf.value) || isValid(propsLeaf.defaultValue)
      });

      (0, _warning2.default)(name || hintText || floatingLabelText || id, 'Material-UI: We don\'t have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.') ;

      var uniqueId = name + '-' + hintText + '-' + floatingLabelText + '-' + Math.floor(Math.random() * 0xFFFF);
      this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled && !this.props.disabled) {
        this.setState({
          isFocused: false
        });
      }

      if (nextProps.errorText !== this.props.errorText) {
        this.setState({
          errorText: nextProps.errorText
        });
      }

      if (nextProps.children && nextProps.children.props) {
        nextProps = nextProps.children.props;
      }

      if (nextProps.hasOwnProperty('value')) {
        var hasValue = isValid(nextProps.value);

        this.setState({
          hasValue: hasValue
        });
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$4.default)(this.props, nextProps) || !(0, _shallowEqual2$4.default)(this.state, nextState) || !(0, _shallowEqual2$4.default)(this.context, nextContext);
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this.input) {
        this.getInputNode().blur();
      }
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (this.input) {
        this.getInputNode().focus();
      }
    }
  }, {
    key: 'select',
    value: function select() {
      if (this.input) {
        this.getInputNode().select();
      }
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.input ? this.getInputNode().value : undefined;
    }
  }, {
    key: 'getInputNode',
    value: function getInputNode() {
      return this.props.children || this.props.multiLine ? this.input.getInputNode() : _reactDom2$5.default.findDOMNode(this.input);
    }
  }, {
    key: '_isControlled',
    value: function _isControlled() {
      return this.props.hasOwnProperty('value');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          disabled = _props2.disabled,
          errorStyle = _props2.errorStyle;
          _props2.errorText;
          var floatingLabelFixed = _props2.floatingLabelFixed,
          floatingLabelFocusStyle = _props2.floatingLabelFocusStyle,
          floatingLabelShrinkStyle = _props2.floatingLabelShrinkStyle,
          floatingLabelStyle = _props2.floatingLabelStyle,
          floatingLabelText = _props2.floatingLabelText;
          _props2.fullWidth;
          var hintText = _props2.hintText,
          hintStyle = _props2.hintStyle,
          id = _props2.id,
          inputStyle = _props2.inputStyle,
          multiLine = _props2.multiLine;
          _props2.onBlur;
          _props2.onChange;
          _props2.onFocus;
          var style = _props2.style,
          type = _props2.type,
          underlineDisabledStyle = _props2.underlineDisabledStyle,
          underlineFocusStyle = _props2.underlineFocusStyle,
          underlineShow = _props2.underlineShow,
          underlineStyle = _props2.underlineStyle,
          rows = _props2.rows,
          rowsMax = _props2.rowsMax,
          textareaStyle = _props2.textareaStyle,
          other = (0, _objectWithoutProperties3$a.default)(_props2, ['children', 'className', 'disabled', 'errorStyle', 'errorText', 'floatingLabelFixed', 'floatingLabelFocusStyle', 'floatingLabelShrinkStyle', 'floatingLabelStyle', 'floatingLabelText', 'fullWidth', 'hintText', 'hintStyle', 'id', 'inputStyle', 'multiLine', 'onBlur', 'onChange', 'onFocus', 'style', 'type', 'underlineDisabledStyle', 'underlineFocusStyle', 'underlineShow', 'underlineStyle', 'rows', 'rowsMax', 'textareaStyle']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$9(this.props, this.context, this.state);
      var inputId = id || this.uniqueId;

      var errorTextElement = this.state.errorText && _react2$h.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$c.default)(styles.error, errorStyle)) },
        this.state.errorText
      );

      var floatingLabelTextElement = floatingLabelText && _react2$h.default.createElement(
        _TextFieldLabel2.default,
        {
          muiTheme: this.context.muiTheme,
          style: (0, _simpleAssign2$c.default)(styles.floatingLabel, floatingLabelStyle, this.state.isFocused ? floatingLabelFocusStyle : null),
          shrinkStyle: floatingLabelShrinkStyle,
          htmlFor: inputId,
          shrink: this.state.hasValue || this.state.isFocused || floatingLabelFixed,
          disabled: disabled
        },
        floatingLabelText
      );

      var inputProps = {
        id: inputId,
        ref: function ref(elem) {
          return _this2.input = elem;
        },
        disabled: this.props.disabled,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onFocus: this.handleInputFocus
      };

      var childStyleMerged = (0, _simpleAssign2$c.default)(styles.input, inputStyle);

      var inputElement = void 0;
      if (children) {
        inputElement = _react2$h.default.cloneElement(children, (0, _extends3$a.default)({}, inputProps, children.props, {
          style: (0, _simpleAssign2$c.default)(childStyleMerged, children.props.style)
        }));
      } else {
        inputElement = multiLine ? _react2$h.default.createElement(_EnhancedTextarea2.default, (0, _extends3$a.default)({
          style: childStyleMerged,
          textareaStyle: (0, _simpleAssign2$c.default)(styles.textarea, styles.inputNative, textareaStyle),
          rows: rows,
          rowsMax: rowsMax,
          hintText: hintText
        }, other, inputProps, {
          onHeightChange: this.handleHeightChange
        })) : _react2$h.default.createElement('input', (0, _extends3$a.default)({
          type: type,
          style: prepareStyles((0, _simpleAssign2$c.default)(styles.inputNative, childStyleMerged))
        }, other, inputProps));
      }

      var rootProps = {};

      if (children) {
        rootProps = other;
      }

      return _react2$h.default.createElement(
        'div',
        (0, _extends3$a.default)({}, rootProps, {
          className: className,
          style: prepareStyles((0, _simpleAssign2$c.default)(styles.root, style))
        }),
        floatingLabelTextElement,
        hintText ? _react2$h.default.createElement(_TextFieldHint2.default, {
          muiTheme: this.context.muiTheme,
          show: !(this.state.hasValue || floatingLabelText && !this.state.isFocused) || !this.state.hasValue && floatingLabelText && floatingLabelFixed && !this.state.isFocused,
          style: hintStyle,
          text: hintText
        }) : null,
        inputElement,
        underlineShow ? _react2$h.default.createElement(_TextFieldUnderline2.default, {
          disabled: disabled,
          disabledStyle: underlineDisabledStyle,
          error: !!this.state.errorText,
          errorStyle: errorStyle,
          focus: this.state.isFocused,
          focusStyle: underlineFocusStyle,
          muiTheme: this.context.muiTheme,
          style: underlineStyle
        }) : null,
        errorTextElement
      );
    }
  }]);
  return TextField;
}(_react$i.Component);

TextField.defaultProps = {
  disabled: false,
  floatingLabelFixed: false,
  multiLine: false,
  fullWidth: false,
  type: 'text',
  underlineShow: true,
  rows: 1
};
TextField.contextTypes = {
  muiTheme: _propTypes2$d.default.object.isRequired
};
TextField.propTypes = {
  children: _propTypes2$d.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$d.default.string,
  /**
   * The text string to use for the default value.
   */
  defaultValue: _propTypes2$d.default.any,
  /**
   * Disables the text field if set to true.
   */
  disabled: _propTypes2$d.default.bool,
  /**
   * The style object to use to override error styles.
   */
  errorStyle: _propTypes2$d.default.object,
  /**
   * The error content to display.
   */
  errorText: _propTypes2$d.default.node,
  /**
   * If true, the floating label will float even when there is no value.
   */
  floatingLabelFixed: _propTypes2$d.default.bool,
  /**
   * The style object to use to override floating label styles when focused.
   */
  floatingLabelFocusStyle: _propTypes2$d.default.object,
  /**
   * The style object to use to override floating label styles when shrunk.
   */
  floatingLabelShrinkStyle: _propTypes2$d.default.object,
  /**
   * The style object to use to override floating label styles.
   */
  floatingLabelStyle: _propTypes2$d.default.object,
  /**
   * The content to use for the floating label element.
   */
  floatingLabelText: _propTypes2$d.default.node,
  /**
   * If true, the field receives the property width 100%.
   */
  fullWidth: _propTypes2$d.default.bool,
  /**
   * Override the inline-styles of the TextField's hint text element.
   */
  hintStyle: _propTypes2$d.default.object,
  /**
   * The hint content to display.
   */
  hintText: _propTypes2$d.default.node,
  /**
   * The id prop for the text field.
   */
  id: _propTypes2$d.default.string,
  /**
   * Override the inline-styles of the TextField's input element.
   * When multiLine is false: define the style of the input element.
   * When multiLine is true: define the style of the container of the textarea.
   */
  inputStyle: _propTypes2$d.default.object,
  /**
   * If true, a textarea element will be rendered.
   * The textarea also grows and shrinks according to the number of lines.
   */
  multiLine: _propTypes2$d.default.bool,
  /**
   * Name applied to the input.
   */
  name: _propTypes2$d.default.string,
  /** @ignore */
  onBlur: _propTypes2$d.default.func,
  /**
   * Callback function that is fired when the textfield's value changes.
   *
   * @param {object} event Change event targeting the text field.
   * @param {string} newValue The new value of the text field.
   */
  onChange: _propTypes2$d.default.func,
  /** @ignore */
  onFocus: _propTypes2$d.default.func,
  /**
   * Number of rows to display when multiLine option is set to true.
   */
  rows: _propTypes2$d.default.number,
  /**
   * Maximum number of rows to display when
   * multiLine option is set to true.
   */
  rowsMax: _propTypes2$d.default.number,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$d.default.object,
  /**
   * Override the inline-styles of the TextField's textarea element.
   * The TextField use either a textarea or an input,
   * this property has effects only when multiLine is true.
   */
  textareaStyle: _propTypes2$d.default.object,
  /**
   * Specifies the type of input to display
   * such as "password" or "text".
   */
  type: _propTypes2$d.default.string,
  /**
   * Override the inline-styles of the
   * TextField's underline element when disabled.
   */
  underlineDisabledStyle: _propTypes2$d.default.object,
  /**
   * Override the inline-styles of the TextField's
   * underline element when focussed.
   */
  underlineFocusStyle: _propTypes2$d.default.object,
  /**
   * If true, shows the underline for the text field.
   */
  underlineShow: _propTypes2$d.default.bool,
  /**
   * Override the inline-styles of the TextField's underline element.
   */
  underlineStyle: _propTypes2$d.default.object,
  /**
   * The value of the text field.
   */
  value: _propTypes2$d.default.any
} ;
TextField$1.default = TextField;

Object.defineProperty(TextField$2, "__esModule", {
  value: true
});
TextField$2.default = undefined;

var _TextField$1 = TextField$1;

var _TextField2$1 = _interopRequireDefault$t(_TextField$1);

function _interopRequireDefault$t(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

TextField$2.default = _TextField2$1.default;

var Menu$2 = {};

var Menu$1 = {};

var List$1 = {};

Object.defineProperty(List$1, "__esModule", {
  value: true
});

var _extends2$9 = _extends$3;

var _extends3$9 = _interopRequireDefault$s(_extends2$9);

var _objectWithoutProperties2$9 = objectWithoutProperties$2;

var _objectWithoutProperties3$9 = _interopRequireDefault$s(_objectWithoutProperties2$9);

var _getPrototypeOf$b = getPrototypeOf$1.exports;

var _getPrototypeOf2$b = _interopRequireDefault$s(_getPrototypeOf$b);

var _classCallCheck2$c = classCallCheck$3;

var _classCallCheck3$c = _interopRequireDefault$s(_classCallCheck2$c);

var _createClass2$c = createClass$2;

var _createClass3$c = _interopRequireDefault$s(_createClass2$c);

var _possibleConstructorReturn2$b = possibleConstructorReturn$3;

var _possibleConstructorReturn3$b = _interopRequireDefault$s(_possibleConstructorReturn2$b);

var _inherits2$b = inherits$3;

var _inherits3$b = _interopRequireDefault$s(_inherits2$b);

var _simpleAssign$b = simpleAssign;

var _simpleAssign2$b = _interopRequireDefault$s(_simpleAssign$b);

var _react$h = react;

var _react2$g = _interopRequireDefault$s(_react$h);

var _propTypes$c = propTypes$5.exports;

var _propTypes2$c = _interopRequireDefault$s(_propTypes$c);

var _Subheader = Subheader$5;

var _Subheader2 = _interopRequireDefault$s(_Subheader);

function _interopRequireDefault$s(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var List = function (_Component) {
  (0, _inherits3$b.default)(List, _Component);

  function List() {
    (0, _classCallCheck3$c.default)(this, List);
    return (0, _possibleConstructorReturn3$b.default)(this, (List.__proto__ || (0, _getPrototypeOf2$b.default)(List)).apply(this, arguments));
  }

  (0, _createClass3$c.default)(List, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          other = (0, _objectWithoutProperties3$9.default)(_props, ['children', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;


      var hasSubheader = false;

      var firstChild = _react$h.Children.toArray(children)[0];
      if ((0, _react$h.isValidElement)(firstChild) && firstChild.type === _Subheader2.default) {
        hasSubheader = true;
      }

      var styles = {
        root: {
          padding: (hasSubheader ? 0 : 8) + 'px 0px 8px 0px'
        }
      };

      return _react2$g.default.createElement(
        'div',
        (0, _extends3$9.default)({}, other, { style: prepareStyles((0, _simpleAssign2$b.default)(styles.root, style)) }),
        children
      );
    }
  }]);
  return List;
}(_react$h.Component);

List.contextTypes = {
  muiTheme: _propTypes2$c.default.object.isRequired
};
List.propTypes = {
  /**
   * These are usually `ListItem`s that are passed to
   * be part of the list.
   */
  children: _propTypes2$c.default.node,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$c.default.object
} ;
List$1.default = List;

var menuUtils = {};

Object.defineProperty(menuUtils, "__esModule", {
  value: true
});
menuUtils.HotKeyHolder = undefined;

var _classCallCheck2$b = classCallCheck$3;

var _classCallCheck3$b = _interopRequireDefault$r(_classCallCheck2$b);

var _createClass2$b = createClass$2;

var _createClass3$b = _interopRequireDefault$r(_createClass2$b);

function _interopRequireDefault$r(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

menuUtils.HotKeyHolder = function () {
  function HotKeyHolder() {
    var _this = this;

    (0, _classCallCheck3$b.default)(this, HotKeyHolder);

    this.clear = function () {
      _this.timerId = null;
      _this.lastKeys = null;
    };
  }

  (0, _createClass3$b.default)(HotKeyHolder, [{
    key: 'append',
    value: function append(key) {
      clearTimeout(this.timerId);
      this.timerId = setTimeout(this.clear, 500);
      return this.lastKeys = (this.lastKeys || '') + key;
    }
  }]);
  return HotKeyHolder;
}();

Object.defineProperty(Menu$1, "__esModule", {
  value: true
});

var _extends2$8 = _extends$3;

var _extends3$8 = _interopRequireDefault$q(_extends2$8);

var _objectWithoutProperties2$8 = objectWithoutProperties$2;

var _objectWithoutProperties3$8 = _interopRequireDefault$q(_objectWithoutProperties2$8);

var _toArray2 = toArray;

var _toArray3 = _interopRequireDefault$q(_toArray2);

var _getPrototypeOf$a = getPrototypeOf$1.exports;

var _getPrototypeOf2$a = _interopRequireDefault$q(_getPrototypeOf$a);

var _classCallCheck2$a = classCallCheck$3;

var _classCallCheck3$a = _interopRequireDefault$q(_classCallCheck2$a);

var _createClass2$a = createClass$2;

var _createClass3$a = _interopRequireDefault$q(_createClass2$a);

var _possibleConstructorReturn2$a = possibleConstructorReturn$3;

var _possibleConstructorReturn3$a = _interopRequireDefault$q(_possibleConstructorReturn2$a);

var _inherits2$a = inherits$3;

var _inherits3$a = _interopRequireDefault$q(_inherits2$a);

var _simpleAssign$a = simpleAssign;

var _simpleAssign2$a = _interopRequireDefault$q(_simpleAssign$a);

var _react$g = react;

var _react2$f = _interopRequireDefault$q(_react$g);

var _propTypes$b = propTypes$5.exports;

var _propTypes2$b = _interopRequireDefault$q(_propTypes$b);

var _reactDom$4 = reactDom;

var _reactDom2$4 = _interopRequireDefault$q(_reactDom$4);

var _shallowEqual$3 = shallowEqual$1;

var _shallowEqual2$3 = _interopRequireDefault$q(_shallowEqual$3);

var _ClickAwayListener = ClickAwayListener$3;

var _ClickAwayListener2 = _interopRequireDefault$q(_ClickAwayListener);

var _keycode$1 = keycode.exports;

var _keycode2$1 = _interopRequireDefault$q(_keycode$1);

var _propTypes3$6 = propTypes$4;

var _propTypes4$6 = _interopRequireDefault$q(_propTypes3$6);

var _List$1 = List$1;

var _List2$1 = _interopRequireDefault$q(_List$1);

var _menuUtils = menuUtils;

function _interopRequireDefault$q(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$8(props, context) {
  var desktop = props.desktop,
      maxHeight = props.maxHeight,
      width = props.width;
  var muiTheme = context.muiTheme;


  var styles = {
    root: {
      // Nested div because the List scales x faster than it scales y
      zIndex: muiTheme.zIndex.menu,
      maxHeight: maxHeight,
      overflowY: maxHeight ? 'auto' : null
    },
    divider: {
      marginTop: 7,
      marginBottom: 8
    },
    list: {
      display: 'table-cell',
      paddingBottom: desktop ? 16 : 8,
      paddingTop: desktop ? 16 : 8,
      userSelect: 'none',
      width: width
    },
    selectedMenuItem: {
      color: muiTheme.menuItem.selectedTextColor
    }
  };

  return styles;
}

var Menu = function (_Component) {
  (0, _inherits3$a.default)(Menu, _Component);

  function Menu(props, context) {
    (0, _classCallCheck3$a.default)(this, Menu);

    var _this = (0, _possibleConstructorReturn3$a.default)(this, (Menu.__proto__ || (0, _getPrototypeOf2$a.default)(Menu)).call(this, props, context));

    _initialiseProps$1.call(_this);

    var filteredChildren = _this.getFilteredChildren(props.children);
    var selectedIndex = _this.getLastSelectedIndex(props, filteredChildren);

    var newFocusIndex = props.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
    if (newFocusIndex !== -1 && props.onMenuItemFocusChange) {
      props.onMenuItemFocusChange(null, newFocusIndex);
    }
    _this.state = {
      focusIndex: newFocusIndex,
      isKeyboardFocused: props.initiallyKeyboardFocused,
      keyWidth: props.desktop ? 64 : 56
    };

    _this.hotKeyHolder = new _menuUtils.HotKeyHolder();
    return _this;
  }

  (0, _createClass3$a.default)(Menu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.autoWidth) {
        this.setWidth();
      }
      this.setScollPosition();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var selectedIndex = void 0;
      var filteredChildren = this.getFilteredChildren(nextProps.children);

      if (this.props.multiple !== true) {
        selectedIndex = this.getLastSelectedIndex(nextProps, filteredChildren);
      } else {
        selectedIndex = this.state.focusIndex;
      }

      var newFocusIndex = nextProps.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
      if (newFocusIndex !== this.state.focusIndex && this.props.onMenuItemFocusChange) {
        this.props.onMenuItemFocusChange(null, newFocusIndex);
      }
      this.setState({
        focusIndex: newFocusIndex,
        keyWidth: nextProps.desktop ? 64 : 56
      });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$3.default)(this.props, nextProps) || !(0, _shallowEqual2$3.default)(this.state, nextState) || !(0, _shallowEqual2$3.default)(this.context, nextContext);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.autoWidth) this.setWidth();
    }
  }, {
    key: 'getValueLink',


    // Do not use outside of this component, it will be removed once valueLink is deprecated
    value: function getValueLink(props) {
      return props.valueLink || {
        value: props.value,
        requestChange: props.onChange
      };
    }
  }, {
    key: 'setKeyboardFocused',
    value: function setKeyboardFocused(keyboardFocused) {
      this.setState({
        isKeyboardFocused: keyboardFocused
      });
    }
  }, {
    key: 'getFilteredChildren',
    value: function getFilteredChildren(children) {
      var filteredChildren = [];
      _react2$f.default.Children.forEach(children, function (child) {
        if (child) {
          filteredChildren.push(child);
        }
      });
      return filteredChildren;
    }
  }, {
    key: 'cloneMenuItem',
    value: function cloneMenuItem(child, childIndex, styles, index) {
      var _this2 = this;

      var childIsDisabled = child.props.disabled;

      var selectedChildStyles = {};
      if (!childIsDisabled) {
        var selected = this.isChildSelected(child, this.props);

        if (selected) {
          (0, _simpleAssign2$a.default)(selectedChildStyles, styles.selectedMenuItem, this.props.selectedMenuItemStyle);
        }
      }
      var mergedChildStyles = (0, _simpleAssign2$a.default)({}, child.props.style, this.props.menuItemStyle, selectedChildStyles);

      var extraProps = {
        desktop: this.props.desktop,
        style: mergedChildStyles
      };
      if (!childIsDisabled) {
        var isFocused = childIndex === this.state.focusIndex;
        var focusState = 'none';
        if (isFocused) {
          focusState = this.state.isKeyboardFocused ? 'keyboard-focused' : 'focused';
        }

        (0, _simpleAssign2$a.default)(extraProps, {
          focusState: focusState,
          onClick: function onClick(event) {
            _this2.handleMenuItemTouchTap(event, child, index);
            if (child.props.onClick) child.props.onClick(event);
          },
          ref: isFocused ? 'focusedMenuItem' : null
        });
      }
      return _react2$f.default.cloneElement(child, extraProps);
    }
  }, {
    key: 'decrementKeyboardFocusIndex',
    value: function decrementKeyboardFocusIndex(event) {
      var index = this.state.focusIndex;

      index--;
      if (index < 0) index = 0;

      this.setFocusIndex(event, index, true);
    }
  }, {
    key: 'getMenuItemCount',
    value: function getMenuItemCount(filteredChildren) {
      var menuItemCount = 0;
      filteredChildren.forEach(function (child) {
        var childIsADivider = child.type && child.type.muiName === 'Divider';
        var childIsDisabled = child.props.disabled;
        if (!childIsADivider && !childIsDisabled) menuItemCount++;
      });
      return menuItemCount;
    }
  }, {
    key: 'getLastSelectedIndex',
    value: function getLastSelectedIndex(props, filteredChildren) {
      var _this3 = this;

      var selectedIndex = -1;
      var menuItemIndex = 0;

      filteredChildren.forEach(function (child) {
        var childIsADivider = child.type && child.type.muiName === 'Divider';

        if (_this3.isChildSelected(child, props)) selectedIndex = menuItemIndex;
        if (!childIsADivider) menuItemIndex++;
      });

      return selectedIndex;
    }
  }, {
    key: 'setFocusIndexStartsWith',
    value: function setFocusIndexStartsWith(event, keys) {
      var foundIndex = -1;
      _react2$f.default.Children.forEach(this.props.children, function (child, index) {
        if (foundIndex >= 0) {
          return;
        }
        var primaryText = child.props.primaryText;

        if (typeof primaryText === 'string' && primaryText.substr(0, keys.length).toLowerCase() === keys.toLowerCase()) {
          foundIndex = index;
        }
      });
      if (foundIndex >= 0) {
        this.setFocusIndex(event, foundIndex, true);
        return true;
      }
      return false;
    }
  }, {
    key: 'handleMenuItemTouchTap',
    value: function handleMenuItemTouchTap(event, item, index) {
      var children = this.props.children;
      var multiple = this.props.multiple;
      var valueLink = this.getValueLink(this.props);
      var menuValue = valueLink.value;
      var itemValue = item.props.value;
      var focusIndex = _react2$f.default.isValidElement(children) ? 0 : children.indexOf(item);

      this.setFocusIndex(event, focusIndex, false);

      if (multiple) {
        menuValue = menuValue || [];

        var itemIndex = menuValue.indexOf(itemValue);

        var _menuValue = menuValue,
            _menuValue2 = (0, _toArray3.default)(_menuValue),
            newMenuValue = _menuValue2.slice(0);

        if (itemIndex === -1) {
          newMenuValue.push(itemValue);
        } else {
          newMenuValue.splice(itemIndex, 1);
        }

        valueLink.requestChange(event, newMenuValue);
      } else if (!multiple && itemValue !== menuValue) {
        valueLink.requestChange(event, itemValue);
      }

      this.props.onItemTouchTap(event, item, index);
    }
  }, {
    key: 'incrementKeyboardFocusIndex',
    value: function incrementKeyboardFocusIndex(event, filteredChildren) {
      var index = this.state.focusIndex;
      var maxIndex = this.getMenuItemCount(filteredChildren) - 1;

      index++;
      if (index > maxIndex) index = maxIndex;

      this.setFocusIndex(event, index, true);
    }
  }, {
    key: 'isChildSelected',
    value: function isChildSelected(child, props) {
      var menuValue = this.getValueLink(props).value;
      var childValue = child.props.value;

      if (props.multiple) {
        return menuValue && menuValue.length && menuValue.indexOf(childValue) !== -1;
      } else {
        return child.props.hasOwnProperty('value') && menuValue === childValue;
      }
    }
  }, {
    key: 'setFocusIndex',
    value: function setFocusIndex(event, newIndex, isKeyboardFocused) {
      if (this.props.onMenuItemFocusChange) {
        // Do this even if `newIndex === this.state.focusIndex` to allow users
        // to detect up-arrow on the first MenuItem or down-arrow on the last.
        this.props.onMenuItemFocusChange(event, newIndex);
      }
      this.setState({
        focusIndex: newIndex,
        isKeyboardFocused: isKeyboardFocused
      });
    }
  }, {
    key: 'setScollPosition',
    value: function setScollPosition() {
      var desktop = this.props.desktop;
      var focusedMenuItem = this.refs.focusedMenuItem;
      var menuItemHeight = desktop ? 32 : 48;

      if (focusedMenuItem) {
        var selectedOffSet = _reactDom2$4.default.findDOMNode(focusedMenuItem).offsetTop;

        // Make the focused item be the 2nd item in the list the user sees
        var scrollTop = selectedOffSet - menuItemHeight;
        if (scrollTop < menuItemHeight) scrollTop = 0;

        _reactDom2$4.default.findDOMNode(this.refs.scrollContainer).scrollTop = scrollTop;
      }
    }
  }, {
    key: 'cancelScrollEvent',
    value: function cancelScrollEvent(event) {
      event.stopPropagation();
      event.preventDefault();
      return false;
    }
  }, {
    key: 'setWidth',
    value: function setWidth() {
      var el = _reactDom2$4.default.findDOMNode(this);
      var listEl = _reactDom2$4.default.findDOMNode(this.refs.list);
      var elWidth = el.offsetWidth;
      var keyWidth = this.state.keyWidth;
      var minWidth = keyWidth * 1.5;
      var keyIncrements = elWidth / keyWidth;
      var newWidth = void 0;

      keyIncrements = keyIncrements <= 1.5 ? 1.5 : Math.ceil(keyIncrements);
      newWidth = keyIncrements * keyWidth;

      if (newWidth < minWidth) newWidth = minWidth;

      el.style.width = newWidth + 'px';
      listEl.style.width = newWidth + 'px';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props = this.props;
          _props.autoWidth;
          var children = _props.children;
          _props.desktop;
          _props.disableAutoFocus;
          _props.initiallyKeyboardFocused;
          var listStyle = _props.listStyle;
          _props.maxHeight;
          _props.multiple;
          _props.onItemTouchTap;
          _props.onEscKeyDown;
          _props.onMenuItemFocusChange;
          _props.selectedMenuItemStyle;
          _props.menuItemStyle;
          var style = _props.style;
          _props.value;
          _props.valueLink;
          _props.width;
          var other = (0, _objectWithoutProperties3$8.default)(_props, ['autoWidth', 'children', 'desktop', 'disableAutoFocus', 'initiallyKeyboardFocused', 'listStyle', 'maxHeight', 'multiple', 'onItemTouchTap', 'onEscKeyDown', 'onMenuItemFocusChange', 'selectedMenuItemStyle', 'menuItemStyle', 'style', 'value', 'valueLink', 'width']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$8(this.props, this.context);

      var mergedRootStyles = (0, _simpleAssign2$a.default)(styles.root, style);
      var mergedListStyles = (0, _simpleAssign2$a.default)(styles.list, listStyle);

      var filteredChildren = this.getFilteredChildren(children);

      var menuItemIndex = 0;
      var newChildren = _react2$f.default.Children.map(filteredChildren, function (child, index) {
        var childIsDisabled = child.props.disabled;
        var childName = child.type ? child.type.muiName : '';
        var newChild = child;

        switch (childName) {
          case 'MenuItem':
            newChild = _this4.cloneMenuItem(child, menuItemIndex, styles, index);
            break;

          case 'Divider':
            newChild = _react2$f.default.cloneElement(child, {
              style: (0, _simpleAssign2$a.default)({}, styles.divider, child.props.style)
            });
            break;
        }

        if (childName === 'MenuItem' && !childIsDisabled) {
          menuItemIndex++;
        }

        return newChild;
      });

      return _react2$f.default.createElement(
        _ClickAwayListener2.default,
        { onClickAway: this.handleClickAway },
        _react2$f.default.createElement(
          'div',
          {
            onKeyDown: this.handleKeyDown,
            onWheel: this.handleOnWheel,
            style: prepareStyles(mergedRootStyles),
            ref: 'scrollContainer',
            role: 'presentation'
          },
          _react2$f.default.createElement(
            _List2$1.default,
            (0, _extends3$8.default)({}, other, {
              ref: 'list',
              style: mergedListStyles,
              role: 'menu'
            }),
            newChildren
          )
        )
      );
    }
  }]);
  return Menu;
}(_react$g.Component);

Menu.defaultProps = {
  autoWidth: true,
  desktop: false,
  disableAutoFocus: false,
  initiallyKeyboardFocused: false,
  maxHeight: null,
  multiple: false,
  onChange: function onChange() {},
  onEscKeyDown: function onEscKeyDown() {},
  onItemTouchTap: function onItemTouchTap() {},
  onKeyDown: function onKeyDown() {}
};
Menu.contextTypes = {
  muiTheme: _propTypes2$b.default.object.isRequired
};

var _initialiseProps$1 = function _initialiseProps() {
  var _this5 = this;

  this.handleClickAway = function (event) {
    if (event.defaultPrevented) {
      return;
    }

    var focusIndex = _this5.state.focusIndex;

    if (focusIndex < 0) {
      return;
    }

    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
    var focusedItem = filteredChildren[focusIndex];
    if (focusedItem.props.menuItems && focusedItem.props.menuItems.length > 0) {
      return;
    }

    _this5.setFocusIndex(event, -1, false);
  };

  this.handleKeyDown = function (event) {
    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
    var key = (0, _keycode2$1.default)(event);
    switch (key) {
      case 'down':
        event.preventDefault();
        _this5.incrementKeyboardFocusIndex(event, filteredChildren);
        break;
      case 'esc':
        _this5.props.onEscKeyDown(event);
        break;
      case 'tab':
        event.preventDefault();
        if (event.shiftKey) {
          _this5.decrementKeyboardFocusIndex(event);
        } else {
          _this5.incrementKeyboardFocusIndex(event, filteredChildren);
        }
        break;
      case 'up':
        event.preventDefault();
        _this5.decrementKeyboardFocusIndex(event);
        break;
      default:
        if (key && key.length === 1) {
          var hotKeys = _this5.hotKeyHolder.append(key);
          if (_this5.setFocusIndexStartsWith(event, hotKeys)) {
            event.preventDefault();
          }
        }
    }
    _this5.props.onKeyDown(event);
  };

  this.handleOnWheel = function (event) {
    var scrollContainer = _this5.refs.scrollContainer;
    // Only scroll lock if the the Menu is scrollable.
    if (scrollContainer.scrollHeight <= scrollContainer.clientHeight) return;

    var scrollTop = scrollContainer.scrollTop,
        scrollHeight = scrollContainer.scrollHeight,
        clientHeight = scrollContainer.clientHeight;

    var wheelDelta = event.deltaY;
    var isDeltaPositive = wheelDelta > 0;

    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {
      scrollContainer.scrollTop = scrollHeight;
      return _this5.cancelScrollEvent(event);
    } else if (!isDeltaPositive && -wheelDelta > scrollTop) {
      scrollContainer.scrollTop = 0;
      return _this5.cancelScrollEvent(event);
    }
  };
};

Menu.propTypes = {
  /**
   * If true, the width of the menu will be set automatically
   * according to the widths of its children,
   * using proper keyline increments (64px for desktop,
   * 56px otherwise).
   */
  autoWidth: _propTypes2$b.default.bool,
  /**
   * The content of the menu. This is usually used to pass `MenuItem`
   * elements.
   */
  children: _propTypes2$b.default.node,
  /**
   * If true, the menu item will render with compact desktop styles.
   */
  desktop: _propTypes2$b.default.bool,
  /**
   * If true, the menu will not be auto-focused.
   */
  disableAutoFocus: _propTypes2$b.default.bool,
  /**
   * If true, the menu will be keyboard-focused initially.
   */
  initiallyKeyboardFocused: _propTypes2$b.default.bool,
  /**
   * Override the inline-styles of the underlying `List` element.
   */
  listStyle: _propTypes2$b.default.object,
  /**
   * The maximum height of the menu in pixels. If specified,
   * the menu will be scrollable if it is taller than the provided
   * height.
   */
  maxHeight: _propTypes2$b.default.number,
  /**
   * Override the inline-styles of menu items.
   */
  menuItemStyle: _propTypes2$b.default.object,
  /**
   * If true, `value` must be an array and the menu will support
   * multiple selections.
   */
  multiple: _propTypes2$b.default.bool,
  /**
   * Callback function fired when a menu item with `value` not
   * equal to the current `value` of the menu is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the menu item.
   * @param {any}  value If `multiple` is true, the menu's `value`
   * array with either the menu item's `value` added (if
   * it wasn't already selected) or omitted (if it was already selected).
   * Otherwise, the `value` of the menu item.
   */
  onChange: _propTypes2$b.default.func,
  /**
   * Callback function fired when the menu is focused and the *Esc* key
   * is pressed.
   *
   * @param {object} event `keydown` event targeting the menu.
   */
  onEscKeyDown: _propTypes2$b.default.func,
  /**
   * Callback function fired when a menu item is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the menu item.
   * @param {object} menuItem The menu item.
   * @param {number} index The index of the menu item.
   */
  onItemTouchTap: _propTypes2$b.default.func,
  /** @ignore */
  onKeyDown: _propTypes2$b.default.func,
  /**
   * Callback function fired when the focus on a `MenuItem` is changed.
   * There will be some "duplicate" changes reported if two different
   * focusing event happen, for example if a `MenuItem` is focused via
   * the keyboard and then it is clicked on.
   *
   * @param {object} event The event that triggered the focus change.
   * The event can be null since the focus can be changed for non-event
   * reasons such as prop changes.
   * @param {number} newFocusIndex The index of the newly focused
   * `MenuItem` or `-1` if focus was lost.
   */
  onMenuItemFocusChange: _propTypes2$b.default.func,
  /**
   * Override the inline-styles of selected menu items.
   */
  selectedMenuItemStyle: _propTypes2$b.default.object,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$b.default.object,
  /**
   * If `multiple` is true, an array of the `value`s of the selected
   * menu items. Otherwise, the `value` of the selected menu item.
   * If provided, the menu will be a controlled component.
   * This component also supports valueLink.
   */
  value: _propTypes2$b.default.any,
  /**
   * ValueLink for the menu's `value`.
   */
  valueLink: _propTypes2$b.default.object,
  /**
   * The width of the menu. If not specified, the menu's width
   * will be set according to the widths of its children, using
   * proper keyline increments (64px for desktop, 56px otherwise).
   */
  width: _propTypes4$6.default.stringOrNumber
} ;
Menu$1.default = Menu;

var MenuItem$2 = {};

var MenuItem$1 = {};

var Popover$2 = {};

var PopoverAnimationDefault$1 = {};

Object.defineProperty(PopoverAnimationDefault$1, "__esModule", {
  value: true
});

var _getPrototypeOf$9 = getPrototypeOf$1.exports;

var _getPrototypeOf2$9 = _interopRequireDefault$p(_getPrototypeOf$9);

var _classCallCheck2$9 = classCallCheck$3;

var _classCallCheck3$9 = _interopRequireDefault$p(_classCallCheck2$9);

var _createClass2$9 = createClass$2;

var _createClass3$9 = _interopRequireDefault$p(_createClass2$9);

var _possibleConstructorReturn2$9 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$9 = _interopRequireDefault$p(_possibleConstructorReturn2$9);

var _inherits2$9 = inherits$3;

var _inherits3$9 = _interopRequireDefault$p(_inherits2$9);

var _simpleAssign$9 = simpleAssign;

var _simpleAssign2$9 = _interopRequireDefault$p(_simpleAssign$9);

var _transitions$6 = transitions$1;

var _transitions2$6 = _interopRequireDefault$p(_transitions$6);

var _react$f = react;

var _react2$e = _interopRequireDefault$p(_react$f);

var _propTypes$a = propTypes$5.exports;

var _propTypes2$a = _interopRequireDefault$p(_propTypes$a);

var _propTypes3$5 = propTypes$4;

var _propTypes4$5 = _interopRequireDefault$p(_propTypes3$5);

var _Paper$2 = Paper$5;

var _Paper2$2 = _interopRequireDefault$p(_Paper$2);

function _interopRequireDefault$p(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$7(props, context, state) {
  var targetOrigin = props.targetOrigin;
  var open = state.open;
  var muiTheme = context.muiTheme;

  var horizontal = targetOrigin.horizontal.replace('middle', 'vertical');

  return {
    root: {
      position: 'fixed',
      zIndex: muiTheme.zIndex.popover,
      opacity: open ? 1 : 0,
      transform: open ? 'scale(1, 1)' : 'scale(0, 0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$6.default.easeOut('250ms', ['transform', 'opacity']),
      maxHeight: '100%'
    },
    horizontal: {
      maxHeight: '100%',
      overflowY: 'auto',
      transform: open ? 'scaleX(1)' : 'scaleX(0)',
      opacity: open ? 1 : 0,
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$6.default.easeOut('250ms', ['transform', 'opacity'])
    },
    vertical: {
      opacity: open ? 1 : 0,
      transform: open ? 'scaleY(1)' : 'scaleY(0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2$6.default.easeOut('500ms', ['transform', 'opacity'])
    }
  };
}

var PopoverAnimationDefault = function (_Component) {
  (0, _inherits3$9.default)(PopoverAnimationDefault, _Component);

  function PopoverAnimationDefault() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$9.default)(this, PopoverAnimationDefault);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$9.default)(this, (_ref = PopoverAnimationDefault.__proto__ || (0, _getPrototypeOf2$9.default)(PopoverAnimationDefault)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _temp), (0, _possibleConstructorReturn3$9.default)(_this, _ret);
  }

  (0, _createClass3$9.default)(PopoverAnimationDefault, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        open: nextProps.open
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          zDepth = _props.zDepth;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$7(this.props, this.context, this.state);

      return _react2$e.default.createElement(
        _Paper2$2.default,
        {
          style: (0, _simpleAssign2$9.default)(styles.root, style),
          zDepth: zDepth,
          className: className
        },
        _react2$e.default.createElement(
          'div',
          { style: prepareStyles(styles.horizontal) },
          _react2$e.default.createElement(
            'div',
            { style: prepareStyles(styles.vertical) },
            this.props.children
          )
        )
      );
    }
  }]);
  return PopoverAnimationDefault;
}(_react$f.Component);

PopoverAnimationDefault.defaultProps = {
  style: {},
  zDepth: 1
};
PopoverAnimationDefault.contextTypes = {
  muiTheme: _propTypes2$a.default.object.isRequired
};
PopoverAnimationDefault.propTypes = {
  children: _propTypes2$a.default.node,
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$a.default.string,
  open: _propTypes2$a.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$a.default.object,
  targetOrigin: _propTypes4$5.default.origin.isRequired,
  zDepth: _propTypes4$5.default.zDepth
} ;
PopoverAnimationDefault$1.default = PopoverAnimationDefault;

Object.defineProperty(Popover$2, "__esModule", {
  value: true
});

var _extends2$7 = _extends$3;

var _extends3$7 = _interopRequireDefault$o(_extends2$7);

var _objectWithoutProperties2$7 = objectWithoutProperties$2;

var _objectWithoutProperties3$7 = _interopRequireDefault$o(_objectWithoutProperties2$7);

var _getPrototypeOf$8 = getPrototypeOf$1.exports;

var _getPrototypeOf2$8 = _interopRequireDefault$o(_getPrototypeOf$8);

var _classCallCheck2$8 = classCallCheck$3;

var _classCallCheck3$8 = _interopRequireDefault$o(_classCallCheck2$8);

var _createClass2$8 = createClass$2;

var _createClass3$8 = _interopRequireDefault$o(_createClass2$8);

var _possibleConstructorReturn2$8 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$8 = _interopRequireDefault$o(_possibleConstructorReturn2$8);

var _inherits2$8 = inherits$3;

var _inherits3$8 = _interopRequireDefault$o(_inherits2$8);

var _simpleAssign$8 = simpleAssign;

var _simpleAssign2$8 = _interopRequireDefault$o(_simpleAssign$8);

var _react$e = react;

var _react2$d = _interopRequireDefault$o(_react$e);

var _propTypes$9 = propTypes$5.exports;

var _propTypes2$9 = _interopRequireDefault$o(_propTypes$9);

var _reactDom$3 = reactDom;

var _reactDom2$3 = _interopRequireDefault$o(_reactDom$3);

var _reactEventListener = reactEventListener_cjs$1;

var _reactEventListener2 = _interopRequireDefault$o(_reactEventListener);

var _RenderToLayer = RenderToLayer$3;

var _RenderToLayer2 = _interopRequireDefault$o(_RenderToLayer);

var _propTypes3$4 = propTypes$4;

var _propTypes4$4 = _interopRequireDefault$o(_propTypes3$4);

var _Paper$1 = Paper$5;

var _Paper2$1 = _interopRequireDefault$o(_Paper$1);

var _lodash = lodash_throttle;

var _lodash2 = _interopRequireDefault$o(_lodash);

var _PopoverAnimationDefault = PopoverAnimationDefault$1;

var _PopoverAnimationDefault2 = _interopRequireDefault$o(_PopoverAnimationDefault);

function _interopRequireDefault$o(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles$5 = {
  root: {
    display: 'none'
  }
};

var Popover$1 = function (_Component) {
  (0, _inherits3$8.default)(Popover, _Component);

  function Popover(props, context) {
    (0, _classCallCheck3$8.default)(this, Popover);

    var _this = (0, _possibleConstructorReturn3$8.default)(this, (Popover.__proto__ || (0, _getPrototypeOf2$8.default)(Popover)).call(this, props, context));

    _this.timeout = null;

    _this.renderLayer = function () {
      var _this$props = _this.props,
          animated = _this$props.animated,
          animation = _this$props.animation;
          _this$props.anchorEl;
          _this$props.anchorOrigin;
          _this$props.autoCloseWhenOffScreen;
          _this$props.canAutoPosition;
          var children = _this$props.children;
          _this$props.onRequestClose;
          var style = _this$props.style,
          targetOrigin = _this$props.targetOrigin;
          _this$props.useLayerForClickAway;
          _this$props.scrollableContainer;
          var other = (0, _objectWithoutProperties3$7.default)(_this$props, ['animated', 'animation', 'anchorEl', 'anchorOrigin', 'autoCloseWhenOffScreen', 'canAutoPosition', 'children', 'onRequestClose', 'style', 'targetOrigin', 'useLayerForClickAway', 'scrollableContainer']);


      var styleRoot = style;

      if (!animated) {
        styleRoot = {
          position: 'fixed',
          zIndex: _this.context.muiTheme.zIndex.popover
        };

        if (!_this.state.open) {
          return null;
        }

        return _react2$d.default.createElement(
          _Paper2$1.default,
          (0, _extends3$7.default)({ style: (0, _simpleAssign2$8.default)(styleRoot, style) }, other),
          children
        );
      }

      var Animation = animation || _PopoverAnimationDefault2.default;

      return _react2$d.default.createElement(
        Animation,
        (0, _extends3$7.default)({
          targetOrigin: targetOrigin,
          style: styleRoot
        }, other, {
          open: _this.state.open && !_this.state.closing
        }),
        children
      );
    };

    _this.componentClickAway = function () {
      _this.requestClose('clickAway');
    };

    _this.setPlacement = function (scrolling) {
      if (!_this.state.open) {
        return;
      }

      if (!_this.popoverRefs.layer.getLayer()) {
        return;
      }

      var targetEl = _this.popoverRefs.layer.getLayer().children[0];
      if (!targetEl) {
        return;
      }

      var _this$props2 = _this.props,
          targetOrigin = _this$props2.targetOrigin,
          anchorOrigin = _this$props2.anchorOrigin;

      var anchorEl = _this.props.anchorEl || _this.anchorEl;

      var anchor = _this.getAnchorPosition(anchorEl);
      var target = _this.getTargetPosition(targetEl);

      var targetPosition = {
        top: anchor[anchorOrigin.vertical] - target[targetOrigin.vertical],
        left: anchor[anchorOrigin.horizontal] - target[targetOrigin.horizontal]
      };

      if (scrolling && _this.props.autoCloseWhenOffScreen) {
        _this.autoCloseWhenOffScreen(anchor);
      }

      if (_this.props.canAutoPosition) {
        target = _this.getTargetPosition(targetEl); // update as height may have changed
        targetPosition = _this.applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition);
      }

      targetEl.style.top = targetPosition.top + 'px';
      targetEl.style.left = targetPosition.left + 'px';
      targetEl.style.maxHeight = window.innerHeight + 'px';
    };

    _this.handleResize = (0, _lodash2.default)(_this.setPlacement, 100);
    _this.handleScroll = (0, _lodash2.default)(_this.setPlacement.bind(_this, true), 50);

    _this.popoverRefs = {};

    _this.state = {
      open: props.open,
      closing: false
    };
    return _this;
  }

  (0, _createClass3$8.default)(Popover, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.placementTimeout = setTimeout(this.setPlacement);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (nextProps.open === this.props.open) {
        return;
      }

      if (nextProps.open) {
        clearTimeout(this.timeout);
        this.timeout = null;
        this.anchorEl = nextProps.anchorEl || this.props.anchorEl;
        this.setState({
          open: true,
          closing: false
        });
      } else {
        if (nextProps.animated) {
          if (this.timeout !== null) return;
          this.setState({ closing: true });
          this.timeout = setTimeout(function () {
            _this2.setState({
              open: false
            }, function () {
              _this2.timeout = null;
            });
          }, 500);
        } else {
          this.setState({
            open: false
          });
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      clearTimeout(this.placementTimeout);
      this.placementTimeout = setTimeout(this.setPlacement);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.handleResize.cancel();
      this.handleScroll.cancel();

      if (this.placementTimeout) {
        clearTimeout(this.placementTimeout);
        this.placementTimeout = null;
      }

      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
    }
  }, {
    key: 'requestClose',
    value: function requestClose(reason) {
      if (this.props.onRequestClose) {
        this.props.onRequestClose(reason);
      }
    }
  }, {
    key: 'getAnchorPosition',
    value: function getAnchorPosition(el) {
      if (!el) {
        el = _reactDom2$3.default.findDOMNode(this);
      }

      var rect = el.getBoundingClientRect();
      var a = {
        top: rect.top,
        left: rect.left,
        width: el.offsetWidth,
        height: el.offsetHeight
      };

      a.right = rect.right || a.left + a.width;
      a.bottom = rect.bottom || a.top + a.height;
      a.middle = a.left + (a.right - a.left) / 2;
      a.center = a.top + (a.bottom - a.top) / 2;

      return a;
    }
  }, {
    key: 'getTargetPosition',
    value: function getTargetPosition(targetEl) {
      return {
        top: 0,
        center: targetEl.offsetHeight / 2,
        bottom: targetEl.offsetHeight,
        left: 0,
        middle: targetEl.offsetWidth / 2,
        right: targetEl.offsetWidth
      };
    }
  }, {
    key: 'autoCloseWhenOffScreen',
    value: function autoCloseWhenOffScreen(anchorPosition) {
      if (anchorPosition.top < 0 || anchorPosition.top > window.innerHeight || anchorPosition.left < 0 || anchorPosition.left > window.innerWidth) {
        this.requestClose('offScreen');
      }
    }
  }, {
    key: 'getOverlapMode',
    value: function getOverlapMode(anchor, target, median) {
      if ([anchor, target].indexOf(median) >= 0) return 'auto';
      if (anchor === target) return 'inclusive';
      return 'exclusive';
    }
  }, {
    key: 'getPositions',
    value: function getPositions(anchor, target) {
      var a = (0, _extends3$7.default)({}, anchor);
      var t = (0, _extends3$7.default)({}, target);

      var positions = {
        x: ['left', 'right'].filter(function (p) {
          return p !== t.horizontal;
        }),
        y: ['top', 'bottom'].filter(function (p) {
          return p !== t.vertical;
        })
      };

      var overlap = {
        x: this.getOverlapMode(a.horizontal, t.horizontal, 'middle'),
        y: this.getOverlapMode(a.vertical, t.vertical, 'center')
      };

      positions.x.splice(overlap.x === 'auto' ? 0 : 1, 0, 'middle');
      positions.y.splice(overlap.y === 'auto' ? 0 : 1, 0, 'center');

      if (overlap.y !== 'auto') {
        a.vertical = a.vertical === 'top' ? 'bottom' : 'top';
        if (overlap.y === 'inclusive') {
          t.vertical = t.vertical;
        }
      }

      if (overlap.x !== 'auto') {
        a.horizontal = a.horizontal === 'left' ? 'right' : 'left';
        if (overlap.y === 'inclusive') {
          t.horizontal = t.horizontal;
        }
      }

      return {
        positions: positions,
        anchorPos: a
      };
    }
  }, {
    key: 'applyAutoPositionIfNeeded',
    value: function applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition) {
      var _getPositions = this.getPositions(anchorOrigin, targetOrigin),
          positions = _getPositions.positions,
          anchorPos = _getPositions.anchorPos;

      if (targetPosition.top < 0 || targetPosition.top + target.bottom > window.innerHeight) {
        var newTop = anchor[anchorPos.vertical] - target[positions.y[0]];
        if (newTop + target.bottom <= window.innerHeight) {
          targetPosition.top = Math.max(0, newTop);
        } else {
          newTop = anchor[anchorPos.vertical] - target[positions.y[1]];
          if (newTop + target.bottom <= window.innerHeight) {
            targetPosition.top = Math.max(0, newTop);
          }
        }
      }

      if (targetPosition.left < 0 || targetPosition.left + target.right > window.innerWidth) {
        var newLeft = anchor[anchorPos.horizontal] - target[positions.x[0]];
        if (newLeft + target.right <= window.innerWidth) {
          targetPosition.left = Math.max(0, newLeft);
        } else {
          newLeft = anchor[anchorPos.horizontal] - target[positions.x[1]];
          if (newLeft + target.right <= window.innerWidth) {
            targetPosition.left = Math.max(0, newLeft);
          }
        }
      }

      return targetPosition;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2$d.default.createElement(
        'div',
        { style: styles$5.root },
        _react2$d.default.createElement(_reactEventListener2.default, {
          target: this.props.scrollableContainer,
          onScroll: this.handleScroll,
          onResize: this.handleResize
        }),
        _react2$d.default.createElement(_RenderToLayer2.default, {
          ref: function ref(_ref) {
            return _this3.popoverRefs.layer = _ref;
          },
          open: this.state.open,
          componentClickAway: this.componentClickAway,
          useLayerForClickAway: this.props.useLayerForClickAway,
          render: this.renderLayer
        })
      );
    }
  }]);
  return Popover;
}(_react$e.Component);

Popover$1.defaultProps = {
  anchorOrigin: {
    vertical: 'bottom',
    horizontal: 'left'
  },
  animated: true,
  autoCloseWhenOffScreen: true,
  canAutoPosition: true,
  onRequestClose: function onRequestClose() {},
  open: false,
  scrollableContainer: 'window',
  style: {
    overflowY: 'auto'
  },
  targetOrigin: {
    vertical: 'top',
    horizontal: 'left'
  },
  useLayerForClickAway: true,
  zDepth: 1
};
Popover$1.contextTypes = {
  muiTheme: _propTypes2$9.default.object.isRequired
};
Popover$1.propTypes = {
  /**
   * This is the DOM element that will be used to set the position of the
   * popover.
   */
  anchorEl: _propTypes2$9.default.object,
  /**
   * This is the point on the anchor where the popover's
   * `targetOrigin` will attach to.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  anchorOrigin: _propTypes4$4.default.origin,
  /**
   * If true, the popover will apply transitions when
   * it is added to the DOM.
   */
  animated: _propTypes2$9.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$9.default.func,
  /**
   * If true, the popover will hide when the anchor is scrolled off the screen.
   */
  autoCloseWhenOffScreen: _propTypes2$9.default.bool,
  /**
   * If true, the popover (potentially) ignores `targetOrigin`
   * and `anchorOrigin` to make itself fit on screen,
   * which is useful for mobile devices.
   */
  canAutoPosition: _propTypes2$9.default.bool,
  /**
   * The content of the popover.
   */
  children: _propTypes2$9.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$9.default.string,
  /**
   * Callback function fired when the popover is requested to be closed.
   *
   * @param {string} reason The reason for the close request. Possibles values
   * are 'clickAway' and 'offScreen'.
   */
  onRequestClose: _propTypes2$9.default.func,
  /**
   * If true, the popover is visible.
   */
  open: _propTypes2$9.default.bool,
  /**
   * Represents the parent scrollable container.
   * It can be an element or a string like `window`.
   */
  scrollableContainer: _propTypes2$9.default.oneOfType([_propTypes2$9.default.object, _propTypes2$9.default.string]),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$9.default.object,
  /**
   * This is the point on the popover which will attach to
   * the anchor's origin.
   * Options:
   * vertical: [top, center, bottom]
   * horizontal: [left, middle, right].
   */
  targetOrigin: _propTypes4$4.default.origin,
  /**
   * If true, the popover will render on top of an invisible
   * layer, which will prevent clicks to the underlying
   * elements, and trigger an `onRequestClose('clickAway')` call.
   */
  useLayerForClickAway: _propTypes2$9.default.bool,
  /**
   * The zDepth of the popover.
   */
  zDepth: _propTypes4$4.default.zDepth
} ;
Popover$2.default = Popover$1;

var check = {};

var pure$1 = {};

var shouldUpdate$1 = {};

var setDisplayName$2 = {};

var setStatic$2 = {};

setStatic$2.__esModule = true;
var setStatic$1 = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */
    return BaseComponent;
  };
};

setStatic$2.default = setStatic$1;

setDisplayName$2.__esModule = true;

var _setStatic = setStatic$2;

var _setStatic2 = _interopRequireDefault$n(_setStatic);

function _interopRequireDefault$n(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var setDisplayName$1 = function setDisplayName(displayName) {
  return (0, _setStatic2.default)('displayName', displayName);
};

setDisplayName$2.default = setDisplayName$1;

var wrapDisplayName$2 = {};

var getDisplayName$2 = {};

getDisplayName$2.__esModule = true;
var getDisplayName$1 = function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  if (!Component) {
    return undefined;
  }

  return Component.displayName || Component.name || 'Component';
};

getDisplayName$2.default = getDisplayName$1;

wrapDisplayName$2.__esModule = true;

var _getDisplayName = getDisplayName$2;

var _getDisplayName2 = _interopRequireDefault$m(_getDisplayName);

function _interopRequireDefault$m(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var wrapDisplayName$1 = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';
};

wrapDisplayName$2.default = wrapDisplayName$1;

shouldUpdate$1.__esModule = true;

var _react$d = react;

var _setDisplayName$1 = setDisplayName$2;

var _setDisplayName2$1 = _interopRequireDefault$l(_setDisplayName$1);

var _wrapDisplayName$1 = wrapDisplayName$2;

var _wrapDisplayName2$1 = _interopRequireDefault$l(_wrapDisplayName$1);

function _interopRequireDefault$l(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var shouldUpdate = function shouldUpdate(test) {
  return function (BaseComponent) {
    var factory = (0, _react$d.createFactory)(BaseComponent);

    var ShouldUpdate = function (_Component) {
      _inherits(ShouldUpdate, _Component);

      function ShouldUpdate() {
        _classCallCheck(this, ShouldUpdate);

        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
      }

      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        return test(this.props, nextProps);
      };

      ShouldUpdate.prototype.render = function render() {
        return factory(this.props);
      };

      return ShouldUpdate;
    }(_react$d.Component);

    {
      return (0, _setDisplayName2$1.default)((0, _wrapDisplayName2$1.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
    }
  };
};

shouldUpdate$1.default = shouldUpdate;

pure$1.__esModule = true;

var _shouldUpdate = shouldUpdate$1;

var _shouldUpdate2 = _interopRequireDefault$k(_shouldUpdate);

var _shallowEqual$2 = shallowEqual$1;

var _shallowEqual2$2 = _interopRequireDefault$k(_shallowEqual$2);

var _setDisplayName = setDisplayName$2;

var _setDisplayName2 = _interopRequireDefault$k(_setDisplayName);

var _wrapDisplayName = wrapDisplayName$2;

var _wrapDisplayName2 = _interopRequireDefault$k(_wrapDisplayName);

function _interopRequireDefault$k(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pure = function pure(BaseComponent) {
  var hoc = (0, _shouldUpdate2.default)(function (props, nextProps) {
    return !(0, _shallowEqual2$2.default)(props, nextProps);
  });

  {
    return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
  }
};

pure$1.default = pure;

var SvgIcon$2 = {};

var SvgIcon$1 = {};

Object.defineProperty(SvgIcon$1, "__esModule", {
  value: true
});

var _extends2$6 = _extends$3;

var _extends3$6 = _interopRequireDefault$j(_extends2$6);

var _objectWithoutProperties2$6 = objectWithoutProperties$2;

var _objectWithoutProperties3$6 = _interopRequireDefault$j(_objectWithoutProperties2$6);

var _getPrototypeOf$7 = getPrototypeOf$1.exports;

var _getPrototypeOf2$7 = _interopRequireDefault$j(_getPrototypeOf$7);

var _classCallCheck2$7 = classCallCheck$3;

var _classCallCheck3$7 = _interopRequireDefault$j(_classCallCheck2$7);

var _createClass2$7 = createClass$2;

var _createClass3$7 = _interopRequireDefault$j(_createClass2$7);

var _possibleConstructorReturn2$7 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$7 = _interopRequireDefault$j(_possibleConstructorReturn2$7);

var _inherits2$7 = inherits$3;

var _inherits3$7 = _interopRequireDefault$j(_inherits2$7);

var _simpleAssign$7 = simpleAssign;

var _simpleAssign2$7 = _interopRequireDefault$j(_simpleAssign$7);

var _react$c = react;

var _react2$c = _interopRequireDefault$j(_react$c);

var _propTypes$8 = propTypes$5.exports;

var _propTypes2$8 = _interopRequireDefault$j(_propTypes$8);

var _transitions$5 = transitions$1;

var _transitions2$5 = _interopRequireDefault$j(_transitions$5);

function _interopRequireDefault$j(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SvgIcon = function (_Component) {
  (0, _inherits3$7.default)(SvgIcon, _Component);

  function SvgIcon() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$7.default)(this, SvgIcon);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$7.default)(this, (_ref = SvgIcon.__proto__ || (0, _getPrototypeOf2$7.default)(SvgIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleMouseEnter = function (event) {
      _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _temp), (0, _possibleConstructorReturn3$7.default)(_this, _ret);
  }

  (0, _createClass3$7.default)(SvgIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          color = _props.color,
          hoverColor = _props.hoverColor;
          _props.onMouseEnter;
          _props.onMouseLeave;
          var style = _props.style,
          viewBox = _props.viewBox,
          other = (0, _objectWithoutProperties3$6.default)(_props, ['children', 'color', 'hoverColor', 'onMouseEnter', 'onMouseLeave', 'style', 'viewBox']);
      var _context$muiTheme = this.context.muiTheme,
          svgIcon = _context$muiTheme.svgIcon,
          prepareStyles = _context$muiTheme.prepareStyles;


      var offColor = color ? color : 'currentColor';
      var onColor = hoverColor ? hoverColor : offColor;

      var mergedStyles = (0, _simpleAssign2$7.default)({
        display: 'inline-block',
        color: svgIcon.color,
        fill: this.state.hovered ? onColor : offColor,
        height: 24,
        width: 24,
        userSelect: 'none',
        transition: _transitions2$5.default.easeOut()
      }, style);

      return _react2$c.default.createElement(
        'svg',
        (0, _extends3$6.default)({}, other, {
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave,
          style: prepareStyles(mergedStyles),
          viewBox: viewBox
        }),
        children
      );
    }
  }]);
  return SvgIcon;
}(_react$c.Component);

SvgIcon.muiName = 'SvgIcon';
SvgIcon.defaultProps = {
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  viewBox: '0 0 24 24'
};
SvgIcon.contextTypes = {
  muiTheme: _propTypes2$8.default.object.isRequired
};
SvgIcon.propTypes = {
  /**
   * Elements passed into the SVG Icon.
   */
  children: _propTypes2$8.default.node,
  /**
   * This is the fill color of the svg icon.
   * If not specified, this component will default
   * to muiTheme.palette.textColor.
   */
  color: _propTypes2$8.default.string,
  /**
   * This is the icon color when the mouse hovers over the icon.
   */
  hoverColor: _propTypes2$8.default.string,
  /** @ignore */
  onMouseEnter: _propTypes2$8.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$8.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$8.default.object,
  /**
   * Allows you to redefine what the coordinates
   * without units mean inside an svg element. For example,
   * if the SVG element is 500 (width) by 200 (height), and you
   * pass viewBox="0 0 50 20", this means that the coordinates inside
   * the svg will go from the top left corner (0,0) to bottom right (50,20)
   * and each unit will be worth 10px.
   */
  viewBox: _propTypes2$8.default.string
} ;
SvgIcon$1.default = SvgIcon;

Object.defineProperty(SvgIcon$2, "__esModule", {
  value: true
});
SvgIcon$2.default = undefined;

var _SvgIcon$3 = SvgIcon$1;

var _SvgIcon2$3 = _interopRequireDefault$i(_SvgIcon$3);

function _interopRequireDefault$i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

SvgIcon$2.default = _SvgIcon2$3.default;

Object.defineProperty(check, "__esModule", {
  value: true
});

var _react$b = react;

var _react2$b = _interopRequireDefault$h(_react$b);

var _pure$2 = pure$1;

var _pure2$2 = _interopRequireDefault$h(_pure$2);

var _SvgIcon$2 = SvgIcon$2;

var _SvgIcon2$2 = _interopRequireDefault$h(_SvgIcon$2);

function _interopRequireDefault$h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationCheck = function NavigationCheck(props) {
  return _react2$b.default.createElement(
    _SvgIcon2$2.default,
    props,
    _react2$b.default.createElement('path', { d: 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z' })
  );
};
NavigationCheck = (0, _pure2$2.default)(NavigationCheck);
NavigationCheck.displayName = 'NavigationCheck';
NavigationCheck.muiName = 'SvgIcon';

check.default = NavigationCheck;

var ListItem$1 = {};

var IconButton$2 = {};

var IconButton$1 = {};

var FontIcon$2 = {};

var FontIcon$1 = {};

Object.defineProperty(FontIcon$1, "__esModule", {
  value: true
});

var _extends2$5 = _extends$3;

var _extends3$5 = _interopRequireDefault$g(_extends2$5);

var _objectWithoutProperties2$5 = objectWithoutProperties$2;

var _objectWithoutProperties3$5 = _interopRequireDefault$g(_objectWithoutProperties2$5);

var _getPrototypeOf$6 = getPrototypeOf$1.exports;

var _getPrototypeOf2$6 = _interopRequireDefault$g(_getPrototypeOf$6);

var _classCallCheck2$6 = classCallCheck$3;

var _classCallCheck3$6 = _interopRequireDefault$g(_classCallCheck2$6);

var _createClass2$6 = createClass$2;

var _createClass3$6 = _interopRequireDefault$g(_createClass2$6);

var _possibleConstructorReturn2$6 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$6 = _interopRequireDefault$g(_possibleConstructorReturn2$6);

var _inherits2$6 = inherits$3;

var _inherits3$6 = _interopRequireDefault$g(_inherits2$6);

var _simpleAssign$6 = simpleAssign;

var _simpleAssign2$6 = _interopRequireDefault$g(_simpleAssign$6);

var _react$a = react;

var _react2$a = _interopRequireDefault$g(_react$a);

var _propTypes$7 = propTypes$5.exports;

var _propTypes2$7 = _interopRequireDefault$g(_propTypes$7);

var _transitions$4 = transitions$1;

var _transitions2$4 = _interopRequireDefault$g(_transitions$4);

function _interopRequireDefault$g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$6(props, context, state) {
  var color = props.color,
      hoverColor = props.hoverColor;
  var baseTheme = context.muiTheme.baseTheme;

  var offColor = color || baseTheme.palette.textColor;
  var onColor = hoverColor || offColor;

  return {
    root: {
      color: state.hovered ? onColor : offColor,
      position: 'relative',
      fontSize: baseTheme.spacing.iconSize,
      display: 'inline-block',
      userSelect: 'none',
      transition: _transitions2$4.default.easeOut()
    }
  };
}

var FontIcon = function (_Component) {
  (0, _inherits3$6.default)(FontIcon, _Component);

  function FontIcon() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$6.default)(this, FontIcon);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$6.default)(this, (_ref = FontIcon.__proto__ || (0, _getPrototypeOf2$6.default)(FontIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false
    }, _this.handleMouseLeave = function (event) {
      // hover is needed only when a hoverColor is defined
      if (_this.props.hoverColor !== undefined) {
        _this.setState({ hovered: false });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseEnter = function (event) {
      // hover is needed only when a hoverColor is defined
      if (_this.props.hoverColor !== undefined) {
        _this.setState({ hovered: true });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$6.default)(_this, _ret);
  }

  (0, _createClass3$6.default)(FontIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.hoverColor;
          _props.onMouseLeave;
          _props.onMouseEnter;
          var style = _props.style,
          other = (0, _objectWithoutProperties3$5.default)(_props, ['hoverColor', 'onMouseLeave', 'onMouseEnter', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$6(this.props, this.context, this.state);

      return _react2$a.default.createElement('span', (0, _extends3$5.default)({}, other, {
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        style: prepareStyles((0, _simpleAssign2$6.default)(styles.root, style))
      }));
    }
  }]);
  return FontIcon;
}(_react$a.Component);

FontIcon.muiName = 'FontIcon';
FontIcon.defaultProps = {
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {}
};
FontIcon.contextTypes = {
  muiTheme: _propTypes2$7.default.object.isRequired
};
FontIcon.propTypes = {
  /**
   * This is the font color of the font icon. If not specified,
   * this component will default to muiTheme.palette.textColor.
   */
  color: _propTypes2$7.default.string,
  /**
   * This is the icon color when the mouse hovers over the icon.
   */
  hoverColor: _propTypes2$7.default.string,
  /** @ignore */
  onMouseEnter: _propTypes2$7.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$7.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$7.default.object
} ;
FontIcon$1.default = FontIcon;

Object.defineProperty(FontIcon$2, "__esModule", {
  value: true
});
FontIcon$2.default = undefined;

var _FontIcon$1 = FontIcon$1;

var _FontIcon2$1 = _interopRequireDefault$f(_FontIcon$1);

function _interopRequireDefault$f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

FontIcon$2.default = _FontIcon2$1.default;

var Tooltip$1 = {};

Object.defineProperty(Tooltip$1, "__esModule", {
  value: true
});

var _extends2$4 = _extends$3;

var _extends3$4 = _interopRequireDefault$e(_extends2$4);

var _objectWithoutProperties2$4 = objectWithoutProperties$2;

var _objectWithoutProperties3$4 = _interopRequireDefault$e(_objectWithoutProperties2$4);

var _getPrototypeOf$5 = getPrototypeOf$1.exports;

var _getPrototypeOf2$5 = _interopRequireDefault$e(_getPrototypeOf$5);

var _classCallCheck2$5 = classCallCheck$3;

var _classCallCheck3$5 = _interopRequireDefault$e(_classCallCheck2$5);

var _createClass2$5 = createClass$2;

var _createClass3$5 = _interopRequireDefault$e(_createClass2$5);

var _possibleConstructorReturn2$5 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$5 = _interopRequireDefault$e(_possibleConstructorReturn2$5);

var _inherits2$5 = inherits$3;

var _inherits3$5 = _interopRequireDefault$e(_inherits2$5);

var _simpleAssign$5 = simpleAssign;

var _simpleAssign2$5 = _interopRequireDefault$e(_simpleAssign$5);

var _react$9 = react;

var _react2$9 = _interopRequireDefault$e(_react$9);

var _propTypes$6 = propTypes$5.exports;

var _propTypes2$6 = _interopRequireDefault$e(_propTypes$6);

var _transitions$3 = transitions$1;

var _transitions2$3 = _interopRequireDefault$e(_transitions$3);

function _interopRequireDefault$e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$5(props, context, state) {
  var verticalPosition = props.verticalPosition;
  var horizontalPosition = props.horizontalPosition;
  var touchMarginOffset = props.touch ? 10 : 0;
  var touchOffsetTop = props.touch ? -20 : -10;
  var offset = verticalPosition === 'bottom' ? 14 + touchMarginOffset : -14 - touchMarginOffset;

  var _context$muiTheme = context.muiTheme,
      baseTheme = _context$muiTheme.baseTheme,
      zIndex = _context$muiTheme.zIndex,
      tooltip = _context$muiTheme.tooltip,
      borderRadius = _context$muiTheme.borderRadius;


  var styles = {
    root: {
      position: 'absolute',
      fontFamily: baseTheme.fontFamily,
      fontSize: '10px',
      lineHeight: '22px',
      padding: '0 8px',
      zIndex: zIndex.tooltip,
      color: tooltip.color,
      overflow: 'hidden',
      top: -10000,
      borderRadius: borderRadius,
      userSelect: 'none',
      opacity: 0,
      right: horizontalPosition === 'left' ? 12 : null,
      left: horizontalPosition === 'center' ? (state.offsetWidth - 48) / 2 * -1 : horizontalPosition === 'right' ? 12 : null,
      transition: _transitions2$3.default.easeOut('0ms', 'top', '450ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'opacity', '0ms')
    },
    label: {
      position: 'relative',
      whiteSpace: 'nowrap'
    },
    ripple: {
      position: 'absolute',
      left: horizontalPosition === 'center' ? '50%' : horizontalPosition === 'left' ? '100%' : '0%',
      top: verticalPosition === 'bottom' ? 0 : '100%',
      transform: 'translate(-50%, -50%)',
      borderRadius: '50%',
      backgroundColor: 'transparent',
      transition: _transitions2$3.default.easeOut('0ms', 'width', '450ms') + ', ' + _transitions2$3.default.easeOut('0ms', 'height', '450ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'backgroundColor', '0ms')
    },
    rootWhenShown: {
      top: verticalPosition === 'top' ? touchOffsetTop : 36,
      opacity: tooltip.opacity,
      transform: 'translate(0px, ' + offset + 'px)',
      transition: _transitions2$3.default.easeOut('0ms', 'top', '0ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'opacity', '0ms')
    },
    rootWhenTouched: {
      fontSize: '14px',
      lineHeight: '32px',
      padding: '0 16px'
    },
    rippleWhenShown: {
      backgroundColor: tooltip.rippleBackgroundColor,
      transition: _transitions2$3.default.easeOut('450ms', 'width', '0ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'height', '0ms') + ', ' + _transitions2$3.default.easeOut('450ms', 'backgroundColor', '0ms')
    }
  };

  return styles;
}

var Tooltip = function (_Component) {
  (0, _inherits3$5.default)(Tooltip, _Component);

  function Tooltip() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$5.default)(this, Tooltip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$5.default)(this, (_ref = Tooltip.__proto__ || (0, _getPrototypeOf2$5.default)(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      offsetWidth: null
    }, _temp), (0, _possibleConstructorReturn3$5.default)(_this, _ret);
  }

  (0, _createClass3$5.default)(Tooltip, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setRippleSize();
      this.setTooltipPosition();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      this.setTooltipPosition();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.setRippleSize();
    }
  }, {
    key: 'setRippleSize',
    value: function setRippleSize() {
      var ripple = this.refs.ripple;
      var tooltip = this.refs.tooltip;
      var tooltipWidth = parseInt(tooltip.offsetWidth, 10) / (this.props.horizontalPosition === 'center' ? 2 : 1);
      var tooltipHeight = parseInt(tooltip.offsetHeight, 10);

      var rippleDiameter = Math.ceil(Math.sqrt(Math.pow(tooltipHeight, 2) + Math.pow(tooltipWidth, 2)) * 2);
      if (this.props.show) {
        ripple.style.height = rippleDiameter + 'px';
        ripple.style.width = rippleDiameter + 'px';
      } else {
        ripple.style.width = '0px';
        ripple.style.height = '0px';
      }
    }
  }, {
    key: 'setTooltipPosition',
    value: function setTooltipPosition() {
      this.setState({ offsetWidth: this.refs.tooltip.offsetWidth });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
          _props.horizontalPosition;
          var label = _props.label;
          _props.show;
          _props.touch;
          _props.verticalPosition;
          var other = (0, _objectWithoutProperties3$4.default)(_props, ['horizontalPosition', 'label', 'show', 'touch', 'verticalPosition']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$5(this.props, this.context, this.state);

      return _react2$9.default.createElement(
        'div',
        (0, _extends3$4.default)({}, other, {
          ref: 'tooltip',
          style: prepareStyles((0, _simpleAssign2$5.default)(styles.root, this.props.show && styles.rootWhenShown, this.props.touch && styles.rootWhenTouched, this.props.style))
        }),
        _react2$9.default.createElement('div', {
          ref: 'ripple',
          style: prepareStyles((0, _simpleAssign2$5.default)(styles.ripple, this.props.show && styles.rippleWhenShown))
        }),
        _react2$9.default.createElement(
          'span',
          { style: prepareStyles(styles.label) },
          label
        )
      );
    }
  }]);
  return Tooltip;
}(_react$9.Component);

Tooltip.contextTypes = {
  muiTheme: _propTypes2$6.default.object.isRequired
};
Tooltip.propTypes = {
  /**
   * The css class name of the root element.
   */
  className: _propTypes2$6.default.string,
  horizontalPosition: _propTypes2$6.default.oneOf(['left', 'right', 'center']),
  label: _propTypes2$6.default.node.isRequired,
  show: _propTypes2$6.default.bool,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$6.default.object,
  touch: _propTypes2$6.default.bool,
  verticalPosition: _propTypes2$6.default.oneOf(['top', 'bottom'])
} ;
Tooltip$1.default = Tooltip;

var childUtils = {};

Object.defineProperty(childUtils, "__esModule", {
  value: true
});
childUtils.extendChildren = extendChildren;

var _react$8 = react;

var _react2$8 = _interopRequireDefault$d(_react$8);

function _interopRequireDefault$d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function extendChildren(children, extendedProps, extendedChildren) {
  return _react2$8.default.Children.map(children, function (child) {
    if (!_react2$8.default.isValidElement(child)) {
      return child;
    }

    var newProps = typeof extendedProps === 'function' ? extendedProps(child) : extendedProps;

    var newChildren = typeof extendedChildren === 'function' ? extendedChildren(child) : extendedChildren ? extendedChildren : child.props.children;

    return _react2$8.default.cloneElement(child, newProps, newChildren);
  });
}

Object.defineProperty(IconButton$1, "__esModule", {
  value: true
});

var _extends2$3 = _extends$3;

var _extends3$3 = _interopRequireDefault$c(_extends2$3);

var _objectWithoutProperties2$3 = objectWithoutProperties$2;

var _objectWithoutProperties3$3 = _interopRequireDefault$c(_objectWithoutProperties2$3);

var _getPrototypeOf$4 = getPrototypeOf$1.exports;

var _getPrototypeOf2$4 = _interopRequireDefault$c(_getPrototypeOf$4);

var _classCallCheck2$4 = classCallCheck$3;

var _classCallCheck3$4 = _interopRequireDefault$c(_classCallCheck2$4);

var _createClass2$4 = createClass$2;

var _createClass3$4 = _interopRequireDefault$c(_createClass2$4);

var _possibleConstructorReturn2$4 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$4 = _interopRequireDefault$c(_possibleConstructorReturn2$4);

var _inherits2$4 = inherits$3;

var _inherits3$4 = _interopRequireDefault$c(_inherits2$4);

var _simpleAssign$4 = simpleAssign;

var _simpleAssign2$4 = _interopRequireDefault$c(_simpleAssign$4);

var _react$7 = react;

var _react2$7 = _interopRequireDefault$c(_react$7);

var _propTypes$5 = propTypes$5.exports;

var _propTypes2$5 = _interopRequireDefault$c(_propTypes$5);

var _transitions$2 = transitions$1;

var _transitions2$2 = _interopRequireDefault$c(_transitions$2);

var _propTypes3$3 = propTypes$4;

var _propTypes4$3 = _interopRequireDefault$c(_propTypes3$3);

var _EnhancedButton$1 = EnhancedButton$3;

var _EnhancedButton2$1 = _interopRequireDefault$c(_EnhancedButton$1);

var _FontIcon = FontIcon$2;

var _FontIcon2 = _interopRequireDefault$c(_FontIcon);

var _Tooltip = Tooltip$1;

var _Tooltip2 = _interopRequireDefault$c(_Tooltip);

var _childUtils = childUtils;

function _interopRequireDefault$c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$4(props, context) {
  var baseTheme = context.muiTheme.baseTheme;


  return {
    root: {
      boxSizing: 'border-box',
      overflow: 'visible',
      transition: _transitions2$2.default.easeOut(),
      padding: baseTheme.spacing.iconSize / 2,
      width: baseTheme.spacing.iconSize * 2,
      height: baseTheme.spacing.iconSize * 2,
      fontSize: 0
    },
    tooltip: {
      boxSizing: 'border-box'
    },
    disabled: {
      color: baseTheme.palette.disabledColor,
      fill: baseTheme.palette.disabledColor,
      cursor: 'default'
    }
  };
}

var IconButton = function (_Component) {
  (0, _inherits3$4.default)(IconButton, _Component);

  function IconButton() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$4.default)(this, IconButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$4.default)(this, (_ref = IconButton.__proto__ || (0, _getPrototypeOf2$4.default)(IconButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      // Not to be confonded with the touch property.
      // This state is to determined if it's a mobile device.
      touch: false,
      tooltipShown: false
    }, _this.handleBlur = function (event) {
      _this.hideTooltip();
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleFocus = function (event) {
      _this.showTooltip();
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.handleMouseLeave = function (event) {
      if (!_this.button.isKeyboardFocused()) {
        _this.hideTooltip();
      }
      _this.setState({ hovered: false });
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(event);
      }
    }, _this.handleMouseOut = function (event) {
      if (_this.props.disabled) _this.hideTooltip();
      if (_this.props.onMouseOut) _this.props.onMouseOut(event);
    }, _this.handleMouseEnter = function (event) {
      _this.showTooltip();

      // Cancel hover styles for touch devices
      if (!_this.state.touch) {
        _this.setState({ hovered: true });
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(event);
      }
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });

      if (_this.props.onTouchStart) {
        _this.props.onTouchStart(event);
      }
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onFocus = _this$props.onFocus,
          onBlur = _this$props.onBlur,
          onKeyboardFocus = _this$props.onKeyboardFocus;

      if (isKeyboardFocused && !disabled) {
        _this.showTooltip();
        if (onFocus) {
          onFocus(event);
        }
      } else {
        _this.hideTooltip();
        if (onBlur) {
          onBlur(event);
        }
      }

      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      if (onKeyboardFocus) {
        onKeyboardFocus(event, isKeyboardFocused);
      }
    }, _temp), (0, _possibleConstructorReturn3$4.default)(_this, _ret);
  }

  (0, _createClass3$4.default)(IconButton, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.disabled) {
        this.setState({ hovered: false });
      }
    }
  }, {
    key: 'setKeyboardFocus',
    value: function setKeyboardFocus() {
      this.button.setKeyboardFocus();
    }
  }, {
    key: 'showTooltip',
    value: function showTooltip() {
      if (this.props.tooltip) {
        this.setState({ tooltipShown: true });
      }
    }
  }, {
    key: 'hideTooltip',
    value: function hideTooltip() {
      if (this.props.tooltip) this.setState({ tooltipShown: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          disabled = _props.disabled,
          hoveredStyle = _props.hoveredStyle,
          disableTouchRipple = _props.disableTouchRipple,
          children = _props.children,
          iconClassName = _props.iconClassName,
          style = _props.style,
          tooltip = _props.tooltip,
          tooltipPositionProp = _props.tooltipPosition,
          tooltipStyles = _props.tooltipStyles,
          touch = _props.touch,
          iconStyle = _props.iconStyle,
          other = (0, _objectWithoutProperties3$3.default)(_props, ['disabled', 'hoveredStyle', 'disableTouchRipple', 'children', 'iconClassName', 'style', 'tooltip', 'tooltipPosition', 'tooltipStyles', 'touch', 'iconStyle']);

      var fonticon = void 0;

      var styles = getStyles$4(this.props, this.context);
      var tooltipPosition = tooltipPositionProp.split('-');

      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

      var mergedRootStyles = (0, _simpleAssign2$4.default)(styles.root, style, hovered ? hoveredStyle : {});

      var tooltipElement = tooltip ? _react2$7.default.createElement(_Tooltip2.default, {
        label: tooltip,
        show: this.state.tooltipShown,
        touch: touch,
        style: (0, _simpleAssign2$4.default)(styles.tooltip, tooltipStyles),
        verticalPosition: tooltipPosition[0],
        horizontalPosition: tooltipPosition[1]
      }) : null;

      if (iconClassName) {
        var iconHoverColor = iconStyle.iconHoverColor,
            iconStyleFontIcon = (0, _objectWithoutProperties3$3.default)(iconStyle, ['iconHoverColor']);


        fonticon = _react2$7.default.createElement(
          _FontIcon2.default,
          {
            className: iconClassName,
            hoverColor: disabled ? null : iconHoverColor,
            style: (0, _simpleAssign2$4.default)({}, disabled && styles.disabled, iconStyleFontIcon),
            color: this.context.muiTheme.baseTheme.palette.textColor
          },
          children
        );
      }

      var childrenStyle = disabled ? (0, _simpleAssign2$4.default)({}, iconStyle, styles.disabled) : iconStyle;

      return _react2$7.default.createElement(
        _EnhancedButton2$1.default,
        (0, _extends3$3.default)({
          ref: function ref(_ref2) {
            return _this2.button = _ref2;
          }
        }, other, {
          centerRipple: true,
          disabled: disabled,
          onTouchStart: this.handleTouchStart,
          style: mergedRootStyles,
          disableTouchRipple: disableTouchRipple,
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onMouseLeave: this.handleMouseLeave,
          onMouseEnter: this.handleMouseEnter,
          onMouseOut: this.handleMouseOut,
          onKeyboardFocus: this.handleKeyboardFocus
        }),
        tooltipElement,
        fonticon,
        (0, _childUtils.extendChildren)(children, {
          style: childrenStyle
        })
      );
    }
  }]);
  return IconButton;
}(_react$7.Component);

IconButton.muiName = 'IconButton';
IconButton.defaultProps = {
  disabled: false,
  disableTouchRipple: false,
  iconStyle: {},
  tooltipPosition: 'bottom-center',
  touch: false
};
IconButton.contextTypes = {
  muiTheme: _propTypes2$5.default.object.isRequired
};
IconButton.propTypes = {
  /**
   * Can be used to pass a `FontIcon` element as the icon for the button.
   */
  children: _propTypes2$5.default.node,
  /**
   * The CSS class name of the root element.
   */
  className: _propTypes2$5.default.string,
  /**
   * If true, the element's ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes2$5.default.bool,
  /**
   * If true, the element will be disabled.
   */
  disabled: _propTypes2$5.default.bool,
  /**
   * Override the inline-styles of the root element when the component is hovered.
   */
  hoveredStyle: _propTypes2$5.default.object,
  /**
   * The URL to link to when the button is clicked.
   */
  href: _propTypes2$5.default.string,
  /**
   * The CSS class name of the icon. Used for setting the icon with a stylesheet.
   */
  iconClassName: _propTypes2$5.default.string,
  /**
   * Override the inline-styles of the icon element.
   * Note: you can specify iconHoverColor as a String inside this object.
   */
  iconStyle: _propTypes2$5.default.object,
  /** @ignore */
  onBlur: _propTypes2$5.default.func,
  /**
   * Callback function fired when the button is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the button.
   */
  onClick: _propTypes2$5.default.func,
  /** @ignore */
  onFocus: _propTypes2$5.default.func,
  /**
   * Callback function fired when the element is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the element.
   * @param {boolean} keyboardFocused Indicates whether the element is focused.
   */
  onKeyboardFocus: _propTypes2$5.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$5.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$5.default.func,
  /** @ignore */
  onMouseOut: _propTypes2$5.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$5.default.func,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$5.default.object,
  /**
   * The text to supply to the element's tooltip.
   */
  tooltip: _propTypes2$5.default.node,
  /**
   * The vertical and horizontal positions, respectively, of the element's tooltip.
   * Possible values are: "bottom-center", "top-center", "bottom-right", "top-right",
   * "bottom-left", and "top-left".
   */
  tooltipPosition: _propTypes4$3.default.cornersAndCenter,
  /**
   * Override the inline-styles of the tooltip element.
   */
  tooltipStyles: _propTypes2$5.default.object,
  /**
   * If true, increase the tooltip element's size. Useful for increasing tooltip
   * readability on mobile devices.
   */
  touch: _propTypes2$5.default.bool
} ;
IconButton$1.default = IconButton;

Object.defineProperty(IconButton$2, "__esModule", {
  value: true
});
var _default$4 = IconButton$2.default = undefined;

var _IconButton$1 = IconButton$1;

var _IconButton2$1 = _interopRequireDefault$b(_IconButton$1);

function _interopRequireDefault$b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$4 = IconButton$2.default = _IconButton2$1.default;

var expandLess = {};

Object.defineProperty(expandLess, "__esModule", {
  value: true
});

var _react$6 = react;

var _react2$6 = _interopRequireDefault$a(_react$6);

var _pure$1 = pure$1;

var _pure2$1 = _interopRequireDefault$a(_pure$1);

var _SvgIcon$1 = SvgIcon$2;

var _SvgIcon2$1 = _interopRequireDefault$a(_SvgIcon$1);

function _interopRequireDefault$a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationExpandLess = function NavigationExpandLess(props) {
  return _react2$6.default.createElement(
    _SvgIcon2$1.default,
    props,
    _react2$6.default.createElement('path', { d: 'M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z' })
  );
};
NavigationExpandLess = (0, _pure2$1.default)(NavigationExpandLess);
NavigationExpandLess.displayName = 'NavigationExpandLess';
NavigationExpandLess.muiName = 'SvgIcon';

expandLess.default = NavigationExpandLess;

var expandMore = {};

Object.defineProperty(expandMore, "__esModule", {
  value: true
});

var _react$5 = react;

var _react2$5 = _interopRequireDefault$9(_react$5);

var _pure = pure$1;

var _pure2 = _interopRequireDefault$9(_pure);

var _SvgIcon = SvgIcon$2;

var _SvgIcon2 = _interopRequireDefault$9(_SvgIcon);

function _interopRequireDefault$9(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationExpandMore = function NavigationExpandMore(props) {
  return _react2$5.default.createElement(
    _SvgIcon2.default,
    props,
    _react2$5.default.createElement('path', { d: 'M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' })
  );
};
NavigationExpandMore = (0, _pure2.default)(NavigationExpandMore);
NavigationExpandMore.displayName = 'NavigationExpandMore';
NavigationExpandMore.muiName = 'SvgIcon';

expandMore.default = NavigationExpandMore;

var NestedList$1 = {};

Object.defineProperty(NestedList$1, "__esModule", {
  value: true
});

var _react$4 = react;

var _react2$4 = _interopRequireDefault$8(_react$4);

var _propTypes$4 = propTypes$5.exports;

var _propTypes2$4 = _interopRequireDefault$8(_propTypes$4);

var _List = List$1;

var _List2 = _interopRequireDefault$8(_List);

function _interopRequireDefault$8(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NestedList = function NestedList(props) {
  var children = props.children,
      open = props.open,
      nestedLevel = props.nestedLevel,
      style = props.style;


  if (!open) {
    return null;
  }

  return _react2$4.default.createElement(
    _List2.default,
    { style: style },
    _react$4.Children.map(children, function (child) {
      return (0, _react$4.isValidElement)(child) ? (0, _react$4.cloneElement)(child, {
        nestedLevel: nestedLevel + 1
      }) : child;
    })
  );
};

NestedList.propTypes = {
  children: _propTypes2$4.default.node,
  nestedLevel: _propTypes2$4.default.number.isRequired,
  open: _propTypes2$4.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$4.default.object
} ;

NestedList$1.default = NestedList;

Object.defineProperty(ListItem$1, "__esModule", {
  value: true
});

var _objectWithoutProperties2$2 = objectWithoutProperties$2;

var _objectWithoutProperties3$2 = _interopRequireDefault$7(_objectWithoutProperties2$2);

var _extends2$2 = _extends$3;

var _extends3$2 = _interopRequireDefault$7(_extends2$2);

var _getPrototypeOf$3 = getPrototypeOf$1.exports;

var _getPrototypeOf2$3 = _interopRequireDefault$7(_getPrototypeOf$3);

var _classCallCheck2$3 = classCallCheck$3;

var _classCallCheck3$3 = _interopRequireDefault$7(_classCallCheck2$3);

var _createClass2$3 = createClass$2;

var _createClass3$3 = _interopRequireDefault$7(_createClass2$3);

var _possibleConstructorReturn2$3 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$3 = _interopRequireDefault$7(_possibleConstructorReturn2$3);

var _inherits2$3 = inherits$3;

var _inherits3$3 = _interopRequireDefault$7(_inherits2$3);

var _simpleAssign$3 = simpleAssign;

var _simpleAssign2$3 = _interopRequireDefault$7(_simpleAssign$3);

var _react$3 = react;

var _react2$3 = _interopRequireDefault$7(_react$3);

var _propTypes$3 = propTypes$5.exports;

var _propTypes2$3 = _interopRequireDefault$7(_propTypes$3);

var _reactDom$2 = reactDom;

var _reactDom2$2 = _interopRequireDefault$7(_reactDom$2);

var _shallowEqual$1 = shallowEqual$1;

var _shallowEqual2$1 = _interopRequireDefault$7(_shallowEqual$1);

var _colorManipulator = colorManipulator$1;

var _transitions$1 = transitions$1;

var _transitions2$1 = _interopRequireDefault$7(_transitions$1);

var _EnhancedButton = EnhancedButton$3;

var _EnhancedButton2 = _interopRequireDefault$7(_EnhancedButton);

var _IconButton = IconButton$2;

var _IconButton2 = _interopRequireDefault$7(_IconButton);

var _expandLess = expandLess;

var _expandLess2 = _interopRequireDefault$7(_expandLess);

var _expandMore = expandMore;

var _expandMore2 = _interopRequireDefault$7(_expandMore);

var _NestedList = NestedList$1;

var _NestedList2 = _interopRequireDefault$7(_NestedList);

function _interopRequireDefault$7(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$3(props, context, state) {
  var autoGenerateNestedIndicator = props.autoGenerateNestedIndicator,
      insetChildren = props.insetChildren,
      leftAvatar = props.leftAvatar,
      leftCheckbox = props.leftCheckbox,
      leftIcon = props.leftIcon,
      nestedItems = props.nestedItems,
      nestedLevel = props.nestedLevel,
      rightAvatar = props.rightAvatar,
      rightIcon = props.rightIcon,
      rightIconButton = props.rightIconButton,
      rightToggle = props.rightToggle,
      secondaryText = props.secondaryText,
      secondaryTextLines = props.secondaryTextLines;
  var muiTheme = context.muiTheme;
  var listItem = muiTheme.listItem;


  var textColor = muiTheme.baseTheme.palette.textColor;
  var hoverColor = props.hoverColor || (0, _colorManipulator.fade)(textColor, 0.1);
  var singleAvatar = !secondaryText && (leftAvatar || rightAvatar);
  var singleNoAvatar = !secondaryText && !(leftAvatar || rightAvatar);
  var twoLine = secondaryText && secondaryTextLines === 1;
  var threeLine = secondaryText && secondaryTextLines > 1;

  var isKeyboardFocused = (props.isKeyboardFocused !== undefined ? props : state).isKeyboardFocused;

  var styles = {
    root: {
      backgroundColor: (isKeyboardFocused || state.hovered) && !state.rightIconButtonHovered && !state.rightIconButtonKeyboardFocused ? hoverColor : null,
      color: textColor,
      display: 'block',
      fontSize: 16,
      lineHeight: '16px',
      position: 'relative',
      transition: _transitions2$1.default.easeOut()
    },

    // This inner div is needed so that ripples will span the entire container
    innerDiv: {
      marginLeft: nestedLevel * listItem.nestedLevelDepth,
      paddingLeft: leftIcon || leftAvatar || leftCheckbox || insetChildren ? 72 : 16,
      paddingRight: rightIcon || rightAvatar || rightIconButton || nestedItems.length && autoGenerateNestedIndicator ? 56 : rightToggle ? 72 : 16,
      paddingBottom: singleAvatar ? 20 : 16,
      paddingTop: singleNoAvatar || threeLine ? 16 : 20,
      position: 'relative'
    },

    icons: {
      height: 24,
      width: 24,
      display: 'block',
      position: 'absolute',
      top: twoLine ? 12 : singleAvatar ? 4 : 0,
      margin: 12
    },

    leftIcon: {
      left: 4
    },

    rightIcon: {
      right: 4
    },

    avatars: {
      position: 'absolute',
      top: singleAvatar ? 8 : 16
    },

    label: {
      cursor: 'pointer'
    },

    leftAvatar: {
      left: 16
    },

    rightAvatar: {
      right: 16
    },

    leftCheckbox: {
      position: 'absolute',
      display: 'block',
      width: 24,
      top: twoLine ? 24 : singleAvatar ? 16 : 12,
      left: 16
    },

    primaryText: {},

    rightIconButton: {
      position: 'absolute',
      display: 'block',
      top: twoLine ? 12 : singleAvatar ? 4 : 0,
      right: 4
    },

    rightToggle: {
      position: 'absolute',
      display: 'block',
      width: 54,
      top: twoLine ? 25 : singleAvatar ? 17 : 13,
      right: 8
    },

    secondaryText: {
      fontSize: 14,
      lineHeight: threeLine ? '18px' : '16px',
      height: threeLine ? 36 : 16,
      margin: 0,
      marginTop: 4,
      color: listItem.secondaryTextColor,

      // needed for 2 and 3 line ellipsis
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: threeLine ? null : 'nowrap',
      display: threeLine ? '-webkit-box' : null,
      WebkitLineClamp: threeLine ? 2 : null,
      WebkitBoxOrient: threeLine ? 'vertical' : null
    }
  };

  return styles;
}

var ListItem = function (_Component) {
  (0, _inherits3$3.default)(ListItem, _Component);

  function ListItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$3.default)(this, ListItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$3.default)(this, (_ref = ListItem.__proto__ || (0, _getPrototypeOf2$3.default)(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hovered: false,
      isKeyboardFocused: false,
      open: false,
      rightIconButtonHovered: false,
      rightIconButtonKeyboardFocused: false,
      touch: false
    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
      _this.setState({ isKeyboardFocused: isKeyboardFocused });
      _this.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleMouseEnter = function (event) {
      if (!_this.state.touch) _this.setState({ hovered: true });
      _this.props.onMouseEnter(event);
    }, _this.handleMouseLeave = function (event) {
      _this.setState({ hovered: false });
      _this.props.onMouseLeave(event);
    }, _this.handleTouchTap = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event);
      }

      if (_this.props.primaryTogglesNestedList) {
        _this.handleNestedListToggle(event);
      }
    }, _this.handleNestedListToggle = function (event) {
      if (_this.props.leftCheckbox) {
        event.preventDefault();
      }
      event.stopPropagation();

      if (_this.props.open === null) {
        _this.setState({ open: !_this.state.open }, function () {
          _this.props.onNestedListToggle(_this);
        });
      } else {
        // Exposing `this` in the callback is quite a bad API.
        // I'm doing a one level deep clone to expose a fake state.open.
        _this.props.onNestedListToggle((0, _extends3$2.default)({}, _this, {
          state: {
            open: !_this.state.open
          }
        }));
      }
    }, _this.handleRightIconButtonKeyboardFocus = function (event, isKeyboardFocused) {
      if (isKeyboardFocused) {
        _this.setState({
          isKeyboardFocused: false,
          rightIconButtonKeyboardFocused: isKeyboardFocused
        });
      }

      var iconButton = _this.props.rightIconButton;

      if (iconButton && iconButton.props.onKeyboardFocus) iconButton.props.onKeyboardFocus(event, isKeyboardFocused);
    }, _this.handleRightIconButtonMouseLeave = function (event) {
      var iconButton = _this.props.rightIconButton;
      _this.setState({ rightIconButtonHovered: false });
      if (iconButton && iconButton.props.onMouseLeave) iconButton.props.onMouseLeave(event);
    }, _this.handleRightIconButtonMouseEnter = function (event) {
      var iconButton = _this.props.rightIconButton;
      _this.setState({ rightIconButtonHovered: true });
      if (iconButton && iconButton.props.onMouseEnter) iconButton.props.onMouseEnter(event);
    }, _this.handleRightIconButtonMouseUp = function (event) {
      var iconButton = _this.props.rightIconButton;
      event.stopPropagation();
      if (iconButton && iconButton.props.onMouseUp) iconButton.props.onMouseUp(event);
    }, _this.handleRightIconButtonTouchTap = function (event) {
      var iconButton = _this.props.rightIconButton;

      // Stop the event from bubbling up to the list-item
      event.stopPropagation();
      if (iconButton && iconButton.props.onClick) iconButton.props.onClick(event);
    }, _this.handleTouchStart = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchStart(event);
    }, _this.handleTouchEnd = function (event) {
      _this.setState({ touch: true });
      _this.props.onTouchEnd(event);
    }, _temp), (0, _possibleConstructorReturn3$3.default)(_this, _ret);
  }

  (0, _createClass3$3.default)(ListItem, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.setState({
        open: this.props.open === null ? this.props.initiallyOpen === true : this.props.open
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      // update the state when the component is controlled.
      if (nextProps.open !== null) this.setState({ open: nextProps.open });
      if (nextProps.disabled && this.state.hovered) this.setState({ hovered: false });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2$1.default)(this.props, nextProps) || !(0, _shallowEqual2$1.default)(this.state, nextState) || !(0, _shallowEqual2$1.default)(this.context, nextContext);
    }

    // This method is needed by the `MenuItem` component.

  }, {
    key: 'applyFocusState',
    value: function applyFocusState(focusState) {
      if (this.button) {
        var buttonEl = _reactDom2$2.default.findDOMNode(this.button);

        switch (focusState) {
          case 'none':
            buttonEl.blur();
            break;
          case 'focused':
            buttonEl.focus();
            break;
          case 'keyboard-focused':
            this.button.setKeyboardFocus();
            buttonEl.focus();
            break;
        }
      }
    }
  }, {
    key: 'createDisabledElement',
    value: function createDisabledElement(styles, contentChildren, additionalProps) {
      var _props = this.props,
          innerDivStyle = _props.innerDivStyle,
          style = _props.style;


      var mergedDivStyles = (0, _simpleAssign2$3.default)({}, styles.root, styles.innerDiv, innerDivStyle, style);

      return _react2$3.default.createElement(
        'div',
        (0, _extends3$2.default)({}, additionalProps, {
          style: this.context.muiTheme.prepareStyles(mergedDivStyles)
        }),
        contentChildren
      );
    }
  }, {
    key: 'createLabelElement',
    value: function createLabelElement(styles, contentChildren, additionalProps) {
      var _props2 = this.props,
          innerDivStyle = _props2.innerDivStyle,
          style = _props2.style;


      var mergedLabelStyles = (0, _simpleAssign2$3.default)({}, styles.root, styles.innerDiv, innerDivStyle, styles.label, style);

      return _react2$3.default.createElement(
        'label',
        (0, _extends3$2.default)({}, additionalProps, {
          style: this.context.muiTheme.prepareStyles(mergedLabelStyles)
        }),
        contentChildren
      );
    }
  }, {
    key: 'createTextElement',
    value: function createTextElement(styles, data, key) {
      var prepareStyles = this.context.muiTheme.prepareStyles;

      if (_react2$3.default.isValidElement(data)) {
        var style = (0, _simpleAssign2$3.default)({}, styles, data.props.style);
        if (typeof data.type === 'string') {
          // if element is a native dom node
          style = prepareStyles(style);
        }
        return _react2$3.default.cloneElement(data, {
          key: key,
          style: style
        });
      }

      return _react2$3.default.createElement(
        'div',
        { key: key, style: prepareStyles(styles) },
        data
      );
    }
  }, {
    key: 'pushElement',
    value: function pushElement(children, element, baseStyles, additionalProps) {
      if (element) {
        var styles = (0, _simpleAssign2$3.default)({}, baseStyles, element.props.style);
        children.push(_react2$3.default.cloneElement(element, (0, _extends3$2.default)({
          key: children.length,
          style: styles
        }, additionalProps)));
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          autoGenerateNestedIndicator = _props3.autoGenerateNestedIndicator,
          children = _props3.children,
          containerElement = _props3.containerElement,
          disabled = _props3.disabled,
          disableKeyboardFocus = _props3.disableKeyboardFocus;
          _props3.hoverColor;
          _props3.initiallyOpen;
          var innerDivStyle = _props3.innerDivStyle;
          _props3.insetChildren;
          var leftAvatar = _props3.leftAvatar,
          leftCheckbox = _props3.leftCheckbox,
          leftIcon = _props3.leftIcon,
          nestedItems = _props3.nestedItems,
          nestedLevel = _props3.nestedLevel,
          nestedListStyle = _props3.nestedListStyle;
          _props3.onKeyboardFocus;
          _props3.isKeyboardFocused;
          _props3.onMouseEnter;
          _props3.onMouseLeave;
          _props3.onNestedListToggle;
          _props3.onTouchStart;
          _props3.onClick;
          var rightAvatar = _props3.rightAvatar,
          rightIcon = _props3.rightIcon,
          rightIconButton = _props3.rightIconButton,
          rightToggle = _props3.rightToggle,
          primaryText = _props3.primaryText,
          primaryTogglesNestedList = _props3.primaryTogglesNestedList,
          secondaryText = _props3.secondaryText;
          _props3.secondaryTextLines;
          var style = _props3.style,
          other = (0, _objectWithoutProperties3$2.default)(_props3, ['autoGenerateNestedIndicator', 'children', 'containerElement', 'disabled', 'disableKeyboardFocus', 'hoverColor', 'initiallyOpen', 'innerDivStyle', 'insetChildren', 'leftAvatar', 'leftCheckbox', 'leftIcon', 'nestedItems', 'nestedLevel', 'nestedListStyle', 'onKeyboardFocus', 'isKeyboardFocused', 'onMouseEnter', 'onMouseLeave', 'onNestedListToggle', 'onTouchStart', 'onClick', 'rightAvatar', 'rightIcon', 'rightIconButton', 'rightToggle', 'primaryText', 'primaryTogglesNestedList', 'secondaryText', 'secondaryTextLines', 'style']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$3(this.props, this.context, this.state);
      var contentChildren = [children];

      if (leftIcon) {
        var additionalProps = {
          color: leftIcon.props.color || this.context.muiTheme.listItem.leftIconColor
        };
        this.pushElement(contentChildren, leftIcon, (0, _simpleAssign2$3.default)({}, styles.icons, styles.leftIcon), additionalProps);
      }

      if (rightIcon) {
        var _additionalProps = {
          color: rightIcon.props.color || this.context.muiTheme.listItem.rightIconColor
        };
        this.pushElement(contentChildren, rightIcon, (0, _simpleAssign2$3.default)({}, styles.icons, styles.rightIcon), _additionalProps);
      }

      if (leftAvatar) {
        this.pushElement(contentChildren, leftAvatar, (0, _simpleAssign2$3.default)({}, styles.avatars, styles.leftAvatar));
      }

      if (rightAvatar) {
        this.pushElement(contentChildren, rightAvatar, (0, _simpleAssign2$3.default)({}, styles.avatars, styles.rightAvatar));
      }

      if (leftCheckbox) {
        this.pushElement(contentChildren, leftCheckbox, (0, _simpleAssign2$3.default)({}, styles.leftCheckbox));
      }

      // RightIconButtonElement
      var hasNestListItems = nestedItems.length;
      var hasRightElement = rightAvatar || rightIcon || rightIconButton || rightToggle;
      var needsNestedIndicator = hasNestListItems && autoGenerateNestedIndicator && !hasRightElement;

      if (rightIconButton || needsNestedIndicator) {
        var rightIconButtonElement = rightIconButton;
        var rightIconButtonHandlers = {
          onKeyboardFocus: this.handleRightIconButtonKeyboardFocus,
          onMouseEnter: this.handleRightIconButtonMouseEnter,
          onMouseLeave: this.handleRightIconButtonMouseLeave,
          onClick: this.handleRightIconButtonTouchTap,
          onMouseDown: this.handleRightIconButtonMouseUp,
          onMouseUp: this.handleRightIconButtonMouseUp
        };

        // Create a nested list indicator icon if we don't have an icon on the right
        if (needsNestedIndicator) {
          rightIconButtonElement = this.state.open ? _react2$3.default.createElement(
            _IconButton2.default,
            null,
            _react2$3.default.createElement(_expandLess2.default, null)
          ) : _react2$3.default.createElement(
            _IconButton2.default,
            null,
            _react2$3.default.createElement(_expandMore2.default, null)
          );
          rightIconButtonHandlers.onClick = this.handleNestedListToggle;
        }

        this.pushElement(contentChildren, rightIconButtonElement, (0, _simpleAssign2$3.default)({}, styles.rightIconButton), rightIconButtonHandlers);
      }

      if (rightToggle) {
        this.pushElement(contentChildren, rightToggle, (0, _simpleAssign2$3.default)({}, styles.rightToggle));
      }

      if (primaryText) {
        var primaryTextElement = this.createTextElement(styles.primaryText, primaryText, 'primaryText');
        contentChildren.push(primaryTextElement);
      }

      if (secondaryText) {
        var secondaryTextElement = this.createTextElement(styles.secondaryText, secondaryText, 'secondaryText');
        contentChildren.push(secondaryTextElement);
      }

      var nestedList = nestedItems.length ? _react2$3.default.createElement(
        _NestedList2.default,
        { nestedLevel: nestedLevel, open: this.state.open, style: nestedListStyle },
        nestedItems
      ) : undefined;

      var simpleLabel = !primaryTogglesNestedList && (leftCheckbox || rightToggle);

      return _react2$3.default.createElement(
        'div',
        null,
        simpleLabel ? this.createLabelElement(styles, contentChildren, other) : disabled ? this.createDisabledElement(styles, contentChildren, other) : _react2$3.default.createElement(
          _EnhancedButton2.default,
          (0, _extends3$2.default)({
            containerElement: containerElement
          }, other, {
            disableKeyboardFocus: disableKeyboardFocus || this.state.rightIconButtonKeyboardFocused,
            onKeyboardFocus: this.handleKeyboardFocus,
            onMouseLeave: this.handleMouseLeave,
            onMouseEnter: this.handleMouseEnter,
            onTouchStart: this.handleTouchStart,
            onTouchEnd: this.handleTouchEnd,
            onClick: this.handleTouchTap,
            disabled: disabled,
            ref: function ref(node) {
              return _this2.button = node;
            },
            style: (0, _simpleAssign2$3.default)({}, styles.root, style)
          }),
          _react2$3.default.createElement(
            'div',
            { style: prepareStyles((0, _simpleAssign2$3.default)(styles.innerDiv, innerDivStyle)) },
            contentChildren
          )
        ),
        nestedList
      );
    }
  }]);
  return ListItem;
}(_react$3.Component);

ListItem.muiName = 'ListItem';
ListItem.defaultProps = {
  autoGenerateNestedIndicator: true,
  containerElement: 'span',
  disableKeyboardFocus: false,
  disabled: false,
  initiallyOpen: false,
  insetChildren: false,
  nestedItems: [],
  nestedLevel: 0,
  onKeyboardFocus: function onKeyboardFocus() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onNestedListToggle: function onNestedListToggle() {},
  onTouchEnd: function onTouchEnd() {},
  onTouchStart: function onTouchStart() {},
  open: null,
  primaryTogglesNestedList: false,
  secondaryTextLines: 1
};
ListItem.contextTypes = {
  muiTheme: _propTypes2$3.default.object.isRequired
};
ListItem.propTypes = {
  /**
   * If true, generate a nested-list-indicator icon when nested list
   * items are detected. Note that an indicator will not be created
   * if a `rightIcon` or `rightIconButton` has been provided to
   * the element.
   */
  autoGenerateNestedIndicator: _propTypes2$3.default.bool,
  /**
   * Children passed into the `ListItem`.
   */
  children: _propTypes2$3.default.node,
  /**
   * The element to use as the container for the ListItem. Either a string to
   * use a DOM element or a ReactElement. This is useful for wrapping the
   * ListItem in a custom Link component. If a ReactElement is given, ensure
   * that it passes all of its given props through to the underlying DOM
   * element and renders its children prop for proper integration.
   */
  containerElement: _propTypes2$3.default.oneOfType([_propTypes2$3.default.string, _propTypes2$3.default.element]),
  /**
   * If true, the element will not be able to be focused by the keyboard.
   */
  disableKeyboardFocus: _propTypes2$3.default.bool,
  /**
   * If true, the element will not be clickable
   * and will not display hover effects.
   * This is automatically disabled if either `leftCheckbox`
   * or `rightToggle` is set.
   */
  disabled: _propTypes2$3.default.bool,
  /**
  * Override the hover background color.
  */
  hoverColor: _propTypes2$3.default.string,
  /**
   * If true, the nested `ListItem`s are initially displayed.
   */
  initiallyOpen: _propTypes2$3.default.bool,
  /**
   * Override the inline-styles of the inner div element.
   */
  innerDivStyle: _propTypes2$3.default.object,
  /**
   * If true, the children will be indented by 72px.
   * This is useful if there is no left avatar or left icon.
   */
  insetChildren: _propTypes2$3.default.bool,
  /**
   * Use to control if the list item should render as keyboard focused.  If
   * undefined (default), this will be automatically managed.  If provided,
   * it will change the components style.  Note that this will not change the
   * actual focus - and should only be used when you want to simulate
   * keyboard focus (eg. in a rich text input autocomplete).
   */
  isKeyboardFocused: _propTypes2$3.default.bool,
  /**
   * This is the `Avatar` element to be displayed on the left side.
   */
  leftAvatar: _propTypes2$3.default.element,
  /**
   * This is the `Checkbox` element to be displayed on the left side.
   */
  leftCheckbox: _propTypes2$3.default.element,
  /**
   * This is the `SvgIcon` or `FontIcon` to be displayed on the left side.
   */
  leftIcon: _propTypes2$3.default.element,
  /**
   * An array of `ListItem`s to nest underneath the current `ListItem`.
   */
  nestedItems: _propTypes2$3.default.arrayOf(_propTypes2$3.default.element),
  /**
   * Controls how deep a `ListItem` appears.
   * This property is automatically managed, so modify at your own risk.
   */
  nestedLevel: _propTypes2$3.default.number,
  /**
   * Override the inline-styles of the nested items' `NestedList`.
   */
  nestedListStyle: _propTypes2$3.default.object,
  /**
   * Callback function fired when the list item is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the list item.
   */
  onClick: _propTypes2$3.default.func,
  /**
   * Callback function fired when the `ListItem` is focused or blurred by the keyboard.
   *
   * @param {object} event `focus` or `blur` event targeting the `ListItem`.
   * @param {boolean} isKeyboardFocused If true, the `ListItem` is focused.
   */
  onKeyboardFocus: _propTypes2$3.default.func,
  /** @ignore */
  onMouseEnter: _propTypes2$3.default.func,
  /** @ignore */
  onMouseLeave: _propTypes2$3.default.func,
  /**
   * Callback function fired when the `ListItem` toggles its nested list.
   *
   * @param {object} listItem The `ListItem`.
   */
  onNestedListToggle: _propTypes2$3.default.func,
  /** @ignore */
  onTouchEnd: _propTypes2$3.default.func,
  /** @ignore */
  onTouchStart: _propTypes2$3.default.func,
  /**
   * Control toggle state of nested list.
   */
  open: _propTypes2$3.default.bool,
  /**
   * This is the block element that contains the primary text.
   * If a string is passed in, a div tag will be rendered.
   */
  primaryText: _propTypes2$3.default.node,
  /**
   * If true, clicking or tapping the primary text of the `ListItem`
   * toggles the nested list.
   */
  primaryTogglesNestedList: _propTypes2$3.default.bool,
  /**
   * This is the `Avatar` element to be displayed on the right side.
   */
  rightAvatar: _propTypes2$3.default.element,
  /**
   * This is the `SvgIcon` or `FontIcon` to be displayed on the right side.
   */
  rightIcon: _propTypes2$3.default.element,
  /**
   * This is the `IconButton` to be displayed on the right side.
   * Hovering over this button will remove the `ListItem` hover.
   * Also, clicking on this button will not trigger a
   * ripple on the `ListItem`; the event will be stopped and prevented
   * from bubbling up to cause a `ListItem` click.
   */
  rightIconButton: _propTypes2$3.default.element,
  /**
   * This is the `Toggle` element to display on the right side.
   */
  rightToggle: _propTypes2$3.default.element,
  /**
   * This is the block element that contains the secondary text.
   * If a string is passed in, a div tag will be rendered.
   */
  secondaryText: _propTypes2$3.default.node,
  /**
   * Can be 1 or 2. This is the number of secondary
   * text lines before ellipsis will show.
   */
  secondaryTextLines: _propTypes2$3.default.oneOf([1, 2]),
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$3.default.object
} ;
ListItem$1.default = ListItem;

Object.defineProperty(MenuItem$1, "__esModule", {
  value: true
});

var _extends2$1 = _extends$3;

var _extends3$1 = _interopRequireDefault$6(_extends2$1);

var _objectWithoutProperties2$1 = objectWithoutProperties$2;

var _objectWithoutProperties3$1 = _interopRequireDefault$6(_objectWithoutProperties2$1);

var _getPrototypeOf$2 = getPrototypeOf$1.exports;

var _getPrototypeOf2$2 = _interopRequireDefault$6(_getPrototypeOf$2);

var _classCallCheck2$2 = classCallCheck$3;

var _classCallCheck3$2 = _interopRequireDefault$6(_classCallCheck2$2);

var _createClass2$2 = createClass$2;

var _createClass3$2 = _interopRequireDefault$6(_createClass2$2);

var _possibleConstructorReturn2$2 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$2 = _interopRequireDefault$6(_possibleConstructorReturn2$2);

var _inherits2$2 = inherits$3;

var _inherits3$2 = _interopRequireDefault$6(_inherits2$2);

var _simpleAssign$2 = simpleAssign;

var _simpleAssign2$2 = _interopRequireDefault$6(_simpleAssign$2);

var _react$2 = react;

var _react2$2 = _interopRequireDefault$6(_react$2);

var _propTypes$2 = propTypes$5.exports;

var _propTypes2$2 = _interopRequireDefault$6(_propTypes$2);

var _reactDom$1 = reactDom;

var _reactDom2$1 = _interopRequireDefault$6(_reactDom$1);

var _shallowEqual = shallowEqual$1;

var _shallowEqual2 = _interopRequireDefault$6(_shallowEqual);

var _Popover$1 = Popover$2;

var _Popover2$2 = _interopRequireDefault$6(_Popover$1);

var _check = check;

var _check2 = _interopRequireDefault$6(_check);

var _ListItem = ListItem$1;

var _ListItem2 = _interopRequireDefault$6(_ListItem);

var _Menu$1 = Menu$1;

var _Menu2$2 = _interopRequireDefault$6(_Menu$1);

var _propTypes3$2 = propTypes$4;

var _propTypes4$2 = _interopRequireDefault$6(_propTypes3$2);

function _interopRequireDefault$6(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var nestedMenuStyle = {
  position: 'relative'
};

function getStyles$2(props, context) {
  var disabledColor = context.muiTheme.baseTheme.palette.disabledColor;
  var textColor = context.muiTheme.baseTheme.palette.textColor;
  var indent = props.desktop ? 64 : 72;
  var sidePadding = props.desktop ? 24 : 16;

  var styles = {
    root: {
      color: props.disabled ? disabledColor : textColor,
      cursor: props.disabled ? 'default' : 'pointer',
      minHeight: props.desktop ? '32px' : '48px',
      lineHeight: props.desktop ? '32px' : '48px',
      fontSize: props.desktop ? 15 : 16,
      whiteSpace: 'nowrap'
    },

    innerDivStyle: {
      paddingLeft: props.leftIcon || props.insetChildren || props.checked ? indent : sidePadding,
      paddingRight: props.rightIcon ? indent : sidePadding,
      paddingBottom: 0,
      paddingTop: 0
    },

    secondaryText: {
      float: 'right'
    },

    leftIconDesktop: {
      margin: 0,
      left: 24,
      top: 4
    },

    rightIconDesktop: {
      margin: 0,
      right: 24,
      top: 4,
      fill: context.muiTheme.menuItem.rightIconDesktopFill
    }
  };

  return styles;
}

var MenuItem = function (_Component) {
  (0, _inherits3$2.default)(MenuItem, _Component);

  function MenuItem() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$2.default)(this, MenuItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$2.default)(this, (_ref = MenuItem.__proto__ || (0, _getPrototypeOf2$2.default)(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.cloneMenuItem = function (item) {
      return _react2$2.default.cloneElement(item, {
        onClick: function onClick(event) {
          if (!item.props.menuItems) {
            _this.handleRequestClose();
          }

          if (item.props.onClick) {
            item.props.onClick(event);
          }
        }
      });
    }, _this.handleTouchTap = function (event) {
      event.preventDefault();

      _this.setState({
        open: true,
        anchorEl: _reactDom2$1.default.findDOMNode(_this)
      });

      if (_this.props.onClick) {
        _this.props.onClick(event);
      }
    }, _this.handleRequestClose = function () {
      _this.setState({
        open: false,
        anchorEl: null
      });
    }, _temp), (0, _possibleConstructorReturn3$2.default)(_this, _ret);
  }

  (0, _createClass3$2.default)(MenuItem, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.applyFocusState();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.open && nextProps.focusState === 'none') {
        this.handleRequestClose();
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState) || !(0, _shallowEqual2.default)(this.context, nextContext);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.applyFocusState();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.state.open) {
        this.setState({
          open: false
        });
      }
    }
  }, {
    key: 'applyFocusState',
    value: function applyFocusState() {
      this.refs.listItem.applyFocusState(this.props.focusState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          checked = _props.checked,
          children = _props.children,
          desktop = _props.desktop,
          disabled = _props.disabled;
          _props.focusState;
          var innerDivStyle = _props.innerDivStyle,
          insetChildren = _props.insetChildren,
          leftIcon = _props.leftIcon,
          menuItems = _props.menuItems,
          rightIcon = _props.rightIcon,
          secondaryText = _props.secondaryText,
          style = _props.style,
          animation = _props.animation,
          anchorOrigin = _props.anchorOrigin,
          targetOrigin = _props.targetOrigin;
          _props.value;
          var other = (0, _objectWithoutProperties3$1.default)(_props, ['checked', 'children', 'desktop', 'disabled', 'focusState', 'innerDivStyle', 'insetChildren', 'leftIcon', 'menuItems', 'rightIcon', 'secondaryText', 'style', 'animation', 'anchorOrigin', 'targetOrigin', 'value']);
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$2(this.props, this.context);
      var mergedRootStyles = (0, _simpleAssign2$2.default)(styles.root, style);
      var mergedInnerDivStyles = (0, _simpleAssign2$2.default)(styles.innerDivStyle, innerDivStyle);

      // Left Icon
      var leftIconElement = leftIcon ? leftIcon : checked ? _react2$2.default.createElement(_check2.default, null) : null;
      if (leftIconElement) {
        var mergedLeftIconStyles = desktop ? (0, _simpleAssign2$2.default)(styles.leftIconDesktop, leftIconElement.props.style) : leftIconElement.props.style;
        leftIconElement = _react2$2.default.cloneElement(leftIconElement, { style: mergedLeftIconStyles });
      }

      // Right Icon
      var rightIconElement = void 0;
      if (rightIcon) {
        var mergedRightIconStyles = desktop ? (0, _simpleAssign2$2.default)(styles.rightIconDesktop, rightIcon.props.style) : rightIcon.props.style;
        rightIconElement = _react2$2.default.cloneElement(rightIcon, { style: mergedRightIconStyles });
      }

      // Secondary Text
      var secondaryTextElement = void 0;
      if (secondaryText) {
        var secondaryTextIsAnElement = _react2$2.default.isValidElement(secondaryText);
        var mergedSecondaryTextStyles = secondaryTextIsAnElement ? (0, _simpleAssign2$2.default)(styles.secondaryText, secondaryText.props.style) : null;

        secondaryTextElement = secondaryTextIsAnElement ? _react2$2.default.cloneElement(secondaryText, { style: mergedSecondaryTextStyles }) : _react2$2.default.createElement(
          'div',
          { style: prepareStyles(styles.secondaryText) },
          secondaryText
        );
      }
      var childMenuPopover = void 0;
      if (menuItems) {
        childMenuPopover = _react2$2.default.createElement(
          _Popover2$2.default,
          {
            animation: animation,
            anchorOrigin: anchorOrigin,
            anchorEl: this.state.anchorEl,
            open: this.state.open,
            targetOrigin: targetOrigin,
            useLayerForClickAway: false,
            onRequestClose: this.handleRequestClose
          },
          _react2$2.default.createElement(
            _Menu2$2.default,
            { desktop: desktop, disabled: disabled, style: nestedMenuStyle },
            _react2$2.default.Children.map(menuItems, this.cloneMenuItem)
          )
        );
        other.onClick = this.handleTouchTap;
      }

      return _react2$2.default.createElement(
        _ListItem2.default,
        (0, _extends3$1.default)({}, other, {
          disabled: disabled,
          hoverColor: this.context.muiTheme.menuItem.hoverColor,
          innerDivStyle: mergedInnerDivStyles,
          insetChildren: insetChildren,
          leftIcon: leftIconElement,
          ref: 'listItem',
          rightIcon: rightIconElement,
          role: 'menuitem',
          style: mergedRootStyles
        }),
        children,
        secondaryTextElement,
        childMenuPopover
      );
    }
  }]);
  return MenuItem;
}(_react$2.Component);

MenuItem.muiName = 'MenuItem';
MenuItem.defaultProps = {
  anchorOrigin: { horizontal: 'right', vertical: 'top' },
  checked: false,
  desktop: false,
  disabled: false,
  focusState: 'none',
  insetChildren: false,
  targetOrigin: { horizontal: 'left', vertical: 'top' }
};
MenuItem.contextTypes = {
  muiTheme: _propTypes2$2.default.object.isRequired
};
MenuItem.propTypes = {
  /**
   * Location of the anchor for the popover of nested `MenuItem`
   * elements.
   * Options:
   * horizontal: [left, middle, right]
   * vertical: [top, center, bottom].
   */
  anchorOrigin: _propTypes4$2.default.origin,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$2.default.func,
  /**
   * If true, a left check mark will be rendered.
   */
  checked: _propTypes2$2.default.bool,
  /**
   * Elements passed as children to the underlying `ListItem`.
   */
  children: _propTypes2$2.default.node,
  /**
   * @ignore
   * If true, the menu item will render with compact desktop
   * styles.
   */
  desktop: _propTypes2$2.default.bool,
  /**
   * If true, the menu item will be disabled.
   */
  disabled: _propTypes2$2.default.bool,
  /**
   * The focus state of the menu item. This prop is used to set the focus
   * state of the underlying `ListItem`.
   */
  focusState: _propTypes2$2.default.oneOf(['none', 'focused', 'keyboard-focused']),
  /**
   * Override the inline-styles of the inner div.
   */
  innerDivStyle: _propTypes2$2.default.object,
  /**
   * If true, the children will be indented.
   * This is only needed when there is no `leftIcon`.
   */
  insetChildren: _propTypes2$2.default.bool,
  /**
   * The `SvgIcon` or `FontIcon` to be displayed on the left side.
   */
  leftIcon: _propTypes2$2.default.element,
  /**
   * `MenuItem` elements to nest within the menu item.
   */
  menuItems: _propTypes2$2.default.node,
  /**
   * Callback function fired when the menu item is touch-tapped.
   *
   * @param {object} event TouchTap event targeting the menu item.
   */
  onClick: _propTypes2$2.default.func,
  /**
   * Can be used to render primary text within the menu item.
   */
  primaryText: _propTypes2$2.default.node,
  /**
   * The `SvgIcon` or `FontIcon` to be displayed on the right side.
   */
  rightIcon: _propTypes2$2.default.element,
  /**
   * Can be used to render secondary text within the menu item.
   */
  secondaryText: _propTypes2$2.default.node,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$2.default.object,
  /**
   * Location on the popover of nested `MenuItem` elements that will attach
   * to the anchor's origin.
   * Options:
   * horizontal: [left, middle, right]
   * vertical: [top, center, bottom].
   */
  targetOrigin: _propTypes4$2.default.origin,
  /**
   * The value of the menu item.
   */
  value: _propTypes2$2.default.any
} ;
MenuItem$1.default = MenuItem;

Object.defineProperty(MenuItem$2, "__esModule", {
  value: true
});
var _default$3 = MenuItem$2.default = undefined;

var _MenuItem$1 = MenuItem$1;

var _MenuItem2$2 = _interopRequireDefault$5(_MenuItem$1);

function _interopRequireDefault$5(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$3 = MenuItem$2.default = _MenuItem2$2.default;

Object.defineProperty(Menu$2, "__esModule", {
  value: true
});
var _default$2 = Menu$2.default = Menu$2.MenuItem = Menu$2.Menu = undefined;

var _Menu2$1 = Menu$1;

var _Menu3 = _interopRequireDefault$4(_Menu2$1);

var _MenuItem2$1 = MenuItem$2;

var _MenuItem3 = _interopRequireDefault$4(_MenuItem2$1);

function _interopRequireDefault$4(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Menu$2.Menu = _Menu3.default;
Menu$2.MenuItem = _MenuItem3.default;
_default$2 = Menu$2.default = _Menu3.default;

Object.defineProperty(AutoComplete$1, "__esModule", {
  value: true
});

var _extends2 = _extends$3;

var _extends3 = _interopRequireDefault$3(_extends2);

var _typeof2 = _typeof$6;

var _typeof3 = _interopRequireDefault$3(_typeof2);

var _objectWithoutProperties2 = objectWithoutProperties$2;

var _objectWithoutProperties3 = _interopRequireDefault$3(_objectWithoutProperties2);

var _getPrototypeOf$1 = getPrototypeOf$1.exports;

var _getPrototypeOf2$1 = _interopRequireDefault$3(_getPrototypeOf$1);

var _classCallCheck2$1 = classCallCheck$3;

var _classCallCheck3$1 = _interopRequireDefault$3(_classCallCheck2$1);

var _createClass2$1 = createClass$2;

var _createClass3$1 = _interopRequireDefault$3(_createClass2$1);

var _possibleConstructorReturn2$1 = possibleConstructorReturn$3;

var _possibleConstructorReturn3$1 = _interopRequireDefault$3(_possibleConstructorReturn2$1);

var _inherits2$1 = inherits$3;

var _inherits3$1 = _interopRequireDefault$3(_inherits2$1);

var _simpleAssign$1 = simpleAssign;

var _simpleAssign2$1 = _interopRequireDefault$3(_simpleAssign$1);

var _react$1 = react;

var _react2$1 = _interopRequireDefault$3(_react$1);

var _propTypes$1 = propTypes$5.exports;

var _propTypes2$1 = _interopRequireDefault$3(_propTypes$1);

var _reactDom = reactDom;

var _reactDom2 = _interopRequireDefault$3(_reactDom);

var _keycode = keycode.exports;

var _keycode2 = _interopRequireDefault$3(_keycode);

var _TextField = TextField$2;

var _TextField2 = _interopRequireDefault$3(_TextField);

var _Menu = Menu$2;

var _Menu2 = _interopRequireDefault$3(_Menu);

var _MenuItem = MenuItem$2;

var _MenuItem2 = _interopRequireDefault$3(_MenuItem);

var _Divider = Divider$5;

var _Divider2 = _interopRequireDefault$3(_Divider);

var _Popover = Popover$2;

var _Popover2$1 = _interopRequireDefault$3(_Popover);

var _propTypes3$1 = propTypes$4;

var _propTypes4$1 = _interopRequireDefault$3(_propTypes3$1);

function _interopRequireDefault$3(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles$1(props, context, state) {
  var anchorEl = state.anchorEl;
  var fullWidth = props.fullWidth;


  var styles = {
    root: {
      display: 'inline-block',
      position: 'relative',
      width: fullWidth ? '100%' : 256
    },
    menu: {
      width: '100%'
    },
    list: {
      display: 'block',
      width: fullWidth ? '100%' : 256
    },
    innerDiv: {
      overflow: 'hidden'
    }
  };

  if (anchorEl && fullWidth) {
    styles.popover = {
      width: anchorEl.clientWidth
    };
  }

  return styles;
}

var AutoComplete = function (_Component) {
  (0, _inherits3$1.default)(AutoComplete, _Component);

  function AutoComplete() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3$1.default)(this, AutoComplete);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3$1.default)(this, (_ref = AutoComplete.__proto__ || (0, _getPrototypeOf2$1.default)(AutoComplete)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      anchorEl: null,
      focusTextField: true,
      open: false,
      searchText: undefined
    }, _this.handleRequestClose = function () {
      // Only take into account the Popover clickAway when we are
      // not focusing the TextField.
      if (!_this.state.focusTextField) {
        _this.close();
      }
    }, _this.handleMouseDown = function (event) {
      // Keep the TextField focused
      event.preventDefault();
    }, _this.handleItemTouchTap = function (event, child) {
      var dataSource = _this.props.dataSource;
      var index = parseInt(child.key, 10);
      var chosenRequest = dataSource[index];
      var searchText = _this.chosenRequestText(chosenRequest);

      var updateInput = function updateInput() {
        return _this.props.onUpdateInput(searchText, _this.props.dataSource, {
          source: 'click'
        });
      };
      _this.timerTouchTapCloseId = function () {
        return setTimeout(function () {
          _this.timerTouchTapCloseId = null;
          _this.close();
          _this.props.onNewRequest(chosenRequest, index);
        }, _this.props.menuCloseDelay);
      };

      if (typeof _this.props.searchText !== 'undefined') {
        updateInput();
        _this.timerTouchTapCloseId();
      } else {
        _this.setState({
          searchText: searchText
        }, function () {
          updateInput();
          _this.timerTouchTapCloseId();
        });
      }
    }, _this.chosenRequestText = function (chosenRequest) {
      if (typeof chosenRequest === 'string') {
        return chosenRequest;
      } else {
        return chosenRequest[_this.props.dataSourceConfig.text];
      }
    }, _this.handleEscKeyDown = function () {
      _this.close();
    }, _this.handleKeyDown = function (event) {
      if (_this.props.onKeyDown) _this.props.onKeyDown(event);

      switch ((0, _keycode2.default)(event)) {
        case 'enter':
          _this.close();
          var searchText = _this.state.searchText;
          if (searchText !== '') {
            _this.props.onNewRequest(searchText, -1);
          }
          break;

        case 'esc':
          _this.close();
          break;

        case 'down':
          event.preventDefault();
          _this.setState({
            open: true,
            focusTextField: false,
            anchorEl: _reactDom2.default.findDOMNode(_this.refs.searchTextField)
          });
          break;
      }
    }, _this.handleChange = function (event) {
      var searchText = event.target.value;

      // Make sure that we have a new searchText.
      // Fix an issue with a Cordova Webview
      if (searchText === _this.state.searchText) {
        return;
      }

      var state = {
        open: true,
        anchorEl: _reactDom2.default.findDOMNode(_this.refs.searchTextField)
      };

      if (_this.props.searchText === undefined) {
        state.searchText = searchText;
      }

      _this.setState(state);

      _this.props.onUpdateInput(searchText, _this.props.dataSource, {
        source: 'change'
      });
    }, _this.handleBlur = function (event) {
      if (_this.state.focusTextField && _this.timerTouchTapCloseId === null) {
        _this.timerBlurClose = setTimeout(function () {
          _this.close();
        }, 0);
      }

      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.handleFocus = function (event) {
      if (!_this.state.open && _this.props.openOnFocus) {
        _this.setState({
          open: true,
          anchorEl: _reactDom2.default.findDOMNode(_this.refs.searchTextField)
        });
      }

      _this.setState({
        focusTextField: true
      });

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _temp), (0, _possibleConstructorReturn3$1.default)(_this, _ret);
  }

  (0, _createClass3$1.default)(AutoComplete, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.requestsList = [];
      this.setState({
        open: this.props.open,
        searchText: this.props.searchText || ''
      });
      this.timerTouchTapCloseId = null;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.searchText !== nextProps.searchText) {
        this.setState({
          searchText: nextProps.searchText
        });
      }
      if (this.props.open !== nextProps.open) {
        this.setState({
          open: nextProps.open,
          anchorEl: _reactDom2.default.findDOMNode(this.refs.searchTextField)
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timerTouchTapCloseId);
      clearTimeout(this.timerBlurClose);
    }
  }, {
    key: 'close',
    value: function close() {
      this.setState({
        open: false,
        anchorEl: null
      });

      if (this.props.onClose) {
        this.props.onClose();
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      this.refs.searchTextField.blur();
    }
  }, {
    key: 'focus',
    value: function focus() {
      this.refs.searchTextField.focus();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          anchorOrigin = _props.anchorOrigin,
          animated = _props.animated,
          animation = _props.animation,
          dataSource = _props.dataSource;
          _props.dataSourceConfig;
          var disableFocusRipple = _props.disableFocusRipple,
          errorStyle = _props.errorStyle,
          floatingLabelText = _props.floatingLabelText,
          filter = _props.filter,
          fullWidth = _props.fullWidth,
          style = _props.style,
          hintText = _props.hintText,
          maxSearchResults = _props.maxSearchResults;
          _props.menuCloseDelay;
          var textFieldStyle = _props.textFieldStyle,
          menuStyle = _props.menuStyle,
          menuProps = _props.menuProps,
          listStyle = _props.listStyle,
          targetOrigin = _props.targetOrigin;
          _props.onBlur;
          _props.onClose;
          _props.onFocus;
          _props.onKeyDown;
          _props.onNewRequest;
          _props.onUpdateInput;
          _props.openOnFocus;
          var popoverProps = _props.popoverProps;
          _props.searchText;
          var other = (0, _objectWithoutProperties3.default)(_props, ['anchorOrigin', 'animated', 'animation', 'dataSource', 'dataSourceConfig', 'disableFocusRipple', 'errorStyle', 'floatingLabelText', 'filter', 'fullWidth', 'style', 'hintText', 'maxSearchResults', 'menuCloseDelay', 'textFieldStyle', 'menuStyle', 'menuProps', 'listStyle', 'targetOrigin', 'onBlur', 'onClose', 'onFocus', 'onKeyDown', 'onNewRequest', 'onUpdateInput', 'openOnFocus', 'popoverProps', 'searchText']);

      var _ref2 = popoverProps || {},
          popoverStyle = _ref2.style,
          popoverOther = (0, _objectWithoutProperties3.default)(_ref2, ['style']);

      var _state = this.state,
          open = _state.open,
          anchorEl = _state.anchorEl,
          searchText = _state.searchText,
          focusTextField = _state.focusTextField;
      var prepareStyles = this.context.muiTheme.prepareStyles;

      var styles = getStyles$1(this.props, this.context, this.state);

      var requestsList = [];

      dataSource.every(function (item, index) {
        switch (typeof item === 'undefined' ? 'undefined' : (0, _typeof3.default)(item)) {
          case 'string':
            if (filter(searchText, item, item)) {
              requestsList.push({
                text: item,
                value: _react2$1.default.createElement(_MenuItem2.default, {
                  innerDivStyle: styles.innerDiv,
                  value: item,
                  primaryText: item,
                  disableFocusRipple: disableFocusRipple,
                  key: index
                })
              });
            }
            break;

          case 'object':
            if (item && typeof item[_this2.props.dataSourceConfig.text] === 'string') {
              var itemText = item[_this2.props.dataSourceConfig.text];
              if (!_this2.props.filter(searchText, itemText, item)) break;

              var itemValue = item[_this2.props.dataSourceConfig.value];
              if (itemValue.type && (itemValue.type.muiName === _MenuItem2.default.muiName || itemValue.type.muiName === _Divider2.default.muiName)) {
                requestsList.push({
                  text: itemText,
                  value: _react2$1.default.cloneElement(itemValue, {
                    key: index,
                    disableFocusRipple: disableFocusRipple
                  })
                });
              } else {
                requestsList.push({
                  text: itemText,
                  value: _react2$1.default.createElement(_MenuItem2.default, {
                    innerDivStyle: styles.innerDiv,
                    primaryText: itemText,
                    disableFocusRipple: disableFocusRipple,
                    key: index
                  })
                });
              }
            }
            break;
          // Do nothing
        }

        return !(maxSearchResults && maxSearchResults > 0 && requestsList.length === maxSearchResults);
      });

      this.requestsList = requestsList;

      var menu = open && requestsList.length > 0 && _react2$1.default.createElement(
        _Menu2.default,
        (0, _extends3.default)({
          ref: 'menu',
          autoWidth: false,
          disableAutoFocus: focusTextField,
          onEscKeyDown: this.handleEscKeyDown,
          initiallyKeyboardFocused: true,
          onItemTouchTap: this.handleItemTouchTap,
          onMouseDown: this.handleMouseDown,
          style: (0, _simpleAssign2$1.default)(styles.menu, menuStyle),
          listStyle: (0, _simpleAssign2$1.default)(styles.list, listStyle)
        }, menuProps),
        requestsList.map(function (i) {
          return i.value;
        })
      );

      return _react2$1.default.createElement(
        'div',
        { style: prepareStyles((0, _simpleAssign2$1.default)(styles.root, style)) },
        _react2$1.default.createElement(_TextField2.default, (0, _extends3.default)({
          ref: 'searchTextField',
          autoComplete: 'off',
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onKeyDown: this.handleKeyDown,
          floatingLabelText: floatingLabelText,
          hintText: hintText,
          fullWidth: fullWidth,
          multiLine: false,
          errorStyle: errorStyle,
          style: textFieldStyle
        }, other, {
          // value and onChange are idiomatic properties often leaked.
          // We prevent their overrides in order to reduce potential bugs.
          value: searchText,
          onChange: this.handleChange
        })),
        _react2$1.default.createElement(
          _Popover2$1.default,
          (0, _extends3.default)({
            style: (0, _simpleAssign2$1.default)({}, styles.popover, popoverStyle),
            canAutoPosition: false,
            anchorOrigin: anchorOrigin,
            targetOrigin: targetOrigin,
            open: open,
            anchorEl: anchorEl,
            useLayerForClickAway: false,
            onRequestClose: this.handleRequestClose,
            animated: animated,
            animation: animation
          }, popoverOther),
          menu
        )
      );
    }
  }]);
  return AutoComplete;
}(_react$1.Component);

AutoComplete.defaultProps = {
  anchorOrigin: {
    vertical: 'bottom',
    horizontal: 'left'
  },
  animated: true,
  dataSourceConfig: {
    text: 'text',
    value: 'value'
  },
  disableFocusRipple: true,
  filter: function filter(searchText, key) {
    return searchText !== '' && key.indexOf(searchText) !== -1;
  },
  fullWidth: false,
  open: false,
  openOnFocus: false,
  onUpdateInput: function onUpdateInput() {},
  onNewRequest: function onNewRequest() {},
  menuCloseDelay: 300,
  targetOrigin: {
    vertical: 'top',
    horizontal: 'left'
  }
};
AutoComplete.contextTypes = {
  muiTheme: _propTypes2$1.default.object.isRequired
};
AutoComplete.propTypes = {
  /**
   * Location of the anchor for the auto complete.
   */
  anchorOrigin: _propTypes4$1.default.origin,
  /**
   * If true, the auto complete is animated as it is toggled.
   */
  animated: _propTypes2$1.default.bool,
  /**
   * Override the default animation component used.
   */
  animation: _propTypes2$1.default.func,
  /**
   * Array of strings or nodes used to populate the list.
   */
  dataSource: _propTypes2$1.default.array.isRequired,
  /**
   * Config for objects list dataSource.
   *
   * @typedef {Object} dataSourceConfig
   *
   * @property {string} text `dataSource` element key used to find a string to be matched for search
   * and shown as a `TextField` input value after choosing the result.
   * @property {string} value `dataSource` element key used to find a string to be shown in search results.
   */
  dataSourceConfig: _propTypes2$1.default.object,
  /**
   * Disables focus ripple when true.
   */
  disableFocusRipple: _propTypes2$1.default.bool,
  /**
   * Override style prop for error.
   */
  errorStyle: _propTypes2$1.default.object,
  /**
   * The error content to display.
   */
  errorText: _propTypes2$1.default.node,
  /**
   * Callback function used to filter the auto complete.
   *
   * @param {string} searchText The text to search for within `dataSource`.
   * @param {string} key `dataSource` element, or `text` property on that element if it's not a string.
   * @returns {boolean} `true` indicates the auto complete list will include `key` when the input is `searchText`.
   */
  filter: _propTypes2$1.default.func,
  /**
   * The content to use for adding floating label element.
   */
  floatingLabelText: _propTypes2$1.default.node,
  /**
   * If true, the field receives the property `width: 100%`.
   */
  fullWidth: _propTypes2$1.default.bool,
  /**
   * The hint content to display.
   */
  hintText: _propTypes2$1.default.node,
  /**
   * Override style for list.
   */
  listStyle: _propTypes2$1.default.object,
  /**
   * The max number of search results to be shown.
   * By default it shows all the items which matches filter.
   */
  maxSearchResults: _propTypes2$1.default.number,
  /**
   * Delay for closing time of the menu.
   */
  menuCloseDelay: _propTypes2$1.default.number,
  /**
   * Props to be passed to menu.
   */
  menuProps: _propTypes2$1.default.object,
  /**
   * Override style for menu.
   */
  menuStyle: _propTypes2$1.default.object,
  /** @ignore */
  onBlur: _propTypes2$1.default.func,
  /**
   * Callback function fired when the menu is closed.
   */
  onClose: _propTypes2$1.default.func,
  /** @ignore */
  onFocus: _propTypes2$1.default.func,
  /** @ignore */
  onKeyDown: _propTypes2$1.default.func,
  /**
   * Callback function that is fired when a list item is selected, or enter is pressed in the `TextField`.
   *
   * @param {string} chosenRequest Either the `TextField` input value, if enter is pressed in the `TextField`,
   * or the dataSource object corresponding to the list item that was selected.
   * @param {number} index The index in `dataSource` of the list item selected, or `-1` if enter is pressed in the
   * `TextField`.
   */
  onNewRequest: _propTypes2$1.default.func,
  /**
   * Callback function that is fired when the user updates the `TextField`.
   *
   * @param {string} searchText The auto-complete's `searchText` value.
   * @param {array} dataSource The auto-complete's `dataSource` array.
   * @param {object} params Additional information linked the update.
   */
  onUpdateInput: _propTypes2$1.default.func,
  /**
   * Auto complete menu is open if true.
   */
  open: _propTypes2$1.default.bool,
  /**
   * If true, the list item is showed when a focus event triggers.
   */
  openOnFocus: _propTypes2$1.default.bool,
  /**
   * Props to be passed to popover.
   */
  popoverProps: _propTypes2$1.default.object,
  /**
   * Text being input to auto complete.
   */
  searchText: _propTypes2$1.default.string,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2$1.default.object,
  /**
   * Origin for location of target.
   */
  targetOrigin: _propTypes4$1.default.origin,
  /**
   * Override the inline-styles of AutoComplete's TextField element.
   */
  textFieldStyle: _propTypes2$1.default.object
} ;


AutoComplete.levenshteinDistance = function (searchText, key) {
  var current = [];
  var prev = void 0;
  var value = void 0;

  for (var i = 0; i <= key.length; i++) {
    for (var j = 0; j <= searchText.length; j++) {
      if (i && j) {
        if (searchText.charAt(j - 1) === key.charAt(i - 1)) value = prev;else value = Math.min(current[j], current[j - 1], prev) + 1;
      } else {
        value = i + j;
      }
      prev = current[j];
      current[j] = value;
    }
  }
  return current.pop();
};

AutoComplete.noFilter = function () {
  return true;
};

AutoComplete.defaultFilter = AutoComplete.caseSensitiveFilter = function (searchText, key) {
  return searchText !== '' && key.indexOf(searchText) !== -1;
};

AutoComplete.caseInsensitiveFilter = function (searchText, key) {
  return key.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
};

AutoComplete.levenshteinDistanceFilter = function (distanceLessThan) {
  if (distanceLessThan === undefined) {
    return AutoComplete.levenshteinDistance;
  } else if (typeof distanceLessThan !== 'number') {
    throw 'Error: AutoComplete.levenshteinDistanceFilter is a filter generator, not a filter!';
  }

  return function (s, k) {
    return AutoComplete.levenshteinDistance(s, k) < distanceLessThan;
  };
};

AutoComplete.fuzzyFilter = function (searchText, key) {
  var compareString = key.toLowerCase();
  searchText = searchText.toLowerCase();

  var searchTextIndex = 0;
  for (var index = 0; index < key.length; index++) {
    if (compareString[index] === searchText[searchTextIndex]) {
      searchTextIndex += 1;
    }
  }

  return searchTextIndex === searchText.length;
};

AutoComplete.Item = _MenuItem2.default;
AutoComplete.Divider = _Divider2.default;

AutoComplete$1.default = AutoComplete;

Object.defineProperty(AutoComplete$2, "__esModule", {
  value: true
});
var _default$1 = AutoComplete$2.default = undefined;

var _AutoComplete = AutoComplete$1;

var _AutoComplete2 = _interopRequireDefault$2(_AutoComplete);

function _interopRequireDefault$2(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_default$1 = AutoComplete$2.default = _AutoComplete2.default;

var accessStringToObject = function accessStringToObject(access) {
    if (!access) {
        return {
            data: { canView: false, canEdit: false },
            meta: { canView: false, canEdit: false }
        };
    }

    var metaAccess = access.substring(0, 2);
    var dataAccess = access.substring(2, 4);

    return {
        meta: {
            canView: metaAccess.includes('r'),
            canEdit: metaAccess.includes('rw')
        },
        data: {
            canView: dataAccess.includes('r'),
            canEdit: dataAccess.includes('rw')
        }
    };
};

var accessObjectToString = function accessObjectToString(accessObject) {
    var convert = function convert(_ref) {
        var canEdit = _ref.canEdit,
            canView = _ref.canView;

        if (canEdit) {
            return 'rw';
        }

        return canView ? 'r-' : '--';
    };

    var accessString = '';
    accessString += convert(accessObject.meta);
    accessString += convert(accessObject.data);
    accessString += '----';

    return accessString;
};

var Popover = {};

var PopoverAnimationVertical$1 = {};

Object.defineProperty(PopoverAnimationVertical$1, "__esModule", {
  value: true
});

var _getPrototypeOf = getPrototypeOf$1.exports;

var _getPrototypeOf2 = _interopRequireDefault$1(_getPrototypeOf);

var _classCallCheck2 = classCallCheck$3;

var _classCallCheck3 = _interopRequireDefault$1(_classCallCheck2);

var _createClass2 = createClass$2;

var _createClass3 = _interopRequireDefault$1(_createClass2);

var _possibleConstructorReturn2 = possibleConstructorReturn$3;

var _possibleConstructorReturn3 = _interopRequireDefault$1(_possibleConstructorReturn2);

var _inherits2 = inherits$3;

var _inherits3 = _interopRequireDefault$1(_inherits2);

var _simpleAssign = simpleAssign;

var _simpleAssign2 = _interopRequireDefault$1(_simpleAssign);

var _react = react;

var _react2 = _interopRequireDefault$1(_react);

var _propTypes = propTypes$5.exports;

var _propTypes2 = _interopRequireDefault$1(_propTypes);

var _Paper = Paper$5;

var _Paper2 = _interopRequireDefault$1(_Paper);

var _transitions = transitions$1;

var _transitions2 = _interopRequireDefault$1(_transitions);

var _propTypes3 = propTypes$4;

var _propTypes4 = _interopRequireDefault$1(_propTypes3);

function _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyles(props, context, state) {
  var targetOrigin = props.targetOrigin;
  var open = state.open;
  var muiTheme = context.muiTheme;

  var horizontal = targetOrigin.horizontal.replace('middle', 'center');

  return {
    root: {
      position: 'fixed',
      zIndex: muiTheme.zIndex.popover,
      opacity: open ? 1 : 0,
      transform: open ? 'scaleY(1)' : 'scaleY(0)',
      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
      transition: _transitions2.default.easeOut('450ms', ['transform', 'opacity']),
      maxHeight: '100%'
    }
  };
}

var PopoverAnimationVertical = function (_Component) {
  (0, _inherits3.default)(PopoverAnimationVertical, _Component);

  function PopoverAnimationVertical() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, PopoverAnimationVertical);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = PopoverAnimationVertical.__proto__ || (0, _getPrototypeOf2.default)(PopoverAnimationVertical)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(PopoverAnimationVertical, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        open: nextProps.open
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          zDepth = _props.zDepth;


      var styles = getStyles(this.props, this.context, this.state);

      return _react2.default.createElement(
        _Paper2.default,
        {
          style: (0, _simpleAssign2.default)(styles.root, style),
          zDepth: zDepth,
          className: className
        },
        this.props.children
      );
    }
  }]);
  return PopoverAnimationVertical;
}(_react.Component);

PopoverAnimationVertical.defaultProps = {
  style: {},
  zDepth: 1
};
PopoverAnimationVertical.contextTypes = {
  muiTheme: _propTypes2.default.object.isRequired
};
PopoverAnimationVertical.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  open: _propTypes2.default.bool.isRequired,
  /**
   * Override the inline-styles of the root element.
   */
  style: _propTypes2.default.object,
  targetOrigin: _propTypes4.default.origin.isRequired,
  zDepth: _propTypes4.default.zDepth
} ;
PopoverAnimationVertical$1.default = PopoverAnimationVertical;

Object.defineProperty(Popover, "__esModule", {
  value: true
});
var _default = Popover.default = Popover.PopoverAnimationVertical = Popover.Popover = undefined;

var _Popover2 = Popover$2;

var _Popover3 = _interopRequireDefault(_Popover2);

var _PopoverAnimationVertical2 = PopoverAnimationVertical$1;

var _PopoverAnimationVertical3 = _interopRequireDefault(_PopoverAnimationVertical2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Popover.Popover = _Popover3.default;
Popover.PopoverAnimationVertical = _PopoverAnimationVertical3.default;
_default = Popover.default = _Popover3.default;

var PermissionOption = function (_Component) {
    _default$16(PermissionOption, _Component);

    function PermissionOption() {
        var _ref;

        var _temp, _this, _ret;

        _default$17(this, PermissionOption);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _default$18(this, (_ref = PermissionOption.__proto__ || _Object$getPrototypeOf(PermissionOption)).call.apply(_ref, [this].concat(args))), _this), _this.ref = null, _this.render = function () {
            if (_this.props.disabled) {
                return null;
            }

            return react.createElement(_default$3, {
                insetChildren: true,
                leftIcon: _this.props.isSelected ? react.createElement(SvgIcon$3, { icon: 'Done' }) : undefined,
                primaryText: _this.props.primaryText,
                value: _this.props.value,
                disabled: _this.props.disabled,
                onClick: _this.props.onClick,
                focusState: _this.props.focusState
            });
        }, _temp), _default$18(_this, _ret);
    }

    return PermissionOption;
}(react.Component);

PermissionOption.propTypes = {
    disabled: PropTypes$2.bool.isRequired,
    isSelected: PropTypes$2.bool,
    primaryText: PropTypes$2.string.isRequired,
    value: PropTypes$2.object.isRequired,
    onClick: PropTypes$2.func,
    focusState: PropTypes$2.string
};

PermissionOption.defaultProps = {
    onClick: undefined,
    focusState: 'none',
    isSelected: false
};

PermissionOption.muiName = 'MenuItem';

var styles$4 = {
    optionHeader: {
        paddingLeft: 16,
        paddingTop: 16,
        fontWeight: '500',
        color: 'gray'
    }
};

var getAccessIcon$1 = function getAccessIcon(metaAccess) {
    if (metaAccess.canEdit) {
        return 'Create';
    }

    return metaAccess.canView ? 'Visibility' : 'NotInterested';
};

var PermissionPicker = function (_Component) {
    _default$16(PermissionPicker, _Component);

    function PermissionPicker(props, context) {
        _default$17(this, PermissionPicker);

        var _this = _default$18(this, (PermissionPicker.__proto__ || _Object$getPrototypeOf(PermissionPicker)).call(this, props));

        _this.state = {
            open: false
        };

        _this.onOptionClick = function (event, menuItem) {
            var newAccess = _default$15({}, _this.props.access, menuItem.props.value);

            _this.props.onChange(newAccess);
        };

        _this.openMenu = function (event) {
            event.preventDefault();
            _this.setState({
                open: true,
                anchor: event.currentTarget
            });
        };

        _this.closeMenu = function () {
            _this.setState({
                open: false
            });
        };

        _this.translate = function (s) {
            return _this.context.d2.i18n.getTranslation(s);
        };

        _this.render = function () {
            var _this$props$access = _this.props.access,
                data = _this$props$access.data,
                meta = _this$props$access.meta;
            var _this$props$accessOpt = _this.props.accessOptions,
                dataOptions = _this$props$accessOpt.data,
                metaOptions = _this$props$accessOpt.meta;


            return react.createElement(
                'div',
                null,
                react.createElement(
                    _default$4,
                    {
                        onClick: _this.openMenu,
                        disabled: _this.props.disabled
                    },
                    react.createElement(SvgIcon$3, { icon: getAccessIcon$1(meta) })
                ),
                react.createElement(
                    _default,
                    {
                        open: _this.state.open,
                        anchorEl: _this.state.anchor,
                        onRequestClose: _this.closeMenu
                    },
                    react.createElement(OptionHeader, { text: _this.translate('metadata') }),
                    react.createElement(
                        _default$2,
                        { onItemTouchTap: _this.onOptionClick },
                        react.createElement(PermissionOption, {
                            disabled: !metaOptions.canEdit,
                            value: { meta: { canView: true, canEdit: true } },
                            primaryText: _this.translate('can_edit_and_view'),
                            isSelected: meta.canEdit
                        }),
                        react.createElement(PermissionOption, {
                            disabled: !metaOptions.canView,
                            value: { meta: { canView: true, canEdit: false } },
                            primaryText: _this.translate('can_view_only'),
                            isSelected: !meta.canEdit && meta.canView
                        }),
                        react.createElement(PermissionOption, {
                            disabled: !metaOptions.noAccess,
                            value: { meta: { canView: false, canEdit: false } },
                            primaryText: _this.translate('no_access'),
                            isSelected: !meta.canEdit && !meta.canView
                        })
                    ),
                    react.createElement(_default$10, null),
                    dataOptions && react.createElement(
                        'div',
                        null,
                        react.createElement(OptionHeader, { text: _this.translate('data') }),
                        react.createElement(
                            _default$2,
                            { onItemTouchTap: _this.onOptionClick },
                            react.createElement(PermissionOption, {
                                disabled: !dataOptions.canEdit,
                                value: {
                                    data: { canView: true, canEdit: true }
                                },
                                primaryText: _this.translate('can_capture_and_view'),
                                isSelected: data.canEdit
                            }),
                            react.createElement(PermissionOption, {
                                disabled: !dataOptions.canView,
                                value: {
                                    data: { canView: true, canEdit: false }
                                },
                                primaryText: _this.translate('can_view_only'),
                                isSelected: !data.canEdit && data.canView
                            }),
                            react.createElement(PermissionOption, {
                                disabled: !dataOptions.noAccess,
                                value: {
                                    data: {
                                        canView: false,
                                        canEdit: false
                                    }
                                },
                                primaryText: _this.translate('no_access'),
                                isSelected: !data.canEdit && !data.canView
                            })
                        )
                    )
                )
            );
        };

        context.d2.i18n.addStrings(['can_edit_and_view', 'can_capture_and_view', 'can_view_only', 'no_access']);
        return _this;
    }

    return PermissionPicker;
}(react.Component);

PermissionPicker.propTypes = {
    access: PropTypes$2.object.isRequired,
    accessOptions: PropTypes$2.object.isRequired,
    onChange: PropTypes$2.func.isRequired,
    disabled: PropTypes$2.bool
};

PermissionPicker.defaultProps = {
    disabled: false
};

PermissionPicker.contextTypes = {
    d2: PropTypes$2.object.isRequired
};

var OptionHeader = function OptionHeader(_ref) {
    var text = _ref.text;
    return react.createElement(
        'div',
        { style: styles$4.optionHeader },
        text.toUpperCase()
    );
};

OptionHeader.propTypes = {
    text: PropTypes$2.string.isRequired
};

var styles$3 = {
    container: {
        fontWeight: '400',
        padding: 16,
        backgroundColor: '#F5F5F5',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center'
    },

    innerContainer: {
        display: 'flex',
        flexDirection: 'row',
        flex: 1
    },

    title: {
        color: '#818181',
        paddingBottom: 8
    },

    searchBox: {
        backgroundColor: 'white',
        boxShadow: '2px 2px 2px #cccccc',
        padding: '0px 16px',
        marginRight: '16px'
    }
};

var searchDelay = 300;

var UserSearch = function (_Component) {
    _default$16(UserSearch, _Component);

    function UserSearch(props, context) {
        _default$17(this, UserSearch);

        var _this = _default$18(this, (UserSearch.__proto__ || _Object$getPrototypeOf(UserSearch)).call(this, props));

        _this.state = {
            defaultAccess: {
                meta: { canView: true, canEdit: true },
                data: { canView: false, canEdit: false }
            },
            searchResult: [],
            searchText: ''
        };

        _this.onResultClick = function (_, index) {
            // Material UI triggers an 'onUpdateInput' when a search result is clicked. Therefore, we
            // immediately pushes a new item to the search stream to prevent the stream from searching
            // for the item again.
            _this.inputStream.next('');

            var selection = _this.state.searchResult[index];
            var type = selection.type;
            delete selection.type;

            if (type === 'userAccess') {
                _this.props.addUserAccess(_default$15({}, selection, { access: accessObjectToString(_this.state.defaultAccess) }));
            } else {
                _this.props.addUserGroupAccess(_default$15({}, selection, { access: accessObjectToString(_this.state.defaultAccess) }));
            }
            _this.clearSearchText();
        };

        _this.inputStream = new Subject_2();

        _this.hasNoCurrentAccess = function (userOrGroup) {
            return _this.props.currentAccessIds.indexOf(userOrGroup.id) === -1;
        };

        _this.fetchSearchResult = function (searchText) {
            if (searchText === '') {
                _this.handleSearchResult([]);
            } else {
                _this.props.onSearch(searchText).then(function (_ref) {
                    var users = _ref.users,
                        userGroups = _ref.userGroups;

                    var addType = function addType(type) {
                        return function (result) {
                            return _default$15({}, result, { type: type });
                        };
                    };
                    var searchResult = users.map(addType('userAccess')).filter(_this.hasNoCurrentAccess).concat(userGroups.map(addType('userGroupAccess')).filter(_this.hasNoCurrentAccess));

                    _this.handleSearchResult(searchResult);
                });
            }
        };

        _this.handleSearchResult = function (searchResult) {
            _this.setState({ searchResult: searchResult });
        };

        _this.handleUpdateInput = function (searchText) {
            _this.inputStream.next(searchText);
            _this.setState({ searchText: searchText });
        };

        _this.accessOptionsChanged = function (accessOptions) {
            _this.setState({
                defaultAccess: accessOptions
            });
        };

        _this.clearSearchText = function () {
            _this.setState({
                searchText: ''
            });
        };

        _this.noFilter = function () {
            return true;
        };

        context.d2.i18n.addStrings(['add_users_and_user_groups', 'enter_names']);
        return _this;
    }

    _default$19(UserSearch, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            this.inputStream.pipe(debounce(function () {
                return timer_1(searchDelay);
            })).subscribe(function (searchText) {
                _this2.fetchSearchResult(searchText);
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return react.createElement(
                'div',
                { style: styles$3.container },
                react.createElement(
                    'div',
                    { style: styles$3.title },
                    this.context.d2.i18n.getTranslation('add_users_and_user_groups')
                ),
                react.createElement(
                    'div',
                    { style: styles$3.innerContainer },
                    react.createElement(_default$1, {
                        fullWidth: true,
                        openOnFocus: true,
                        filter: this.noFilter,
                        dataSource: this.state.searchResult,
                        dataSourceConfig: { text: 'displayName', value: 'id' },
                        hintText: this.context.d2.i18n.getTranslation('enter_names'),
                        onNewRequest: this.onResultClick,
                        onUpdateInput: this.handleUpdateInput,
                        style: styles$3.searchBox,
                        searchText: this.state.searchText,
                        underlineShow: false
                    }),
                    react.createElement(PermissionPicker, {
                        access: this.state.defaultAccess,
                        accessOptions: {
                            meta: { canView: true, canEdit: true, noAccess: false },
                            data: this.props.dataShareable && { canView: true, canEdit: true, noAccess: true }
                        },
                        onChange: this.accessOptionsChanged
                    })
                )
            );
        }
    }]);

    return UserSearch;
}(react.Component);

UserSearch.propTypes = {
    onSearch: PropTypes$2.func.isRequired,
    addUserAccess: PropTypes$2.func.isRequired,
    dataShareable: PropTypes$2.bool.isRequired,
    addUserGroupAccess: PropTypes$2.func.isRequired,
    currentAccessIds: PropTypes$2.array.isRequired
};

UserSearch.contextTypes = {
    d2: PropTypes$2.object.isRequired
};

var CreatedBy = function CreatedBy(_ref, context) {
    var author = _ref.author;

    context.d2.i18n.addStrings(['created_by', 'no_author']);

    var createdByText = author ? context.d2.i18n.getTranslation('created_by') + ': ' + author.name : context.d2.i18n.getTranslation('no_author');

    return react.createElement(
        'div',
        null,
        createdByText
    );
};

CreatedBy.propTypes = {
    author: PropTypes$2.object.isRequired
};

CreatedBy.contextTypes = {
    d2: PropTypes$2.object.isRequired
};

var setStatic = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */
    return BaseComponent;
  };
};

var setDisplayName = function setDisplayName(displayName) {
  return setStatic('displayName', displayName);
};

var getDisplayName = function getDisplayName(Component$$1) {
  if (typeof Component$$1 === 'string') {
    return Component$$1;
  }

  if (!Component$$1) {
    return undefined;
  }

  return Component$$1.displayName || Component$$1.name || 'Component';
};

var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + '(' + getDisplayName(BaseComponent) + ')';
};

var mapProps = function mapProps(propsMapper) {
  return function (BaseComponent) {
    var factory = react.createFactory(BaseComponent);
    var MapProps = function MapProps(props) {
      return factory(propsMapper(props));
    };
    {
      return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps);
    }
  };
};

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var withProps = function withProps(input) {
  var hoc = mapProps(function (props) {
    return _extends({}, props, typeof input === 'function' ? input(props) : input);
  });
  {
    return function (BaseComponent) {
      return setDisplayName(wrapDisplayName(BaseComponent, 'withProps'))(hoc(BaseComponent));
    };
  }
};

(function (_Component) {
  inherits(Nothing, _Component);

  function Nothing() {
    classCallCheck(this, Nothing);
    return possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Nothing.prototype.render = function render() {
    return null;
  };

  return Nothing;
})(react.Component);

var getContext = function getContext(contextTypes) {
  return function (BaseComponent) {
    var factory = react.createFactory(BaseComponent);
    var GetContext = function GetContext(ownerProps, context) {
      return factory(_extends({}, ownerProps, context));
    };

    GetContext.contextTypes = contextTypes;

    {
      return setDisplayName(wrapDisplayName(BaseComponent, 'getContext'))(GetContext);
    }
  };
};

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

var styles$2 = {
    accessView: {
        fontWeight: '400',
        display: 'flex',
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        padding: '4px 8px'
    },
    accessDescription: {
        display: 'flex',
        flexDirection: 'column',
        flex: 1,
        paddingLeft: 16
    }
};

var d2Context = {
    d2: PropTypes$2.object.isRequired
};

var getAccessIcon = function getAccessIcon(userType) {
    switch (userType) {
        case 'user':
            return 'Person';
        case 'userGroup':
            return 'Group';
        case 'external':
            return 'Public';
        case 'public':
            return 'Business';
        default:
            return 'Person';
    }
};

var useAccessObjectFormat = function useAccessObjectFormat(props) {
    return _default$15({}, props, {
        access: accessStringToObject(props.access),
        onChange: function onChange(newAccess) {
            props.onChange(accessObjectToString(newAccess));
        }
    });
};

var Access = function Access(_ref) {
    var access = _ref.access,
        accessType = _ref.accessType,
        accessOptions = _ref.accessOptions,
        primaryText = _ref.primaryText,
        secondaryText = _ref.secondaryText,
        onChange = _ref.onChange,
        onRemove = _ref.onRemove,
        disabled = _ref.disabled;
    return react.createElement(
        'div',
        { style: styles$2.accessView },
        react.createElement(SvgIcon$3, { icon: getAccessIcon(accessType) }),
        react.createElement(
            'div',
            { style: styles$2.accessDescription },
            react.createElement(
                'div',
                null,
                primaryText
            ),
            react.createElement(
                'div',
                { style: { color: '#818181', paddingTop: 4 } },
                secondaryText || ' '
            )
        ),
        react.createElement(PermissionPicker, {
            access: access,
            accessOptions: accessOptions,
            onChange: onChange,
            disabled: disabled
        }),
        react.createElement(
            _default$4,
            {
                disabled: !onRemove,
                iconStyle: { color: '#bbbbbb' },
                onClick: onRemove || function () {}
            },
            react.createElement(SvgIcon$3, { icon: 'Clear' })
        )
    );
};

Access.contextTypes = d2Context;

Access.propTypes = {
    access: PropTypes$2.object.isRequired,
    accessType: PropTypes$2.string.isRequired,
    accessOptions: PropTypes$2.object.isRequired,
    primaryText: PropTypes$2.string.isRequired,
    onChange: PropTypes$2.func.isRequired,
    disabled: PropTypes$2.bool,
    secondaryText: PropTypes$2.string,
    onRemove: PropTypes$2.func
};

Access.defaultProps = {
    secondaryText: undefined,
    onRemove: undefined,
    disabled: false
};

var GroupAccess = compose(mapProps(useAccessObjectFormat), withProps(function (props) {
    return {
        accessType: props.groupType,
        primaryText: props.groupName,
        accessOptions: {
            meta: { canView: true, canEdit: true, noAccess: false },
            data: props.dataShareable && {
                canView: true,
                canEdit: true,
                noAccess: true
            }
        }
    };
}))(Access);

var ExternalAccess = compose(getContext(d2Context), withProps(function (props) {
    props.d2.i18n.addStrings(['public_access', 'external_access', 'anyone_can_view_without_a_login', 'anyone_can_find_view_and_edit', 'anyone_can_find_and_view', 'no_access']);

    return {
        accessType: 'external',
        primaryText: props.d2.i18n.getTranslation('external_access'),
        secondaryText: props.access ? props.d2.i18n.getTranslation('anyone_can_view_without_a_login') : props.d2.i18n.getTranslation('no_access'),
        access: {
            meta: { canEdit: false, canView: props.access },
            data: { canEdit: false, canView: false }
        },
        onChange: function onChange(newAccess) {
            props.onChange(newAccess.meta.canView);
        },
        accessOptions: {
            meta: { canView: true, canEdit: false, noAccess: true }
        }
    };
}))(Access);

var constructSecondaryText = function constructSecondaryText(_ref2) {
    var canView = _ref2.canView,
        canEdit = _ref2.canEdit;

    if (canEdit) {
        return 'anyone_can_find_view_and_edit';
    }

    return canView ? 'anyone_can_find_and_view' : 'no_access';
};

var PublicAccess = compose(mapProps(useAccessObjectFormat), getContext(d2Context), withProps(function (props) {
    props.d2.i18n.addStrings(['public_access', 'external_access', 'anyone_can_view_without_a_login', 'anyone_can_find_view_and_edit', 'anyone_can_find_and_view', 'no_access']);
    return {
        accessType: 'public',
        primaryText: props.d2.i18n.getTranslation('public_access'),
        secondaryText: props.d2.i18n.getTranslation(constructSecondaryText(props.access.meta)),
        accessOptions: {
            meta: { canView: true, canEdit: true, noAccess: true },
            data: props.dataShareable && {
                canView: true,
                canEdit: true,
                noAccess: true
            }
        }
    };
}))(Access);

var styles$1 = {
    createdBy: {
        color: '#818181'
    },
    titleBodySpace: {
        paddingTop: 30
    },
    rules: {
        height: '240px',
        overflowY: 'scroll'
    }
};

/**
 * Content of the sharing dialog; a set of components for changing sharing
 * preferences.
 */

var Sharing = function (_React$Component) {
    _default$16(Sharing, _React$Component);

    function Sharing(props, context) {
        _default$17(this, Sharing);

        var _this = _default$18(this, (Sharing.__proto__ || _Object$getPrototypeOf(Sharing)).call(this, props));

        _this.onAccessRuleChange = function (id) {
            return function (accessRule) {
                var changeWithId = function changeWithId(rule) {
                    return rule.id === id ? _default$15({}, rule, { access: accessRule }) : rule;
                };
                var userAccesses = (_this.props.sharedObject.object.userAccesses || []).map(changeWithId);
                var userGroupAccesses = (_this.props.sharedObject.object.userGroupAccesses || []).map(changeWithId);

                _this.props.onChange({
                    userAccesses: userAccesses,
                    userGroupAccesses: userGroupAccesses
                });
            };
        };

        _this.onAccessRemove = function (accessOwnerId) {
            return function () {
                var withoutId = function withoutId(accessOwner) {
                    return accessOwner.id !== accessOwnerId;
                };
                var userAccesses = (_this.props.sharedObject.object.userAccesses || []).filter(withoutId);
                var userGroupAccesses = (_this.props.sharedObject.object.userGroupAccesses || []).filter(withoutId);

                _this.props.onChange({
                    userAccesses: userAccesses,
                    userGroupAccesses: userGroupAccesses
                });
            };
        };

        _this.onPublicAccessChange = function (publicAccess) {
            _this.props.onChange({
                publicAccess: publicAccess
            });
        };

        _this.onExternalAccessChange = function (externalAccess) {
            _this.props.onChange({
                externalAccess: externalAccess
            });
        };

        _this.setAccessListRef = function (ref) {
            _this.accessListRef = ref;
        };

        _this.accessListRef = null;

        _this.addUserAccess = function (userAccess) {
            var currentAccesses = _this.props.sharedObject.object.userAccesses || [];
            _this.props.onChange({
                userAccesses: [].concat(_default$1c(currentAccesses), [userAccess])
            }, _this.scrollAccessListToBottom());
        };

        _this.addUserGroupAccess = function (userGroupAccess) {
            var currentAccesses = _this.props.sharedObject.object.userGroupAccesses || [];
            _this.props.onChange({
                userGroupAccesses: [].concat(_default$1c(currentAccesses), [userGroupAccess])
            }, _this.scrollAccessListToBottom());
        };

        _this.scrollAccessListToBottom = function () {
            _this.accessListRef.scrollTop = _this.accessListRef.scrollHeight;
        };

        context.d2.i18n.addStrings(['who_has_access']);
        return _this;
    }

    _default$19(Sharing, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props$sharedObject$o = this.props.sharedObject.object,
                user = _props$sharedObject$o.user,
                displayName = _props$sharedObject$o.displayName,
                userAccesses = _props$sharedObject$o.userAccesses,
                userGroupAccesses = _props$sharedObject$o.userGroupAccesses,
                publicAccess = _props$sharedObject$o.publicAccess,
                externalAccess = _props$sharedObject$o.externalAccess;
            var _props$sharedObject$m = this.props.sharedObject.meta,
                allowPublicAccess = _props$sharedObject$m.allowPublicAccess,
                allowExternalAccess = _props$sharedObject$m.allowExternalAccess;


            var accessIds = (userAccesses || []).map(function (access) {
                return access.id;
            }).concat((userGroupAccesses || []).map(function (access) {
                return access.id;
            }));

            return react.createElement(
                'div',
                null,
                react.createElement(Heading, { text: displayName, level: 2 }),
                react.createElement(CreatedBy, { author: user }),
                react.createElement('div', { style: styles$1.titleBodySpace }),
                react.createElement(
                    _default$$,
                    null,
                    this.context.d2.i18n.getTranslation('who_has_access')
                ),
                react.createElement(_default$10, null),
                react.createElement(
                    'div',
                    { style: styles$1.rules, ref: this.setAccessListRef },
                    react.createElement(PublicAccess, {
                        access: publicAccess,
                        disabled: !allowPublicAccess,
                        dataShareable: this.props.dataShareable,
                        onChange: this.onPublicAccessChange
                    }),
                    react.createElement(_default$10, null),
                    react.createElement(ExternalAccess, {
                        access: externalAccess,
                        disabled: !allowExternalAccess,
                        onChange: this.onExternalAccessChange
                    }),
                    react.createElement(_default$10, null),
                    userAccesses && userAccesses.map(function (access) {
                        return react.createElement(
                            'div',
                            { key: access.id },
                            react.createElement(GroupAccess, {
                                groupName: access.displayName,
                                groupType: 'user',
                                access: access.access,
                                dataShareable: _this2.props.dataShareable,
                                onRemove: _this2.onAccessRemove(access.id),
                                onChange: _this2.onAccessRuleChange(access.id)
                            }),
                            react.createElement(_default$10, null)
                        );
                    }),
                    userGroupAccesses && userGroupAccesses.map(function (access) {
                        return react.createElement(
                            'div',
                            { key: access.id },
                            react.createElement(GroupAccess, {
                                access: access.access,
                                groupName: access.displayName,
                                groupType: 'userGroup',
                                dataShareable: _this2.props.dataShareable,
                                onRemove: _this2.onAccessRemove(access.id),
                                onChange: _this2.onAccessRuleChange(access.id)
                            }),
                            react.createElement(_default$10, null)
                        );
                    })
                ),
                react.createElement(UserSearch, {
                    onSearch: this.props.onSearch,
                    addUserAccess: this.addUserAccess,
                    addUserGroupAccess: this.addUserGroupAccess,
                    dataShareable: this.props.dataShareable,
                    currentAccessIds: accessIds
                })
            );
        }
    }]);

    return Sharing;
}(react.Component);

Sharing.propTypes = {
    /**
     * The object to share
     */
    sharedObject: PropTypes$2.object.isRequired,

    /*
     * If true, the object's data should have their own settings.
     */
    dataShareable: PropTypes$2.bool.isRequired,

    /**
     * Function that takes an object containing updated sharing preferences and
     * an optional callback fired when the change was successfully posted.
     */
    onChange: PropTypes$2.func.isRequired,

    /**
     * Takes a string and a callback, and returns matching users and userGroups.
     */
    onSearch: PropTypes$2.func.isRequired
};

Sharing.contextTypes = {
    d2: PropTypes$2.object.isRequired
};

var styles = {
    loadingMask: {
        position: 'relative'
    }
};

var defaultState = {
    sharedObject: null,
    errorMessage: ''
};

/**
 * A pop-up dialog for changing sharing preferences for a sharable object.
 */

var SharingDialog = function (_React$Component) {
    _default$16(SharingDialog, _React$Component);

    function SharingDialog(props) {
        _default$17(this, SharingDialog);

        var _this = _default$18(this, (SharingDialog.__proto__ || _Object$getPrototypeOf(SharingDialog)).call(this, props));

        _initialiseProps.call(_this);

        if (props.d2) {
            props.d2.i18n.addStrings(['share', 'close', 'no_manage_access']);
        } else {
            console.error('no d2');
        }
        return _this;
    }

    _default$19(SharingDialog, [{
        key: 'getChildContext',
        value: function getChildContext() {
            return { d2: this.props.d2 };
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.loadDataSharingSettings();

            /* Load object if:
             *   - Dialog is open
             *   - Type and ID is supplied
             *   - User did not supply their own shared object
             */
            if (this.props.open && this.isReadyToLoadObject(this.props)) {
                this.loadObjectFromApi(this.props);
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var hasChanged = this.createPropsChecker(nextProps);

            if ((hasChanged('id') || hasChanged('type') || hasChanged('sharedObject')) && this.isReadyToLoadObject(nextProps)) {
                this.resetState();

                if (nextProps.open) {
                    this.loadObjectFromApi(nextProps);
                }
            }

            if (!this.props.open && nextProps.open && this.isReadyToLoadObject(nextProps)) {
                this.loadObjectFromApi(nextProps);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var dataShareable = this.state.dataShareableTypes.indexOf(this.props.type) !== -1;
            var errorOccurred = this.state.errorMessage !== '';
            var isLoading = !this.state.sharedObject && this.props.open && !errorOccurred;
            var sharingDialogActions = [react.createElement(_default$13, {
                label: this.translate('close'),
                onClick: this.closeDialog
            })];

            if (this.props.doNotPost) sharingDialogActions.push(react.createElement(_default$12, {
                primary: true,
                style: { marginLeft: '8px' },
                label: this.translate('apply'),
                onClick: this.confirmAndCloseDialog
            }));

            return react.createElement(
                'div',
                null,
                react.createElement(_default$11, {
                    open: errorOccurred,
                    message: this.state.errorMessage,
                    autoHideDuration: 3000
                }),
                react.createElement(
                    _default$14,
                    _default$15({
                        autoDetectWindowHeight: true,
                        autoScrollBodyContent: true,
                        open: this.props.open,
                        title: this.props.d2.i18n.getTranslation('share'),
                        actions: sharingDialogActions,
                        onRequestClose: this.closeDialog
                    }, this.props),
                    isLoading && react.createElement(LoadingMask, { style: styles.loadingMask, size: 1 }),
                    this.state.sharedObject && react.createElement(Sharing, {
                        sharedObject: this.state.sharedObject,
                        dataShareable: dataShareable,
                        onChange: this.onSharingChanged,
                        onSearch: this.onSearchRequest
                    })
                )
            );
        }
    }]);

    return SharingDialog;
}(react.Component);

var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.state = _default$15({}, defaultState, {
        dataShareableTypes: []
    });

    this.isReadyToLoadObject = function (props) {
        return props.type && (props.id || props.sharedObject);
    };

    this.onSearchRequest = function (key) {
        return _this2.props.d2.Api.getApi().get('sharing/search', { key: key }).then(function (searchResult) {
            return searchResult;
        });
    };

    this.onSharingChanged = function (updatedAttributes, onSuccess) {
        var updatedObject = {
            meta: _this2.state.sharedObject.meta,
            object: _default$15({}, _this2.state.sharedObject.object, updatedAttributes)
        };

        if (_this2.props.doNotPost) {
            _this2.updateSharedObject(updatedObject, onSuccess);
        } else {
            _this2.postChanges(updatedObject, onSuccess);
        }
    };

    this.createPropsChecker = function (nextProps) {
        return function (field) {
            return nextProps[field] !== _this2.props[field];
        };
    };

    this.postChanges = function (updatedObject, onSuccess) {
        var url = 'sharing?type=' + _this2.props.type + '&id=' + _this2.props.id;
        return _this2.props.d2.Api.getApi().post(url, updatedObject).then(function (_ref) {
            var httpStatus = _ref.httpStatus,
                message = _ref.message;

            if (httpStatus === 'OK') {
                _this2.updateSharedObject(updatedObject, onSuccess);
            }

            return message;
        }).catch(function (_ref2) {
            var message = _ref2.message;

            _this2.setState({
                errorMessage: message
            });
        });
    };

    this.updateSharedObject = function (updatedObject, onSuccess) {
        _this2.setState({
            sharedObject: updatedObject
        }, function () {
            if (onSuccess) onSuccess();
        });
    };

    this.resetState = function () {
        _this2.setState(defaultState);
    };

    this.loadDataSharingSettings = function () {
        _this2.props.d2.Api.getApi().get('schemas', { fields: ['name', 'dataShareable'] }).then(function (schemas) {
            var dataShareableTypes = schemas.schemas.filter(function (item) {
                return item.dataShareable;
            }).map(function (item) {
                return item.name;
            });

            _this2.setState({
                dataShareableTypes: dataShareableTypes
            });
        });
    };

    this.loadObjectFromApi = function (props) {
        var setSharedObject = function setSharedObject(sharedObject) {
            _this2.setState({
                sharedObject: sharedObject
            });
        };

        if (props.sharedObject) {
            setSharedObject(props.sharedObject);
        } else {
            _this2.props.d2.Api.getApi().get('sharing', { type: props.type, id: props.id }).then(function (sharedObject) {
                return setSharedObject(sharedObject);
            }).catch(function (error) {
                _this2.setState({
                    errorMessage: error.message
                });
            });
        }
    };

    this.addId = function (object) {
        return _default$15({}, object, { id: _this2.props.id });
    };

    this.closeDialog = function () {
        _this2.props.onRequestClose(_this2.addId(_this2.state.sharedObject.object, _this2.props.id));
    };

    this.confirmAndCloseDialog = function () {
        _this2.props.onConfirm(_this2.addId(_this2.state.sharedObject.object, _this2.props.id));
    };

    this.translate = function (s) {
        return _this2.props.d2.i18n.getTranslation(s);
    };
};

SharingDialog.childContextTypes = {
    d2: PropTypes$2.object
};

SharingDialog.propTypes = {
    /**
     * Decides whether the dialog should be open or closed.
     */
    open: PropTypes$2.bool.isRequired,

    /**
     * Type of the sharable object. Can be supplied after initial render.
     */
    type: PropTypes$2.string,

    /**
     * Id of the sharable object. Can be supplied after initial render.
     */
    id: PropTypes$2.string,

    /**
     * Do not post new sharing settings. Rather, let the user save the new
     * settings returned from onRequestClose or onConfirm. Combine with
     * 'sharedObject' prop to skip all network requests.
     */
    doNotPost: PropTypes$2.bool,

    /**
     * Supply your own shared object. Will try to POST sharing settings
     * to the 'id' and 'type' combination. Use 'doNotPost' prop if you
     * want full control over network requests.
     */
    sharedObject: PropTypes$2.shape({
        object: PropTypes$2.shape({
            user: PropTypes$2.shape({ name: PropTypes$2.string }).isRequired,
            displayName: PropTypes$2.string.isRequired,
            userAccesses: PropTypes$2.array.isRequired,
            userGroupAccesses: PropTypes$2.array.isRequired,
            publicAccess: PropTypes$2.string.isRequired,
            externalAccess: PropTypes$2.bool
        }),
        meta: PropTypes$2.shape({
            allowPublicAccess: PropTypes$2.bool.isRequired,
            allowExternalAccess: PropTypes$2.bool.isRequired
        })
    }),

    /**
     * Function to be called when the dialog is closed. The function is called
     * with the updated sharing preferences as the first and only argument.
     */
    onRequestClose: PropTypes$2.func.isRequired,

    /**
     * Function to be called when user applies the settings. Similar to
     * onRequestClose, but is only shown when doNotPost is true.
     */
    onConfirm: PropTypes$2.func,

    /**
     * d2 instance to use.
     */
    d2: PropTypes$2.object.isRequired
};

SharingDialog.defaultProps = {
    type: '',
    id: '',
    doNotPost: false,
    sharedObject: null
};

function calculatePageValue(pager) {
  var pageSize = pager.query && pager.query.pageSize || 50;
  var total = pager.total,
      pageCount = pager.pageCount,
      page = pager.page;
  var pageCalculationValue = total - (total - (pageCount - (pageCount - page)) * pageSize);
  var startItem = 1 + pageCalculationValue - pageSize;
  var endItem = pageCalculationValue;
  return "".concat(startItem, " - ").concat(endItem > total ? total : endItem);
}

export { SharingDialog as S, calculatePageValue as c };
